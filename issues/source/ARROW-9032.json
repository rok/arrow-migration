{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13309302",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302",
    "key": "ARROW-9032",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9032/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352\n\n\n   There is a lot of code in bit_util.h that is seldom used compared to certain common utilities like `BitUtil::BytesForBits`. This moves everything outside of the `BitUtil` namespace to different headers. You can see by the frequency of includes that this makes sense so that compilation units that only need some simple bit utilities are not including a lot of header code that they never use\r\n   \r\n   ```\r\n   $ grep -R bit_util.h ../src/ | wc -l\r\n   68\r\n   $ grep -R bitmap.h ../src/ | wc -l\r\n   7\r\n   $ grep -R bitmap_ops.h ../src/ | wc -l\r\n   15\r\n   $ grep -R bitmap_reader.h ../src/ | wc -l\r\n   9\r\n   $ grep -R bitmap_writer.h ../src/ | wc -l\r\n   6\r\n   ```\r\n   \r\n   This doesn't seem to affect aggregate compilation time very much but at minimum makes the code easier to navigate (in my opinion, at least). \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:21:27.412+0000",
                    "updated": "2020-06-04T22:21:27.412+0000",
                    "started": "2020-06-04T22:21:27.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441556",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639152119\n\n\n   https://issues.apache.org/jira/browse/ARROW-9032\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:31:59.988+0000",
                    "updated": "2020-06-04T22:31:59.988+0000",
                    "started": "2020-06-04T22:31:59.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441563",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639156639\n\n\n   @wesm I would appreciate if we could merge https://github.com/apache/arrow/pull/6985 first or if you prefer you take over the rebase for it?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:46:51.430+0000",
                    "updated": "2020-06-04T22:46:51.430+0000",
                    "started": "2020-06-04T22:46:51.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441566",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639157274\n\n\n   @emkornfield I can definitely rebase #6985 for you\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:49:08.293+0000",
                    "updated": "2020-06-04T22:49:08.293+0000",
                    "started": "2020-06-04T22:49:08.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441568",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639157913\n\n\n   If this PR in principle is not objectionable would it be OK if I merged it once the build is green and then I can rebase all the PRs that it causes conflicts with?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:51:09.071+0000",
                    "updated": "2020-06-04T22:51:09.071+0000",
                    "started": "2020-06-04T22:51:09.071+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441571",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639158885\n\n\n   Haven't had a chance to review it but I think it is a good thing to do, bit_util.h was definitely getting too crowded.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:54:29.627+0000",
                    "updated": "2020-06-04T22:54:29.627+0000",
                    "started": "2020-06-04T22:54:29.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441573",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639159397\n\n\n   OK. I will get the build passing here and work on some dependent patches until you or someone can have a chance to review\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T22:56:04.697+0000",
                    "updated": "2020-06-04T22:56:04.697+0000",
                    "started": "2020-06-04T22:56:04.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441574",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639195620\n\n\n   Rebased\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T00:55:14.585+0000",
                    "updated": "2020-06-05T00:55:14.585+0000",
                    "started": "2020-06-05T00:55:14.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441621",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639231726\n\n\n   As far as I'm concerned this can be merged as soon as the build is green and someone signs off on it\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T03:10:37.482+0000",
                    "updated": "2020-06-05T03:10:37.482+0000",
                    "started": "2020-06-05T03:10:37.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441655",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639246064\n\n\n   The ARM failure is a flake, so this is merge-ready\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T04:07:38.295+0000",
                    "updated": "2020-06-05T04:07:38.295+0000",
                    "started": "2020-06-05T04:07:38.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441664",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#discussion_r435680926\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -0,0 +1,228 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+#include \"arrow/buffer.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/bit_util.h\"\n+#include \"arrow/util/bitmap_reader.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+namespace internal {\n+\n+// A function that visits each bit in a bitmap and calls a visitor function with a\n+// boolean representation of that bit. This is intended to be analogous to\n+// GenerateBits.\n+template <class Visitor>\n+void VisitBits(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n\nReview comment:\n       it might pay to separate VisitBis into its own header.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T04:16:05.187+0000",
                    "updated": "2020-06-05T04:16:05.187+0000",
                    "started": "2020-06-05T04:16:05.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441667",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#discussion_r435681118\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -0,0 +1,228 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+#include \"arrow/buffer.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/bit_util.h\"\n+#include \"arrow/util/bitmap_reader.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+namespace internal {\n+\n+// A function that visits each bit in a bitmap and calls a visitor function with a\n+// boolean representation of that bit. This is intended to be analogous to\n+// GenerateBits.\n+template <class Visitor>\n+void VisitBits(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n+               Visitor&& visit) {\n+  BitmapReader reader(bitmap, start_offset, length);\n+  for (int64_t index = 0; index < length; ++index) {\n+    visit(reader.IsSet());\n+    reader.Next();\n+  }\n+}\n+\n+// Like VisitBits(), but unrolls its main loop for better performance.\n+template <class Visitor>\n+void VisitBitsUnrolled(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n+                       Visitor&& visit) {\n+  if (length == 0) {\n+    return;\n+  }\n+\n+  // Start by visiting any bits preceding the first full byte.\n+  int64_t num_bits_before_full_bytes =\n+      BitUtil::RoundUpToMultipleOf8(start_offset) - start_offset;\n+  // Truncate num_bits_before_full_bytes if it is greater than length.\n+  if (num_bits_before_full_bytes > length) {\n+    num_bits_before_full_bytes = length;\n+  }\n+  // Use the non loop-unrolled VisitBits since we don't want to add branches\n+  VisitBits<Visitor>(bitmap, start_offset, num_bits_before_full_bytes, visit);\n+\n+  // Shift the start pointer to the first full byte and compute the\n+  // number of full bytes to be read.\n+  const uint8_t* first_full_byte = bitmap + BitUtil::CeilDiv(start_offset, 8);\n+  const int64_t num_full_bytes = (length - num_bits_before_full_bytes) / 8;\n+\n+  // Iterate over each full byte of the input bitmap and call the visitor in\n+  // a loop-unrolled manner.\n+  for (int64_t byte_index = 0; byte_index < num_full_bytes; ++byte_index) {\n+    // Get the current bit-packed byte value from the bitmap.\n+    const uint8_t byte = *(first_full_byte + byte_index);\n+\n+    // Execute the visitor function on each bit of the current byte.\n+    visit(BitUtil::GetBitFromByte(byte, 0));\n+    visit(BitUtil::GetBitFromByte(byte, 1));\n+    visit(BitUtil::GetBitFromByte(byte, 2));\n+    visit(BitUtil::GetBitFromByte(byte, 3));\n+    visit(BitUtil::GetBitFromByte(byte, 4));\n+    visit(BitUtil::GetBitFromByte(byte, 5));\n+    visit(BitUtil::GetBitFromByte(byte, 6));\n+    visit(BitUtil::GetBitFromByte(byte, 7));\n+  }\n+\n+  // Write any leftover bits in the last byte.\n+  const int64_t num_bits_after_full_bytes = (length - num_bits_before_full_bytes) % 8;\n+  VisitBits<Visitor>(first_full_byte + num_full_bytes, 0, num_bits_after_full_bytes,\n+                     visit);\n+}\n+\n+// ----------------------------------------------------------------------\n+// Bitmap utilities\n+\n+/// Copy a bit range of an existing bitmap\n+///\n+/// \\param[in] pool memory pool to allocate memory from\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> CopyBitmap(MemoryPool* pool, const uint8_t* bitmap,\n+                                           int64_t offset, int64_t length);\n+\n+/// Copy a bit range of an existing bitmap into an existing bitmap\n+///\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+/// \\param[in] dest_offset bit offset into the destination\n+/// \\param[in] restore_trailing_bits don't clobber bits outside the destination range\n+/// \\param[out] dest the destination buffer, must have at least space for\n+/// (offset + length) bits\n+ARROW_EXPORT\n+void CopyBitmap(const uint8_t* bitmap, int64_t offset, int64_t length, uint8_t* dest,\n+                int64_t dest_offset, bool restore_trailing_bits = true);\n+\n+/// Invert a bit range of an existing bitmap into an existing bitmap\n+///\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+/// \\param[in] dest_offset bit offset into the destination\n+/// \\param[out] dest the destination buffer, must have at least space for\n+/// (offset + length) bits\n+ARROW_EXPORT\n+void InvertBitmap(const uint8_t* bitmap, int64_t offset, int64_t length, uint8_t* dest,\n+                  int64_t dest_offset);\n+\n+/// Invert a bit range of an existing bitmap\n+///\n+/// \\param[in] pool memory pool to allocate memory from\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> InvertBitmap(MemoryPool* pool, const uint8_t* bitmap,\n+                                             int64_t offset, int64_t length);\n+\n+/// Compute the number of 1's in the given data array\n+///\n+/// \\param[in] data a packed LSB-ordered bitmap as a byte array\n+/// \\param[in] bit_offset a bitwise offset into the bitmap\n+/// \\param[in] length the number of bits to inspect in the bitmap relative to\n+/// the offset\n+///\n+/// \\return The number of set (1) bits in the range\n+ARROW_EXPORT\n+int64_t CountSetBits(const uint8_t* data, int64_t bit_offset, int64_t length);\n+\n+ARROW_EXPORT\n+bool BitmapEquals(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                  int64_t right_offset, int64_t bit_length);\n+\n+/// \\brief Do a \"bitmap and\" on right and left buffers starting at\n+/// their respective bit-offsets for the given bit-length and put\n+/// the results in out_buffer starting at the given bit-offset.\n+///\n+/// out_buffer will be allocated and initialized to zeros using pool before\n+/// the operation.\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> BitmapAnd(MemoryPool* pool, const uint8_t* left,\n+                                          int64_t left_offset, const uint8_t* right,\n+                                          int64_t right_offset, int64_t length,\n+                                          int64_t out_offset);\n+\n+/// \\brief Do a \"bitmap and\" on right and left buffers starting at\n+/// their respective bit-offsets for the given bit-length and put\n+/// the results in out starting at the given bit-offset.\n+ARROW_EXPORT\n+void BitmapAnd(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+\n+/// \\brief Do a \"bitmap or\" for the given bit length on right and left buffers\n+/// starting at their respective bit-offsets and put the results in out_buffer\n+/// starting at the given bit-offset.\n+///\n+/// out_buffer will be allocated and initialized to zeros using pool before\n+/// the operation.\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> BitmapOr(MemoryPool* pool, const uint8_t* left,\n+                                         int64_t left_offset, const uint8_t* right,\n+                                         int64_t right_offset, int64_t length,\n+                                         int64_t out_offset);\n+\n+/// \\brief Do a \"bitmap or\" for the given bit length on right and left buffers\n+/// starting at their respective bit-offsets and put the results in out\n+/// starting at the given bit-offset.\n+ARROW_EXPORT\n+void BitmapOr(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+              int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+\n+/// \\brief Do a \"bitmap xor\" for the given bit-length on right and left\n+/// buffers starting at their respective bit-offsets and put the results in\n+/// out_buffer starting at the given bit offset.\n+///\n+/// out_buffer will be allocated and initialized to zeros using pool before\n+/// the operation.\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> BitmapXor(MemoryPool* pool, const uint8_t* left,\n+                                          int64_t left_offset, const uint8_t* right,\n+                                          int64_t right_offset, int64_t length,\n+                                          int64_t out_offset);\n+\n+/// \\brief Do a \"bitmap xor\" for the given bit-length on right and left\n+/// buffers starting at their respective bit-offsets and put the results in\n+/// out starting at the given bit offset.\n+ARROW_EXPORT\n+void BitmapXor(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+\n+/// \\brief Generate Bitmap with all position to `value` except for one found\n+/// at `straggler_pos`.\n+ARROW_EXPORT\n\nReview comment:\n       I think it might pay to move these to a bitmap_builders.h?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T04:16:58.207+0000",
                    "updated": "2020-06-05T04:16:58.207+0000",
                    "started": "2020-06-05T04:16:58.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441668",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#discussion_r435681709\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitset.h\n##########\n@@ -0,0 +1,89 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <algorithm>\n\nReview comment:\n       might pay to name this file bitset_stack?  Not your code but is there a bifference between a bitmap and bitset in this context?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T04:19:45.511+0000",
                    "updated": "2020-06-05T04:19:45.511+0000",
                    "started": "2020-06-05T04:19:45.511+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441670",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#discussion_r435680926\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -0,0 +1,228 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+#include \"arrow/buffer.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/bit_util.h\"\n+#include \"arrow/util/bitmap_reader.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+namespace internal {\n+\n+// A function that visits each bit in a bitmap and calls a visitor function with a\n+// boolean representation of that bit. This is intended to be analogous to\n+// GenerateBits.\n+template <class Visitor>\n+void VisitBits(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n\nReview comment:\n       it might pay to separate VisitBits method into its own header.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T04:20:18.635+0000",
                    "updated": "2020-06-05T04:20:18.635+0000",
                    "started": "2020-06-05T04:20:18.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441671",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#discussion_r435889032\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -0,0 +1,228 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+#include \"arrow/buffer.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/bit_util.h\"\n+#include \"arrow/util/bitmap_reader.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+namespace internal {\n+\n+// A function that visits each bit in a bitmap and calls a visitor function with a\n+// boolean representation of that bit. This is intended to be analogous to\n+// GenerateBits.\n+template <class Visitor>\n+void VisitBits(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n\nReview comment:\n       yes, good idea\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T12:30:40.594+0000",
                    "updated": "2020-06-05T12:30:40.594+0000",
                    "started": "2020-06-05T12:30:40.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441799",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#discussion_r435890909\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -0,0 +1,228 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+#include \"arrow/buffer.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/bit_util.h\"\n+#include \"arrow/util/bitmap_reader.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+namespace internal {\n+\n+// A function that visits each bit in a bitmap and calls a visitor function with a\n+// boolean representation of that bit. This is intended to be analogous to\n+// GenerateBits.\n+template <class Visitor>\n+void VisitBits(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n+               Visitor&& visit) {\n+  BitmapReader reader(bitmap, start_offset, length);\n+  for (int64_t index = 0; index < length; ++index) {\n+    visit(reader.IsSet());\n+    reader.Next();\n+  }\n+}\n+\n+// Like VisitBits(), but unrolls its main loop for better performance.\n+template <class Visitor>\n+void VisitBitsUnrolled(const uint8_t* bitmap, int64_t start_offset, int64_t length,\n+                       Visitor&& visit) {\n+  if (length == 0) {\n+    return;\n+  }\n+\n+  // Start by visiting any bits preceding the first full byte.\n+  int64_t num_bits_before_full_bytes =\n+      BitUtil::RoundUpToMultipleOf8(start_offset) - start_offset;\n+  // Truncate num_bits_before_full_bytes if it is greater than length.\n+  if (num_bits_before_full_bytes > length) {\n+    num_bits_before_full_bytes = length;\n+  }\n+  // Use the non loop-unrolled VisitBits since we don't want to add branches\n+  VisitBits<Visitor>(bitmap, start_offset, num_bits_before_full_bytes, visit);\n+\n+  // Shift the start pointer to the first full byte and compute the\n+  // number of full bytes to be read.\n+  const uint8_t* first_full_byte = bitmap + BitUtil::CeilDiv(start_offset, 8);\n+  const int64_t num_full_bytes = (length - num_bits_before_full_bytes) / 8;\n+\n+  // Iterate over each full byte of the input bitmap and call the visitor in\n+  // a loop-unrolled manner.\n+  for (int64_t byte_index = 0; byte_index < num_full_bytes; ++byte_index) {\n+    // Get the current bit-packed byte value from the bitmap.\n+    const uint8_t byte = *(first_full_byte + byte_index);\n+\n+    // Execute the visitor function on each bit of the current byte.\n+    visit(BitUtil::GetBitFromByte(byte, 0));\n+    visit(BitUtil::GetBitFromByte(byte, 1));\n+    visit(BitUtil::GetBitFromByte(byte, 2));\n+    visit(BitUtil::GetBitFromByte(byte, 3));\n+    visit(BitUtil::GetBitFromByte(byte, 4));\n+    visit(BitUtil::GetBitFromByte(byte, 5));\n+    visit(BitUtil::GetBitFromByte(byte, 6));\n+    visit(BitUtil::GetBitFromByte(byte, 7));\n+  }\n+\n+  // Write any leftover bits in the last byte.\n+  const int64_t num_bits_after_full_bytes = (length - num_bits_before_full_bytes) % 8;\n+  VisitBits<Visitor>(first_full_byte + num_full_bytes, 0, num_bits_after_full_bytes,\n+                     visit);\n+}\n+\n+// ----------------------------------------------------------------------\n+// Bitmap utilities\n+\n+/// Copy a bit range of an existing bitmap\n+///\n+/// \\param[in] pool memory pool to allocate memory from\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> CopyBitmap(MemoryPool* pool, const uint8_t* bitmap,\n+                                           int64_t offset, int64_t length);\n+\n+/// Copy a bit range of an existing bitmap into an existing bitmap\n+///\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+/// \\param[in] dest_offset bit offset into the destination\n+/// \\param[in] restore_trailing_bits don't clobber bits outside the destination range\n+/// \\param[out] dest the destination buffer, must have at least space for\n+/// (offset + length) bits\n+ARROW_EXPORT\n+void CopyBitmap(const uint8_t* bitmap, int64_t offset, int64_t length, uint8_t* dest,\n+                int64_t dest_offset, bool restore_trailing_bits = true);\n+\n+/// Invert a bit range of an existing bitmap into an existing bitmap\n+///\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+/// \\param[in] dest_offset bit offset into the destination\n+/// \\param[out] dest the destination buffer, must have at least space for\n+/// (offset + length) bits\n+ARROW_EXPORT\n+void InvertBitmap(const uint8_t* bitmap, int64_t offset, int64_t length, uint8_t* dest,\n+                  int64_t dest_offset);\n+\n+/// Invert a bit range of an existing bitmap\n+///\n+/// \\param[in] pool memory pool to allocate memory from\n+/// \\param[in] bitmap source data\n+/// \\param[in] offset bit offset into the source data\n+/// \\param[in] length number of bits to copy\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> InvertBitmap(MemoryPool* pool, const uint8_t* bitmap,\n+                                             int64_t offset, int64_t length);\n+\n+/// Compute the number of 1's in the given data array\n+///\n+/// \\param[in] data a packed LSB-ordered bitmap as a byte array\n+/// \\param[in] bit_offset a bitwise offset into the bitmap\n+/// \\param[in] length the number of bits to inspect in the bitmap relative to\n+/// the offset\n+///\n+/// \\return The number of set (1) bits in the range\n+ARROW_EXPORT\n+int64_t CountSetBits(const uint8_t* data, int64_t bit_offset, int64_t length);\n+\n+ARROW_EXPORT\n+bool BitmapEquals(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                  int64_t right_offset, int64_t bit_length);\n+\n+/// \\brief Do a \"bitmap and\" on right and left buffers starting at\n+/// their respective bit-offsets for the given bit-length and put\n+/// the results in out_buffer starting at the given bit-offset.\n+///\n+/// out_buffer will be allocated and initialized to zeros using pool before\n+/// the operation.\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> BitmapAnd(MemoryPool* pool, const uint8_t* left,\n+                                          int64_t left_offset, const uint8_t* right,\n+                                          int64_t right_offset, int64_t length,\n+                                          int64_t out_offset);\n+\n+/// \\brief Do a \"bitmap and\" on right and left buffers starting at\n+/// their respective bit-offsets for the given bit-length and put\n+/// the results in out starting at the given bit-offset.\n+ARROW_EXPORT\n+void BitmapAnd(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+\n+/// \\brief Do a \"bitmap or\" for the given bit length on right and left buffers\n+/// starting at their respective bit-offsets and put the results in out_buffer\n+/// starting at the given bit-offset.\n+///\n+/// out_buffer will be allocated and initialized to zeros using pool before\n+/// the operation.\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> BitmapOr(MemoryPool* pool, const uint8_t* left,\n+                                         int64_t left_offset, const uint8_t* right,\n+                                         int64_t right_offset, int64_t length,\n+                                         int64_t out_offset);\n+\n+/// \\brief Do a \"bitmap or\" for the given bit length on right and left buffers\n+/// starting at their respective bit-offsets and put the results in out\n+/// starting at the given bit-offset.\n+ARROW_EXPORT\n+void BitmapOr(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+              int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+\n+/// \\brief Do a \"bitmap xor\" for the given bit-length on right and left\n+/// buffers starting at their respective bit-offsets and put the results in\n+/// out_buffer starting at the given bit offset.\n+///\n+/// out_buffer will be allocated and initialized to zeros using pool before\n+/// the operation.\n+ARROW_EXPORT\n+Result<std::shared_ptr<Buffer>> BitmapXor(MemoryPool* pool, const uint8_t* left,\n+                                          int64_t left_offset, const uint8_t* right,\n+                                          int64_t right_offset, int64_t length,\n+                                          int64_t out_offset);\n+\n+/// \\brief Do a \"bitmap xor\" for the given bit-length on right and left\n+/// buffers starting at their respective bit-offsets and put the results in\n+/// out starting at the given bit offset.\n+ARROW_EXPORT\n+void BitmapXor(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+\n+/// \\brief Generate Bitmap with all position to `value` except for one found\n+/// at `straggler_pos`.\n+ARROW_EXPORT\n\nReview comment:\n       OK\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T12:34:27.700+0000",
                    "updated": "2020-06-05T12:34:27.700+0000",
                    "started": "2020-06-05T12:34:27.699+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441801",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639460710\n\n\n   Will merge this once CI is passing\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T12:50:37.810+0000",
                    "updated": "2020-06-05T12:50:37.810+0000",
                    "started": "2020-06-05T12:50:37.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441812",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352#issuecomment-639480440\n\n\n   Appveyor looks OK https://ci.appveyor.com/project/wesm/arrow/builds/33339226. Merging\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T13:29:22.598+0000",
                    "updated": "2020-06-05T13:29:22.598+0000",
                    "started": "2020-06-05T13:29:22.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441817",
                    "issueId": "13309302"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/worklog/441818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #7352:\nURL: https://github.com/apache/arrow/pull/7352\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T13:29:35.432+0000",
                    "updated": "2020-06-05T13:29:35.432+0000",
                    "started": "2020-06-05T13:29:35.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441818",
                    "issueId": "13309302"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3581fea9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@91d1aba[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6de6cd62[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@c4fd2ae[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b74bcda[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5c6774e9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7312fda[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@75194730[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b65b725[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7cc2589c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7283f721[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4d1c0e86[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jun 05 13:29:26 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-05T13:29:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9032/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-06-04T01:04:26.000+0000",
        "updated": "2020-06-05T13:29:36.000+0000",
        "timeoriginalestimate": null,
        "description": "This header has grown quite large and any given compilation unit's use of it is likely limited to only a couple of functions or classes. I suspect it would improve compilation time to split up this header into a few headers organized by frequency of code use. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Split arrow/util/bit_util.h into multiple header files",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309302/comment/17126766",
                    "id": "17126766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7352\n[https://github.com/apache/arrow/pull/7352]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-06-05T13:29:26.036+0000",
                    "updated": "2020-06-05T13:29:26.036+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0fhgg:",
        "customfield_12314139": null
    }
}