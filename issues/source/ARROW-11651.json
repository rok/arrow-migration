{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13358940",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940",
    "key": "ARROW-11651",
    "fields": {
        "parent": {
            "id": "13352985",
            "key": "ARROW-11298",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13352985",
            "fields": {
                "summary": "[Rust][DataFusion] Implement Postgres String Functions",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                    "name": "Minor",
                    "id": "4"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=MikeSeddonAU",
            "name": "MikeSeddonAU",
            "key": "mikeseddonau",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Mike Seddon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=MikeSeddonAU",
            "name": "MikeSeddonAU",
            "key": "mikeseddonau",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Mike Seddon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=MikeSeddonAU",
            "name": "MikeSeddonAU",
            "key": "mikeseddonau",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Mike Seddon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11651/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780167407\n\n\n   https://issues.apache.org/jira/browse/ARROW-11651\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-16T22:48:08.924+0000",
                    "updated": "2021-02-16T22:48:08.924+0000",
                    "started": "2021-02-16T22:48:08.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553237",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577283407\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/functions.rs\n##########\n@@ -617,48 +670,137 @@ mod tests {\n     };\n     use arrow::{\n         array::{\n-            ArrayRef, FixedSizeListArray, Float64Array, Int32Array, StringArray,\n+            Array, ArrayRef, FixedSizeListArray, Float64Array, Int32Array, StringArray,\n             UInt32Array, UInt64Array,\n         },\n         datatypes::Field,\n         record_batch::RecordBatch,\n     };\n \n-    fn generic_test_math(value: ScalarValue, expected: &str) -> Result<()> {\n-        // any type works here: we evaluate against a literal of `value`\n-        let schema = Schema::new(vec![Field::new(\"a\", DataType::Int32, false)]);\n-        let columns: Vec<ArrayRef> = vec![Arc::new(Int32Array::from(vec![1]))];\n-\n-        let arg = lit(value);\n-\n-        let expr = create_physical_expr(&BuiltinScalarFunction::Exp, &[arg], &schema)?;\n-\n-        // type is correct\n-        assert_eq!(expr.data_type(&schema)?, DataType::Float64);\n-\n-        // evaluate works\n-        let batch = RecordBatch::try_new(Arc::new(schema.clone()), columns)?;\n-        let result = expr.evaluate(&batch)?.into_array(batch.num_rows());\n-\n-        // downcast works\n-        let result = result.as_any().downcast_ref::<Float64Array>().unwrap();\n-\n-        // value is correct\n-        assert_eq!(result.value(0).to_string(), expected);\n-\n-        Ok(())\n+    /// $FUNC function to test\n+    /// $ARGS arguments (vec) to pass to function\n+    /// $EXPECTED a Result<Option<$EXPECTED_TYPE>> where Result allows testing errors and Option allows testing Null\n+    /// $EXPECTED_TYPE is the expected value type\n+    /// $DATA_TYPE is the function to test result type\n+    /// $ARRAY_TYPE is the column type after function applied\n+    macro_rules! test_function {\n+        ($FUNC:ident, $ARGS:expr, $EXPECTED:expr, $EXPECTED_TYPE:ty, $DATA_TYPE: ident, $ARRAY_TYPE:ident) => {\n+            println!(\"{:?}\", BuiltinScalarFunction::$FUNC);\n\nReview comment:\n       is this `println!` intended?\n\n##########\nFile path: rust/arrow/src/compute/kernels/bit_length.rs\n##########\n@@ -0,0 +1,208 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel for length of a string array\n+\n+use crate::{array::*, buffer::Buffer};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+fn bit_length_string<OffsetSize>(array: &Array, data_type: DataType) -> ArrayRef\n+where\n+    OffsetSize: OffsetSizeTrait,\n+{\n+    // note: offsets are stored as u8, but they can be interpreted as OffsetSize\n+    let offsets = &array.data_ref().buffers()[0];\n+    // this is a 30% improvement over iterating over u8s and building OffsetSize, which\n+    // justifies the usage of `unsafe`.\n+    let slice: &[OffsetSize] =\n+        &unsafe { offsets.typed_data::<OffsetSize>() }[array.offset()..];\n+\n+    let bit_size = OffsetSize::from_usize(8).unwrap();\n+    let lengths = slice\n+        .windows(2)\n+        .map(|offset| (offset[1] - offset[0]) * bit_size);\n+\n+    // JUSTIFICATION\n+    //  Benefit\n+    //      ~60% speedup\n+    //  Soundness\n+    //      `values` is an iterator with a known size.\n+    let buffer = unsafe { Buffer::from_trusted_len_iter(lengths) };\n+\n\nReview comment:\n       Isn't this a copy of length, with a single difference, that we multiply the lengths by `bit_size`?\r\n   \r\n   If that is the case, can we create a generic or something that avoids code duplication? Copy-pasting code like this is IMO an unnecessary maintenance burden.\n\n##########\nFile path: rust/datafusion/src/physical_plan/string_expressions.rs\n##########\n@@ -115,6 +119,40 @@ where\n     }\n }\n \n+/// Returns number of characters in the string.\n+/// character_length_i32('jos\u00e9') = 4\n+pub fn character_length_i32(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    let string_array: &GenericStringArray<i32> = args[0]\n+        .as_any()\n+        .downcast_ref::<GenericStringArray<i32>>()\n+        .unwrap();\n+\n+    // first map is the iterator, second is for the `Option<_>`\n+    let result = string_array\n+        .iter()\n+        .map(|x| x.map(|x: &str| x.graphemes(true).count() as i32))\n+        .collect::<Int32Array>();\n+\n+    Ok(Arc::new(result) as ArrayRef)\n+}\n+\n+/// Returns number of characters in the string.\n+/// character_length_i64('jos\u00e9') = 4\n+pub fn character_length_i64(args: &[ArrayRef]) -> Result<ArrayRef> {\n\nReview comment:\n       I think that this code can be reduced to a single generic. Something like this (untested):\r\n   \r\n   ```rust\r\n   pub fn character_length<T: ArrowNativeType>(args: &[ArrayRef]) -> Result<ArrayRef> \r\n   where \r\n   T::Native: StringOffsetSizeTrait {\r\n       let string_array: &GenericStringArray<T::Native> = args[0]\r\n           .as_any()\r\n           .downcast_ref::<GenericStringArray<T::Native>>()\r\n           .unwrap();\r\n       \r\n        string_array\r\n           .iter()\r\n           .map(|x| x.map(|x: &str| T::Native::from_usize(x.graphemes(true).count())).unwrap())\r\n           .collect()\r\n   }\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T02:41:22.401+0000",
                    "updated": "2021-02-17T02:41:22.401+0000",
                    "started": "2021-02-17T02:41:22.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553338",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577298518\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/bit_length.rs\n##########\n@@ -0,0 +1,208 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel for length of a string array\n+\n+use crate::{array::*, buffer::Buffer};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+fn bit_length_string<OffsetSize>(array: &Array, data_type: DataType) -> ArrayRef\n+where\n+    OffsetSize: OffsetSizeTrait,\n+{\n+    // note: offsets are stored as u8, but they can be interpreted as OffsetSize\n+    let offsets = &array.data_ref().buffers()[0];\n+    // this is a 30% improvement over iterating over u8s and building OffsetSize, which\n+    // justifies the usage of `unsafe`.\n+    let slice: &[OffsetSize] =\n+        &unsafe { offsets.typed_data::<OffsetSize>() }[array.offset()..];\n+\n+    let bit_size = OffsetSize::from_usize(8).unwrap();\n+    let lengths = slice\n+        .windows(2)\n+        .map(|offset| (offset[1] - offset[0]) * bit_size);\n+\n+    // JUSTIFICATION\n+    //  Benefit\n+    //      ~60% speedup\n+    //  Soundness\n+    //      `values` is an iterator with a known size.\n+    let buffer = unsafe { Buffer::from_trusted_len_iter(lengths) };\n+\n\nReview comment:\n       yes i can have a look at doing that.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T03:23:11.567+0000",
                    "updated": "2021-02-17T03:23:11.567+0000",
                    "started": "2021-02-17T03:23:11.566+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553351",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577298569\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/functions.rs\n##########\n@@ -617,48 +670,137 @@ mod tests {\n     };\n     use arrow::{\n         array::{\n-            ArrayRef, FixedSizeListArray, Float64Array, Int32Array, StringArray,\n+            Array, ArrayRef, FixedSizeListArray, Float64Array, Int32Array, StringArray,\n             UInt32Array, UInt64Array,\n         },\n         datatypes::Field,\n         record_batch::RecordBatch,\n     };\n \n-    fn generic_test_math(value: ScalarValue, expected: &str) -> Result<()> {\n-        // any type works here: we evaluate against a literal of `value`\n-        let schema = Schema::new(vec![Field::new(\"a\", DataType::Int32, false)]);\n-        let columns: Vec<ArrayRef> = vec![Arc::new(Int32Array::from(vec![1]))];\n-\n-        let arg = lit(value);\n-\n-        let expr = create_physical_expr(&BuiltinScalarFunction::Exp, &[arg], &schema)?;\n-\n-        // type is correct\n-        assert_eq!(expr.data_type(&schema)?, DataType::Float64);\n-\n-        // evaluate works\n-        let batch = RecordBatch::try_new(Arc::new(schema.clone()), columns)?;\n-        let result = expr.evaluate(&batch)?.into_array(batch.num_rows());\n-\n-        // downcast works\n-        let result = result.as_any().downcast_ref::<Float64Array>().unwrap();\n-\n-        // value is correct\n-        assert_eq!(result.value(0).to_string(), expected);\n-\n-        Ok(())\n+    /// $FUNC function to test\n+    /// $ARGS arguments (vec) to pass to function\n+    /// $EXPECTED a Result<Option<$EXPECTED_TYPE>> where Result allows testing errors and Option allows testing Null\n+    /// $EXPECTED_TYPE is the expected value type\n+    /// $DATA_TYPE is the function to test result type\n+    /// $ARRAY_TYPE is the column type after function applied\n+    macro_rules! test_function {\n+        ($FUNC:ident, $ARGS:expr, $EXPECTED:expr, $EXPECTED_TYPE:ty, $DATA_TYPE: ident, $ARRAY_TYPE:ident) => {\n+            println!(\"{:?}\", BuiltinScalarFunction::$FUNC);\n\nReview comment:\n       it is just there to help debugging but happy to remove\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T03:23:28.186+0000",
                    "updated": "2021-02-17T03:23:28.186+0000",
                    "started": "2021-02-17T03:23:28.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553353",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577299127\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/string_expressions.rs\n##########\n@@ -115,6 +119,40 @@ where\n     }\n }\n \n+/// Returns number of characters in the string.\n+/// character_length_i32('jos\u00e9') = 4\n+pub fn character_length_i32(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    let string_array: &GenericStringArray<i32> = args[0]\n+        .as_any()\n+        .downcast_ref::<GenericStringArray<i32>>()\n+        .unwrap();\n+\n+    // first map is the iterator, second is for the `Option<_>`\n+    let result = string_array\n+        .iter()\n+        .map(|x| x.map(|x: &str| x.graphemes(true).count() as i32))\n+        .collect::<Int32Array>();\n+\n+    Ok(Arc::new(result) as ArrayRef)\n+}\n+\n+/// Returns number of characters in the string.\n+/// character_length_i64('jos\u00e9') = 4\n+pub fn character_length_i64(args: &[ArrayRef]) -> Result<ArrayRef> {\n\nReview comment:\n       Thanks I will have a go. There are a couple more instances this generic from_usize could help.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T03:25:31.876+0000",
                    "updated": "2021-02-17T03:25:31.876+0000",
                    "started": "2021-02-17T03:25:31.876+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553354",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780271885\n\n\n   Thanks @jorgecarleitao . I will update soon.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T03:28:22.366+0000",
                    "updated": "2021-02-17T03:28:22.366+0000",
                    "started": "2021-02-17T03:28:22.366+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553355",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577285930\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/string_expressions.rs\n##########\n@@ -115,6 +119,40 @@ where\n     }\n }\n \n+/// Returns number of characters in the string.\n+/// character_length_i32('jos\u00e9') = 4\n+pub fn character_length_i32(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    let string_array: &GenericStringArray<i32> = args[0]\n+        .as_any()\n+        .downcast_ref::<GenericStringArray<i32>>()\n+        .unwrap();\n+\n+    // first map is the iterator, second is for the `Option<_>`\n+    let result = string_array\n+        .iter()\n+        .map(|x| x.map(|x: &str| x.graphemes(true).count() as i32))\n+        .collect::<Int32Array>();\n+\n+    Ok(Arc::new(result) as ArrayRef)\n+}\n+\n+/// Returns number of characters in the string.\n+/// character_length_i64('jos\u00e9') = 4\n+pub fn character_length_i64(args: &[ArrayRef]) -> Result<ArrayRef> {\n\nReview comment:\n       I think that this code can be reduced to a single generic. Something like this (untested):\r\n   \r\n   ```rust\r\n   pub fn character_length<T: ArrowPrimitiveType>(args: &[ArrayRef]) -> Result<ArrayRef> \r\n   where \r\n   T::Native: StringOffsetSizeTrait {\r\n       let string_array: &GenericStringArray<T::Native> = args[0]\r\n           .as_any()\r\n           .downcast_ref::<GenericStringArray<T::Native>>()\r\n           .unwrap();\r\n       \r\n        string_array\r\n           .iter()\r\n           .map(|x| x.map(|x: &str| T::Native::from_usize(x.graphemes(true).count())).unwrap())\r\n           .collect()\r\n   }\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T06:35:42.061+0000",
                    "updated": "2021-02-17T06:35:42.061+0000",
                    "started": "2021-02-17T06:35:42.061+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553410",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577395453\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/bit_length.rs\n##########\n@@ -0,0 +1,208 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel for length of a string array\n+\n+use crate::{array::*, buffer::Buffer};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+fn bit_length_string<OffsetSize>(array: &Array, data_type: DataType) -> ArrayRef\n+where\n+    OffsetSize: OffsetSizeTrait,\n+{\n+    // note: offsets are stored as u8, but they can be interpreted as OffsetSize\n+    let offsets = &array.data_ref().buffers()[0];\n+    // this is a 30% improvement over iterating over u8s and building OffsetSize, which\n+    // justifies the usage of `unsafe`.\n+    let slice: &[OffsetSize] =\n+        &unsafe { offsets.typed_data::<OffsetSize>() }[array.offset()..];\n+\n+    let bit_size = OffsetSize::from_usize(8).unwrap();\n+    let lengths = slice\n+        .windows(2)\n+        .map(|offset| (offset[1] - offset[0]) * bit_size);\n+\n+    // JUSTIFICATION\n+    //  Benefit\n+    //      ~60% speedup\n+    //  Soundness\n+    //      `values` is an iterator with a known size.\n+    let buffer = unsafe { Buffer::from_trusted_len_iter(lengths) };\n+\n\nReview comment:\n       I have created a macro allowing just the core function to be replaced.\n\n##########\nFile path: rust/datafusion/src/physical_plan/functions.rs\n##########\n@@ -617,48 +670,137 @@ mod tests {\n     };\n     use arrow::{\n         array::{\n-            ArrayRef, FixedSizeListArray, Float64Array, Int32Array, StringArray,\n+            Array, ArrayRef, FixedSizeListArray, Float64Array, Int32Array, StringArray,\n             UInt32Array, UInt64Array,\n         },\n         datatypes::Field,\n         record_batch::RecordBatch,\n     };\n \n-    fn generic_test_math(value: ScalarValue, expected: &str) -> Result<()> {\n-        // any type works here: we evaluate against a literal of `value`\n-        let schema = Schema::new(vec![Field::new(\"a\", DataType::Int32, false)]);\n-        let columns: Vec<ArrayRef> = vec![Arc::new(Int32Array::from(vec![1]))];\n-\n-        let arg = lit(value);\n-\n-        let expr = create_physical_expr(&BuiltinScalarFunction::Exp, &[arg], &schema)?;\n-\n-        // type is correct\n-        assert_eq!(expr.data_type(&schema)?, DataType::Float64);\n-\n-        // evaluate works\n-        let batch = RecordBatch::try_new(Arc::new(schema.clone()), columns)?;\n-        let result = expr.evaluate(&batch)?.into_array(batch.num_rows());\n-\n-        // downcast works\n-        let result = result.as_any().downcast_ref::<Float64Array>().unwrap();\n-\n-        // value is correct\n-        assert_eq!(result.value(0).to_string(), expected);\n-\n-        Ok(())\n+    /// $FUNC function to test\n+    /// $ARGS arguments (vec) to pass to function\n+    /// $EXPECTED a Result<Option<$EXPECTED_TYPE>> where Result allows testing errors and Option allows testing Null\n+    /// $EXPECTED_TYPE is the expected value type\n+    /// $DATA_TYPE is the function to test result type\n+    /// $ARRAY_TYPE is the column type after function applied\n+    macro_rules! test_function {\n+        ($FUNC:ident, $ARGS:expr, $EXPECTED:expr, $EXPECTED_TYPE:ty, $DATA_TYPE: ident, $ARRAY_TYPE:ident) => {\n+            println!(\"{:?}\", BuiltinScalarFunction::$FUNC);\n\nReview comment:\n       Removed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T08:00:31.671+0000",
                    "updated": "2021-02-17T08:00:31.671+0000",
                    "started": "2021-02-17T08:00:31.671+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553457",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#discussion_r577395791\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/string_expressions.rs\n##########\n@@ -115,6 +119,40 @@ where\n     }\n }\n \n+/// Returns number of characters in the string.\n+/// character_length_i32('jos\u00e9') = 4\n+pub fn character_length_i32(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    let string_array: &GenericStringArray<i32> = args[0]\n+        .as_any()\n+        .downcast_ref::<GenericStringArray<i32>>()\n+        .unwrap();\n+\n+    // first map is the iterator, second is for the `Option<_>`\n+    let result = string_array\n+        .iter()\n+        .map(|x| x.map(|x: &str| x.graphemes(true).count() as i32))\n+        .collect::<Int32Array>();\n+\n+    Ok(Arc::new(result) as ArrayRef)\n+}\n+\n+/// Returns number of characters in the string.\n+/// character_length_i64('jos\u00e9') = 4\n+pub fn character_length_i64(args: &[ArrayRef]) -> Result<ArrayRef> {\n\nReview comment:\n       Wow. Impressive you can come up with this in your head. I have incorporated this code.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T08:00:54.631+0000",
                    "updated": "2021-02-17T08:00:54.631+0000",
                    "started": "2021-02-17T08:00:54.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553458",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780378219\n\n\n   @jorgecarleitao Thanks for the review. I have addressed all of your points.\r\n   \r\n   The `T::Native: StringOffsetSizeTrait` will be useful in some of the other string functions so thanks \ud83d\ude4f \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T08:02:07.729+0000",
                    "updated": "2021-02-17T08:02:07.729+0000",
                    "started": "2021-02-17T08:02:07.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553459",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780701060\n\n\n   Thanks a lot, @seddonm1 . I went through this PR again and I pull the code locally to understand the reason for the macro.\r\n   \r\n   I now get it that it is not easy to write this. :) I PRed something to your branch with a suggestion to reduce the risk of using that function (which is unsafe due to the `typed`) on non-string arrays.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T17:00:44.585+0000",
                    "updated": "2021-02-17T17:00:44.585+0000",
                    "started": "2021-02-17T17:00:44.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553739",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780701060\n\n\n   Thanks a lot, @seddonm1 . I went through this PR again and I pull the code locally to understand the reason for the macro.\r\n   \r\n   I now get it that it is not easy to write this. :) I PRed something to your branch with a suggestion to reduce the risk of using that function (which is unsafe due to the `typed`) on non-string arrays and make it just use generics, that imo are usually easier to read because the constraints are specific.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T17:02:24.915+0000",
                    "updated": "2021-02-17T17:02:24.915+0000",
                    "started": "2021-02-17T17:02:24.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553742",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/553884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780849543\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=h1) Report\n   > Merging [#9509](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=desc) (619f2f6) into [master](https://codecov.io/gh/apache/arrow/commit/e2d6c057684b587151afffe50f7eaef94533e017?el=desc) (e2d6c05) will **increase** coverage by `0.09%`.\n   > The diff coverage is `88.32%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9509/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9509      +/-   ##\n   ==========================================\n   + Coverage   82.15%   82.24%   +0.09%     \n   ==========================================\n     Files         243      244       +1     \n     Lines       54908    55414     +506     \n   ==========================================\n   + Hits        45108    45577     +469     \n   - Misses       9800     9837      +37     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `81.13% <\u00f8> (+0.94%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/functions.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2Z1bmN0aW9ucy5ycw==) | `72.36% <68.49%> (-3.95%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/length.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xlbmd0aC5ycw==) | `100.00% <100.00%> (\u00f8)` | |\n   | [...datafusion/src/physical\\_plan/string\\_expressions.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3N0cmluZ19leHByZXNzaW9ucy5ycw==) | `69.62% <100.00%> (+2.49%)` | :arrow_up: |\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `82.45% <0.00%> (-0.04%)` | :arrow_down: |\n   | [rust/benchmarks/src/bin/tpch.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9iZW5jaG1hcmtzL3NyYy9iaW4vdHBjaC5ycw==) | `38.33% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/optimizer/constant\\_folding.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvY29uc3RhbnRfZm9sZGluZy5ycw==) | `94.46% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `83.23% <0.00%> (+0.07%)` | :arrow_up: |\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `52.39% <0.00%> (+0.36%)` | :arrow_up: |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `90.84% <0.00%> (+0.40%)` | :arrow_up: |\n   | ... and [2 more](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=footer). Last update [e2d6c05...619f2f6](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T21:00:05.598+0000",
                    "updated": "2021-02-17T21:00:05.598+0000",
                    "started": "2021-02-17T21:00:05.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553884",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/554449",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-781611124\n\n\n   @jorgecarleitao Sorry I updated this but forgot to update you. Once this is merged I can do more of the big Postgres string functions PRs.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-18T20:21:25.202+0000",
                    "updated": "2021-02-18T20:21:25.202+0000",
                    "started": "2021-02-18T20:21:25.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554449",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/554756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-782086690\n\n\n   The integration test failure appears unrelated https://github.com/apache/arrow/pull/9509/checks?check_run_id=1921983282\r\n   \r\n   I will restart it to try and get a clean run\r\n   \r\n   ```\r\n   \r\n   [INFO] Final Memory: 176M/780M\r\n   [INFO] ------------------------------------------------------------------------\r\n   Error:  Failed to execute goal org.xolstice.maven.plugins:protobuf-maven-plugin:0.5.0:compile (src) on project flight-core: Execution src of goal org.xolstice.maven.plugins:protobuf-maven-plugin:0.5.0:compile failed: Plugin org.xolstice.maven.plugins:protobuf-maven-plugin:0.5.0 or one of its dependencies could not be resolved: Could not transfer artifact org.apache.maven.plugin-tools:maven-plugin-annotations:jar:3.4 from/to central (https://repo.maven.apache.org/maven2): Connection reset -> [Help 1]\r\n   Error:  \r\n   Error:  To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n   Error:  Re-run Maven using the -X switch to enable full debug logging.\r\n   Error:  \r\n   Error:  For more information about the errors and possible solutions, please read the following articles:\r\n   Error:  [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginResolutionException\r\n   Error:  \r\n   Error:  After correcting the problems, you can resume the build with the command\r\n   Error:    mvn <goals> -rf :flight-core\r\n   Destroying 3 processes\r\n   Destroying process..\r\n   Destroying process..\r\n   Destroying process..\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-19T13:49:40.224+0000",
                    "updated": "2021-02-19T13:49:40.224+0000",
                    "started": "2021-02-19T13:49:40.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554756",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/555196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-782663789\n\n\n   @seddonm1  we are so close -- now there is a clippy error: https://github.com/apache/arrow/pull/9509/checks?check_run_id=1922005826\r\n   \r\n   ```\r\n   ror: this function's return value is unnecessarily wrapped by `Result`\r\n      --> arrow/src/compute/kernels/length.rs:86:1\r\n       |\r\n   86  | / fn bit_length_impl<O: StringOffsetSizeTrait, T: ArrowPrimitiveType>(\r\n   87  | |     array: &dyn Array,\r\n   88  | | ) -> Result<ArrayRef>\r\n   89  | | where\r\n   ...   |\r\n   99  | |     }))\r\n   100 | | }\r\n       | |_^\r\n       |\r\n       = note: `-D clippy::unnecessary-wraps` implied by `-D warnings`\r\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps\r\n   help: remove `Result` from the return type...\r\n       |\r\n   88  | ) -> std::sync::Arc<(dyn array::array::Array + 'static)>\r\n       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   help: ...and change the returning expressions\r\n       |\r\n   97  |     unary_offsets_string::<O, _>(array, T::DATA_TYPE, |x| {\r\n   98  |         x * bits_in_bytes\r\n   99  |     })\r\n       |\r\n   \r\n   error: aborting due to previous error\r\n   \r\n   error: could not compile `arrow`\r\n   \r\n   To learn more, run the command again with --verbose.\r\n   warning: build failed, waiting for other jobs to finish...\r\n   error: this function's return value is unnecessarily wrapped by `Result`\r\n      --> arrow/src/compute/kernels/length.rs:86:1\r\n       |\r\n   86  | / fn bit_length_impl<O: StringOffsetSizeTrait, T: ArrowPrimitiveType>(\r\n   87  | |     array: &dyn Array,\r\n   88  | | ) -> Result<ArrayRef>\r\n   89  | | where\r\n   ...   |\r\n   99  | |     }))\r\n   100 | | }\r\n       | |_^\r\n       |\r\n       = note: `-D clippy::unnecessary-wraps` implied by `-D warnings`\r\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps\r\n   help: remove `Result` from the return type...\r\n       |\r\n   88  | ) -> std::sync::Arc<(dyn array::array::Array + 'static)>\r\n       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   help: ...and change the returning expressions\r\n       |\r\n   97  |     unary_offsets_string::<O, _>(array, T::DATA_TYPE, |x| {\r\n   98  |         x * bits_in_bytes\r\n   99  |     })\r\n       |\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T13:46:55.416+0000",
                    "updated": "2021-02-20T13:46:55.416+0000",
                    "started": "2021-02-20T13:46:55.416+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555196",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/555284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-782760774\n\n\n   @alamb done and ready. Thanks to @jorgecarleitao for his elite knowledge of trait implementations.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T22:44:58.560+0000",
                    "updated": "2021-02-20T22:44:58.560+0000",
                    "started": "2021-02-20T22:44:58.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555284",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/555289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780849543\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=h1) Report\n   > Merging [#9509](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=desc) (76855f2) into [master](https://codecov.io/gh/apache/arrow/commit/e2d6c057684b587151afffe50f7eaef94533e017?el=desc) (e2d6c05) will **increase** coverage by `0.12%`.\n   > The diff coverage is `88.11%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9509/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9509      +/-   ##\n   ==========================================\n   + Coverage   82.15%   82.28%   +0.12%     \n   ==========================================\n     Files         243      244       +1     \n     Lines       54908    55518     +610     \n   ==========================================\n   + Hits        45108    45681     +573     \n   - Misses       9800     9837      +37     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/physical\\_plan/functions.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2Z1bmN0aW9ucy5ycw==) | `72.36% <68.49%> (-3.95%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `81.13% <80.00%> (+0.94%)` | :arrow_up: |\n   | [rust/arrow/src/compute/kernels/length.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xlbmd0aC5ycw==) | `100.00% <100.00%> (\u00f8)` | |\n   | [...datafusion/src/physical\\_plan/string\\_expressions.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3N0cmluZ19leHByZXNzaW9ucy5ycw==) | `69.62% <100.00%> (+2.49%)` | :arrow_up: |\n   | [rust/arrow/src/array/equal/utils.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvZXF1YWwvdXRpbHMucnM=) | `75.49% <0.00%> (-0.99%)` | :arrow_down: |\n   | [rust/arrow/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvcmVjb3JkX2JhdGNoLnJz) | `83.70% <0.00%> (-0.63%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/limit.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2xpbWl0LnJz) | `57.47% <0.00%> (-0.49%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `79.58% <0.00%> (-0.05%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `82.45% <0.00%> (-0.04%)` | :arrow_down: |\n   | [rust/benchmarks/src/bin/tpch.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9iZW5jaG1hcmtzL3NyYy9iaW4vdHBjaC5ycw==) | `38.33% <0.00%> (\u00f8)` | |\n   | ... and [12 more](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=footer). Last update [e2d6c05...76855f2](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T23:08:27.852+0000",
                    "updated": "2021-02-20T23:08:27.852+0000",
                    "started": "2021-02-20T23:08:27.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555289",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/555295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509#issuecomment-780849543\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=h1) Report\n   > Merging [#9509](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=desc) (17740e9) into [master](https://codecov.io/gh/apache/arrow/commit/e2d6c057684b587151afffe50f7eaef94533e017?el=desc) (e2d6c05) will **increase** coverage by `0.12%`.\n   > The diff coverage is `88.05%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9509/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9509      +/-   ##\n   ==========================================\n   + Coverage   82.15%   82.28%   +0.12%     \n   ==========================================\n     Files         243      244       +1     \n     Lines       54908    55517     +609     \n   ==========================================\n   + Hits        45108    45680     +572     \n   - Misses       9800     9837      +37     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/physical\\_plan/functions.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2Z1bmN0aW9ucy5ycw==) | `72.36% <68.49%> (-3.95%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `81.13% <80.00%> (+0.94%)` | :arrow_up: |\n   | [rust/arrow/src/compute/kernels/length.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xlbmd0aC5ycw==) | `100.00% <100.00%> (\u00f8)` | |\n   | [...datafusion/src/physical\\_plan/string\\_expressions.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3N0cmluZ19leHByZXNzaW9ucy5ycw==) | `69.62% <100.00%> (+2.49%)` | :arrow_up: |\n   | [rust/arrow/src/array/equal/utils.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvZXF1YWwvdXRpbHMucnM=) | `75.49% <0.00%> (-0.99%)` | :arrow_down: |\n   | [rust/arrow/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvcmVjb3JkX2JhdGNoLnJz) | `83.70% <0.00%> (-0.63%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/limit.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2xpbWl0LnJz) | `57.47% <0.00%> (-0.49%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `79.58% <0.00%> (-0.05%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `82.45% <0.00%> (-0.04%)` | :arrow_down: |\n   | [rust/benchmarks/src/bin/tpch.rs](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree#diff-cnVzdC9iZW5jaG1hcmtzL3NyYy9iaW4vdHBjaC5ycw==) | `38.33% <0.00%> (\u00f8)` | |\n   | ... and [12 more](https://codecov.io/gh/apache/arrow/pull/9509/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=footer). Last update [e2d6c05...17740e9](https://codecov.io/gh/apache/arrow/pull/9509?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T23:26:53.601+0000",
                    "updated": "2021-02-20T23:26:53.601+0000",
                    "started": "2021-02-20T23:26:53.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555295",
                    "issueId": "13358940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/worklog/555378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #9509:\nURL: https://github.com/apache/arrow/pull/9509\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-21T10:36:04.827+0000",
                    "updated": "2021-02-21T10:36:04.827+0000",
                    "started": "2021-02-21T10:36:04.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555378",
                    "issueId": "13358940"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@ce47a16[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f154258[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@251bc357[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@39422e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6626ba75[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6d4ba49e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16b1c31b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5c53dbd1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ff5273c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3f2a0d08[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@271bb8ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@65d4728c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Feb 21 10:36:10 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-21T10:36:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11651/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-02-16T21:16:51.000+0000",
        "updated": "2021-02-21T10:36:28.000+0000",
        "timeoriginalestimate": null,
        "description": "To break up the large PR this is just the Postgres length functions",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Implement Postgres Length Functions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358940/comment/17287905",
                    "id": "17287905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9509\n[https://github.com/apache/arrow/pull/9509]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-21T10:36:10.006+0000",
                    "updated": "2021-02-21T10:36:10.006+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nqdc:",
        "customfield_12314139": null
    }
}