{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13471811",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811",
    "key": "ARROW-17089",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12644437",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12644437",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13471810",
                    "key": "ARROW-17088",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471810",
                    "fields": {
                        "summary": "[R] Use `.arrow` as extension of IPC files of datasets",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12644438",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12644438",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13471815",
                    "key": "ARROW-17092",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471815",
                    "fields": {
                        "summary": "[Docs] Add note about \"Feather\" to the IPC file format document",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eitsupi",
            "name": "eitsupi",
            "key": "JIRAUSER280211",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "SHIMA Tatsuya",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eitsupi",
            "name": "eitsupi",
            "key": "JIRAUSER280211",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "SHIMA Tatsuya",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eitsupi",
            "name": "eitsupi",
            "key": "JIRAUSER280211",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "SHIMA Tatsuya",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17089/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/793858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#issuecomment-1191752609\n\n   https://issues.apache.org/jira/browse/ARROW-17089\n\n\n",
                    "created": "2022-07-21T17:28:44.199+0000",
                    "updated": "2022-07-21T17:28:44.199+0000",
                    "started": "2022-07-21T17:28:44.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "793858",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#issuecomment-1229117123\n\n   I agree that this is a breaking change.\r\n   However, since the `pyarrow.dataset` module is warned in the document that it is experimental, I thought that this breaking change could be implemented immediately.\r\n   \r\n   > The `pyarrow.dataset` module is experimental (specifically the classes), and a stable API is not yet guaranteed.\r\n   \r\n   https://arrow.apache.org/docs/python/api/dataset.html\r\n   \r\n   I also imagined that there would be many use cases where this change would have no impact, since there would be many cases where only the directory name is used and the extension is not a concern when using datasets created with `pyarrow.dataset.write_dataset`.\n\n\n",
                    "created": "2022-08-27T04:05:11.494+0000",
                    "updated": "2022-08-27T04:05:11.494+0000",
                    "started": "2022-08-27T04:05:11.494+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804107",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jreback commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956546222\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   is this the default even if format is specified? (eg feather would still be appropriate here)\n\n\n\n",
                    "created": "2022-08-27T06:35:07.827+0000",
                    "updated": "2022-08-27T06:35:07.827+0000",
                    "started": "2022-08-27T06:35:07.827+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804119",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956551350\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Since this project recommends `.arrow` as the extension for files created with this format, I feel it is necessary to use `.arrow` here for consistency.\r\n   \r\n   https://github.com/apache/arrow/blob/1b9c57e20802fb061c90837c39e99d8fa69cc212/docs/source/format/Columnar.rst#L1047-L1052\r\n   \r\n   @kou Do you have any additional explanation?\n\n\n\n",
                    "created": "2022-08-27T07:36:19.873+0000",
                    "updated": "2022-08-27T07:36:19.873+0000",
                    "started": "2022-08-27T07:36:19.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804125",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956551350\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Since this project recommends `.arrow` as the extension for files created with this format (Feather V2 / Arrow IPC file format), I feel it is necessary to use `.arrow` here for consistency.\r\n   \r\n   https://github.com/apache/arrow/blob/1b9c57e20802fb061c90837c39e99d8fa69cc212/docs/source/format/Columnar.rst#L1047-L1052\r\n   \r\n   @kou Do you have any additional explanation?\n\n\n\n",
                    "created": "2022-08-27T07:36:49.882+0000",
                    "updated": "2022-08-27T07:36:49.882+0000",
                    "started": "2022-08-27T07:36:49.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804126",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956555290\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Ah, it's a good point.\r\n   If users specify `\"feather\"` explicitly, it may be better that we use `\".feather\"` for extension name. Does this work?\r\n   \r\n   ```diff\r\n   diff --git a/python/pyarrow/_dataset.pyx b/python/pyarrow/_dataset.pyx\r\n   index 93d3555b94..f52f8a6519 100644\r\n   -",
                    "created": "2022-08-27T08:20:19.550+0000",
                    "updated": "2022-08-27T08:20:19.550+0000",
                    "started": "2022-08-27T08:20:19.550+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804129",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956558805\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Hmmm, I wonder if it is worth complicating the source code just to keep the feather extension. (Of course, I'm not the maintainer, so if that's ok with the maintainer, fine.)\r\n   \r\n   Considering that the extension can be changed to any extension by setting the `basename_template` option (as @westonpace says), I think there is no need to treat only the `\"feather\"` case specially here.\r\n   \r\n   I want to emphasize that it is hard to understand the relationship between IPC files and Feather files anyway.\r\n   For example, in Julia, if we want to read an IPC file, I need Arrow.jl, but if I want to read a Feather V1 file, we need the Feather.jl library.\n\n\n\n",
                    "created": "2022-08-27T09:02:29.255+0000",
                    "updated": "2022-08-27T09:02:29.255+0000",
                    "started": "2022-08-27T09:02:29.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804132",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956558805\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Hmmm, I wonder if it is worth complicating the source code just to keep the `.feather` extension. (Of course, I'm not the maintainer, so if that's ok with the maintainer, fine.)\r\n   \r\n   Considering that the extension can be changed to any extension by setting the `basename_template` option (as @westonpace says), I think there is no need to treat only the `\"feather\"` case specially here.\r\n   \r\n   I want to emphasize that it is hard to understand the relationship between IPC files and Feather files anyway.\r\n   For example, in Julia, if we want to read an IPC file, I need Arrow.jl, but if I want to read a Feather V1 file, we need the Feather.jl library.\n\n\n\n",
                    "created": "2022-08-27T09:03:09.310+0000",
                    "updated": "2022-08-27T09:03:09.310+0000",
                    "started": "2022-08-27T09:03:09.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804133",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956571595\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   I don't think that the implementation I suggested is so complex (if it works).\r\n   \r\n   I think that specifying `format=\"feather\"` explicitly means that \"the user wants to call the format Feather V2 not Apache Arrow IPC file format\" because the user can specify `format=\"ipc\"` or `format=\"arrow\"` instead of `format=\"feather\"`. I don't know why we need to force the user to specify `basename_template` too for this case.\r\n   \r\n   > I want to emphasize that it is hard to understand the relationship between IPC files and Feather files anyway.\r\n   \r\n   We may need to deprecate Feather V2. Could you start a discussion on the `dev@arrow.apache.org` mailing list?\r\n   \r\n   > For example, in Julia, if we want to read an IPC file, I need Arrow.jl, but if I want to read a Feather V1 file, we need the Feather.jl library.\r\n   \r\n   We can resolve the problem by implementing auto-detection feature like we did in Apache Arrow C++: https://github.com/apache/arrow/blob/1b9c57e20802fb061c90837c39e99d8fa69cc212/cpp/src/arrow/ipc/feather.cc#L785-L797\r\n   \r\n   I'm not sure where the auto-detection feature should be implemented (Arrow.jl, Feather.jl or new library?) but how about create an issue to https://github.com/apache/arrow-julia ?\n\n\n\n",
                    "created": "2022-08-27T11:26:31.713+0000",
                    "updated": "2022-08-27T11:26:31.713+0000",
                    "started": "2022-08-27T11:26:31.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804135",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r956731736\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   > I think that specifying `format=\"feather\"` explicitly means that \"the user wants to call the format Feather V2 not Apache Arrow IPC file format\" because the user can specify `format=\"ipc\"` or `format=\"arrow\"` instead of `format=\"feather\"`.\r\n   \r\n   I don't know why there are multiple aliases set up here, but as long as this project have treated Feather V2 as an alias for IPC files in the past (or still do), I don't know if users are choosing `\"feather\"` for a clear reason.\r\n   For example, we use the `pyarrow.feather` module to handle IPC files with pyarrow. (not `pyarrow.ipc` or `pyarrow.arrow`.)\r\n   \r\n   > We may need to deprecate Feather V2. Could you start a discussion on the `dev@arrow.apache.org` mailing list?\r\n   \r\n   To be clear, I just think it makes more sense to use the extension `.arrow` for Feather V2 files, not that I think the name \"Feather V2\" should be discontinued.\r\n   \r\n   I had assumed that such a policy was adopted once the official extension for IPC files was decided to be `.arrow`, but apparently not?\r\n   (BTW, I was surprised at the time because I thought `.feather` was the official extension until I saw [the news](https://www.clear-code.com/blog/2022/5/13/latest-apache-arrow-information.html).)\r\n   \r\n   For now, it may make sense here to leave the `.feather` extension for the `\"feather\"` case, and warn in the future?\r\n   \r\n   > I'm not sure where the auto-detection feature should be implemented (Arrow.jl, Feather.jl or new library?) but how about create an issue to [apache/arrow-julia](https://github.com/apache/arrow-julia) ?\r\n   \r\n   Thanks for your suggestion, but Julia's case is an example, not that I want that feature.\r\n   I just wanted to say that there may be no benefit in continuing to use the `.feather` extension, which may not be readable by some libraries.\n\n\n\n",
                    "created": "2022-08-28T13:47:44.736+0000",
                    "updated": "2022-08-28T13:47:44.736+0000",
                    "started": "2022-08-28T13:47:44.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804213",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r957026581\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   > For example, we use the `pyarrow.feather` module to handle IPC files with pyarrow. (not `pyarrow.ipc` or `pyarrow.arrow`.)\r\n   \r\n   No. Normally, users use `pyarrow.ipc.open_file()`/`pyarrow.ipc.new_file()` for it. See also:\r\n   \r\n   * https://arrow.apache.org/docs/python/ipc.html#writing-and-reading-random-access-files\r\n   * https://arrow.apache.org/cookbook/py/io.html#saving-arrow-arrays-to-disk\r\n   \r\n   > For now, it may make sense here to leave the `.feather` extension for the `\"feather\"` case, and warn in the future?\r\n   \r\n   @westonpace What do you think about this?\r\n   \n\n\n\n",
                    "created": "2022-08-29T08:20:29.409+0000",
                    "updated": "2022-08-29T08:20:29.409+0000",
                    "started": "2022-08-29T08:20:29.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804284",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r957055069\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Also @jorisvandenbossche for opinions.\n\n\n\n",
                    "created": "2022-08-29T08:51:41.971+0000",
                    "updated": "2022-08-29T08:51:41.971+0000",
                    "started": "2022-08-29T08:51:41.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804294",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r957076412\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Personally, I am +1 on the suggestion of @kou for having a small FeatherFileFormat class so that we can let the default extension name depend on whether the user specified `format=\"ipc\"` vs `format=\"feather\"` (for the reasons @kou gave).  \r\n   I am only wondering if we can avoid making that public, so it's only used under the hood if the user passed a string format name to write_dataset.\r\n   \r\n   (I also do think it might be worth a broader discussion about to which extent and how we want to keep using the Feather name)\r\n   \n\n\n\n",
                    "created": "2022-08-29T09:14:13.987+0000",
                    "updated": "2022-08-29T09:14:13.987+0000",
                    "started": "2022-08-29T09:14:13.987+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804299",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r957076412\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   Personally, I am +1 on the suggestion of @kou for having a small FeatherFileFormat class so that we can let the default extension name depend on whether the user specified `format=\"ipc\"` vs `format=\"feather\"` (for the reasons @kou gave).  \r\n   I am only wondering if we can avoid making that public, so it's only used under the hood if the user passed a string format name to write_dataset.\r\n   \r\n   (I also agree that it might be worth a broader discussion about to which extent and how we want to keep using the Feather name)\r\n   \n\n\n\n",
                    "created": "2022-08-29T09:14:29.032+0000",
                    "updated": "2022-08-29T09:14:29.032+0000",
                    "started": "2022-08-29T09:14:29.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804300",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#issuecomment-1230000144\n\n   > However, since the `pyarrow.dataset` module is warned in the document that it is experimental, I thought that this breaking change could be implemented immediately.\r\n   \r\n   On a separate note, we should probably update that note. Given the time this module has now been around, at least the core functionality shouldn't be considered as experimental anymore IMO\n\n\n",
                    "created": "2022-08-29T09:16:03.048+0000",
                    "updated": "2022-08-29T09:16:03.048+0000",
                    "started": "2022-08-29T09:16:03.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804301",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/804310",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on code in PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#discussion_r957160830\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4192,27 +4192,27 @@ def test_write_table_multiple_fragments(tempdir):\n     # Table with multiple batches written as single Fragment by default\n     base_dir = tempdir / 'single'\n     ds.write_dataset(table, base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Same for single-element list of Table\n     base_dir = tempdir / 'single-list'\n     ds.write_dataset([table], base_dir, format=\"feather\")\n-    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.feather\"])\n+    assert set(base_dir.rglob(\"*\")) == set([base_dir / \"part-0.arrow\"])\n     assert ds.dataset(base_dir, format=\"ipc\").to_table().equals(table)\n \n     # Provide list of batches to write multiple fragments\n     base_dir = tempdir / 'multiple'\n     ds.write_dataset(table.to_batches(), base_dir, format=\"feather\")\n     assert set(base_dir.rglob(\"*\")) == set(\n-        [base_dir / \"part-0.feather\"])\n+        [base_dir / \"part-0.arrow\"])\n\nReview Comment:\n   > No. Normally, users use `pyarrow.ipc.open_file()`/`pyarrow.ipc.new_file()` for it. See also:\r\n   \r\n   Oh...... I really did not know that.\r\n   \r\n   This is the part I was actually looking at because I believed these references were classified as \"Tabular File Formats\".\r\n   \r\n   ![image](https://user-images.githubusercontent.com/50911393/187181281-da96cca9-64a5-462f-9b41-4c46db3edd1e.png)\r\n   \n\n\n\n",
                    "created": "2022-08-29T10:36:58.616+0000",
                    "updated": "2022-08-29T10:36:58.616+0000",
                    "started": "2022-08-29T10:36:58.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804310",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/805094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou merged PR #13677:\nURL: https://github.com/apache/arrow/pull/13677\n\n\n",
                    "created": "2022-08-31T05:14:52.157+0000",
                    "updated": "2022-08-31T05:14:52.157+0000",
                    "started": "2022-08-31T05:14:52.156+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805094",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/805141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#issuecomment-1232621527\n\n   Benchmark runs are scheduled for baseline = 5be95c7cc89cce9a3ccabec7e36d745303f18189 and contender = 8f071be75c5541aecf07fb6e1a0f91adb925efb2. 8f071be75c5541aecf07fb6e1a0f91adb925efb2 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a52a6ccbf877410fac0d53a2be77cf8a...5f85676f80374dfba248184544746c9a/)\n   [Failed] [test-mac-arm](https://conbench.ursa.dev/compare/runs/c4d06dd5f02a41f898070446337f9102...488ae555fb304b70b2e2830b3b91a0ee/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/a943f7c5a85345d4ae12a36a7f747bc3...a579d697ca17409b9ab671008a494bde/)\n   [Finished :arrow_down:0.39% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/9bc1b1e21718432d91d1cf059b0bbe79...17fc48a4972e491b962479f67b02cec2/)\n   Buildkite builds:\n   [Finished] [`8f071be7` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1392)\n   [Failed] [`8f071be7` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1408)\n   [Failed] [`8f071be7` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1390)\n   [Finished] [`8f071be7` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1407)\n   [Finished] [`5be95c7c` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1391)\n   [Failed] [`5be95c7c` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1407)\n   [Failed] [`5be95c7c` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1389)\n   [Finished] [`5be95c7c` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1406)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-08-31T08:21:53.815+0000",
                    "updated": "2022-08-31T08:21:53.815+0000",
                    "started": "2022-08-31T08:21:53.815+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805141",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/805142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#issuecomment-1232621756\n\n   ['Python', 'R'] benchmarks have high level of regressions.\n   [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/a943f7c5a85345d4ae12a36a7f747bc3...a579d697ca17409b9ab671008a494bde/)\n   \n\n\n",
                    "created": "2022-08-31T08:22:07.173+0000",
                    "updated": "2022-08-31T08:22:07.173+0000",
                    "started": "2022-08-31T08:22:07.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805142",
                    "issueId": "13471811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/worklog/805162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on PR #13677:\nURL: https://github.com/apache/arrow/pull/13677#issuecomment-1232685691\n\n   @kou Thank you for merging this.\r\n   \r\n   It seems that many on this thread on the ML are have opinion that Feather should be deprecated.\r\n   Should I do something about this?\r\n   https://lists.apache.org/thread/d2l7179yd41gfdhktrl1h06gh31l8l4l\n\n\n",
                    "created": "2022-08-31T09:17:28.720+0000",
                    "updated": "2022-08-31T09:17:28.720+0000",
                    "started": "2022-08-31T09:17:28.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805162",
                    "issueId": "13471811"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@23f85a9b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6272c586[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ab8bd2f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@e92090b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36d5f277[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@591d325[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3aff577d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@243bcb78[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3de4d3c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@36e727a0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76e3dabe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@cf9bf11[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 31 05:14:53 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-08-31T05:14:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17089/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-07-15T15:52:58.000+0000",
        "updated": "2022-09-05T02:20:30.000+0000",
        "timeoriginalestimate": null,
        "description": "Same as ARROW-17088\r\n\r\nAs noted in the following document, the recommended extension for IPC files is now `.arrow`.\r\n\r\n> We recommend the \u201c.arrow\u201d extension for files created with this format.\r\nhttps://arrow.apache.org/docs/format/Columnar.html#ipc-file-format\r\n\r\nHowever, currently when writing a dataset with the {{pyarrow.dataset.write_dataset}} function, the default extension is {{.feather}} when {{arrow}} or {{ipc}} or {{feather}} is selected.\r\nhttps://github.com/apache/arrow/blob/b8067151db9bfc04860285fdd8b5e73703346037/python/pyarrow/_dataset.pyx#L1149-L1151",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Use `.arrow` as extension for IPC file dataset",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/comment/17571094",
                    "id": "17571094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I linked ARROW-17092, because I think it would be nice if it was addressed in the same release as this issue.\r\n\r\nrelevant mailing list posts: https://lists.apache.org/thread/5kglmy2q9wk17whpr8p4oploxlsdgwyz",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-07-25T21:01:49.000+0000",
                    "updated": "2022-07-25T21:01:49.000+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471811/comment/17598172",
                    "id": "17598172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 13677\n[https://github.com/apache/arrow/pull/13677]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2022-08-31T05:14:53.445+0000",
                    "updated": "2022-08-31T05:14:53.445+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z16whk:",
        "customfield_12314139": null
    }
}