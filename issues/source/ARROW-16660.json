{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13446945",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945",
    "key": "ARROW-16660",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
            "name": "rishabhrana",
            "key": "JIRAUSER290043",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rishabh Rana",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334712",
                "id": "12334712",
                "name": "C#"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
            "name": "rishabhrana",
            "key": "JIRAUSER290043",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rishabh Rana",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
            "name": "rishabhrana",
            "key": "JIRAUSER290043",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rishabh Rana",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10430",
                "value": "Patch",
                "id": "10430",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16660/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/776665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1143125273\n\n   https://issues.apache.org/jira/browse/ARROW-16660\n\n\n",
                    "created": "2022-06-01T05:12:47.255+0000",
                    "updated": "2022-06-01T05:12:47.255+0000",
                    "started": "2022-06-01T05:12:47.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776665",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/776667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1143129281\n\n   Hey, not sure who the maintainers are that look at the C# implementation, but I saw @eerhardt @HashidaTKS being tagged on a closed PR for C#. Can you please review/ suggest people for reviews?\n\n\n",
                    "created": "2022-06-01T05:21:33.316+0000",
                    "updated": "2022-06-01T05:21:33.316+0000",
                    "started": "2022-06-01T05:21:33.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776667",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/777617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r888026896\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time32Array.cs:\n##########\n@@ -0,0 +1,138 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time32Array\"/> class holds an array of ints, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight.\n+    /// </summary>\n+    public class Time32Array : PrimitiveArray<int>\n+    {\n+        private static readonly int seconds_in_millisecond = 1_000;\n\nReview Comment:\n   [nits]\r\n   How about directly using `1_000` instead of this field as in `Time64Array` ?\r\n   I think a meaning of `1_000` is clear in `GetSeconds()` and `GetMilliSeconds()`.\n\n\n\n##########\ncsharp/test/Apache.Arrow.Tests/TestData.cs:\n##########\n@@ -47,6 +47,8 @@ public static RecordBatch CreateSampleRecordBatch(int length, int columnSetCount\n                 builder.Field(CreateField(DoubleType.Default, i));\n                 builder.Field(CreateField(Date32Type.Default, i));\n                 builder.Field(CreateField(Date64Type.Default, i));\n+                builder.Field(CreateField(Time32Type.Default, i));\n+                builder.Field(CreateField(Time64Type.Default, i));\n\nReview Comment:\n   I think we need to delete these comments.\r\n   \r\n   https://github.com/apache/arrow/blob/0556c8b3bcf7c01469724d35f51fa2c3538f61d7/csharp/test/Apache.Arrow.Tests/TestData.cs#L66-L67\n\n\n\n",
                    "created": "2022-06-02T14:51:22.124+0000",
                    "updated": "2022-06-02T14:51:22.124+0000",
                    "started": "2022-06-02T14:51:22.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777617",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/777640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r888081188\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,191 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, long, Time64Array, Builder>\n\nReview Comment:\n   Does `Builder` need to inherit `PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder>`?\r\n   Can we directly use `PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder>` if `ConvertTo` does nothing?\r\n   It is similar for `Time32Array.Builder`\r\n   \n\n\n\n",
                    "created": "2022-06-02T15:26:24.356+0000",
                    "updated": "2022-06-02T15:26:24.356+0000",
                    "started": "2022-06-02T15:26:24.356+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777640",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/777642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r888081188\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,191 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, long, Time64Array, Builder>\n\nReview Comment:\n   Does `Builder` need to inherit `PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder>`?\r\n   Can we directly use `PrimitiveArrayBuilder<T, TArray, TBuilder>` (`PrimitiveArrayBuilder<long, Time64Array, Time64Builder>`) if `ConvertTo` does nothing?\r\n   It is similar for `Time32Array.Builder`\r\n   \n\n\n\n",
                    "created": "2022-06-02T15:27:19.418+0000",
                    "updated": "2022-06-02T15:27:19.418+0000",
                    "started": "2022-06-02T15:27:19.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777642",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/777648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r888081188\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,191 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, long, Time64Array, Builder>\n\nReview Comment:\n   Does `Builder` need to inherit `PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder>`?\r\n   Can we directly use `PrimitiveArrayBuilder<T, TArray, TBuilder>` (`PrimitiveArrayBuilder<long, Time64Array, Builder>`) if `ConvertTo` does nothing?\r\n   It is similar for `Time32Array.Builder`\r\n   \n\n\n\n",
                    "created": "2022-06-02T15:32:20.878+0000",
                    "updated": "2022-06-02T15:32:20.878+0000",
                    "started": "2022-06-02T15:32:20.877+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777648",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/777951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r888677735\n\n\n##########\ncsharp/test/Apache.Arrow.Tests/TestData.cs:\n##########\n@@ -47,6 +47,8 @@ public static RecordBatch CreateSampleRecordBatch(int length, int columnSetCount\n                 builder.Field(CreateField(DoubleType.Default, i));\n                 builder.Field(CreateField(Date32Type.Default, i));\n                 builder.Field(CreateField(Date64Type.Default, i));\n+                builder.Field(CreateField(Time32Type.Default, i));\n+                builder.Field(CreateField(Time64Type.Default, i));\n\nReview Comment:\n   removed these\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time32Array.cs:\n##########\n@@ -0,0 +1,138 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time32Array\"/> class holds an array of ints, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight.\n+    /// </summary>\n+    public class Time32Array : PrimitiveArray<int>\n+    {\n+        private static readonly int seconds_in_millisecond = 1_000;\n\nReview Comment:\n   made this change\n\n\n\n",
                    "created": "2022-06-03T07:14:10.930+0000",
                    "updated": "2022-06-03T07:14:10.930+0000",
                    "started": "2022-06-03T07:14:10.929+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777951",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/777952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r888678674\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,191 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, long, Time64Array, Builder>\n\nReview Comment:\n   I initially played around with using Timespan which needed this, but this is not required now. I have made this change\n\n\n\n",
                    "created": "2022-06-03T07:15:21.027+0000",
                    "updated": "2022-06-03T07:15:21.027+0000",
                    "started": "2022-06-03T07:15:21.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777952",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/778367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1146483558\n\n   @rishabh-rana Thanks! It looks good to me but I have no right to merge...\r\n   \r\n   @eerhardt Would you please merge this patch if you have no objection? \n\n\n",
                    "created": "2022-06-04T00:58:28.232+0000",
                    "updated": "2022-06-04T00:58:28.232+0000",
                    "started": "2022-06-04T00:58:28.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "778367",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/778404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1146657884\n\n   Can you also update the following places?\r\n   \r\n   1. https://github.com/apache/arrow/blame/master/docs/source/status.rst#L52\r\n   2. Remove the skip line here, so we can start covering all the datetime types in the integration tests:\r\n   https://github.com/apache/arrow/blob/25e0dd488ab60417f8f453f648e6ecfeb058f01e/dev/archery/archery/integration/datagen.py#L1609-L1610\n\n\n",
                    "created": "2022-06-04T17:45:16.770+0000",
                    "updated": "2022-06-04T17:45:16.770+0000",
                    "started": "2022-06-04T17:45:16.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "778404",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/778405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r889599530\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n\nReview Comment:\n   ```suggestion\r\n       /// stored as the number of microseconds/nanoseconds (depending on the Time64Type) since midnight.\r\n   ```\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time32Array.cs:\n##########\n@@ -0,0 +1,118 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time32Array\"/> class holds an array of ints, where each value is\n\nReview Comment:\n   ```suggestion\r\n       /// The <see cref=\"Time32Array\"/> class holds an array of <see cref=\"Int32\" />, where each value is\r\n   ```\r\n   \r\n   \"int\" and \"long\" are C# specific, but the xml doc is for all languages (VB, F#), so we don't use C# specific keywords in xml doc.\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, Time64Array, Builder>\n+        {\n+            protected override Time64Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time64Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+\n+            protected Time64Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time64Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time64Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time64Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time64Array(\n+            Time64Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time64Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time64);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n\nReview Comment:\n   ```suggestion\r\n   ```\r\n   \r\n   extra blank space.\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time32Array.cs:\n##########\n@@ -0,0 +1,118 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time32Array\"/> class holds an array of ints, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight.\n+    /// </summary>\n+    public class Time32Array : PrimitiveArray<int>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time32Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<int, Time32Array, Builder>\n+        {\n+            protected override Time32Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time32Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+            \n+            protected Time32Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time32Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time32Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time32Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time32Array(\n+            Time32Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time32Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time32);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n+        /// <summary>\n+        /// Get the time at the specified index as seconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns an int, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public int? GetSeconds(int index)\n+        {\n+            int? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time32Type) Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value,\n+                TimeUnit.Millisecond => value / 1_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time32Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as milliseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns an int, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public int? GetMilliSeconds(int index)\n\nReview Comment:\n   One thought I have is that we could add some helper methods for .net 6+ that gets a `TimeOnly` value at each index. This doesn't need to be done in this PR, but I just wanted to get your thoughts on it.\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, Time64Array, Builder>\n+        {\n+            protected override Time64Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time64Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+\n+            protected Time64Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time64Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time64Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time64Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time64Array(\n+            Time64Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time64Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time64);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n+        /// <summary>\n+        /// Get the time at the specified index as seconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type) Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value,\n+                TimeUnit.Millisecond => value / 1_000,\n+                TimeUnit.Microsecond => value / 1_000_000,\n+                TimeUnit.Nanosecond => value / 1_000_000_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as milliseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetMilliSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type)Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value * 1_000,\n+                TimeUnit.Millisecond => value,\n+                TimeUnit.Microsecond => value / 1_000,\n+                TimeUnit.Nanosecond => value / 1_000_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as microseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetMicroSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type)Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value * 1_000_000,\n+                TimeUnit.Millisecond => value * 1_000,\n\nReview Comment:\n   ```suggestion\r\n   ```\r\n   \r\n   According to \r\n   \r\n   https://github.com/apache/arrow/blob/25e0dd488ab60417f8f453f648e6ecfeb058f01e/format/Schema.fbs#L218-L220\r\n   \r\n   Time64 only supports micro and nano seconds\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, Time64Array, Builder>\n+        {\n+            protected override Time64Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time64Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+\n+            protected Time64Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time64Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time64Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time64Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time64Array(\n+            Time64Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time64Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time64);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n+        /// <summary>\n+        /// Get the time at the specified index as seconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type) Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value,\n+                TimeUnit.Millisecond => value / 1_000,\n+                TimeUnit.Microsecond => value / 1_000_000,\n+                TimeUnit.Nanosecond => value / 1_000_000_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as milliseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetMilliSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type)Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value * 1_000,\n+                TimeUnit.Millisecond => value,\n+                TimeUnit.Microsecond => value / 1_000,\n+                TimeUnit.Nanosecond => value / 1_000_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as microseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n\nReview Comment:\n   ```suggestion\r\n           /// <param name=\"index\">Index at which to get the time.</param>\r\n   ```\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time32Array.cs:\n##########\n@@ -0,0 +1,118 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time32Array\"/> class holds an array of ints, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight.\n+    /// </summary>\n+    public class Time32Array : PrimitiveArray<int>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time32Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<int, Time32Array, Builder>\n+        {\n+            protected override Time32Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time32Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+            \n+            protected Time32Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time32Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time32Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time32Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time32Array(\n+            Time32Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time32Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time32);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n\nReview Comment:\n   ```suggestion\r\n   ```\r\n   \r\n   extra blank line\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, Time64Array, Builder>\n+        {\n+            protected override Time64Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time64Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+\n+            protected Time64Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time64Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time64Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time64Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time64Array(\n+            Time64Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time64Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time64);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n+        /// <summary>\n+        /// Get the time at the specified index as seconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n\nReview Comment:\n   ```suggestion\r\n           /// <param name=\"index\">Index at which to get the time.</param>\r\n   ```\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time64Type) since midnight.\n+    /// </summary>\n+    public class Time64Array : PrimitiveArray<long>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time64Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<long, Time64Array, Builder>\n+        {\n+            protected override Time64Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time64Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+\n+            protected Time64Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time64Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time64Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time64Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time64Array(\n+            Time64Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time64Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time64);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n+        /// <summary>\n+        /// Get the time at the specified index as seconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type) Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value,\n+                TimeUnit.Millisecond => value / 1_000,\n+                TimeUnit.Microsecond => value / 1_000_000,\n+                TimeUnit.Nanosecond => value / 1_000_000_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as milliseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetMilliSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type)Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value * 1_000,\n+                TimeUnit.Millisecond => value,\n+                TimeUnit.Microsecond => value / 1_000,\n+                TimeUnit.Nanosecond => value / 1_000_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as microseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetMicroSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type)Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value * 1_000_000,\n+                TimeUnit.Millisecond => value * 1_000,\n+                TimeUnit.Microsecond => value,\n+                TimeUnit.Nanosecond => value / 1_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time64Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as nanoseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns a long, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public long? GetNanoSeconds(int index)\n+        {\n+            long? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time64Type)Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value * 1_000_000_000,\n+                TimeUnit.Millisecond => value * 1_000_000,\n\nReview Comment:\n   ```suggestion\r\n   ```\r\n   \r\n   According to \r\n   \r\n   https://github.com/apache/arrow/blob/25e0dd488ab60417f8f453f648e6ecfeb058f01e/format/Schema.fbs#L218-L220\r\n   \r\n   Time64 only supports micro and nano seconds\n\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time64Array.cs:\n##########\n@@ -0,0 +1,172 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time64Array\"/> class holds an array of longs, where each value is\n\nReview Comment:\n   ```suggestion\r\n       /// The <see cref=\"Time64Array\"/> class holds an array of <see cref=\"Int64\" />, where each value is\r\n   ```\n\n\n\n",
                    "created": "2022-06-04T18:03:39.412+0000",
                    "updated": "2022-06-04T18:03:39.412+0000",
                    "started": "2022-06-04T18:03:39.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "778405",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/778532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on code in PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#discussion_r889897176\n\n\n##########\ncsharp/src/Apache.Arrow/Arrays/Time32Array.cs:\n##########\n@@ -0,0 +1,118 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or moreDate32Array\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Types;\n+using System.IO;\n+\n+namespace Apache.Arrow\n+{\n+    /// <summary>\n+    /// The <see cref=\"Time32Array\"/> class holds an array of ints, where each value is\n+    /// stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight.\n+    /// </summary>\n+    public class Time32Array : PrimitiveArray<int>\n+    {\n+        /// <summary>\n+        /// The <see cref=\"Builder\"/> class can be used to fluently build <see cref=\"Time32Array\"/> objects.\n+        /// </summary>\n+        public class Builder : PrimitiveArrayBuilder<int, Time32Array, Builder>\n+        {\n+            protected override Time32Array Build(\n+                ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+                int length, int nullCount, int offset) =>\n+                new Time32Array(DataType, valueBuffer, nullBitmapBuffer, length, nullCount, offset);\n+            \n+            protected Time32Type DataType { get; }\n+\n+            public Builder()\n+                : this(Time32Type.Default) { }\n+\n+            public Builder(TimeUnit unit)\n+                : this(new Time32Type(unit)) { }\n+\n+            /// <summary>\n+            /// Construct a new instance of the <see cref=\"Builder\"/> class.\n+            /// </summary>\n+            public Builder(Time32Type type)\n+                : base()\n+            {\n+                DataType = type;\n+            }\n+        }\n+\n+        public Time32Array(\n+            Time32Type type,\n+            ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer,\n+            int length, int nullCount, int offset)\n+            : this(new ArrayData(type, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueBuffer }))\n+        { }\n+\n+        public Time32Array(ArrayData data)\n+            : base(data)\n+        {\n+            data.EnsureDataType(ArrowTypeId.Time32);\n+        }\n+\n+        public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n+\n+\n+        /// <summary>\n+        /// Get the time at the specified index as seconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns an int, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public int? GetSeconds(int index)\n+        {\n+            int? value = GetValue(index);\n+            if (value == null)\n+            {\n+                return null;\n+            }\n+\n+            var unit = ((Time32Type) Data.DataType).Unit;\n+            return unit switch\n+            {\n+                TimeUnit.Second => value,\n+                TimeUnit.Millisecond => value / 1_000,\n+                _ => throw new InvalidDataException($\"Unsupported time unit for Time32Type: {unit}\")\n+            };\n+        }\n+\n+        /// <summary>\n+        /// Get the time at the specified index as milliseconds\n+        /// </summary>\n+        /// <param name=\"index\">Index at which to get the date.</param>\n+        /// <returns>Returns an int, or <c>null</c> if there is no object at that index.\n+        /// </returns>\n+        public int? GetMilliSeconds(int index)\n\nReview Comment:\n   Sure, I think we can do this for Time32Array. I will raise a follow up\n\n\n\n",
                    "created": "2022-06-06T07:36:20.423+0000",
                    "updated": "2022-06-06T07:36:20.423+0000",
                    "started": "2022-06-06T07:36:20.422+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "778532",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/778533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1147144477\n\n   @eerhardt Thank you for your comments! I have resolved all and made the changes to the docs and the integration tests as you mentioned\n\n\n",
                    "created": "2022-06-06T07:37:10.280+0000",
                    "updated": "2022-06-06T07:37:10.280+0000",
                    "started": "2022-06-06T07:37:10.280+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "778533",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/780714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1153530371\n\n   @eerhardt I have added the missing implementation for the Timestamp array which was causing the integration tests to fail. Can you please approve the workflows to run and review?\n\n\n",
                    "created": "2022-06-13T06:37:41.716+0000",
                    "updated": "2022-06-13T06:37:41.716+0000",
                    "started": "2022-06-13T06:37:41.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780714",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/780969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rishabh-rana commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1154641991\n\n   @eerhardt Thank you for your review! All good to merge now\n\n\n",
                    "created": "2022-06-14T02:32:46.211+0000",
                    "updated": "2022-06-14T02:32:46.211+0000",
                    "started": "2022-06-14T02:32:46.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780969",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/780976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt merged PR #13279:\nURL: https://github.com/apache/arrow/pull/13279\n\n\n",
                    "created": "2022-06-14T03:28:25.361+0000",
                    "updated": "2022-06-14T03:28:25.361+0000",
                    "started": "2022-06-14T03:28:25.361+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780976",
                    "issueId": "13446945"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/worklog/787900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tustvold commented on PR #13279:\nURL: https://github.com/apache/arrow/pull/13279#issuecomment-1175174613\n\n   We are seeing intermittent archery failures which appear to be related to this change, I wonder if someone might be able to help look into this? Ticket [here](https://issues.apache.org/jira/browse/ARROW-16978)\n\n\n",
                    "created": "2022-07-05T15:10:21.246+0000",
                    "updated": "2022-07-05T15:10:21.246+0000",
                    "started": "2022-07-05T15:10:21.246+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787900",
                    "issueId": "13446945"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@14070c62[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3578e3d2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31c2aa88[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@43d6a911[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8083e71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@43c3d64e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67f1a254[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1119019a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58ab5e7e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5879283[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f0e6365[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3642bacf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 14 03:28:26 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C#"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-14T03:28:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16660/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-05-26T05:46:44.000+0000",
        "updated": "2022-07-05T15:10:21.000+0000",
        "timeoriginalestimate": null,
        "description": "C# Implementation does not support reading/writing Time32Array and Time64Array which makes it unusable to read/write Arrow batches containing these array types.\r\n\r\n\u00a0\r\n\r\nAs the native TimeSpan class in C# only supports resolution in milliseconds, it cannot be used to implement both these types of arrays in a consistent manner. These arrays can, however be supported as simple Int32/ Int64 arrays which represent seconds/ milliseconds/ microseconds/ nanoseconds passed since midnight which the user should parse as needed.\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C#] Add support for Time32Array and Time64Array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/comment/17542372",
                    "id": "17542372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
                        "name": "rishabhrana",
                        "key": "JIRAUSER290043",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rishabh Rana",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Can someone please assign this issue to me, I would be happy to prepare a PR to add these type's support to C# implementation",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
                        "name": "rishabhrana",
                        "key": "JIRAUSER290043",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rishabh Rana",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-26T05:48:00.654+0000",
                    "updated": "2022-05-26T05:48:00.654+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/comment/17542658",
                    "id": "17542658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Done.  I've also given you permission to assign issues to yourself in the future.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-05-26T20:29:05.693+0000",
                    "updated": "2022-05-26T20:29:05.693+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/comment/17544701",
                    "id": "17544701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
                        "name": "rishabhrana",
                        "key": "JIRAUSER290043",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rishabh Rana",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thanks, [~westonpace]\u00a0\r\n\r\nRaised a PR",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rishabhrana",
                        "name": "rishabhrana",
                        "key": "JIRAUSER290043",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rishabh Rana",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-01T05:10:58.497+0000",
                    "updated": "2022-06-01T05:10:58.497+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13446945/comment/17553875",
                    "id": "17553875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "body": "Issue resolved by pull request 13279\n[https://github.com/apache/arrow/pull/13279]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "created": "2022-06-14T03:28:26.719+0000",
                    "updated": "2022-06-14T03:28:26.719+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z12pbs:",
        "customfield_12314139": null
    }
}