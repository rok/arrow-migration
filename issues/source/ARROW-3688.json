{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13195693",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693",
    "key": "ARROW-3688",
    "fields": {
        "parent": {
            "id": "13179854",
            "key": "ARROW-3089",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13179854",
            "fields": {
                "summary": "[Rust] Add ArrayBuilder for different Arrow arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3688/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me opened a new pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306\n\n\n   This implements `append_values` for primitive builders, which allows for pushing a number of values and their validity buffer at the same time.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-30T16:51:56.484+0000",
                    "updated": "2020-05-30T16:51:56.484+0000",
                    "started": "2020-05-30T16:51:56.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439102",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432869911\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,26 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(&mut self, values: &[T::Native], is_valid: &[u8]) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n+        assert_eq!(\n+            ceil / 8,\n+            is_valid.len(),\n+            \"value slice not aligned with validity slice\"\n+        );\n+        let mut bools = Vec::with_capacity(values.len() / 8 + 1);\n+        is_valid.iter().for_each(|v| {\n+            let bin = format!(\"{:b}\", v);\n+            // TODO: reversing to correct the endianness, find a better solution\n\nReview comment:\n       I need help here. I'm ultimately trying to convert `&[u8; x]` to `&[bool; 8x]` while also handling the correct endianness.\r\n   \r\n   The only way I could find to check endianness is by introducing the `byteorder` crate, so I'm unsure if the `rev()` is currently always valid. I'll add more tests to check this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-30T16:56:42.809+0000",
                    "updated": "2020-05-30T16:56:42.809+0000",
                    "started": "2020-05-30T16:56:42.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439103",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432869964\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,26 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(&mut self, values: &[T::Native], is_valid: &[u8]) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n+        assert_eq!(\n+            ceil / 8,\n+            is_valid.len(),\n+            \"value slice not aligned with validity slice\"\n+        );\n+        let mut bools = Vec::with_capacity(values.len() / 8 + 1);\n+        is_valid.iter().for_each(|v| {\n+            let bin = format!(\"{:b}\", v);\n+            // TODO: reversing to correct the endianness, find a better solution\n+            bin.as_str().chars().rev().for_each(|c| {\n+                bools.push(c == '1');\n\nReview comment:\n       Similar to the above comment, I don't know if there's perhaps a better way than formatting to binary and iterating through the binary characters.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-30T16:57:28.857+0000",
                    "updated": "2020-05-30T16:57:28.857+0000",
                    "started": "2020-05-30T16:57:28.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439105",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432870037\n\n\n\n##########\nFile path: rust/arrow/src/util/bit_util.rs\n##########\n@@ -43,7 +43,7 @@ pub fn round_upto_multiple_of_64(num: usize) -> usize {\n \n /// Returns the nearest multiple of `factor` that is `>=` than `num`. Here `factor` must\n /// be a power of 2.\n-fn round_upto_power_of_2(num: usize, factor: usize) -> usize {\n+pub(crate) fn round_upto_power_of_2(num: usize, factor: usize) -> usize {\n\nReview comment:\n       exposing this so I can round to 8\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-30T16:58:12.157+0000",
                    "updated": "2020-05-30T16:58:12.157+0000",
                    "started": "2020-05-30T16:58:12.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439106",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432870268\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,26 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(&mut self, values: &[T::Native], is_valid: &[u8]) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n\nReview comment:\n       The idea here is to check that `&[T::Native; 65]` has validity slice of `$[u8; 9]` by rounding 65 to 72, then dividing by 8 to get to 9 u8 values. I'll add a test that asserts failure of the condition.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-30T17:01:28.889+0000",
                    "updated": "2020-05-30T17:01:28.889+0000",
                    "started": "2020-05-30T17:01:28.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439108",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#issuecomment-636357924\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-30T17:02:52.221+0000",
                    "updated": "2020-05-30T17:02:52.221+0000",
                    "started": "2020-05-30T17:02:52.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439109",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#issuecomment-636402799\n\n\n   https://issues.apache.org/jira/browse/ARROW-3688\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T00:29:13.055+0000",
                    "updated": "2020-05-31T00:29:13.055+0000",
                    "started": "2020-05-31T00:29:13.055+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439162",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "houqp commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432907904\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n+        if offset == 0 {\n+            // if there is no offset, the value slice should align with validity\n+            assert_eq!(\n+                ceil / 8,\n+                is_valid.len(),\n+                \"value slice not aligned with validity slice\"\n+            );\n+        } else {\n+            // when there is an offset, the validity slots should be > values\n+            assert!(\n+                ceil / 8 <= is_valid.len(),\n+                \"value slots greater than validity slots\"\n+            );\n+        }\n+        let mut offset = offset;\n+        let mut bools = Vec::with_capacity(values.len() / 8 + 1);\n+        is_valid.iter().for_each(|v| {\n+            if offset >= 8 {\n+                offset -= 8;\n+                return;\n+            }\n+            let bin = format!(\"{:b}\", v);\n+            // TODO: reversing to correct the endianness, find a better solution\n+            // if we have `11001010` it means first value is null, and 8th value is valid\n+            // however if the offset = 3, we should have `11001`, so we skip offset\n+            bin.as_str().chars().rev().skip(offset).for_each(|c| {\n+                bools.push(c == '1');\n+            });\n+            // offset should be covered by available bytes\n+            offset = 0;\n+        });\n+        self.bitmap_builder.append_slice(&bools[0..values.len()])?;\n\nReview comment:\n       it might be faster to manually call `bimap_builder.reserve(values.len())` ahead of time, then call `bitmap_builder.append()` in the loop to avoid having to create bools vector. `append_slice` is just `append` running in a loop, so if you are already looping manually before calling it, then I feel like using `append` would be better.\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,26 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(&mut self, values: &[T::Native], is_valid: &[u8]) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n+        assert_eq!(\n+            ceil / 8,\n+            is_valid.len(),\n+            \"value slice not aligned with validity slice\"\n+        );\n+        let mut bools = Vec::with_capacity(values.len() / 8 + 1);\n+        is_valid.iter().for_each(|v| {\n+            let bin = format!(\"{:b}\", v);\n+            // TODO: reversing to correct the endianness, find a better solution\n+            bin.as_str().chars().rev().for_each(|c| {\n+                bools.push(c == '1');\n\nReview comment:\n       `{:b}` ignores leading zeros, which might not be want we want here. How about using bitmaks?\r\n   \r\n   ```rust\r\n   fn main() {\r\n       // 0x38: 0011 1000\r\n       // 0x1F: 0001 1111\r\n       let bitmap = [0x38, 0x1F];\r\n       bitmap.iter().enumerate().for_each(|(idx, byte)| {\r\n           let mut bitmask = 0x01;\r\n           println!(\"byte {}: {:b}\", idx, byte);\r\n           let offset = 0;\r\n           for _ in offset..8 {\r\n               println!(\"\\t{}\", (byte & bitmask) != 0);\r\n               bitmask = bitmask << 1;\r\n           }\r\n       });\r\n   }\r\n   ```\r\n   output:\r\n   \r\n   ```\r\n   byte 0: 111000\r\n   \tfalse\r\n   \tfalse\r\n   \tfalse\r\n   \ttrue\r\n   \ttrue\r\n   \ttrue\r\n   \tfalse\r\n   \tfalse\r\n   byte 1: 11111\r\n   \ttrue\r\n   \ttrue\r\n   \ttrue\r\n   \ttrue\r\n   \ttrue\r\n   \tfalse\r\n   \tfalse\r\n   \tfalse\r\n   ```\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n+        if offset == 0 {\n+            // if there is no offset, the value slice should align with validity\n+            assert_eq!(\n+                ceil / 8,\n+                is_valid.len(),\n+                \"value slice not aligned with validity slice\"\n+            );\n\nReview comment:\n       just my 2 cents, but i feel like assert should be used for internal errors. In this case, it's checking for invalid arguments, which is user/caller error, so perhaps returning an Err instead of crashing is better.\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       Do you expect users of this function to manually construct `values`, `is_valid` and `offset` separately? If not, it might be better to pass in `ArrayDataRef` as argument so these 3 configs will always be consistent.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T04:34:23.755+0000",
                    "updated": "2020-05-31T04:34:23.755+0000",
                    "started": "2020-05-31T04:34:23.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439174",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432919440\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       Thanks, this didn't occur to me, because I started with the signature that was proposed in the comment that led to the JIRA being opened. So by the time I added the offset, I was too far in to notice that I'm passing the elements of ArrayData. I'll change this, and it'll make the interface much better, because the most natural usecase of this is to append arrays to each other\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       Thanks, this didn't occur to me, because I started with the signature that was proposed in the comment that led to the JIRA being opened. So by the time I added the offset, I was too far in to notice that I'm passing the elements of ArrayData. I'll change this, and it'll make the interface much better, because the most natural usecase of this is to append arrays to each other\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T07:38:00.189+0000",
                    "updated": "2020-05-31T07:38:00.189+0000",
                    "started": "2020-05-31T07:38:00.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439188",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439189",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432919807\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n+        let ceil = bit_util::round_upto_power_of_2(values.len(), 8);\n+        if offset == 0 {\n+            // if there is no offset, the value slice should align with validity\n+            assert_eq!(\n+                ceil / 8,\n+                is_valid.len(),\n+                \"value slice not aligned with validity slice\"\n+            );\n\nReview comment:\n       When I change the inputs to ArrayData, the asserts become redundant, so I'll remove them. There are some cases where we use asserts to hint to the compiler not to do bounds checks, so I think that's why we use them on some functions.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T07:42:53.182+0000",
                    "updated": "2020-05-31T07:42:53.182+0000",
                    "started": "2020-05-31T07:42:53.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439189",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432927349\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       I've given it more thought @houqp . I think adding offsets is out of the scope of the function, because the JIRA was initially created to address the need to manually pass primitive data and its validity map (`append_slice()` but with validity).\r\n   \r\n   I'm thinking a simpler function like the below could work:\r\n   \r\n   ```rust\r\n       /// Appends values from a slice of type `T` and a validity boolean slice\r\n       pub fn append_values(\r\n           &mut self,\r\n           values: &[T::Native],\r\n           is_valid: &[bool],\r\n       ) -> Result<()> {\r\n           if values.len() != is_valid.len() {\r\n               return Err(ArrowError::InvalidArgumentError(\r\n                   \"Value and validity lengths must be equal\".to_string(),\r\n               ));\r\n           }\r\n           self.bitmap_builder.append_slice(is_valid)?;\r\n           self.values_builder.append_slice(values)\r\n       }\r\n   ```\r\n   \r\n   Then we can implement an `append_data(&mut self, data: ArrayDataRef) -> Result<()>;` which generalises over all builder types (with booleans and other types that need specialisation handled separately).\r\n   \r\n   The problem with changing `append_values` above to take `ArrayDataRef` is that there's no guarantee that the underlying data type would meet the `T: ArrowNumericArray` constraint.\r\n   \r\n   @sunchao @paddyhoran this originates from an old comment (https://github.com/apache/arrow/pull/2858/files#r228808948) where the suggestion was to use `memcpy` to efficiently achieve the above. If `memcpy` would work, perhaps it should be applied on `append_slice`? Also, are you fine with `is_valid: &[bool]` instead of it being bitpacked? If it's packed, it's less convenient for everyone as the end-user has to create the validity map, and we have to unpack it.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T09:25:02.949+0000",
                    "updated": "2020-05-31T09:25:02.949+0000",
                    "started": "2020-05-31T09:25:02.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439194",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "houqp commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432970873\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       I think that makes sense. Using `&[bool]` also prevents users from blindly passing in the validity bitmap from an existing ArrayData into it without being aware of the offsets. CPP implementation also has a method that takes a vector of bool.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T18:15:21.678+0000",
                    "updated": "2020-05-31T18:15:21.678+0000",
                    "started": "2020-05-31T18:15:21.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439274",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "houqp commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432971322\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       append_slice uses `memcpy` underneath, so in your implementation values are already copied using memcpy. memcpy for bitmaps is a lot more complicated due to offsets alignments :(\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T18:21:17.745+0000",
                    "updated": "2020-05-31T18:21:17.745+0000",
                    "started": "2020-05-31T18:21:17.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439276",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/439278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306#discussion_r432971791\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -500,6 +500,49 @@ impl<T: ArrowPrimitiveType> PrimitiveBuilder<T> {\n         Ok(())\n     }\n \n+    /// Appends values from a slice of type `T` and a validity byte slice\n+    pub fn append_values(\n+        &mut self,\n+        values: &[T::Native],\n+        is_valid: &[u8],\n+        offset: usize,\n+    ) -> Result<()> {\n\nReview comment:\n       I missed that, I only looked as far as `write_bytes`, but I see that the buffer's `write()` gets called, and that uses memcpy.\r\n   \r\n   Yea, we're going to need that for bitmaps. I want to attempt an `append_data(data: ArrayDataRef)` method as I have the need to merge multiple arrays into 1 \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T18:27:32.597+0000",
                    "updated": "2020-05-31T18:27:32.597+0000",
                    "started": "2020-05-31T18:27:32.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439278",
                    "issueId": "13195693"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/worklog/443070",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #7306:\nURL: https://github.com/apache/arrow/pull/7306\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-09T16:28:49.641+0000",
                    "updated": "2020-06-09T16:28:49.641+0000",
                    "started": "2020-06-09T16:28:49.641+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443070",
                    "issueId": "13195693"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@15ad427c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@290d961c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29bf0d0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6cc7c352[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1def85dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3b6f4b14[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a69fe03[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@38667d4f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5946cefa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@18b0192d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d0c75de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@360beb35[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 09 03:42:19 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-09T03:42:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3688/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-11-01T16:19:45.000+0000",
        "updated": "2020-06-09T16:28:50.000+0000",
        "timeoriginalestimate": null,
        "description": "Follow-up of https://github.com/apache/arrow/pull/2858\r\nSee discussion https://github.com/apache/arrow/pull/2858/files#r228808948",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Implement PrimitiveArrayBuilder<T>.push_values",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/comment/16792689",
                    "id": "16792689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "[~kszucs] Is this still an issue?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2019-03-14T14:07:39.333+0000",
                    "updated": "2019-03-14T14:07:39.333+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/comment/16792813",
                    "id": "16792813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~andygrove] I think this is still a TODO item. We'll need to add the interface to enable efficient appending of values.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-03-14T15:58:38.291+0000",
                    "updated": "2019-03-14T15:58:38.291+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195693/comment/17128814",
                    "id": "17128814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 7306\n[https://github.com/apache/arrow/pull/7306]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-06-09T03:42:19.920+0000",
                    "updated": "2020-06-09T03:42:19.920+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|s0014o:",
        "customfield_12314139": null
    }
}