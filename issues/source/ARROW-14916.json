{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13414410",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410",
    "key": "ARROW-14916",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12627517",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12627517",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13087660",
                    "key": "ARROW-1231",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13087660",
                    "fields": {
                        "summary": "[C++] Add filesystem / IO implementation for Google Cloud Storage",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14916/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/692035",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#issuecomment-988234923\n\n\n   https://issues.apache.org/jira/browse/ARROW-14916\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T20:16:31.357+0000",
                    "updated": "2021-12-07T20:16:31.357+0000",
                    "started": "2021-12-07T20:16:31.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692035",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/692720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r765034206\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +345,76 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p) {\n+    RETURN_NOT_OK(DeleteDirContents(p));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n\nReview comment:\n       Instead of using `std::async`, we should the filesystem's IOContext, which has an executor (the default being a global IO thread pool):\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/io/interfaces.h#L52-L60\r\n   \r\n   The executor in turn allows you to spawn tasks and wait on them with futures (not `std::future`, but our own `Future` which supports more operations, such as waiting for multiple futures at once). You can see examples in the thread pool tests: https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/thread_pool_test.cc#L536\r\n   \r\n   See here for waiting on multiple futures:\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/future.h#L835-L876\r\n   \r\n   I think this could actually simplify this code quite a bit.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T16:38:20.380+0000",
                    "updated": "2021-12-08T16:38:20.380+0000",
                    "started": "2021-12-08T16:38:20.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692720",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/692723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r765037821\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -37,6 +37,9 @@ struct ARROW_EXPORT GcsOptions {\n   std::string endpoint_override;\n   std::string scheme;\n \n+  /// Limits the number of concurrent operations, such as Object deletes.\n+  int maximum_concurrent_operations = 64;\n\nReview comment:\n       No need for this if we use the IOContext's executor (the filesystem may decide to provide its own executor, or use the default IO thread pool).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T16:42:31.924+0000",
                    "updated": "2021-12-08T16:42:31.924+0000",
                    "started": "2021-12-08T16:42:31.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692723",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r765923061\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +345,76 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p) {\n+    RETURN_NOT_OK(DeleteDirContents(p));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n\nReview comment:\n       Done, thanks!\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -37,6 +37,9 @@ struct ARROW_EXPORT GcsOptions {\n   std::string endpoint_override;\n   std::string scheme;\n \n+  /// Limits the number of concurrent operations, such as Object deletes.\n+  int maximum_concurrent_operations = 64;\n\nReview comment:\n       Removed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T15:54:00.889+0000",
                    "updated": "2021-12-09T15:54:00.889+0000",
                    "started": "2021-12-09T15:54:00.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693350",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r766001410\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -414,6 +414,34 @@ TEST_F(GcsIntegrationTest, CreateDirRecursiveBucketAndFolder) {\n   arrow::fs::AssertFileInfo(fs.get(), \"new-bucket/\", FileType::Directory);\n }\n \n+TEST_F(GcsIntegrationTest, DeleteDirSuccess) {\n+  auto fs = internal::MakeGcsFileSystemForTest(TestGcsOptions());\n+  const char* const kTestFolders[] = {\n+      \"a/\", \"a/0/\", \"a/0/0/\", \"a/1/\", \"a/2/\",\n+  };\n+  for (auto const* f : kTestFolders) {\n+    const auto folder = PreexistingBucketPath() + f;\n+    ASSERT_OK(fs->CreateDir(folder, true));\n+    for (int i = 0; i != 64; ++i) {\n+      const auto filename = folder + \"test-file-\" + std::to_string(i);\n+      ASSERT_OK_AND_ASSIGN(auto w, fs->OpenOutputStream(filename, {}));\n+      ASSERT_OK(w->Write(filename.data(), filename.size()));\n+      ASSERT_OK(w->Close());\n+    }\n+  }\n+\n+  ASSERT_OK(fs->DeleteDir(PreexistingBucketPath() + kTestFolders[0]));\n+\n+  for (auto const* f : kTestFolders) {\n+    const auto folder = PreexistingBucketPath() + f;\n+    arrow::fs::AssertFileInfo(fs.get(), folder, FileType::NotFound);\n+    for (int i = 0; i != 64; ++i) {\n+      const auto filename = folder + \"test-file-\" + std::to_string(i);\n+      arrow::fs::AssertFileInfo(fs.get(), filename, FileType::NotFound);\n+    }\n+  }\n+}\n\nReview comment:\n       Should you test that other paths in the bucket still exist?\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +344,53 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p, const io::IOContext& io_context) {\n+    RETURN_NOT_OK(DeleteDirContents(p, io_context));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p, const io::IOContext& io_context) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n+    // A simple form of flow control limits the number of operations running in\n+    // parallel.\n+\n+    auto async_delete =\n+        [&p](gcs::Client& client,\n+             google::cloud::StatusOr<gcs::ObjectMetadata> o) -> google::cloud::Status {\n+      if (!o) return std::move(o).status();\n+      // The list includes the directory, skip it. DeleteDir() takes care of it.\n+      if (o->bucket() == p.bucket && o->name() == p.object) return {};\n+      return client.DeleteObject(o->bucket(), o->name(),\n+                                 gcs::Generation(o->generation()));\n+    };\n+\n+    using Future = arrow::Future<google::cloud::Status>;\n+    std::vector<Result<Future>> submitted;\n+    // This iterates over all the objects, and schedules parallel deletes.\n+    auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\n+    for (auto& o : client_.ListObjects(p.bucket, prefix)) {\n+      submitted.push_back(\n\nReview comment:\n       By using `DeferNotOk`, you could instead append to a `std::vector<Future>`, which will simplify the collection code below.\r\n   \r\n   For example (untested):\r\n   ```c++\r\n       std::vector<Future> submitted;\r\n       // This iterates over all the objects, and schedules parallel deletes.\r\n       auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\r\n       for (auto& o : client_.ListObjects(p.bucket, prefix)) {\r\n         submitted.push_back(DeferNotOk(\r\n             io_context.executor()->Submit(async_delete, std::ref(client_), std::move(o))));\r\n       }\r\n   \r\n       return AllFinished(submitted);\r\n   ```\r\n   \n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +344,53 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p, const io::IOContext& io_context) {\n+    RETURN_NOT_OK(DeleteDirContents(p, io_context));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p, const io::IOContext& io_context) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n+    // A simple form of flow control limits the number of operations running in\n+    // parallel.\n+\n+    auto async_delete =\n+        [&p](gcs::Client& client,\n+             google::cloud::StatusOr<gcs::ObjectMetadata> o) -> google::cloud::Status {\n\nReview comment:\n       Two suggestions:\r\n   1) just capture the client as a closure parameter\r\n   2) return an arrow `Status` here, such that you can use `AllFinished(const std::vector<Future>&)`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T17:22:51.266+0000",
                    "updated": "2021-12-09T17:22:51.266+0000",
                    "started": "2021-12-09T17:22:51.266+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693419",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r766000191\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +344,53 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p, const io::IOContext& io_context) {\n+    RETURN_NOT_OK(DeleteDirContents(p, io_context));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p, const io::IOContext& io_context) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n+    // A simple form of flow control limits the number of operations running in\n+    // parallel.\n+\n+    auto async_delete =\n+        [&p](gcs::Client& client,\n+             google::cloud::StatusOr<gcs::ObjectMetadata> o) -> google::cloud::Status {\n+      if (!o) return std::move(o).status();\n+      // The list includes the directory, skip it. DeleteDir() takes care of it.\n+      if (o->bucket() == p.bucket && o->name() == p.object) return {};\n+      return client.DeleteObject(o->bucket(), o->name(),\n+                                 gcs::Generation(o->generation()));\n+    };\n+\n+    using Future = arrow::Future<google::cloud::Status>;\n+    std::vector<Result<Future>> submitted;\n+    // This iterates over all the objects, and schedules parallel deletes.\n+    auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\n+    for (auto& o : client_.ListObjects(p.bucket, prefix)) {\n+      submitted.push_back(\n\nReview comment:\n       By using `DeferNotOk`, you could instead append to a `std::vector<Future>`, which will simplify the collection code below.\r\n   \r\n   For example (untested):\r\n   ```c++\r\n       std::vector<Future> submitted;\r\n       // This iterates over all the objects, and schedules parallel deletes.\r\n       auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\r\n       for (auto& o : client_.ListObjects(p.bucket, prefix)) {\r\n         submitted.push_back(DeferNotOk(\r\n             io_context.executor()->Submit(async_delete, std::ref(client_), std::move(o))));\r\n       }\r\n   \r\n       return AllFinished(submitted).status();\r\n   ```\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T17:23:14.000+0000",
                    "updated": "2021-12-09T17:23:14.000+0000",
                    "started": "2021-12-09T17:23:14.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693420",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r766000191\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +344,53 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p, const io::IOContext& io_context) {\n+    RETURN_NOT_OK(DeleteDirContents(p, io_context));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p, const io::IOContext& io_context) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n+    // A simple form of flow control limits the number of operations running in\n+    // parallel.\n+\n+    auto async_delete =\n+        [&p](gcs::Client& client,\n+             google::cloud::StatusOr<gcs::ObjectMetadata> o) -> google::cloud::Status {\n+      if (!o) return std::move(o).status();\n+      // The list includes the directory, skip it. DeleteDir() takes care of it.\n+      if (o->bucket() == p.bucket && o->name() == p.object) return {};\n+      return client.DeleteObject(o->bucket(), o->name(),\n+                                 gcs::Generation(o->generation()));\n+    };\n+\n+    using Future = arrow::Future<google::cloud::Status>;\n+    std::vector<Result<Future>> submitted;\n+    // This iterates over all the objects, and schedules parallel deletes.\n+    auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\n+    for (auto& o : client_.ListObjects(p.bucket, prefix)) {\n+      submitted.push_back(\n\nReview comment:\n       By using `DeferNotOk` (which turns a `Result<Future<T>>` into a `Future<T>`), you could instead append to a `std::vector<Future>`, which will simplify the collection code below.\r\n   \r\n   For example (untested):\r\n   ```c++\r\n       std::vector<Future> submitted;\r\n       // This iterates over all the objects, and schedules parallel deletes.\r\n       auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\r\n       for (auto& o : client_.ListObjects(p.bucket, prefix)) {\r\n         submitted.push_back(DeferNotOk(\r\n             io_context.executor()->Submit(async_delete, std::ref(client_), std::move(o))));\r\n       }\r\n   \r\n       return AllFinished(submitted).status();\r\n   ```\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T17:23:36.867+0000",
                    "updated": "2021-12-09T17:23:36.867+0000",
                    "started": "2021-12-09T17:23:36.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693421",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r766013830\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +344,53 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p, const io::IOContext& io_context) {\n+    RETURN_NOT_OK(DeleteDirContents(p, io_context));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p, const io::IOContext& io_context) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n+    // A simple form of flow control limits the number of operations running in\n+    // parallel.\n+\n+    auto async_delete =\n+        [&p](gcs::Client& client,\n+             google::cloud::StatusOr<gcs::ObjectMetadata> o) -> google::cloud::Status {\n\nReview comment:\n       Done.  I captured `this` because capturing `client_` is not possible in C++11.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T17:38:23.116+0000",
                    "updated": "2021-12-09T17:38:23.116+0000",
                    "started": "2021-12-09T17:38:23.116+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693431",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#discussion_r766016799\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -342,6 +344,53 @@ class GcsFileSystem::Impl {\n     return internal::ToArrowStatus(CreateDirMarkerRecursive(p.bucket, p.object));\n   }\n \n+  Status DeleteDir(const GcsPath& p, const io::IOContext& io_context) {\n+    RETURN_NOT_OK(DeleteDirContents(p, io_context));\n+    if (!p.object.empty()) {\n+      return internal::ToArrowStatus(client_.DeleteObject(p.bucket, p.object));\n+    }\n+    return internal::ToArrowStatus(client_.DeleteBucket(p.bucket));\n+  }\n+\n+  Status DeleteDirContents(const GcsPath& p, const io::IOContext& io_context) {\n+    // Deleting large directories can be fairly slow, we need to parallelize the\n+    // operation. This uses `std::async()` to run multiple delete operations in parallel.\n+    // A simple form of flow control limits the number of operations running in\n+    // parallel.\n+\n+    auto async_delete =\n+        [&p](gcs::Client& client,\n+             google::cloud::StatusOr<gcs::ObjectMetadata> o) -> google::cloud::Status {\n+      if (!o) return std::move(o).status();\n+      // The list includes the directory, skip it. DeleteDir() takes care of it.\n+      if (o->bucket() == p.bucket && o->name() == p.object) return {};\n+      return client.DeleteObject(o->bucket(), o->name(),\n+                                 gcs::Generation(o->generation()));\n+    };\n+\n+    using Future = arrow::Future<google::cloud::Status>;\n+    std::vector<Result<Future>> submitted;\n+    // This iterates over all the objects, and schedules parallel deletes.\n+    auto prefix = p.object.empty() ? gcs::Prefix() : gcs::Prefix(p.object);\n+    for (auto& o : client_.ListObjects(p.bucket, prefix)) {\n+      submitted.push_back(\n\nReview comment:\n       Neat, thanks.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -414,6 +414,34 @@ TEST_F(GcsIntegrationTest, CreateDirRecursiveBucketAndFolder) {\n   arrow::fs::AssertFileInfo(fs.get(), \"new-bucket/\", FileType::Directory);\n }\n \n+TEST_F(GcsIntegrationTest, DeleteDirSuccess) {\n+  auto fs = internal::MakeGcsFileSystemForTest(TestGcsOptions());\n+  const char* const kTestFolders[] = {\n+      \"a/\", \"a/0/\", \"a/0/0/\", \"a/1/\", \"a/2/\",\n+  };\n+  for (auto const* f : kTestFolders) {\n+    const auto folder = PreexistingBucketPath() + f;\n+    ASSERT_OK(fs->CreateDir(folder, true));\n+    for (int i = 0; i != 64; ++i) {\n+      const auto filename = folder + \"test-file-\" + std::to_string(i);\n+      ASSERT_OK_AND_ASSIGN(auto w, fs->OpenOutputStream(filename, {}));\n+      ASSERT_OK(w->Write(filename.data(), filename.size()));\n+      ASSERT_OK(w->Close());\n+    }\n+  }\n+\n+  ASSERT_OK(fs->DeleteDir(PreexistingBucketPath() + kTestFolders[0]));\n+\n+  for (auto const* f : kTestFolders) {\n+    const auto folder = PreexistingBucketPath() + f;\n+    arrow::fs::AssertFileInfo(fs.get(), folder, FileType::NotFound);\n+    for (int i = 0; i != 64; ++i) {\n+      const auto filename = folder + \"test-file-\" + std::to_string(i);\n+      arrow::fs::AssertFileInfo(fs.get(), filename, FileType::NotFound);\n+    }\n+  }\n+}\n\nReview comment:\n       Done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T17:42:20.495+0000",
                    "updated": "2021-12-09T17:42:20.495+0000",
                    "started": "2021-12-09T17:42:20.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693435",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T19:08:42.047+0000",
                    "updated": "2021-12-09T19:08:42.047+0000",
                    "started": "2021-12-09T19:08:42.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693492",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#issuecomment-990143279\n\n\n   Benchmark runs are scheduled for baseline = 3ef40322dff954ecfb8754b394c2ca4de24a838b and contender = fdc344b2f520d6ed614b497ca52905673cad9d04. fdc344b2f520d6ed614b497ca52905673cad9d04 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/60fe7118140240d29cf845fb2033f859...e76d44981e2a433ab21ee2bc079d8357/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/feb0dbb1732046bcad2af3e816e98e59...7845c13232db4f63a5ef51b00922aa44/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/fe1bb3495aa24ea6b8909a52e7ab4846...bb6b77e97e57488b9301ecd4be7e95e0/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T19:11:07.905+0000",
                    "updated": "2021-12-09T19:11:07.905+0000",
                    "started": "2021-12-09T19:11:07.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693494",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/693504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#issuecomment-990143279\n\n\n   Benchmark runs are scheduled for baseline = 3ef40322dff954ecfb8754b394c2ca4de24a838b and contender = fdc344b2f520d6ed614b497ca52905673cad9d04. fdc344b2f520d6ed614b497ca52905673cad9d04 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/60fe7118140240d29cf845fb2033f859...e76d44981e2a433ab21ee2bc079d8357/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/feb0dbb1732046bcad2af3e816e98e59...7845c13232db4f63a5ef51b00922aa44/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/fe1bb3495aa24ea6b8909a52e7ab4846...bb6b77e97e57488b9301ecd4be7e95e0/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T19:21:19.243+0000",
                    "updated": "2021-12-09T19:21:19.243+0000",
                    "started": "2021-12-09T19:21:19.243+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693504",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/695865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#issuecomment-990143279\n\n\n   Benchmark runs are scheduled for baseline = 3ef40322dff954ecfb8754b394c2ca4de24a838b and contender = fdc344b2f520d6ed614b497ca52905673cad9d04. fdc344b2f520d6ed614b497ca52905673cad9d04 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/60fe7118140240d29cf845fb2033f859...e76d44981e2a433ab21ee2bc079d8357/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/feb0dbb1732046bcad2af3e816e98e59...7845c13232db4f63a5ef51b00922aa44/)\n   [Finished :arrow_down:0.18% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/fe1bb3495aa24ea6b8909a52e7ab4846...bb6b77e97e57488b9301ecd4be7e95e0/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T15:01:17.045+0000",
                    "updated": "2021-12-14T15:01:17.045+0000",
                    "started": "2021-12-14T15:01:17.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695865",
                    "issueId": "13414410"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/worklog/696260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11890:\nURL: https://github.com/apache/arrow/pull/11890#issuecomment-990143279\n\n\n   Benchmark runs are scheduled for baseline = 3ef40322dff954ecfb8754b394c2ca4de24a838b and contender = fdc344b2f520d6ed614b497ca52905673cad9d04. fdc344b2f520d6ed614b497ca52905673cad9d04 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/60fe7118140240d29cf845fb2033f859...e76d44981e2a433ab21ee2bc079d8357/)\n   [Failed :arrow_down:0.45% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/feb0dbb1732046bcad2af3e816e98e59...7845c13232db4f63a5ef51b00922aa44/)\n   [Finished :arrow_down:0.18% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/fe1bb3495aa24ea6b8909a52e7ab4846...bb6b77e97e57488b9301ecd4be7e95e0/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-15T00:31:39.404+0000",
                    "updated": "2021-12-15T00:31:39.404+0000",
                    "started": "2021-12-15T00:31:39.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "696260",
                    "issueId": "13414410"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@59216366[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@548cbfca[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73cf2498[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@420cb7c4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28ef6063[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@339f8fe6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@397e86e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1e6ba495[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d542343[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@27b75b0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fffe2d8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@c73a8be[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Dec 09 19:08:32 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-09T19:08:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14916/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-11-30T00:35:27.000+0000",
        "updated": "2021-12-15T00:31:40.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement GcsFileSystem::DeleteDir",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414410/comment/17456684",
                    "id": "17456684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11890\n[https://github.com/apache/arrow/pull/11890]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-09T19:08:32.435+0000",
                    "updated": "2021-12-09T19:08:32.435+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0x6q0:",
        "customfield_12314139": null
    }
}