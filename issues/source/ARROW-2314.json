{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13145348",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13145348",
    "key": "ARROW-2314",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2314/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@23ea8cb6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48ee8918[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@718e9f95[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4d946ef5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@435b79d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@74fc45de[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@710b1ee3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1f0635f1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78b4a38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@114f3da2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@389ad56e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@169dd631[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Apr 21 14:36:36 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-21T14:36:36.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2314/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-03-15T11:43:27.000+0000",
        "updated": "2018-04-21T14:36:36.000+0000",
        "timeoriginalestimate": null,
        "description": "{code:python}\r\n>>> a = pa.UnionArray.from_sparse(pa.array([0,1,1], type=pa.int8()), [pa.array([\"a\", \"b\", \"c\"]), pa.array([2,3,4])])\r\n>>> a\r\n<pyarrow.lib.UnionArray object at 0x7fe9381304a8>\r\n[\r\n  'a',\r\n  3,\r\n  4\r\n]\r\n>>> a[1:]\r\n<pyarrow.lib.UnionArray object at 0x7fe939409598>\r\n[\r\n  2,\r\n  3\r\n]\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Union array slicing is defective",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13145348/comment/16400814",
                    "id": "16400814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1757: [WIP] ARROW-2314: [C++/Python] Fix union array slicing\nURL: https://github.com/apache/arrow/pull/1757\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-15T17:42:55.912+0000",
                    "updated": "2018-03-15T17:42:55.912+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13145348/comment/16400818",
                    "id": "16400818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1757: [WIP] ARROW-2314: [C++/Python] Fix union array slicing\nURL: https://github.com/apache/arrow/pull/1757#discussion_r174871564\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -409,7 +409,7 @@ class RecordBatchSerializer : public ArrayVisitor {\n \n       // Allocate an array of child offsets. Set all to -1 to indicate that we\n       // haven't observed a first occurrence of a particular child yet\n-      std::vector<int32_t> child_offsets(max_code + 1);\n+      std::vector<int32_t> child_offsets(max_code + 1, -1);\n \n Review comment:\n   Note these are unrelated logic fixes I spotted while reading this code (this is the path for dense unions).\r\n   If desired I can separate those changes into a separate PR. In any case, it needs validating by a reviewer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-15T17:44:20.522+0000",
                    "updated": "2018-03-15T17:44:20.522+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13145348/comment/16446833",
                    "id": "16446833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1757: ARROW-2314: [C++/Python] Fix union array slicing\nURL: https://github.com/apache/arrow/pull/1757\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex 80d64c8712..861b8dfacc 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -465,7 +465,16 @@ Status UnionArray::MakeSparse(const Array& type_ids,\n \n std::shared_ptr<Array> UnionArray::child(int i) const {\n   if (!boxed_fields_[i]) {\n-    boxed_fields_[i] = MakeArray(data_->child_data[i]);\n+    std::shared_ptr<ArrayData> child_data = data_->child_data[i];\n+    if (mode() == UnionMode::SPARSE) {\n+      // Sparse union: need to adjust child if union is sliced\n+      // (for dense unions, the need to lookup through the offsets\n+      //  makes this unnecessary)\n+      if (data_->offset != 0 || child_data->length > data_->length) {\n+        child_data = SliceData(*child_data.get(), data_->offset, data_->length);\n+      }\n+    }\n+    boxed_fields_[i] = MakeArray(child_data);\n   }\n   DCHECK(boxed_fields_[i]);\n   return boxed_fields_[i];\ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex 07e7a13252..d66e849be3 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -674,6 +674,10 @@ class ARROW_EXPORT UnionArray : public Array {\n \n   UnionMode::type mode() const { return static_cast<const UnionType&>(*type()).mode(); }\n \n+  // Return the given field as an individual array.\n+  // For sparse unions, the returned array has its offset, length and null\n+  // count adjusted.\n+  // For dense unions, the returned array is unchanged.\n   std::shared_ptr<Array> child(int pos) const;\n \n   /// Only use this while the UnionArray is in scope\ndiff --git a/cpp/src/arrow/compare.cc b/cpp/src/arrow/compare.cc\nindex 002d4b8520..b7b93130c4 100644\n--- a/cpp/src/arrow/compare.cc\n+++ b/cpp/src/arrow/compare.cc\n@@ -189,15 +189,10 @@ class RangeEqualsVisitor {\n       id = left_ids[i];\n       child_num = type_id_to_child_num[id];\n \n-      const int64_t left_abs_index = i + left.offset();\n-      const int64_t right_abs_index = o_i + right.offset();\n-\n       // TODO(wesm): really we should be comparing stretches of non-null data\n       // rather than looking at one value at a time.\n       if (union_mode == UnionMode::SPARSE) {\n-        if (!left.child(child_num)->RangeEquals(left_abs_index, left_abs_index + 1,\n-                                                right_abs_index,\n-                                                right.child(child_num))) {\n+        if (!left.child(child_num)->RangeEquals(i, i + 1, o_i, right.child(child_num))) {\n           return false;\n         }\n       } else {\ndiff --git a/cpp/src/arrow/ipc/writer.cc b/cpp/src/arrow/ipc/writer.cc\nindex 86f2ed1d68..cdb3399954 100644\n--- a/cpp/src/arrow/ipc/writer.cc\n+++ b/cpp/src/arrow/ipc/writer.cc\n@@ -409,7 +409,7 @@ class RecordBatchSerializer : public ArrayVisitor {\n \n       // Allocate an array of child offsets. Set all to -1 to indicate that we\n       // haven't observed a first occurrence of a particular child yet\n-      std::vector<int32_t> child_offsets(max_code + 1);\n+      std::vector<int32_t> child_offsets(max_code + 1, -1);\n       std::vector<int32_t> child_lengths(max_code + 1, 0);\n \n       if (offset != 0) {\n@@ -427,16 +427,23 @@ class RecordBatchSerializer : public ArrayVisitor {\n         int32_t* shifted_offsets =\n             reinterpret_cast<int32_t*>(shifted_offsets_buffer->mutable_data());\n \n+        // Offsets may not be ascending, so we need to find out the start offset\n+        // for each child\n         for (int64_t i = 0; i < length; ++i) {\n           const uint8_t code = type_ids[i];\n-          int32_t shift = child_offsets[code];\n-          if (shift == -1) {\n-            child_offsets[code] = shift = unshifted_offsets[i];\n+          if (child_offsets[code] == -1) {\n+            child_offsets[code] = unshifted_offsets[i];\n+          } else {\n+            child_offsets[code] = std::min(child_offsets[code], unshifted_offsets[i]);\n           }\n-          shifted_offsets[i] = unshifted_offsets[i] - shift;\n+        }\n \n+        // Now compute shifted offsets by subtracting child offset\n+        for (int64_t i = 0; i < length; ++i) {\n+          const uint8_t code = type_ids[i];\n+          shifted_offsets[i] = unshifted_offsets[i] - child_offsets[code];\n           // Update the child length to account for observed value\n-          ++child_lengths[code];\n+          child_lengths[code] = std::max(child_lengths[code], shifted_offsets[i] + 1);\n         }\n \n         value_offsets = shifted_offsets_buffer;\n@@ -449,24 +456,25 @@ class RecordBatchSerializer : public ArrayVisitor {\n \n         // TODO: ARROW-809, for sliced unions, tricky to know how much to\n         // truncate the children. For now, we are truncating the children to be\n-        // no longer than the parent union\n-        const uint8_t code = type.type_codes()[i];\n-        const int64_t child_length = child_lengths[code];\n-        if (offset != 0 || length < child_length) {\n-          child = child->Slice(child_offsets[code], std::min(length, child_length));\n+        // no longer than the parent union.\n+        if (offset != 0) {\n+          const uint8_t code = type.type_codes()[i];\n+          const int64_t child_offset = child_offsets[code];\n+          const int64_t child_length = child_lengths[code];\n+\n+          if (child_offset > 0) {\n+            child = child->Slice(child_offset, child_length);\n+          } else if (child_length < child->length()) {\n+            // This case includes when child is not encountered at all\n+            child = child->Slice(0, child_length);\n+          }\n         }\n         RETURN_NOT_OK(VisitArray(*child));\n       }\n     } else {\n       for (int i = 0; i < array.num_fields(); ++i) {\n-        std::shared_ptr<Array> child = array.child(i);\n-\n-        // Sparse union, slicing is simpler\n-        if (offset != 0 || length < child->length()) {\n-          // If offset is non-zero, slice the child array\n-          child = child->Slice(offset, length);\n-        }\n-        RETURN_NOT_OK(VisitArray(*child));\n+        // Sparse union, slicing is done for us by child()\n+        RETURN_NOT_OK(VisitArray(*array.child(i)));\n       }\n     }\n     ++max_recursion_depth_;\ndiff --git a/python/pyarrow/tests/test_array.py b/python/pyarrow/tests/test_array.py\nindex 4a441fb97f..cf33aaa530 100644\n--- a/python/pyarrow/tests/test_array.py\n+++ b/python/pyarrow/tests/test_array.py\n@@ -333,6 +333,25 @@ def test_union_from_sparse():\n     assert result.to_pylist() == [b'a', 1, b'b', b'c', 2, 3, b'd']\n \n \n+def test_union_array_slice():\n+    # ARROW-2314\n+    arr = pa.UnionArray.from_sparse(pa.array([0, 0, 1, 1], type=pa.int8()),\n+                                    [pa.array([\"a\", \"b\", \"c\", \"d\"]),\n+                                     pa.array([1, 2, 3, 4])])\n+    assert arr[1:].to_pylist() == [\"b\", 3, 4]\n+\n+    binary = pa.array([b'a', b'b', b'c', b'd'], type='binary')\n+    int64 = pa.array([1, 2, 3], type='int64')\n+    types = pa.array([0, 1, 0, 0, 1, 1, 0], type='int8')\n+    value_offsets = pa.array([0, 0, 2, 1, 1, 2, 3], type='int32')\n+\n+    arr = pa.UnionArray.from_dense(types, value_offsets, [binary, int64])\n+    lst = arr.to_pylist()\n+    for i in range(len(arr)):\n+        for j in range(i, len(arr)):\n+            assert arr[i:j].to_pylist() == lst[i:j]\n+\n+\n def test_string_from_buffers():\n     array = pa.array([\"a\", None, \"b\", \"c\"])\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T14:36:35.190+0000",
                    "updated": "2018-04-21T14:36:35.190+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13145348/comment/16446834",
                    "id": "16446834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1757\n[https://github.com/apache/arrow/pull/1757]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-04-21T14:36:36.610+0000",
                    "updated": "2018-04-21T14:36:36.610+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3rc9j:",
        "customfield_12314139": null
    }
}