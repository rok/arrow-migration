{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13254320",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320",
    "key": "ARROW-6420",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/7",
            "id": "7",
            "description": "Later",
            "name": "Later"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6420/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/305398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256\n \n \n   Getting the underlying vector is a frequent opertation for UnionVector. It relies on this operation to get/set data at each index.\r\n   \r\n   The current implementation is inefficient. In particular, it first gets the minor type at the given index, and then compares it against all possible minor types in a switch statment, until a match is found.\r\n   \r\n   We improve the performance by storing the internal vectors in an array, whose index is the ordinal of the minor type. So given a minor type, its corresponding underlying vector can be obtained in O(1) time.\r\n   \r\n   It should be noted that this technique is also applicable to UnionReader and UnionWriter, and support for UnionReader is already implemented.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-03T04:31:52.131+0000",
                    "updated": "2019-09-03T04:31:52.131+0000",
                    "started": "2019-09-03T04:31:52.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "305398",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/305424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-527331486\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=h1) Report\n   > Merging [#5256](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/ab908cc0486d7daf643d1a1418328566f24c403b?src=pr&el=desc) will **increase** coverage by `2.03%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5256/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5256      +/-   ##\n   ==========================================\n   + Coverage   87.65%   89.68%   +2.03%     \n   ==========================================\n     Files        1033      693     -340     \n     Lines      148850   104250   -44600     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       130471    93501   -36970     \n   + Misses      18017    10749    -7268     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [331 more](https://codecov.io/gh/apache/arrow/pull/5256/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=footer). Last update [ab908cc...f706d83](https://codecov.io/gh/apache/arrow/pull/5256?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-03T07:00:33.036+0000",
                    "updated": "2019-09-03T07:00:33.036+0000",
                    "started": "2019-09-03T07:00:33.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "305424",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/308300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-529072528\n \n \n   > Usually switches act as [jumps](https://www.geeksforgeeks.org/switch-vs-else/) not scans.\r\n   > \r\n   > The change in writers actually can make performance worse because it needs to scan through the entire array instead of just active writers.\r\n   > \r\n   > I'm skeptical is worth it, but, at the very least I think we need a benchmark to understand how much this does help.\r\n   \r\n   Sure I will provide performance benchmark to verify it. \r\n   \r\n   It should be noted that the proposed method does not scan through the entire array. It just calculates the index and access the element directly. (Maybe I don't fully understand your point?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T04:46:34.145+0000",
                    "updated": "2019-09-07T04:46:34.145+0000",
                    "started": "2019-09-07T04:46:34.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308300",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/309503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-529748153\n \n \n   > It should be noted that the proposed method does not scan through the entire array. \r\n   \r\n   I was referring to setPosition.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T03:01:04.249+0000",
                    "updated": "2019-09-10T03:01:04.249+0000",
                    "started": "2019-09-10T03:01:04.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309503",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/309517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-529762206\n \n \n   > > It should be noted that the proposed method does not scan through the entire array.\r\n   > \r\n   > I was referring to setPosition.\r\n   \r\n   You mean the extra if statement could make the setPosition method slower, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T04:18:16.945+0000",
                    "updated": "2019-09-10T04:18:16.945+0000",
                    "started": "2019-09-10T04:18:16.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309517",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/309518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-529762536\n \n \n   @emkornfield I have provided the benchmark as you suggested.\r\n   Results show that by checking and returning non-null vectors at the beginning, the performance improves 2+ times:\r\n   \r\n   Before:\r\n   UnionBenchmarks.getObjectBenchmark  avgt    5  34.578 \u00b1 0.349  ns/op\r\n   \r\n   After:\r\n   UnionBenchmarks.getObjectBenchmark  avgt    5  16.556 \u00b1 0.577  ns/op\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T04:20:12.433+0000",
                    "updated": "2019-09-10T04:20:12.433+0000",
                    "started": "2019-09-10T04:20:12.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309518",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/309520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-529763074\n \n \n   @emkornfield It is interesting to note that, JIT translated switch statement as a number of jumps, so it also amounts to a series of if statements:\r\n   \r\n   ![image](https://user-images.githubusercontent.com/42827532/64583956-a6aec380-d3c5-11e9-834a-eb4fa1194b54.png)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T04:22:40.843+0000",
                    "updated": "2019-09-10T04:22:40.843+0000",
                    "started": "2019-09-10T04:22:40.843+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309520",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/311197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#discussion_r323570534\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/complex/UnionBenchmarks.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.holders.NullableFloat8Holder;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class UnionBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private UnionVector vector;\n+\n+  private NullableFloat8Holder valueHolder = new NullableFloat8Holder();\n+\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = UnionVector.empty(\"vector\", allocator);\n+    vector.allocateNew();\n+    vector.setValueCount(VECTOR_LENGTH);\n+\n+\n+    valueHolder.isSet = 1;\n+    valueHolder.value = 100.0;\n+\n+    vector.setSafe(0, valueHolder);\n+  }\n+\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public Object getObjectBenchmark() {\n+    return vector.getObject(0);\n \n Review comment:\n   why getObject instead of getVector?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T06:15:15.798+0000",
                    "updated": "2019-09-12T06:15:15.798+0000",
                    "started": "2019-09-12T06:15:15.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311197",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/311198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-530682244\n \n \n   Thanks @liyafan82 for the benchmark.  This is a little surprising, I'm still not sure about the change.  CC @jacques-n for his input.\r\n   \r\n   > You mean the extra if statement could make the setPosition method slower, right?\r\n   If I understand the code correctly its not the if-statement.  With the next code every MinorType needs to be iterated over instead of just those added to the writer.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T06:17:29.434+0000",
                    "updated": "2019-09-12T06:17:29.434+0000",
                    "started": "2019-09-12T06:17:29.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311198",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/311199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-530682244\n \n \n   Thanks @liyafan82 for the benchmark.  This is a little surprising, I'm still not sure about the change.  CC @jacques-n for his input.\r\n   \r\n   > You mean the extra if statement could make the setPosition method slower, right?\r\n   \r\n   If I understand the code correctly its not the if-statement.  With the next code every MinorType needs to be iterated over instead of just those added to the writer.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T06:17:45.754+0000",
                    "updated": "2019-09-12T06:17:45.754+0000",
                    "started": "2019-09-12T06:17:45.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311199",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/311211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#discussion_r323574888\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/complex/UnionBenchmarks.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.holders.NullableFloat8Holder;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class UnionBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private UnionVector vector;\n+\n+  private NullableFloat8Holder valueHolder = new NullableFloat8Holder();\n+\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = UnionVector.empty(\"vector\", allocator);\n+    vector.allocateNew();\n+    vector.setValueCount(VECTOR_LENGTH);\n+\n+\n+    valueHolder.isSet = 1;\n+    valueHolder.value = 100.0;\n+\n+    vector.setSafe(0, valueHolder);\n+  }\n+\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public Object getObjectBenchmark() {\n+    return vector.getObject(0);\n \n Review comment:\n   getVector is not public in the current code base\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T06:32:47.837+0000",
                    "updated": "2019-09-12T06:32:47.837+0000",
                    "started": "2019-09-12T06:32:47.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311211",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/311219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-530691145\n \n \n   > Thanks @liyafan82 for the benchmark. This is a little surprising, I'm still not sure about the change. CC @jacques-n for his input.\r\n   > \r\n   > > You mean the extra if statement could make the setPosition method slower, right?\r\n   > \r\n   > If I understand the code correctly its not the if-statement. With the next code every MinorType needs to be iterated over instead of just those added to the writer.\r\n   \r\n   @emkornfield Let's discuss over the generated code shown below:\r\n   \r\n   BaseWriter getWriter(MinorType minorType) {\r\n       if (writers[minorType.ordinal()] != null) {\r\n         return writers[minorType.ordinal()];\r\n       }\r\n       switch (minorType) {\r\n       case STRUCT:\r\n         return getStructWriter();\r\n       case LIST:\r\n         return getListWriter();\r\n       case TINYINT:\r\n         return getTinyIntWriter();\r\n       case UINT1:\r\n         return getUInt1Writer();\r\n       case UINT2:\r\n         return getUInt2Writer();\r\n       case SMALLINT:\r\n         return getSmallIntWriter();\r\n   ...\r\n   }\r\n   \r\n   If a writer is not added to the writers array, the if statement evaluates to false, and the switch statement is run. During the process, the new writer is created and added to the array. So next time when the method is called, the if statements evaluates to true, and returns the corresponding writer immediately.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T06:50:31.938+0000",
                    "updated": "2019-09-12T06:50:31.938+0000",
                    "started": "2019-09-12T06:50:31.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311219",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/313483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-532059184\n \n \n   For setPosition, if I am reading correctly. Suppose there is only 2 writers.  Before the code looked like this when the loop is unrolled:\r\n   \r\n   ```\r\n   writers.get(0).setPosition(0);\r\n   writers.get(1).setPosition(0);\r\n   ```\r\n   \r\n   With the new code I believe it looks like this:\r\n   ```\r\n   if (writers[0] != null) {\r\n     writers[0].setPosition(0);\r\n   } \r\n   if (writers[1] != null) {\r\n     writes[1].setPosition(0);\r\n   } \r\n   if (writers[2] != null) {\r\n      writes[2].setPosition(0);\r\n   }\r\n   if (writers[3] != null) {\r\n     writers[3].setPosition(0);\r\n   }\r\n   if (writers[4] != null) {\r\n     writers[4].setPosition(0);\r\n   }   \r\n   ...\r\n   if (writers[49] != null) {\r\n     writers[4].setPosition(0);\r\n   }  \r\n   ```\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-17T05:00:07.301+0000",
                    "updated": "2019-09-17T05:00:07.301+0000",
                    "started": "2019-09-17T05:00:07.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "313483",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/313667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-532199917\n \n \n   > For setPosition, if I am reading correctly. Suppose there is only 2 writers. Before the code looked like this when the loop is unrolled:\r\n   > \r\n   > ```\r\n   > writers.get(0).setPosition(0);\r\n   > writers.get(1).setPosition(0);\r\n   > ```\r\n   > \r\n   > With the new code I believe it looks like this:\r\n   > \r\n   > ```\r\n   > if (writers[0] != null) {\r\n   >   writers[0].setPosition(0);\r\n   > } \r\n   > if (writers[1] != null) {\r\n   >   writes[1].setPosition(0);\r\n   > } \r\n   > if (writers[2] != null) {\r\n   >    writes[2].setPosition(0);\r\n   > }\r\n   > if (writers[3] != null) {\r\n   >   writers[3].setPosition(0);\r\n   > }\r\n   > if (writers[4] != null) {\r\n   >   writers[4].setPosition(0);\r\n   > }   \r\n   > ...\r\n   > if (writers[49] != null) {\r\n   >   writers[4].setPosition(0);\r\n   > }  \r\n   > ```\r\n   \r\n   @emkornfield \r\n   I see your good point. Thanks.\r\n   This is definitely going to have performance overhead.\r\n   I have revised the code to preserve the writer list. Please take a look.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-17T12:32:49.653+0000",
                    "updated": "2019-09-17T12:32:49.653+0000",
                    "started": "2019-09-17T12:32:49.653+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "313667",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/333052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-545731928\n \n \n   @jacques-n any thoughts here?  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T03:54:42.682+0000",
                    "updated": "2019-10-24T03:54:42.682+0000",
                    "started": "2019-10-24T03:54:42.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333052",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/342376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-553212505\n \n \n   @emkornfield @jacques-n dear sirs, would you please give another look at this?\r\n   \r\n   Since it has been a long time since this PR was opened, please allow me to re-summarize it here. \r\n   \r\n   For UnionVector, a common operation is getting the underlying vector for each slot. All get/set methods for all data types involve this operation. \r\n   \r\n   We improve the performance of getting the underlying vector:\r\n   \r\n   * The previous implementation: compare the type code against each minor type, and select the correct underlying vector.\r\n   * We save all underlying vectors into an array, which is indexed by the ordinal of the minor type, so we can find a vector directly given a type code.\r\n   \r\n   IMO, this improvement is important, because it affects the performance of all key operations of UnionVector (all getXXX, setXXX methods), which will make code that uses UnionVector more efficient.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-13T02:43:04.888+0000",
                    "updated": "2019-11-13T02:43:04.888+0000",
                    "started": "2019-11-13T02:43:04.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "342376",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/369236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on issue #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256#issuecomment-572691163\n \n \n   I think this change extends/builds on top of problems within the sparse union implementation. We should address that before adding more structures built on this. For now, I'm rejecting this change.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T18:29:07.415+0000",
                    "updated": "2020-01-09T18:29:07.415+0000",
                    "started": "2020-01-09T18:29:07.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369236",
                    "issueId": "13254320"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254320/worklog/369237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #5256: ARROW-6420: [Java] Improve the performance of UnionVector when getting underlying vectors\nURL: https://github.com/apache/arrow/pull/5256\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T18:29:07.773+0000",
                    "updated": "2020-01-09T18:29:07.773+0000",
                    "started": "2020-01-09T18:29:07.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369237",
                    "issueId": "13254320"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@361deb5f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77049a76[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e16802f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7d1268b1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@653ce8c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5451e2bf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e5c17e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@20e5b978[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@229d2f4c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@798275ba[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@574f9e6f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5a6cc387[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "2019-09-03 04:26:28.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-13T01:25:36.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6420/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-09-03T04:26:28.000+0000",
        "updated": "2020-02-13T01:25:36.000+0000",
        "timeoriginalestimate": null,
        "description": "Getting the underlying vector is a frequent opertation for UnionVector. It relies on this operation to get/set data at each index.\r\n\r\nThe current implementation is inefficient. In particular, it first gets the minor type at the given index, and then compares it against all possible minor types in a switch statment, until a match is found.\r\n\r\nWe improve the performance by storing the internal vectors in an array, whose index is the ordinal of the minor type. So given a minor type, its corresponding underlying vector can be obtained in O(1) time.\r\n\r\nIt should be noted that this technique is also applicable to UnionReader and UnionWriter, and support for UnionReader is already implemented.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Improve the performance of UnionVector when getting underlying vectors",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z069g8:",
        "customfield_12314139": null
    }
}