{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13372712",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712",
    "key": "ARROW-12411",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12411/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/583812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb opened a new pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063\n\n\n   # Purpose\r\n   \r\n   This PR is a draft for comment / review. If people generally like this idea, I will polish up this PR with doc examples / comments and more test for real review.\r\n   \r\n   # Rationle / Usecase:\r\n   \r\n   While writing tests (both in IOx and in DataFusion) where I need a single `RecordBatch`, I often find myself doing something like this (copied directly from IOx source code):\r\n   \r\n   ```rust\r\n   let schema = Arc::new(Schema::new(vec![\r\n       ArrowField::new(\"float_field\", ArrowDataType::Float64, true),\r\n       ArrowField::new(\"time\", ArrowDataType::Int64, true),\r\n   ]));\r\n   \r\n   let float_array: ArrayRef = Arc::new(Float64Array::from(vec![10.1, 20.1, 30.1, 40.1]));\r\n   let timestamp_array: ArrayRef = Arc::new(Int64Array::from(vec![1000, 2000, 3000, 4000]));\r\n   \r\n   let batch = RecordBatch::try_new(schema, vec![float_array, timestamp_array])\r\n       .expect(\"created new record batch\");\r\n   ```\r\n   \r\n   This is annoying because I have to redundantly (and verbosely) encode the information that `float_field` is a Float64 both in the `Schema` and the `Float64Array`\r\n   \r\n   I would much rather  be able to construct `RecordBatches` using a more Rust like style to avoid the the redundancy and reduce the amount of typing / redundancy:\r\n   \r\n   \r\n   # Proposal:\r\n   \r\n   Add `RecordBatch::append` so the following syntax can be supported:\r\n   \r\n   \r\n   ```rust\r\n   let float_array: ArrayRef = Arc::new(Float64Array::from(vec![10.1, 20.1, 30.1, 40.1]));\r\n   let timestamp_array: ArrayRef = Arc::new(Int64Array::from(vec![1000, 2000, 3000, 4000]));\r\n   \r\n   let batch = RecordBatch::empty()\r\n     .append(\"float_field\", timestamp_array).unwrap()\r\n     .append(\"time\", float_array).unwrap;\r\n   \r\n   ```\r\n   \r\n   # Existing APIs\r\n   The existing APIs to create a `RecordBatch` from a `Schema` and `Vec<ArrayRef>` would not be changed as there are plenty of use cases where the Schema is known up front and should not be checked each time.\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T20:48:42.733+0000",
                    "updated": "2021-04-15T20:48:42.733+0000",
                    "started": "2021-04-15T20:48:42.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583812",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/583813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-820720970\n\n\n   https://issues.apache.org/jira/browse/ARROW-12411\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T20:49:06.101+0000",
                    "updated": "2021-04-15T20:49:06.101+0000",
                    "started": "2021-04-15T20:49:06.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583813",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/583814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-820721258\n\n\n   FYI @nevi-me  @jorgecarleitao @andygrove @returnString @Dandandan @ritchie46 \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T20:49:40.834+0000",
                    "updated": "2021-04-15T20:49:40.834+0000",
                    "started": "2021-04-15T20:49:40.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583814",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/583869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#discussion_r614416779\n\n\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n+        Self {\n+            schema: Arc::new(Schema::empty()),\n+            columns: Vec::new(),\n+        }\n+    }\n+\n+    /// Appends the `field_array` array to this `RecordBatch` as a\n+    /// field named `field_name`.\n+    ///\n+    /// TODO: code example\n+    ///\n+    /// TODO: on error, can we return `Self` in some meaningful way?\n+    pub fn append(self, field_name: &str, field_values: ArrayRef) -> Result<Self> {\n+        if let Some(col) = self.columns.get(0) {\n+            if col.len() != field_values.len() {\n+                return Err(ArrowError::InvalidArgumentError(\n+                    format!(\"all columns in a record batch must have the same length. expected {}, field {} had {} \",\n+                            col.len(), field_name, field_values.len())\n+                ));\n+            }\n+        }\n+\n+        let Self {\n+            schema,\n+            mut columns,\n+        } = self;\n+\n+        // modify the schema we have if possible, otherwise copy\n+        let mut schema = match Arc::try_unwrap(schema) {\n+            Ok(schema) => schema,\n+            Err(shared_schema) => shared_schema.as_ref().clone(),\n+        };\n+\n+        let nullable = field_values.null_count() > 0;\n\nReview comment:\n       There's a limitation here. If the purpose is to create a single record batch, and that batch is used alone through its lifetime, then this is fine; otherwise we might need to take a `nullable` parameter.\r\n   \r\n   In any case, I think that if someone uses this to create individual record batches, it'd be inefficient.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T21:57:24.248+0000",
                    "updated": "2021-04-15T21:57:24.248+0000",
                    "started": "2021-04-15T21:57:24.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583869",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/583877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#discussion_r614422348\n\n\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n+        Self {\n+            schema: Arc::new(Schema::empty()),\n+            columns: Vec::new(),\n+        }\n+    }\n+\n+    /// Appends the `field_array` array to this `RecordBatch` as a\n+    /// field named `field_name`.\n+    ///\n+    /// TODO: code example\n+    ///\n+    /// TODO: on error, can we return `Self` in some meaningful way?\n+    pub fn append(self, field_name: &str, field_values: ArrayRef) -> Result<Self> {\n\nReview comment:\n       Given that `ArrayRef` is backed by an `Arc`, how about taking it by reference then cloning it?\r\n   \r\n   Am I correct that if this errors, the underlying `ArrayRef` could get dropped if it's not a clone in itself?\r\n   Something like:\r\n   \r\n   ```rust\r\n   let array = Int32Array::from(vec![1, 2, 3]);\r\n   let array_ref = Arc::new(array);\r\n   \r\n   // append to existing batch\r\n   let mut batch = ...;\r\n   // assume that this fails, does array_ref get dropped as we no longer have references to it?\r\n   batch = batch.append(\"ints\", array_ref)?;\r\n   ```\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n\nReview comment:\n       I think it's worthwhile to maintain the property that a recordbatch is ummutable. So, this feels a bit out of place for me.\r\n   \r\n   How about we create a builder that takes an iterator of `(&str, ArrayRef)` instead?\r\n   \r\n   The below is what I mean by out of place\r\n   \r\n   ```rust\r\n   let mut batch = read_batch_from_somewhere()?;\r\n   batch = batch.append(\"field\", array_ref)?;\r\n   ```\r\n   \r\n   There might be a benefit in having the above, so I'm open to convincing :)\r\n   This could partially address your question on the TODO about returning `Self` on error\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T22:11:50.456+0000",
                    "updated": "2021-04-15T22:11:50.456+0000",
                    "started": "2021-04-15T22:11:50.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583877",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#discussion_r614746235\n\n\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n+        Self {\n+            schema: Arc::new(Schema::empty()),\n+            columns: Vec::new(),\n+        }\n+    }\n+\n+    /// Appends the `field_array` array to this `RecordBatch` as a\n+    /// field named `field_name`.\n+    ///\n+    /// TODO: code example\n+    ///\n+    /// TODO: on error, can we return `Self` in some meaningful way?\n+    pub fn append(self, field_name: &str, field_values: ArrayRef) -> Result<Self> {\n+        if let Some(col) = self.columns.get(0) {\n+            if col.len() != field_values.len() {\n+                return Err(ArrowError::InvalidArgumentError(\n+                    format!(\"all columns in a record batch must have the same length. expected {}, field {} had {} \",\n+                            col.len(), field_name, field_values.len())\n+                ));\n+            }\n+        }\n+\n+        let Self {\n+            schema,\n+            mut columns,\n+        } = self;\n+\n+        // modify the schema we have if possible, otherwise copy\n+        let mut schema = match Arc::try_unwrap(schema) {\n+            Ok(schema) => schema,\n+            Err(shared_schema) => shared_schema.as_ref().clone(),\n+        };\n+\n+        let nullable = field_values.null_count() > 0;\n\nReview comment:\n       I agree this would be an important point to clarify in the comments. If you are creating more than one `RecordBatch` you should use the existing api to create the `RecordBatch` from a `Schema` and `Vec<ArrayRef>`\r\n   \r\n   If you are creating a single one then this is more convenient\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T10:50:28.066+0000",
                    "updated": "2021-04-16T10:50:28.066+0000",
                    "started": "2021-04-16T10:50:28.066+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584204",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#discussion_r614747006\n\n\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n\nReview comment:\n       This makes sense @nevi-me  -- I think a separate `RecordBatchBuilder` sounds like a better idea to me. I'll wait a bit for feedback from others, and then give it a shot. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T10:52:01.439+0000",
                    "updated": "2021-04-16T10:52:01.439+0000",
                    "started": "2021-04-16T10:52:01.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584205",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#discussion_r614748391\n\n\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n+        Self {\n+            schema: Arc::new(Schema::empty()),\n+            columns: Vec::new(),\n+        }\n+    }\n+\n+    /// Appends the `field_array` array to this `RecordBatch` as a\n+    /// field named `field_name`.\n+    ///\n+    /// TODO: code example\n+    ///\n+    /// TODO: on error, can we return `Self` in some meaningful way?\n+    pub fn append(self, field_name: &str, field_values: ArrayRef) -> Result<Self> {\n\nReview comment:\n       I guess I was thinking we would leave the \"do I want to have access to the `ArrayRef` after the call to `append` up to the caller, \r\n   \r\n   So like\r\n   \r\n   ```\r\n   // append to existing batch\r\n   let mut batch = ...;\r\n   // We want to use array_ref later, so pass in a clone\r\n   batch = batch.append(\"ints\", Arc::clone(array_ref))?;\r\n   ```\r\n   \r\n   Which I think is a common pattern in the Rust libraries (that if a function needs to clone its argument, it takes it by value instead and thus gives the caller a chance to avoid an extra copy if they don't need the argument again)\r\n   \r\n   But in this case with an `Arc` that is cheap to clone I don't think the difference really matters from a performance perspective\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T10:54:46.573+0000",
                    "updated": "2021-04-16T10:54:46.573+0000",
                    "started": "2021-04-16T10:54:46.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584208",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-821093512\n\n\n   Thanks for the comments @nevi-me !\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T10:54:59.452+0000",
                    "updated": "2021-04-16T10:54:59.452+0000",
                    "started": "2021-04-16T10:54:59.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584209",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-821099974\n\n\n   Wouldn't the following work? (untested)\r\n   \r\n   ```rust\r\n   let batch: RecordBatch = (&StructArray::try_from(vec![\r\n       (\"a\", float_array),\r\n       (\"b\", timestamp_array),\r\n   ])?).into();\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T11:07:11.853+0000",
                    "updated": "2021-04-16T11:07:11.853+0000",
                    "started": "2021-04-16T11:07:11.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584211",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-821099974\n\n\n   Wouldn't the following work? (untested)\r\n   \r\n   ```rust\r\n   let batch: RecordBatch = (&StructArray::try_from(vec![\r\n       (\"a\", float_array),\r\n       (\"b\", timestamp_array),\r\n   ])?).into();\r\n   ```\r\n   \r\n   \r\n   If we do not want to use a `StructArray`, I would prefer that we have a constructor like this and thus keep the RecordBatch imutable.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T11:27:50.184+0000",
                    "updated": "2021-04-16T11:27:50.184+0000",
                    "started": "2021-04-16T11:27:50.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584219",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-821132897\n\n\n   > If we do not want to use a StructArray, I would prefer that we have a constructor like this and thus keep the RecordBatch imutable.\r\n   \r\n   \r\n   @jorgecarleitao  that is a really good idea. I learn something new every day! I think using a `StructArray` for creating `RecordBatch`es is confusing, but the `From` implementation is a great idea.  What would you feel about something like \r\n   \r\n   ```\r\n   let batch: RecordBatch = vec![\r\n       (\"a\", float_array),\r\n       (\"b\", timestamp_array),\r\n   ].into();\r\n   ```\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T12:15:41.425+0000",
                    "updated": "2021-04-16T12:15:41.425+0000",
                    "started": "2021-04-16T12:15:41.425+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584238",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#discussion_r614932667\n\n\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -245,6 +295,12 @@ impl RecordBatch {\n     }\n }\n \n+impl Default for RecordBatch {\n\nReview comment:\n       Not totally sure about this because it bypasses the invariants of `validate_new_batch` - it seems like we don't want to allow for 0-column record batches to exist. Might be an argument in favour of the `impl From` approach?\n\n##########\nFile path: rust/arrow/src/record_batch.rs\n##########\n@@ -103,6 +103,56 @@ impl RecordBatch {\n         RecordBatch { schema, columns }\n     }\n \n+    /// Creates a new [`RecordBatch`] with no columns\n+    ///\n+    /// TODO add an code example using `append`\n+    pub fn new() -> Self {\n+        Self {\n+            schema: Arc::new(Schema::empty()),\n+            columns: Vec::new(),\n+        }\n+    }\n+\n+    /// Appends the `field_array` array to this `RecordBatch` as a\n+    /// field named `field_name`.\n+    ///\n+    /// TODO: code example\n+    ///\n+    /// TODO: on error, can we return `Self` in some meaningful way?\n+    pub fn append(self, field_name: &str, field_values: ArrayRef) -> Result<Self> {\n+        if let Some(col) = self.columns.get(0) {\n+            if col.len() != field_values.len() {\n+                return Err(ArrowError::InvalidArgumentError(\n+                    format!(\"all columns in a record batch must have the same length. expected {}, field {} had {} \",\n+                            col.len(), field_name, field_values.len())\n+                ));\n+            }\n+        }\n+\n+        let Self {\n+            schema,\n+            mut columns,\n+        } = self;\n+\n+        // modify the schema we have if possible, otherwise copy\n+        let mut schema = match Arc::try_unwrap(schema) {\n+            Ok(schema) => schema,\n+            Err(shared_schema) => shared_schema.as_ref().clone(),\n+        };\n+\n+        let nullable = field_values.null_count() > 0;\n\nReview comment:\n       This isn't an area that I'm super-familiar with, but are there any existing methods or expectations around merging schemas that differ solely on nullability, e.g. merging two schemas together and inferring the nullability of each field by ORing the nullability on each side of the merge? So if _either_ schema declares the field as nullable, we take the resultant schema as nullable.\r\n   \r\n   If not, then I'd agree that we probably should keep this explicitly declared and not infer it here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T15:40:13.757+0000",
                    "updated": "2021-04-16T15:40:13.757+0000",
                    "started": "2021-04-16T15:40:13.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584314",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/584618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-821802258\n\n\n   > This isn't an area that I'm super-familiar with, but are there any existing methods or expectations around merging schemas that differ solely on nullability, e.g. merging two schemas together and inferring the nullability of each field by ORing the nullability on each side of the merge? So if either schema declares the field as nullable, we take the resultant schema as nullable.\r\n   \r\n   The only place I know about merging schema `Field`s is here:\r\n   https://github.com/apache/arrow/blob/2f3ed3ac4e8b62dd67b52213f1347bc3e050a781/rust/arrow/src/datatypes/field.rs#L485\r\n   \r\n   Which by my reading effectively does do an OR of `nullability). \r\n   \r\n   \r\n   > If not, then I'd agree that we probably should keep this explicitly declared and not infer it here.\r\n   \r\n   Given my usecase of \"make a single record batch from a known set of arrays\" I really would prefer to avoid having to include redundant information (nullability). \r\n   \r\n   However, given we are going to go with a `From` / `TryFrom` implementation I think that means we can also add something like\r\n   \r\n   ```rust\r\n   let batch: RecordBatch = vec![\r\n       (\"a\", float_array, false),\r\n       (\"b\", timestamp_array, true),\r\n   ].into();\r\n   ```\r\n   \r\n   Or similar to specifically specify the nullability. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-17T10:29:32.783+0000",
                    "updated": "2021-04-17T10:29:32.783+0000",
                    "started": "2021-04-17T10:29:32.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584618",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/585039",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-822358664\n\n\n   The Apache Arrow Rust community is moving the Rust implementation into its own dedicated github repositories [arrow-rs](https://github.com/apache/arrow-rs) and [arrow-datafusion](https://github.com/apache/arrow-datafusion). It is likely we will not merge this PR into this repository\r\n   \r\n   Please see the [mailing-list](https://lists.apache.org/thread.html/rce7c61cb3f703367dc00984530016e3fcb828e5a8035655fbcccf862%40%3Cdev.arrow.apache.org%3E) thread for more details\r\n   \r\n   We expect the process to take a few days and will follow up with a migration plan for the in-flight PRs.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T10:23:43.296+0000",
                    "updated": "2021-04-19T10:23:43.296+0000",
                    "started": "2021-04-19T10:23:43.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585039",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/585089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb opened a new pull request #7:\nURL: https://github.com/apache/arrow-rs/pull/7\n\n\n   (Here is a PR to the new arrow crate to see what how this process is working!)\r\n   \r\n   # Rationale / Usecase:\r\n   \r\n   While writing tests (both in IOx and in DataFusion) where I need a single `RecordBatch`, I often find myself doing something like this (copied directly from IOx source code):\r\n   \r\n   ```rust\r\n   let schema = Arc::new(Schema::new(vec![\r\n       ArrowField::new(\"float_field\", ArrowDataType::Float64, true),\r\n       ArrowField::new(\"time\", ArrowDataType::Int64, true),\r\n   ]));\r\n   \r\n   let float_array: ArrayRef = Arc::new(Float64Array::from(vec![10.1, 20.1, 30.1, 40.1]));\r\n   let timestamp_array: ArrayRef = Arc::new(Int64Array::from(vec![1000, 2000, 3000, 4000]));\r\n   \r\n   let batch = RecordBatch::try_new(schema, vec![float_array, timestamp_array])\r\n       .expect(\"created new record batch\");\r\n   ```\r\n   \r\n   This is annoying because I have to redundantly (and verbosely) encode the information that `float_field` is a Float64 both in the `Schema` and the `Float64Array`\r\n   \r\n   I would much rather  be able to construct `RecordBatches` using a more Rust like style to avoid the the redundancy and reduce the amount of typing / redundancy:\r\n   \r\n   # Proposed Change\r\n   As suggested in the comments from @returnString @nevi-me @jorgecarleitao in the draft PR: https://github.com/apache/arrow/pull/10063 add `try_from_iter` and `try_iter_with_null` functions\r\n   \r\n   ```rust\r\n   let record_batch = RecordBatch::try_from_iter(vec![\r\n     (\"a\", Arc::new(a) as ArrayRef),\r\n     (\"b\", Arc::new(b) as ArrayRef)\r\n   ]).expect(\"valid conversion\");\r\n   ```\r\n   \r\n   # TryFrom Implementation\r\n   \r\n   Note I would really like to add a`TryFrom` implementation so I could write\r\n   \r\n   ```rust\r\n   let record_batch: RecordBatch = vec![\r\n     (\"a\", Arc::new(a) as ArrayRef),\r\n     (\"b\", Arc::new(b) as ArrayRef)\r\n   ].try_into().expect(\"valid conversion\");\r\n   ```\r\n   \r\n   However, when I tried to do so (with the following):\r\n   \r\n   ```rust\r\n   impl <I,F> TryFrom<I> for RecordBatch\r\n   where\r\n        I: IntoIterator<Item=(F, ArrayRef)>,\r\n        F: AsRef<str>,\r\n   {\r\n       type Error = ArrowError;\r\n   \r\n       fn try_from(value: I) -> std::result::Result<Self, Self::Error> {\r\n           Self::try_from_iter(value)\r\n       }\r\n   }\r\n   ```\r\n   \r\n   I got the following compiler error\r\n   \r\n   ```\r\n        = note: conflicting implementation in crate `core`:\r\n               - impl<T, U> TryFrom<U> for T\r\n                 where U: Into<T>;\r\n   \r\n   ```\r\n   \r\n   Which appears to be a limitation of the Rust typesystem / compiler: See https://github.com/rust-lang/rust/issues/50133. Any help / suggestions from reviewers would be most appreciated.\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T12:00:42.574+0000",
                    "updated": "2021-04-19T12:00:42.574+0000",
                    "started": "2021-04-19T12:00:42.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585089",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/585090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063#issuecomment-822412782\n\n\n   Thanks everyone for the feedback -- I have created a PR https://github.com/apache/arrow-rs/pull/7 with an implementation from iterators. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T12:02:15.906+0000",
                    "updated": "2021-04-19T12:02:15.906+0000",
                    "started": "2021-04-19T12:02:15.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585090",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/585091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #10063:\nURL: https://github.com/apache/arrow/pull/10063\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T12:02:18.753+0000",
                    "updated": "2021-04-19T12:02:18.753+0000",
                    "started": "2021-04-19T12:02:18.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585091",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/585096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-commenter commented on pull request #7:\nURL: https://github.com/apache/arrow-rs/pull/7#issuecomment-822417750\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n   > Merging [#7](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (eca9c6a) into [master](https://codecov.io/gh/apache/arrow-rs/commit/3f1380664251bf5dffdaed6daa6e0d6378e13ac7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (3f13806) will **increase** coverage by `0.01%`.\n   > The diff coverage is `100.00%`.\n   \n   > :exclamation: Current head eca9c6a differs from pull request most recent head 5d3c337. Consider uploading reports for the commit 5d3c337 to get more accurate results\n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow-rs/pull/7/graphs/tree.svg?width=650&height=150&src=pr&token=pq9V9qWZ1N&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master       #7      +/-   ##\n   ==========================================\n   + Coverage   82.47%   82.49%   +0.01%     \n   ==========================================\n     Files         162      162              \n     Lines       43414    43454      +40     \n   ==========================================\n   + Hits        35805    35846      +41     \n   + Misses       7609     7608       -1     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage \u0394 | |\n   |---|---|---|\n   | [arrow/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow-rs/pull/7/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-YXJyb3cvc3JjL3JlY29yZF9iYXRjaC5ycw==) | `85.71% <100.00%> (+4.23%)` | :arrow_up: |\n   | [parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow-rs/pull/7/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGFycXVldC9zcmMvZW5jb2RpbmdzL2VuY29kaW5nLnJz) | `95.05% <0.00%> (+0.19%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation). Last update [3f13806...5d3c337](https://codecov.io/gh/apache/arrow-rs/pull/7?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation).\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T12:10:47.609+0000",
                    "updated": "2021-04-19T12:10:47.609+0000",
                    "started": "2021-04-19T12:10:47.609+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585096",
                    "issueId": "13372712"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/worklog/585683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #7:\nURL: https://github.com/apache/arrow-rs/pull/7#issuecomment-823153500\n\n\n   I rewrote master to remove the history of the other languages (and 50MB of history). This means this PR needs to be \"rebased\" against the current master.\r\n   \r\n   The best way I found to do this was to find the relevant commits (via `git log`) and then cherry-pick them one at a time. Specifically, for this PR:\r\n   ```\r\n   git reset --hard apache/master\r\n   git cherry-pick 5d3c337710b89871a46f6e623bad8c9e05419ed2\r\n   git push -f alamb\r\n   ```\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T10:08:22.317+0000",
                    "updated": "2021-04-20T10:08:22.317+0000",
                    "started": "2021-04-20T10:08:22.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585683",
                    "issueId": "13372712"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5b0d97e8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44274f0f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21d01265[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ff16e67[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26584448[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1b1cccf6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a7ea6ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6ea865b4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ab6062d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@77b010f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38b7b03b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@159fe75c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 12:51:02 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T12:51:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12411/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-04-15T18:08:03.000+0000",
        "updated": "2021-04-26T12:51:05.000+0000",
        "timeoriginalestimate": null,
        "description": "\r\nUse case:\r\n\r\nWhile writing tests (both in IOx and in DataFusion) where I need a single `RecordBatch`, I often find myself doing something like this:\r\n\r\n```\r\n        let schema = Arc::new(Schema::new(vec![\r\n            ArrowField::new(\"float_field\", ArrowDataType::Float64, true),\r\n            ArrowField::new(\"time\", ArrowDataType::Int64, true),\r\n        ]));\r\n\r\n        let float_array: ArrayRef = Arc::new(Float64Array::from(vec![10.1, 20.1, 30.1, 40.1]));\r\n        let timestamp_array: ArrayRef = Arc::new(Int64Array::from(vec![1000, 2000, 3000, 4000]));\r\n\r\n        let batch = RecordBatch::try_new(schema, vec![float_array, timestamp_array])\r\n            .expect(\"created new record batch\");\r\n```\r\n\r\nThis is annoying because the information that `float_field` is a float is encoded both in the Schema and the `Float64Array`\r\n\r\nI would much rather rather be able to construct RecordBatches a a builder style to avoid the the redundancy and reduce the amount of typing / redundancy:\r\n\r\n\r\n```\r\n\r\n        let float_array: ArrayRef = Arc::new(Float64Array::from(vec![10.1, 20.1, 30.1, 40.1]));\r\n        let timestamp_array: ArrayRef = Arc::new(Int64Array::from(vec![1000, 2000, 3000, 4000]));\r\n\r\n        let batch = RecordBatch::empty()\r\n          .append(\"float_field\", timestamp_array).unwrap()\r\n          .append(\"time\", float_array).unwrap;\r\n\r\n```\r\n\r\nThe proposal is to add a method to `RecordBatch` like\r\n\r\n```\r\nimpl RecordBatch {\r\n...\r\n  fn append(self, field_name: &str, field_values: ArrayRef) -> Result<Self>\r\n}\r\n```\r\n\r\nThat would append the a field name to the current schema, returning an error if field_name was already present.\r\n\r\nThe nullability of the field would be set based on the actual null count of the field_values\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add Builder interface for adding Arrays to record batches",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372712/comment/17332243",
                    "id": "17332243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-rs/issues/210",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T12:51:02.785+0000",
                    "updated": "2021-04-26T12:51:02.785+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0q1u0:",
        "customfield_12314139": null
    }
}