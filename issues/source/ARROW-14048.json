{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13402329",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329",
    "key": "ARROW-14048",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=projjal",
            "name": "projjal",
            "key": "projjal",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Projjal Chanda",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=augustoasilva",
            "name": "augustoasilva",
            "key": "augustoasilva",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Augusto Alves Silva",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=augustoasilva",
            "name": "augustoasilva",
            "key": "augustoasilva",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Augusto Alves Silva",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 48600,
            "total": 48600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 48600,
            "total": 48600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14048/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 81,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/653267",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva opened a new pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193\n\n\n   Implement Gandiva to cache object code instead the entire llvm module, improving the memory consumption and LLVM time perfomance.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T23:15:44.836+0000",
                    "updated": "2021-09-20T23:15:44.836+0000",
                    "started": "2021-09-20T23:15:44.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653267",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/653268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#issuecomment-923424831\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T23:16:08.005+0000",
                    "updated": "2021-09-20T23:16:08.005+0000",
                    "started": "2021-09-20T23:16:08.004+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653268",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/653901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r712991445\n\n\n\n##########\nFile path: cpp/src/gandiva/base_cache_key.h\n##########\n@@ -0,0 +1,70 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <arrow/util/hash_util.h>\n+#include <stddef.h>\n+\n+#include \"gandiva/expression.h\"\n+#include \"gandiva/filter.h\"\n+#include \"gandiva/projector.h\"\n+\n+namespace gandiva {\n+\n+class BaseCacheKey {\n+ public:\n+  BaseCacheKey(ProjectorCacheKey& key, std::string type) : type_(type) {\n+    static const int32_t kSeedValue = 4;\n+    size_t key_hash = key.Hash();\n+    size_t result_hash = kSeedValue;\n+    arrow::internal::hash_combine(result_hash, type);\n+    arrow::internal::hash_combine(result_hash, key_hash);\n+    hash_code_ = result_hash;\n+    schema_ = key.schema();\n+  }\n+\n+  BaseCacheKey(FilterCacheKey& key, std::string type) : type_(type) {\n+    static const size_t kSeedValue = 4;\n+    size_t key_hash = key.Hash();\n+    size_t result_hash = kSeedValue;\n+    arrow::internal::hash_combine(result_hash, type);\n+    arrow::internal::hash_combine(result_hash, key_hash);\n+    hash_code_ = result_hash;\n+    schema_ = key.schema();\n+  }\n+\n+  size_t Hash() const { return hash_code_; }\n+\n+  std::string Type() const { return type_; }\n+\n+  bool operator==(const BaseCacheKey& other) const {\n+    if (hash_code_ != other.hash_code_) {\n\nReview comment:\n       This is incorrect. You can't just only compare the hashcode.\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.h\n##########\n@@ -49,10 +51,48 @@ class GANDIVA_EXPORT LLVMGenerator {\n   static Status Make(std::shared_ptr<Configuration> config,\n                      std::unique_ptr<LLVMGenerator>* llvm_generator);\n \n+  static std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  GetCache();\n+\n   /// \\brief Build the code for the expression trees for default mode. Each\n   /// element in the vector represents an expression tree\n   Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode);\n \n+  /// \\brief Build the code for the expression trees for default mode with a LLVM\n+  /// ObjectCache. Each element in the vector represents an expression tree\n+  template <class KeyType>\n+  Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode,\n\nReview comment:\n       Better to add the definition in the cc file.\n\n##########\nFile path: cpp/src/gandiva/engine.cc\n##########\n@@ -167,7 +167,6 @@ Status Engine::Make(const std::shared_ptr<Configuration>& conf,\n     return Status::CodeGenError(\"Could not instantiate llvm::ExecutionEngine: \",\n                                 builder_error);\n   }\n-\n\nReview comment:\n       nit: better to remove these extraneous changes\n\n##########\nFile path: cpp/src/gandiva/greedy_dual_size_cache.h\n##########\n@@ -146,9 +159,25 @@ class GreedyDualSizeCache {\n     priority_set_.erase(i);\n   }\n \n+  void evictObject() {\n\nReview comment:\n       This looks duplicate of evict()\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.cc\n##########\n@@ -50,6 +51,23 @@ Status LLVMGenerator::Make(std::shared_ptr<Configuration> config,\n   return Status::OK();\n }\n \n+std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+LLVMGenerator::GetCache() {\n+  static Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>> cache;\n\nReview comment:\n       this line seems is not required\n\n##########\nFile path: cpp/src/gandiva/greedy_dual_size_cache.h\n##########\n@@ -146,9 +159,25 @@ class GreedyDualSizeCache {\n     priority_set_.erase(i);\n   }\n \n+  void evictObject() {\n+    // TODO: inflation overflow is unlikely to happen but needs to be handled\n+    //  for correctness.\n+    // evict item from the beginning of the set. This set is ordered from the\n+    // lower priority value to the higher priority value.\n+    typename std::set<PriorityItem>::iterator i = priority_set_.begin();\n+    // update the inflation cost related to the evicted item\n+    inflation_ = (*i).actual_priority;\n+    size_t size_to_decrease = map_.find((*i).cache_key)->second.first.size;\n+    cache_size_ -= size_to_decrease;\n+    map_.erase((*i).cache_key);\n+    priority_set_.erase(i);\n+  }\n+\n   map_type map_;\n   std::set<PriorityItem> priority_set_;\n   uint64_t inflation_;\n   size_t capacity_;\n+  size_t cache_size_ = 0;\n+  llvm::SmallString<128> cache_dir_;\n\nReview comment:\n       looks like this is not getting used.\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.cc\n##########\n@@ -50,6 +51,23 @@ Status LLVMGenerator::Make(std::shared_ptr<Configuration> config,\n   return Status::OK();\n }\n \n+std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+LLVMGenerator::GetCache() {\n+  static Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>> cache;\n+  //  static std::unique_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  //      cache_unique = std::make_unique<Cache<BaseCacheKey,\n+  //      std::shared_ptr<llvm::MemoryBuffer>>>();\n+\n+  //  static std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  //      shared_cache = std::move(cache_unique);\n\nReview comment:\n       remove the commented out code?\n\n##########\nFile path: cpp/src/gandiva/filter.cc\n##########\n@@ -120,17 +138,27 @@ Status Filter::Make(SchemaPtr schema, ConditionPtr condition,\n   ARROW_RETURN_NOT_OK(expr_validator.Validate(condition));\n \n   // Start measuring build time\n-  auto begin = std::chrono::high_resolution_clock::now();\n-  ARROW_RETURN_NOT_OK(llvm_gen->Build({condition}, SelectionVector::Mode::MODE_NONE));\n+  //  auto begin = std::chrono::high_resolution_clock::now();\n\nReview comment:\n       remove the commented out code if no longer required\n\n##########\nFile path: cpp/src/gandiva/filter.cc\n##########\n@@ -42,7 +43,7 @@ FilterCacheKey::FilterCacheKey(SchemaPtr schema,\n   expression_as_string_ = expression.ToString();\n   UpdateUniqifier(expression_as_string_);\n   arrow::internal::hash_combine(result, expression_as_string_);\n-  arrow::internal::hash_combine(result, configuration);\n+  arrow::internal::hash_combine(result, configuration->Hash());\n\nReview comment:\n       why this change?\n\n##########\nFile path: cpp/src/gandiva/projector.h\n##########\n@@ -138,6 +167,7 @@ class GANDIVA_EXPORT Projector {\n   SchemaPtr schema_;\n   FieldVector output_fields_;\n   std::shared_ptr<Configuration> configuration_;\n+  bool compiled_from_cache_;\n\nReview comment:\n       nit: use a different name like built_from_cache since it is already compiled\n\n##########\nFile path: cpp/src/gandiva/greedy_dual_size_cache.h\n##########\n@@ -92,25 +96,26 @@ class GreedyDualSizeCache {\n \n   bool contains(const Key& key) { return map_.find(key) != map_.end(); }\n \n-  void insert(const Key& key, const ValueCacheObject<Value>& value) {\n+  void InsertObjectCode(const Key& key, const ValueCacheObject<Value>& value) {\n\nReview comment:\n       nit: original name insert seems better since this is a generic class.\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.h\n##########\n@@ -49,10 +51,48 @@ class GANDIVA_EXPORT LLVMGenerator {\n   static Status Make(std::shared_ptr<Configuration> config,\n                      std::unique_ptr<LLVMGenerator>* llvm_generator);\n \n+  static std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  GetCache();\n+\n   /// \\brief Build the code for the expression trees for default mode. Each\n   /// element in the vector represents an expression tree\n   Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode);\n \n+  /// \\brief Build the code for the expression trees for default mode with a LLVM\n+  /// ObjectCache. Each element in the vector represents an expression tree\n+  template <class KeyType>\n+  Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode,\n+               GandivaObjectCache<KeyType>& obj_cache) {\n+    selection_vector_mode_ = mode;\n+\n+    // Start measuring code gen time\n+    auto begin = std::chrono::high_resolution_clock::now();\n+    for (auto& expr : exprs) {\n+      auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+      ARROW_RETURN_NOT_OK(Add(expr, output));\n+    }\n+\n+    // Stop measuring time, calculate the elapsed time and pass it to object cache\n+    auto end = std::chrono::high_resolution_clock::now();\n+    size_t elapsed =\n\nReview comment:\n       This is wrong. the elapse time was supposed to track the compilation time which is mainly done in FinalizeModule\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T04:48:57.501+0000",
                    "updated": "2021-09-22T04:48:57.501+0000",
                    "started": "2021-09-22T04:48:57.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653901",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/653902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#issuecomment-924586629\n\n\n   > Implement Gandiva to cache object code instead the entire llvm module, improving the memory consumption and LLVM time perfomance.\r\n   \r\n   This should not have any effect on llvm performance only the memory footprint. Can you also include the numbers in the description.\r\n   Also the wording in the description and pr title seems vague. change it to something like \"Cache only ObjectCode in memory instead of entire module\"\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T05:04:39.733+0000",
                    "updated": "2021-09-22T05:04:39.733+0000",
                    "started": "2021-09-22T05:04:39.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653902",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/653905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713593711\n\n\n\n##########\nFile path: cpp/src/gandiva/cache.h\n##########\n@@ -39,20 +39,30 @@ class Cache {\n \n   Cache() : Cache(GetCapacity()) {}\n \n-  ValueType GetModule(KeyType cache_key) {\n+  ::std::shared_ptr<Cache> create(size_t capacity) {\n+    return ::std::make_shared<Cache>(cache_(capacity));\n+  }\n+\n+  ValueType GetObjectCode(KeyType cache_key) {\n     arrow::util::optional<ValueCacheObject<ValueType>> result;\n     mtx_.lock();\n-    result = cache_.get(cache_key);\n+    result = cache_.GetObjectCode(cache_key);\n     mtx_.unlock();\n     return result != arrow::util::nullopt ? (*result).module : nullptr;\n   }\n \n-  void PutModule(KeyType cache_key, ValueCacheObject<ValueType> valueCacheObject) {\n+  void PutObjectCode(KeyType& cache_key, ValueCacheObject<ValueType> object_code) {\n     mtx_.lock();\n-    cache_.insert(cache_key, valueCacheObject);\n+    cache_.InsertObjectCode(cache_key, object_code);\n     mtx_.unlock();\n   }\n \n+  ::std::shared_ptr<Cache> CreateSharedCachePtr() { return Cache::create(); }\n\nReview comment:\n       This looks not needed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T05:07:24.275+0000",
                    "updated": "2021-09-22T05:07:24.275+0000",
                    "started": "2021-09-22T05:07:24.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653905",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/653906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713594481\n\n\n\n##########\nFile path: cpp/src/gandiva/tests/filter_test.cc\n##########\n@@ -29,7 +29,11 @@ using arrow::int32;\n \n class TestFilter : public ::testing::Test {\n  public:\n-  void SetUp() { pool_ = arrow::default_memory_pool(); }\n+  void SetUp() {\n+    pool_ = arrow::default_memory_pool();\n+    // Setup arrow log severity threshold to debug level.\n+    arrow::util::ArrowLog::StartArrowLog(\"\", arrow::util::ArrowLogLevel::ARROW_DEBUG);\n\nReview comment:\n       is this change required?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T05:09:37.756+0000",
                    "updated": "2021-09-22T05:09:37.756+0000",
                    "started": "2021-09-22T05:09:37.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653906",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713832264\n\n\n\n##########\nFile path: cpp/src/gandiva/filter.cc\n##########\n@@ -42,7 +43,7 @@ FilterCacheKey::FilterCacheKey(SchemaPtr schema,\n   expression_as_string_ = expression.ToString();\n   UpdateUniqifier(expression_as_string_);\n   arrow::internal::hash_combine(result, expression_as_string_);\n-  arrow::internal::hash_combine(result, configuration);\n+  arrow::internal::hash_combine(result, configuration->Hash());\n\nReview comment:\n       I thought that configuration being a shared_ptr when using it directly to hash it hashed the memory location value, so as it has a Hash() function, it looked better to use the hash_code that it generates to use on the hash_combine. \r\n   \r\n   Do you think it is better to undo this?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:07:43.767+0000",
                    "updated": "2021-09-22T11:07:43.767+0000",
                    "started": "2021-09-22T11:07:43.767+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654011",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713832526\n\n\n\n##########\nFile path: cpp/src/gandiva/base_cache_key.h\n##########\n@@ -0,0 +1,70 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <arrow/util/hash_util.h>\n+#include <stddef.h>\n+\n+#include \"gandiva/expression.h\"\n+#include \"gandiva/filter.h\"\n+#include \"gandiva/projector.h\"\n+\n+namespace gandiva {\n+\n+class BaseCacheKey {\n+ public:\n+  BaseCacheKey(ProjectorCacheKey& key, std::string type) : type_(type) {\n+    static const int32_t kSeedValue = 4;\n+    size_t key_hash = key.Hash();\n+    size_t result_hash = kSeedValue;\n+    arrow::internal::hash_combine(result_hash, type);\n+    arrow::internal::hash_combine(result_hash, key_hash);\n+    hash_code_ = result_hash;\n+    schema_ = key.schema();\n+  }\n+\n+  BaseCacheKey(FilterCacheKey& key, std::string type) : type_(type) {\n+    static const size_t kSeedValue = 4;\n+    size_t key_hash = key.Hash();\n+    size_t result_hash = kSeedValue;\n+    arrow::internal::hash_combine(result_hash, type);\n+    arrow::internal::hash_combine(result_hash, key_hash);\n+    hash_code_ = result_hash;\n+    schema_ = key.schema();\n+  }\n+\n+  size_t Hash() const { return hash_code_; }\n+\n+  std::string Type() const { return type_; }\n+\n+  bool operator==(const BaseCacheKey& other) const {\n+    if (hash_code_ != other.hash_code_) {\n\nReview comment:\n       Ok, I compared the other private variables to.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:08:08.490+0000",
                    "updated": "2021-09-22T11:08:08.490+0000",
                    "started": "2021-09-22T11:08:08.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654012",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713833611\n\n\n\n##########\nFile path: cpp/src/gandiva/greedy_dual_size_cache.h\n##########\n@@ -146,9 +159,25 @@ class GreedyDualSizeCache {\n     priority_set_.erase(i);\n   }\n \n+  void evictObject() {\n\nReview comment:\n       Yeah, it was so and I should have removed it earlier, so I removed it now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:09:42.284+0000",
                    "updated": "2021-09-22T11:09:42.284+0000",
                    "started": "2021-09-22T11:09:42.284+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654013",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713835246\n\n\n\n##########\nFile path: cpp/src/gandiva/greedy_dual_size_cache.h\n##########\n@@ -92,25 +96,26 @@ class GreedyDualSizeCache {\n \n   bool contains(const Key& key) { return map_.find(key) != map_.end(); }\n \n-  void insert(const Key& key, const ValueCacheObject<Value>& value) {\n+  void InsertObjectCode(const Key& key, const ValueCacheObject<Value>& value) {\n\nReview comment:\n       Ok, fixed it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:12:30.428+0000",
                    "updated": "2021-09-22T11:12:30.428+0000",
                    "started": "2021-09-22T11:12:30.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654015",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713836840\n\n\n\n##########\nFile path: cpp/src/gandiva/cache.h\n##########\n@@ -39,20 +39,30 @@ class Cache {\n \n   Cache() : Cache(GetCapacity()) {}\n \n-  ValueType GetModule(KeyType cache_key) {\n+  ::std::shared_ptr<Cache> create(size_t capacity) {\n+    return ::std::make_shared<Cache>(cache_(capacity));\n+  }\n+\n+  ValueType GetObjectCode(KeyType cache_key) {\n     arrow::util::optional<ValueCacheObject<ValueType>> result;\n     mtx_.lock();\n-    result = cache_.get(cache_key);\n+    result = cache_.GetObjectCode(cache_key);\n     mtx_.unlock();\n     return result != arrow::util::nullopt ? (*result).module : nullptr;\n   }\n \n-  void PutModule(KeyType cache_key, ValueCacheObject<ValueType> valueCacheObject) {\n+  void PutObjectCode(KeyType& cache_key, ValueCacheObject<ValueType> object_code) {\n     mtx_.lock();\n-    cache_.insert(cache_key, valueCacheObject);\n+    cache_.InsertObjectCode(cache_key, object_code);\n     mtx_.unlock();\n   }\n \n+  ::std::shared_ptr<Cache> CreateSharedCachePtr() { return Cache::create(); }\n\nReview comment:\n       Removed it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:14:48.451+0000",
                    "updated": "2021-09-22T11:14:48.451+0000",
                    "started": "2021-09-22T11:14:48.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654016",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713837690\n\n\n\n##########\nFile path: cpp/src/gandiva/tests/filter_test.cc\n##########\n@@ -29,7 +29,11 @@ using arrow::int32;\n \n class TestFilter : public ::testing::Test {\n  public:\n-  void SetUp() { pool_ = arrow::default_memory_pool(); }\n+  void SetUp() {\n+    pool_ = arrow::default_memory_pool();\n+    // Setup arrow log severity threshold to debug level.\n+    arrow::util::ArrowLog::StartArrowLog(\"\", arrow::util::ArrowLogLevel::ARROW_DEBUG);\n\nReview comment:\n       Not required, just useful to debug the cache system using the tests' files. Do you want me to remove it?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:16:05.907+0000",
                    "updated": "2021-09-22T11:16:05.907+0000",
                    "started": "2021-09-22T11:16:05.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654017",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713840353\n\n\n\n##########\nFile path: cpp/src/gandiva/greedy_dual_size_cache.h\n##########\n@@ -146,9 +159,25 @@ class GreedyDualSizeCache {\n     priority_set_.erase(i);\n   }\n \n+  void evictObject() {\n+    // TODO: inflation overflow is unlikely to happen but needs to be handled\n+    //  for correctness.\n+    // evict item from the beginning of the set. This set is ordered from the\n+    // lower priority value to the higher priority value.\n+    typename std::set<PriorityItem>::iterator i = priority_set_.begin();\n+    // update the inflation cost related to the evicted item\n+    inflation_ = (*i).actual_priority;\n+    size_t size_to_decrease = map_.find((*i).cache_key)->second.first.size;\n+    cache_size_ -= size_to_decrease;\n+    map_.erase((*i).cache_key);\n+    priority_set_.erase(i);\n+  }\n+\n   map_type map_;\n   std::set<PriorityItem> priority_set_;\n   uint64_t inflation_;\n   size_t capacity_;\n+  size_t cache_size_ = 0;\n+  llvm::SmallString<128> cache_dir_;\n\nReview comment:\n       Removed it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:20:21.596+0000",
                    "updated": "2021-09-22T11:20:21.596+0000",
                    "started": "2021-09-22T11:20:21.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654020",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713840682\n\n\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.cc\n##########\n@@ -50,6 +51,23 @@ Status LLVMGenerator::Make(std::shared_ptr<Configuration> config,\n   return Status::OK();\n }\n \n+std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+LLVMGenerator::GetCache() {\n+  static Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>> cache;\n+  //  static std::unique_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  //      cache_unique = std::make_unique<Cache<BaseCacheKey,\n+  //      std::shared_ptr<llvm::MemoryBuffer>>>();\n+\n+  //  static std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  //      shared_cache = std::move(cache_unique);\n\nReview comment:\n       Removed it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:20:44.886+0000",
                    "updated": "2021-09-22T11:20:44.886+0000",
                    "started": "2021-09-22T11:20:44.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654021",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713841531\n\n\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.cc\n##########\n@@ -50,6 +51,23 @@ Status LLVMGenerator::Make(std::shared_ptr<Configuration> config,\n   return Status::OK();\n }\n \n+std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+LLVMGenerator::GetCache() {\n+  static Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>> cache;\n\nReview comment:\n       Removed it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:22:02.753+0000",
                    "updated": "2021-09-22T11:22:02.753+0000",
                    "started": "2021-09-22T11:22:02.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654023",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713843095\n\n\n\n##########\nFile path: cpp/src/gandiva/projector.h\n##########\n@@ -138,6 +167,7 @@ class GANDIVA_EXPORT Projector {\n   SchemaPtr schema_;\n   FieldVector output_fields_;\n   std::shared_ptr<Configuration> configuration_;\n+  bool compiled_from_cache_;\n\nReview comment:\n       built_from_cache sounds better, so changed to it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:24:22.216+0000",
                    "updated": "2021-09-22T11:24:22.216+0000",
                    "started": "2021-09-22T11:24:22.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654024",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713844650\n\n\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.h\n##########\n@@ -49,10 +51,48 @@ class GANDIVA_EXPORT LLVMGenerator {\n   static Status Make(std::shared_ptr<Configuration> config,\n                      std::unique_ptr<LLVMGenerator>* llvm_generator);\n \n+  static std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  GetCache();\n+\n   /// \\brief Build the code for the expression trees for default mode. Each\n   /// element in the vector represents an expression tree\n   Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode);\n \n+  /// \\brief Build the code for the expression trees for default mode with a LLVM\n+  /// ObjectCache. Each element in the vector represents an expression tree\n+  template <class KeyType>\n+  Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode,\n\nReview comment:\n       I know, but because this uses template, if it is on the cc file this function gets an undefined reference error for it, as just this function is using template.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:26:44.871+0000",
                    "updated": "2021-09-22T11:26:44.871+0000",
                    "started": "2021-09-22T11:26:44.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654026",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713846478\n\n\n\n##########\nFile path: cpp/src/gandiva/filter.cc\n##########\n@@ -120,17 +138,27 @@ Status Filter::Make(SchemaPtr schema, ConditionPtr condition,\n   ARROW_RETURN_NOT_OK(expr_validator.Validate(condition));\n \n   // Start measuring build time\n-  auto begin = std::chrono::high_resolution_clock::now();\n-  ARROW_RETURN_NOT_OK(llvm_gen->Build({condition}, SelectionVector::Mode::MODE_NONE));\n+  //  auto begin = std::chrono::high_resolution_clock::now();\n\nReview comment:\n       Removed it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:29:23.207+0000",
                    "updated": "2021-09-22T11:29:23.207+0000",
                    "started": "2021-09-22T11:29:23.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654028",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713848639\n\n\n\n##########\nFile path: cpp/src/gandiva/engine.cc\n##########\n@@ -167,7 +167,6 @@ Status Engine::Make(const std::shared_ptr<Configuration>& conf,\n     return Status::CodeGenError(\"Could not instantiate llvm::ExecutionEngine: \",\n                                 builder_error);\n   }\n-\n\nReview comment:\n       Removed it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:32:37.470+0000",
                    "updated": "2021-09-22T11:32:37.470+0000",
                    "started": "2021-09-22T11:32:37.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654029",
                    "issueId": "13402329"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/worklog/654032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11193:\nURL: https://github.com/apache/arrow/pull/11193#discussion_r713854557\n\n\n\n##########\nFile path: cpp/src/gandiva/llvm_generator.h\n##########\n@@ -49,10 +51,48 @@ class GANDIVA_EXPORT LLVMGenerator {\n   static Status Make(std::shared_ptr<Configuration> config,\n                      std::unique_ptr<LLVMGenerator>* llvm_generator);\n \n+  static std::shared_ptr<Cache<BaseCacheKey, std::shared_ptr<llvm::MemoryBuffer>>>\n+  GetCache();\n+\n   /// \\brief Build the code for the expression trees for default mode. Each\n   /// element in the vector represents an expression tree\n   Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode);\n \n+  /// \\brief Build the code for the expression trees for default mode with a LLVM\n+  /// ObjectCache. Each element in the vector represents an expression tree\n+  template <class KeyType>\n+  Status Build(const ExpressionVector& exprs, SelectionVector::Mode mode,\n+               GandivaObjectCache<KeyType>& obj_cache) {\n+    selection_vector_mode_ = mode;\n+\n+    // Start measuring code gen time\n+    auto begin = std::chrono::high_resolution_clock::now();\n+    for (auto& expr : exprs) {\n+      auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+      ARROW_RETURN_NOT_OK(Add(expr, output));\n+    }\n+\n+    // Stop measuring time, calculate the elapsed time and pass it to object cache\n+    auto end = std::chrono::high_resolution_clock::now();\n+    size_t elapsed =\n\nReview comment:\n       I know, but when the FinalizeModule is called, the LLVM will access the GandivaObjectCache file to execute the logic for the object code manipulation (to cache it or to get it from cache) so I need to set GandivaObjectCache before the FinalizeModule execution, and before the code sets the GandivaObjectCache it needs to know the elapsed time so the greedy dual cache logic works.\r\n   \r\n   Do you have any suggestions how to proceed with that case?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T11:40:56.571+0000",
                    "updated": "2021-09-22T11:40:56.571+0000",
                    "started": "2021-09-22T11:40:56.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654032",
                    "issueId": "13402329"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 48600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@44fb6cf0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@335cb72a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@311e80b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@672d9458[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f8abf70[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4e7d25d5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b23079c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@a7ddf4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a8c93af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d7846a6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e74a172[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@50028935[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 48600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 03 11:46:48 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-03T11:46:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14048/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-09-20T23:14:23.000+0000",
        "updated": "2021-12-14T23:41:17.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement Gandiva to cache object code instead the entire llvm module, improving the memory consumption and LLVM time perfomance.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "13.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 48600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Cache only object code in memory instead of entire module",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402329/comment/17452941",
                    "id": "17452941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 11193\n[https://github.com/apache/arrow/pull/11193]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-12-03T11:46:48.734+0000",
                    "updated": "2021-12-03T11:46:48.734+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v4d4:",
        "customfield_12314139": null
    }
}