{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13476828",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828",
    "key": "ARROW-17412",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 87600,
            "total": 87600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 87600,
            "total": 87600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17412/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 146,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/800590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw opened a new pull request, #13880:\nURL: https://github.com/apache/arrow/pull/13880\n\n   See https://issues.apache.org/jira/browse/ARROW-17412\n\n\n",
                    "created": "2022-08-15T13:17:19.935+0000",
                    "updated": "2022-08-15T13:17:19.935+0000",
                    "started": "2022-08-15T13:17:19.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800590",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/800591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#issuecomment-1215003005\n\n   https://issues.apache.org/jira/browse/ARROW-17412\n\n\n",
                    "created": "2022-08-15T13:17:47.520+0000",
                    "updated": "2022-08-15T13:17:47.520+0000",
                    "started": "2022-08-15T13:17:47.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800591",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/800628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#issuecomment-1215099752\n\n   A MacOS job failed on timeout of the `AsofJoin` tester but it looks like it took much longer than expected. @icexelloss, any idea how this should be handled?\n\n\n",
                    "created": "2022-08-15T14:49:27.029+0000",
                    "updated": "2022-08-15T14:49:27.029+0000",
                    "started": "2022-08-15T14:49:27.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800628",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/800674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#issuecomment-1215471439\n\n   Thanks for doing this @rtpsw!\r\n   I've not read in depth yet, but was wondering if this should also cover date32/64 and perhaps time32//64?\n\n\n",
                    "created": "2022-08-15T17:39:04.819+0000",
                    "updated": "2022-08-15T17:39:04.819+0000",
                    "started": "2022-08-15T17:39:04.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800674",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#issuecomment-1216764688\n\n   @rok In principle I think it makes sense to support date32/64 and perhaps time32//64? (Or really, any type that supports ordering and distance). In practice, we found the predominant use case is either TImestamp type or some other thing that gets encoded into int/long (for example, number of trading days since a certain point). \r\n   \r\n   I would prefer not to add support for date32/64 and perhaps time32//64 just yet mostly because we are working towards a internal product release and would prefer to focus issues related to that if that is ok.\n\n\n",
                    "created": "2022-08-16T15:04:40.724+0000",
                    "updated": "2022-08-16T15:04:40.724+0000",
                    "started": "2022-08-16T15:04:40.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801000",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946896915\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n\nReview Comment:\n   What is the constructor used for?\n\n\n\n",
                    "created": "2022-08-16T15:05:55.839+0000",
                    "updated": "2022-08-16T15:05:55.839+0000",
                    "started": "2022-08-16T15:05:55.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801002",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946897821\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n+                      int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n \n   /// \\brief \"on\" key for the join. Each\n   ///\n-  /// All inputs tables must be sorted by the \"on\" key. Inexact\n-  /// match is used on the \"on\" key. i.e., a row is considiered match iff\n+  /// All inputs tables must be sorted by the \"on\" key. Must be a single field of a common\n+  /// type. Inexact match is used on the \"on\" key. i.e., a row is considered match iff\n   /// left_on - tolerance <= right_on <= left_on.\n-  /// Currently, \"on\" key must be an int64 field\n+  /// Currently, the \"on\" key must be of an integer or timestamp type\n\nReview Comment:\n   by integer, do you mean int64, int32 or both?\n\n\n\n",
                    "created": "2022-08-16T15:06:46.078+0000",
                    "updated": "2022-08-16T15:06:46.078+0000",
                    "started": "2022-08-16T15:06:46.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801004",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801006",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946899616\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n+                      int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n \n   /// \\brief \"on\" key for the join. Each\n   ///\n-  /// All inputs tables must be sorted by the \"on\" key. Inexact\n-  /// match is used on the \"on\" key. i.e., a row is considiered match iff\n+  /// All inputs tables must be sorted by the \"on\" key. Must be a single field of a common\n+  /// type. Inexact match is used on the \"on\" key. i.e., a row is considered match iff\n   /// left_on - tolerance <= right_on <= left_on.\n-  /// Currently, \"on\" key must be an int64 field\n+  /// Currently, the \"on\" key must be of an integer or timestamp type\n   FieldRef on_key;\n   /// \\brief \"by\" key for the join.\n   ///\n   /// All input tables must have the \"by\" key.  Exact equality\n   /// is used for the \"by\" key.\n-  /// Currently, the \"by\" key must be an int32 field\n-  FieldRef by_key;\n-  /// Tolerance for inexact \"on\" key matching\n+  /// Currently, the \"by\" key must be of an integer or timestamp type\n+  std::vector<FieldRef> by_key;\n+  /// Tolerance for inexact \"on\" key matching.  Must be non-negative.\n   int64_t tolerance;\n\nReview Comment:\n   What does tolerance mean here if the \"on\" key is timestamp? Is it interpreted as \"number of nano seconds\"?\n\n\n\n",
                    "created": "2022-08-16T15:08:21.153+0000",
                    "updated": "2022-08-16T15:08:21.153+0000",
                    "started": "2022-08-16T15:08:21.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801006",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946901132\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n+                      int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n \n   /// \\brief \"on\" key for the join. Each\n   ///\n-  /// All inputs tables must be sorted by the \"on\" key. Inexact\n-  /// match is used on the \"on\" key. i.e., a row is considiered match iff\n+  /// All inputs tables must be sorted by the \"on\" key. Must be a single field of a common\n+  /// type. Inexact match is used on the \"on\" key. i.e., a row is considered match iff\n   /// left_on - tolerance <= right_on <= left_on.\n-  /// Currently, \"on\" key must be an int64 field\n+  /// Currently, the \"on\" key must be of an integer or timestamp type\n   FieldRef on_key;\n   /// \\brief \"by\" key for the join.\n   ///\n   /// All input tables must have the \"by\" key.  Exact equality\n   /// is used for the \"by\" key.\n-  /// Currently, the \"by\" key must be an int32 field\n-  FieldRef by_key;\n-  /// Tolerance for inexact \"on\" key matching\n+  /// Currently, the \"by\" key must be of an integer or timestamp type\n+  std::vector<FieldRef> by_key;\n+  /// Tolerance for inexact \"on\" key matching.  Must be non-negative.\n   int64_t tolerance;\n\nReview Comment:\n   Or number of unit of the timestamp column? \n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n+                      int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n \n   /// \\brief \"on\" key for the join. Each\n   ///\n-  /// All inputs tables must be sorted by the \"on\" key. Inexact\n-  /// match is used on the \"on\" key. i.e., a row is considiered match iff\n+  /// All inputs tables must be sorted by the \"on\" key. Must be a single field of a common\n+  /// type. Inexact match is used on the \"on\" key. i.e., a row is considered match iff\n   /// left_on - tolerance <= right_on <= left_on.\n-  /// Currently, \"on\" key must be an int64 field\n+  /// Currently, the \"on\" key must be of an integer or timestamp type\n   FieldRef on_key;\n   /// \\brief \"by\" key for the join.\n   ///\n   /// All input tables must have the \"by\" key.  Exact equality\n   /// is used for the \"by\" key.\n-  /// Currently, the \"by\" key must be an int32 field\n-  FieldRef by_key;\n-  /// Tolerance for inexact \"on\" key matching\n+  /// Currently, the \"by\" key must be of an integer or timestamp type\n+  std::vector<FieldRef> by_key;\n+  /// Tolerance for inexact \"on\" key matching.  Must be non-negative.\n   int64_t tolerance;\n\nReview Comment:\n   Or number of unit of the timestamp type? \n\n\n\n",
                    "created": "2022-08-16T15:09:16.311+0000",
                    "updated": "2022-08-16T15:09:16.311+0000",
                    "started": "2022-08-16T15:09:16.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801008",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801010",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946905765\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -37,13 +39,41 @@\n namespace arrow {\n namespace compute {\n \n-// Remove this when multiple keys and/or types is supported\n-typedef int32_t KeyType;\n+template <typename T, typename V = typename T::value_type>\n\nReview Comment:\n   Why do we need to wrap std_find here?\n\n\n\n",
                    "created": "2022-08-16T15:11:41.941+0000",
                    "updated": "2022-08-16T15:11:41.941+0000",
                    "started": "2022-08-16T15:11:41.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801010",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946907140\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -37,13 +39,41 @@\n namespace arrow {\n namespace compute {\n \n-// Remove this when multiple keys and/or types is supported\n-typedef int32_t KeyType;\n+template <typename T, typename V = typename T::value_type>\n+inline typename T::const_iterator std_find(const T& container, const V& val) {\n+  return std::find(container.begin(), container.end(), val);\n+}\n+\n+template <typename T, typename V = typename T::value_type>\n+inline bool std_has(const T& container, const V& val) {\n+  return container.end() != std_find(container, val);\n+}\n+\n+typedef uint64_t KeyType;\n+typedef uint64_t TimeType;\n\nReview Comment:\n   Maybe to rename to \"OnType\" and \"ByType\" to be consistent with the names that are used in the AsofJoinOptions\n\n\n\n",
                    "created": "2022-08-16T15:12:47.065+0000",
                    "updated": "2022-08-16T15:12:47.065+0000",
                    "started": "2022-08-16T15:12:47.065+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801011",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946907796\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -37,13 +39,41 @@\n namespace arrow {\n namespace compute {\n \n-// Remove this when multiple keys and/or types is supported\n-typedef int32_t KeyType;\n+template <typename T, typename V = typename T::value_type>\n+inline typename T::const_iterator std_find(const T& container, const V& val) {\n+  return std::find(container.begin(), container.end(), val);\n+}\n+\n+template <typename T, typename V = typename T::value_type>\n+inline bool std_has(const T& container, const V& val) {\n+  return container.end() != std_find(container, val);\n+}\n+\n+typedef uint64_t KeyType;\n+typedef uint64_t TimeType;\n+typedef uint64_t HashType;\n \n // Maximum number of tables that can be joined\n #define MAX_JOIN_TABLES 64\n typedef uint64_t row_index_t;\n typedef int col_index_t;\n+typedef std::vector<col_index_t> vec_col_index_t;\n+\n+template <typename T, enable_if_t<std::is_integral<T>::value, bool> = true>\n+static inline uint64_t norm_value(T t) {\n\nReview Comment:\n   Can you add some doc string for what this function is doing?\n\n\n\n",
                    "created": "2022-08-16T15:13:26.720+0000",
                    "updated": "2022-08-16T15:13:26.720+0000",
                    "started": "2022-08-16T15:13:26.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801012",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946909795\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -137,18 +167,84 @@ struct MemoStore {\n   }\n };\n \n+// a specialized higher-performance variation of Hashing64 logic\n\nReview Comment:\n   Can you explain the difference between this and the existing Hashing64 classes and why it is faster?\n\n\n\n",
                    "created": "2022-08-16T15:15:11.906+0000",
                    "updated": "2022-08-16T15:15:11.906+0000",
                    "started": "2022-08-16T15:15:11.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801016",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946912631\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -184,18 +280,51 @@ class InputState {\n     return queue_.UnsyncFront();\n   }\n \n+#define LATEST_VAL_CASE(id, val)                            \\\n+  case Type::id: {                                          \\\n+    using T = typename TypeIdTraits<Type::id>::Type;        \\\n+    using CType = typename TypeTraits<T>::CType;            \\\n+    return val(data->GetValues<CType>(1)[latest_ref_row_]); \\\n+  }\n+\n   KeyType GetLatestKey() const {\n-    return queue_.UnsyncFront()\n-        ->column_data(key_col_index_)\n-        ->GetValues<KeyType>(1)[latest_ref_row_];\n+    if (key_hasher_ != NULLPTR) {\n\nReview Comment:\n   When do you use key_hasher and when do you use the original value?\n\n\n\n",
                    "created": "2022-08-16T15:17:22.012+0000",
                    "updated": "2022-08-16T15:17:22.012+0000",
                    "started": "2022-08-16T15:17:22.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801018",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946918522\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -662,25 +858,67 @@ class AsofJoinNode : public ExecNode {\n     DCHECK_GE(inputs.size(), 2) << \"Must have at least two inputs\";\n \n     const auto& join_options = checked_cast<const AsofJoinNodeOptions&>(options);\n-    ARROW_ASSIGN_OR_RAISE(std::shared_ptr<Schema> output_schema,\n-                          MakeOutputSchema(inputs, join_options));\n+    if (join_options.tolerance < 0) {\n+      return Status::Invalid(\"AsOfJoin tolerance must be non-negative but is \",\n+                             join_options.tolerance);\n+    }\n+\n+    size_t n_input = inputs.size(), n_by = join_options.by_key.size();\n+    std::vector<std::string> input_labels(n_input);\n+    vec_col_index_t indices_of_on_key(n_input);\n+    std::vector<vec_col_index_t> indices_of_by_key(n_input, vec_col_index_t(n_by));\n+    for (size_t i = 0; i < n_input; ++i) {\n+      input_labels[i] = i == 0 ? \"left\" : \"right_\" + std::to_string(i);\n+      const auto& input_schema = inputs[i]->output_schema();\n+\n+#define ASOFJOIN_KEY_MATCH(kopt, kacc)                                              \\\n\nReview Comment:\n   This is a bit hard to understand - what does this do?\n\n\n\n",
                    "created": "2022-08-16T15:22:02.488+0000",
                    "updated": "2022-08-16T15:22:02.488+0000",
                    "started": "2022-08-16T15:22:02.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801022",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946919428\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n\nReview Comment:\n   The other two constructors, one accepting a `FieldRef` parameter and the other a `std::vector<FieldRef>` parameter, cannot be disambiguated when one writes something like `AsOfJoinOptions(\"time\", {\"key1\", \"key2\"}, tolerance)` because `` fits both parameter types `{\"key1\", \"key2\"}` with a single implicit conversion. However, once a constructor with `std::initializer_list<FieldRef>` is added, this is the constructor the compiler will pick, since it involves no implicit conversion.\n\n\n\n",
                    "created": "2022-08-16T15:22:47.580+0000",
                    "updated": "2022-08-16T15:22:47.580+0000",
                    "started": "2022-08-16T15:22:47.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801023",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946921580\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n+                      int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n \n   /// \\brief \"on\" key for the join. Each\n   ///\n-  /// All inputs tables must be sorted by the \"on\" key. Inexact\n-  /// match is used on the \"on\" key. i.e., a row is considiered match iff\n+  /// All inputs tables must be sorted by the \"on\" key. Must be a single field of a common\n+  /// type. Inexact match is used on the \"on\" key. i.e., a row is considered match iff\n   /// left_on - tolerance <= right_on <= left_on.\n-  /// Currently, \"on\" key must be an int64 field\n+  /// Currently, the \"on\" key must be of an integer or timestamp type\n\nReview Comment:\n   I mean all of `{u,}int{8,16,32,64}_t`. See the [supported types](https://github.com/apache/arrow/pull/13880/files#diff-5789a42aebc3bd0f5a6db687c78ab0c3eef3e316982f99fe9e0ea21fabed354cR1000-R1040) for a complete list.\n\n\n\n",
                    "created": "2022-08-16T15:24:38.400+0000",
                    "updated": "2022-08-16T15:24:38.400+0000",
                    "started": "2022-08-16T15:24:38.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801025",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946929185\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -397,23 +397,33 @@ class ARROW_EXPORT HashJoinNodeOptions : public ExecNodeOptions {\n /// This node will output one row for each row in the left table.\n class ARROW_EXPORT AsofJoinNodeOptions : public ExecNodeOptions {\n  public:\n-  AsofJoinNodeOptions(FieldRef on_key, FieldRef by_key, int64_t tolerance)\n-      : on_key(std::move(on_key)), by_key(std::move(by_key)), tolerance(tolerance) {}\n+  AsofJoinNodeOptions(FieldRef on_key, const FieldRef& by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(), tolerance(tolerance) {\n+    this->by_key.push_back(std::move(by_key));\n+  }\n+\n+  AsofJoinNodeOptions(FieldRef on_key, std::vector<FieldRef> by_key, int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n+\n+  // resolves ambiguity between previous constructors when initializer list is given\n+  AsofJoinNodeOptions(FieldRef on_key, std::initializer_list<FieldRef> by_key,\n+                      int64_t tolerance)\n+      : on_key(std::move(on_key)), by_key(by_key), tolerance(tolerance) {}\n \n   /// \\brief \"on\" key for the join. Each\n   ///\n-  /// All inputs tables must be sorted by the \"on\" key. Inexact\n-  /// match is used on the \"on\" key. i.e., a row is considiered match iff\n+  /// All inputs tables must be sorted by the \"on\" key. Must be a single field of a common\n+  /// type. Inexact match is used on the \"on\" key. i.e., a row is considered match iff\n   /// left_on - tolerance <= right_on <= left_on.\n-  /// Currently, \"on\" key must be an int64 field\n+  /// Currently, the \"on\" key must be of an integer or timestamp type\n   FieldRef on_key;\n   /// \\brief \"by\" key for the join.\n   ///\n   /// All input tables must have the \"by\" key.  Exact equality\n   /// is used for the \"by\" key.\n-  /// Currently, the \"by\" key must be an int32 field\n-  FieldRef by_key;\n-  /// Tolerance for inexact \"on\" key matching\n+  /// Currently, the \"by\" key must be of an integer or timestamp type\n+  std::vector<FieldRef> by_key;\n+  /// Tolerance for inexact \"on\" key matching.  Must be non-negative.\n   int64_t tolerance;\n\nReview Comment:\n   It's interpreted using the [time unit of the timestamp](https://github.com/apache/arrow/pull/13880/files#diff-5789a42aebc3bd0f5a6db687c78ab0c3eef3e316982f99fe9e0ea21fabed354cR1009-R1012).\n\n\n\n",
                    "created": "2022-08-16T15:27:08.150+0000",
                    "updated": "2022-08-16T15:27:08.150+0000",
                    "started": "2022-08-16T15:27:08.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801026",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#discussion_r946930058\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -37,13 +39,41 @@\n namespace arrow {\n namespace compute {\n \n-// Remove this when multiple keys and/or types is supported\n-typedef int32_t KeyType;\n+template <typename T, typename V = typename T::value_type>\n+inline typename T::const_iterator std_find(const T& container, const V& val) {\n+  return std::find(container.begin(), container.end(), val);\n+}\n+\n+template <typename T, typename V = typename T::value_type>\n+inline bool std_has(const T& container, const V& val) {\n+  return container.end() != std_find(container, val);\n+}\n+\n+typedef uint64_t KeyType;\n+typedef uint64_t TimeType;\n\nReview Comment:\n   Actually - not a big deal I think since we refer to the word \"time\" quite a bit in the implmentation\n\n\n\n",
                    "created": "2022-08-16T15:27:48.195+0000",
                    "updated": "2022-08-16T15:27:48.195+0000",
                    "started": "2022-08-16T15:27:48.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801027",
                    "issueId": "13476828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/worklog/801028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on PR #13880:\nURL: https://github.com/apache/arrow/pull/13880#issuecomment-1216797617\n\n   > A MacOS job failed on timeout of the AsofJoin tester but it looks like it took much longer than expected. @icexelloss, any idea how this should be handled?\r\n   \r\n   I am not sure and might seek help from the maintainers. \n\n\n",
                    "created": "2022-08-16T15:29:53.773+0000",
                    "updated": "2022-08-16T15:29:53.773+0000",
                    "started": "2022-08-16T15:29:53.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801028",
                    "issueId": "13476828"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 87600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@e90ff0d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@dee56b3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5124fb4c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2e006415[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cc4a790[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c0ffea9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a8788ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@478a7976[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e3bbe30[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6d22e3e8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b345ec3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2fe1c11a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 87600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 08 20:06:34 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-08T20:06:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17412/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-08-15T13:02:27.000+0000",
        "updated": "2022-09-08T23:33:01.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, AsofJoin supports a single (column) key of a limited set of types. This issue will extend the support to multiple keys and types.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "24h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 87600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] AsofJoin multiple keys and types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476828/comment/17601994",
                    "id": "17601994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 13880\r\nhttps://github.com/apache/arrow/pull/13880",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-09-08T20:06:34.644+0000",
                    "updated": "2022-09-08T20:06:34.644+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z17rc0:",
        "customfield_12314139": null
    }
}