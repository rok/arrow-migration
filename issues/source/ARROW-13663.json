{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13395923",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923",
    "key": "ARROW-13663",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "beginner",
            "easy",
            "good-first-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
            "name": "dhruv9vats",
            "key": "dhruv9vats",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Dhruv Vats",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13663/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/695711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats opened a new pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946\n\n\n   Use a nested class like in https://github.com/apache/arrow/blob/e401246fc0d500fb43e0bad328854e6c8772509b/cpp/src/arrow/util/iterator.h#L134 to support STL-like iteration of the RecordBatchReader.\r\n   \r\n   TODO:\r\n   \r\n   - [ ] Add tests\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T12:45:48.888+0000",
                    "updated": "2021-12-14T12:45:48.888+0000",
                    "started": "2021-12-14T12:45:48.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695711",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/695712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#issuecomment-993504264\n\n\n   https://issues.apache.org/jira/browse/ARROW-13663\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T12:46:12.643+0000",
                    "updated": "2021-12-14T12:46:12.643+0000",
                    "started": "2021-12-14T12:46:12.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695712",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/695717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r768633153\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n\nReview comment:\n       Using non-owning raw-pointers\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T12:50:37.243+0000",
                    "updated": "2021-12-14T12:50:37.243+0000",
                    "started": "2021-12-14T12:50:37.243+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695717",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/695726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r768639599\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return batch_ != other.batch_;\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      auto batch = std::move(batch_);\n+      batch_ = RecordBatchEnd();\n+      return batch;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n\nReview comment:\n       This is what `IterationTraits<std::shared_ptr<RecordBatch>>::End()` would have returned, but using it showed the error:\r\n   ```\r\n   incomplete type 'arrow::IterationTraits<std::shared_ptr<arrow::RecordBatch> >' used in nested name specifier\r\n   ```\r\n   which seems due to the abstract nature of the class.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T12:58:48.273+0000",
                    "updated": "2021-12-14T12:58:48.273+0000",
                    "started": "2021-12-14T12:58:48.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695726",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/695871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r768633153\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n\nReview comment:\n       Using non-owning raw-pointers as suggested by @pitrou.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T15:06:10.772+0000",
                    "updated": "2021-12-14T15:06:10.772+0000",
                    "started": "2021-12-14T15:06:10.772+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695871",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/703076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#issuecomment-1004303644\n\n\n   Added some basic tests. \r\n   If more sophisticated ones are also needed, could you give a brief outline of those? @pitrou \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-03T19:21:46.009+0000",
                    "updated": "2022-01-03T19:21:46.009+0000",
                    "started": "2022-01-03T19:21:46.009+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703076",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/703375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r778168422\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return batch_ != other.batch_;\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      auto batch = std::move(batch_);\n+      batch_ = RecordBatchEnd();\n\nReview comment:\n       It is rather weird for `operator*` to change the stored batch. That means if I use this operator twice, I will get two different results; that sounds rather undesired.\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return batch_ != other.batch_;\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      auto batch = std::move(batch_);\n+      batch_ = RecordBatchEnd();\n+      return batch;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n+      if (!batch_.ok()) {\n+        batch_ = RecordBatchEnd();\n\nReview comment:\n       This means that if an error occurs, the iterator is ended afterwards. I'm not sure why we should do that?\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n\nReview comment:\n       It would be nicer to satisfy the [input iterator requirement](https://en.cppreference.com/w/cpp/named_req/InputIterator), i.e. add type definitions (`value_type`, `reference`) as well as equality and post-increment operators.\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -332,4 +332,72 @@ TEST_F(TestRecordBatch, MakeEmpty) {\n   ASSERT_EQ(empty->num_rows(), 0);\n }\n \n+class TestRecordBatchReader : public TestBase {};\n+\n+TEST_F(TestRecordBatchReader, RangeForLoop) {\n+  const int length = 10;\n+\n+  auto f0 = field(\"f0\", int32());\n+  auto f1 = field(\"f1\", uint8());\n+  auto f2 = field(\"f2\", int16());\n+\n+  auto metadata = key_value_metadata({\"foo\"}, {\"bar\"});\n+\n+  std::vector<std::shared_ptr<Field>> fields = {f0, f1, f2};\n+  auto schema = ::arrow::schema({f0, f1, f2});\n+  auto schema2 = ::arrow::schema({f0, f1});\n+  auto schema3 = ::arrow::schema({f0, f1, f2}, metadata);\n+\n+  auto a0 = MakeRandomArray<Int32Array>(length);\n+  auto a1 = MakeRandomArray<UInt8Array>(length);\n+  auto a2 = MakeRandomArray<Int16Array>(length);\n+\n+  auto b1 = RecordBatch::Make(schema, length, {a0, a1, a2});\n+  auto b2 = RecordBatch::Make(schema3, length, {a0, a1, a2});\n+  auto b3 = RecordBatch::Make(schema2, length, {a0, a1});\n+  auto b4 = RecordBatch::Make(schema, length, {a0, a1, a1});\n+\n+  std::vector<std::shared_ptr<RecordBatch>> batches = {b1, b2, b3, b4};\n+\n+  ASSERT_OK_AND_ASSIGN(auto reader, RecordBatchReader::Make(batches));\n+\n+  int64_t i = 0;\n+  for (auto maybe_batch : *reader) {\n+    ASSERT_OK_AND_ASSIGN(auto batch, maybe_batch);\n+    AssertBatchesEqual(*batch, *batches[i++]);\n+  }\n+}\n+\n+TEST_F(TestRecordBatchReader, BeginEndForLoop) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", uint8());\n+  auto field3 = field(\"f3\", int16());\n\nReview comment:\n       Can you factor out (in the fixture class above) and reuse the test data for these two tests?\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -332,4 +332,72 @@ TEST_F(TestRecordBatch, MakeEmpty) {\n   ASSERT_EQ(empty->num_rows(), 0);\n }\n \n+class TestRecordBatchReader : public TestBase {};\n+\n+TEST_F(TestRecordBatchReader, RangeForLoop) {\n+  const int length = 10;\n+\n+  auto f0 = field(\"f0\", int32());\n+  auto f1 = field(\"f1\", uint8());\n+  auto f2 = field(\"f2\", int16());\n+\n+  auto metadata = key_value_metadata({\"foo\"}, {\"bar\"});\n+\n+  std::vector<std::shared_ptr<Field>> fields = {f0, f1, f2};\n+  auto schema = ::arrow::schema({f0, f1, f2});\n+  auto schema2 = ::arrow::schema({f0, f1});\n+  auto schema3 = ::arrow::schema({f0, f1, f2}, metadata);\n+\n+  auto a0 = MakeRandomArray<Int32Array>(length);\n+  auto a1 = MakeRandomArray<UInt8Array>(length);\n+  auto a2 = MakeRandomArray<Int16Array>(length);\n+\n+  auto b1 = RecordBatch::Make(schema, length, {a0, a1, a2});\n+  auto b2 = RecordBatch::Make(schema3, length, {a0, a1, a2});\n+  auto b3 = RecordBatch::Make(schema2, length, {a0, a1});\n+  auto b4 = RecordBatch::Make(schema, length, {a0, a1, a1});\n+\n+  std::vector<std::shared_ptr<RecordBatch>> batches = {b1, b2, b3, b4};\n+\n+  ASSERT_OK_AND_ASSIGN(auto reader, RecordBatchReader::Make(batches));\n+\n+  int64_t i = 0;\n+  for (auto maybe_batch : *reader) {\n+    ASSERT_OK_AND_ASSIGN(auto batch, maybe_batch);\n+    AssertBatchesEqual(*batch, *batches[i++]);\n+  }\n+}\n\nReview comment:\n       After the loop, check that all batches were seen: `ASSERT_EQ(i, static_cast<int64_t>(batches.size()))`\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return batch_ != other.batch_;\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      auto batch = std::move(batch_);\n+      batch_ = RecordBatchEnd();\n+      return batch;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n+      if (!batch_.ok()) {\n+        batch_ = RecordBatchEnd();\n+        return;\n+      }\n+      batch_ = reader_->Next();\n\nReview comment:\n       What if `reader_` is null, for example if this is called on `RecordBatchReader::end()`?\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()) {}\n\nReview comment:\n       Do you leave `reader_` undefined here?\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -332,4 +332,72 @@ TEST_F(TestRecordBatch, MakeEmpty) {\n   ASSERT_EQ(empty->num_rows(), 0);\n }\n \n+class TestRecordBatchReader : public TestBase {};\n+\n+TEST_F(TestRecordBatchReader, RangeForLoop) {\n+  const int length = 10;\n+\n+  auto f0 = field(\"f0\", int32());\n+  auto f1 = field(\"f1\", uint8());\n+  auto f2 = field(\"f2\", int16());\n+\n+  auto metadata = key_value_metadata({\"foo\"}, {\"bar\"});\n+\n+  std::vector<std::shared_ptr<Field>> fields = {f0, f1, f2};\n+  auto schema = ::arrow::schema({f0, f1, f2});\n+  auto schema2 = ::arrow::schema({f0, f1});\n+  auto schema3 = ::arrow::schema({f0, f1, f2}, metadata);\n+\n+  auto a0 = MakeRandomArray<Int32Array>(length);\n+  auto a1 = MakeRandomArray<UInt8Array>(length);\n+  auto a2 = MakeRandomArray<Int16Array>(length);\n+\n+  auto b1 = RecordBatch::Make(schema, length, {a0, a1, a2});\n+  auto b2 = RecordBatch::Make(schema3, length, {a0, a1, a2});\n+  auto b3 = RecordBatch::Make(schema2, length, {a0, a1});\n+  auto b4 = RecordBatch::Make(schema, length, {a0, a1, a1});\n+\n+  std::vector<std::shared_ptr<RecordBatch>> batches = {b1, b2, b3, b4};\n+\n+  ASSERT_OK_AND_ASSIGN(auto reader, RecordBatchReader::Make(batches));\n+\n+  int64_t i = 0;\n+  for (auto maybe_batch : *reader) {\n+    ASSERT_OK_AND_ASSIGN(auto batch, maybe_batch);\n+    AssertBatchesEqual(*batch, *batches[i++]);\n\nReview comment:\n       To avoid crashes or undefined behabiour, first `ASSERT_LT(i, static_cast<int64_t>(batches.size()))`.\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -332,4 +332,72 @@ TEST_F(TestRecordBatch, MakeEmpty) {\n   ASSERT_EQ(empty->num_rows(), 0);\n }\n \n+class TestRecordBatchReader : public TestBase {};\n+\n+TEST_F(TestRecordBatchReader, RangeForLoop) {\n+  const int length = 10;\n+\n+  auto f0 = field(\"f0\", int32());\n+  auto f1 = field(\"f1\", uint8());\n+  auto f2 = field(\"f2\", int16());\n+\n+  auto metadata = key_value_metadata({\"foo\"}, {\"bar\"});\n+\n+  std::vector<std::shared_ptr<Field>> fields = {f0, f1, f2};\n+  auto schema = ::arrow::schema({f0, f1, f2});\n+  auto schema2 = ::arrow::schema({f0, f1});\n+  auto schema3 = ::arrow::schema({f0, f1, f2}, metadata);\n\nReview comment:\n       Hmm, it does not really make sense to iterate over record batches with different schemas. You should simplify this by using the same schema.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T15:39:18.804+0000",
                    "updated": "2022-01-04T15:39:18.804+0000",
                    "started": "2022-01-04T15:39:18.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703375",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/703390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r778203973\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,53 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n\nReview comment:\n       Pardon the lack of rigor, this was a direct translation of the nested class at https://github.com/apache/arrow/blob/31a07be1d9dc2f7c9720cc0fdcd7f083d947aba1/cpp/src/arrow/util/iterator.h#L134 to RecordBatchReader. I'll be sure to add these definitions.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T16:10:54.953+0000",
                    "updated": "2022-01-04T16:10:54.953+0000",
                    "started": "2022-01-04T16:10:54.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703390",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/704573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r779597891\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    using iterator_category = std::input_iterator_tag;\n+    using difference_type = std::ptrdiff_t;\n+    using value_type = std::shared_ptr<RecordBatch>;\n+    using pointer = value_type const*;\n+    using reference = value_type const&;\n+\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()), reader_(NULLPTR) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator==(const RecordBatchReaderIterator& other) const {\n+      return batch_ == other.batch_;\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return !(*this == other);\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      return batch_;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+    RecordBatchReaderIterator operator++(int) {\n+      RecordBatchReaderIterator tmp(*this);\n+      Next();\n+      return tmp;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n\nReview comment:\n       I've tried to add all the basic things you mentioned. But is this the correct way to implement the `Next` function here, because it feels like something is missing here?\r\n   Is there supposed to be an additional check here to see if the end has been reached? (Sorry if I'm overlooking something obvious and this is a naive question) @pitrou \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T14:46:16.615+0000",
                    "updated": "2022-01-06T14:46:16.615+0000",
                    "started": "2022-01-06T14:46:16.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704573",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r781218663\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n\nReview comment:\n       Nit, but since this is a nested class, perhaps calling it `Iterator` is sufficient?\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    using iterator_category = std::input_iterator_tag;\n+    using difference_type = std::ptrdiff_t;\n+    using value_type = std::shared_ptr<RecordBatch>;\n+    using pointer = value_type const*;\n+    using reference = value_type const&;\n+\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()), reader_(NULLPTR) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator==(const RecordBatchReaderIterator& other) const {\n+      return batch_ == other.batch_;\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return !(*this == other);\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      return batch_;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+    RecordBatchReaderIterator operator++(int) {\n+      RecordBatchReaderIterator tmp(*this);\n+      Next();\n+      return tmp;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n\nReview comment:\n       I don't think anything more is required, no. The caller should notice that the iterator is equal to `end()`, and then stop reading.\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -350,4 +350,64 @@ TEST_F(TestRecordBatch, MakeEmpty) {\n   ASSERT_EQ(empty->num_rows(), 0);\n }\n \n+class TestRecordBatchReader : public ::testing::Test {\n+ public:\n+  void SetUp() override { MakeBatchesAndReader(100); }\n+\n+ protected:\n+  void MakeBatchesAndReader(int length) {\n+    auto field1 = field(\"f1\", int32());\n+    auto field2 = field(\"f2\", uint8());\n+    auto field3 = field(\"f3\", int16());\n+\n+    auto schema = ::arrow::schema({field1, field2, field3});\n+\n+    random::RandomArrayGenerator gen(42);\n+\n+    auto array1_1 = gen.ArrayOf(int32(), length);\n+    auto array1_2 = gen.ArrayOf(int32(), length);\n+    auto array1_3 = gen.ArrayOf(int32(), length);\n+\n+    auto array2_1 = gen.ArrayOf(uint8(), length);\n+    auto array2_2 = gen.ArrayOf(uint8(), length);\n+    auto array2_3 = gen.ArrayOf(uint8(), length);\n+\n+    auto array3_1 = gen.ArrayOf(int16(), length);\n+    auto array3_2 = gen.ArrayOf(int16(), length);\n+    auto array3_3 = gen.ArrayOf(int16(), length);\n+\n+    auto batch1 = RecordBatch::Make(schema, length, {array1_1, array2_1, array3_1});\n+    auto batch2 = RecordBatch::Make(schema, length, {array1_2, array2_2, array3_2});\n+    auto batch3 = RecordBatch::Make(schema, length, {array1_3, array2_3, array3_3});\n+\n+    batches_ = {batch1, batch2, batch3};\n+\n+    ASSERT_OK_AND_ASSIGN(reader_, RecordBatchReader::Make(batches_));\n+  }\n+  std::vector<std::shared_ptr<RecordBatch>> batches_;\n+  std::shared_ptr<RecordBatchReader> reader_;\n+};\n+\n+TEST_F(TestRecordBatchReader, RangeForLoop) {\n+  int64_t i = 0;\n+  ASSERT_LT(i, static_cast<int64_t>(batches_.size()));\n\nReview comment:\n       This check was meant to go inside the loop, before `i` is incremented.\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    using iterator_category = std::input_iterator_tag;\n+    using difference_type = std::ptrdiff_t;\n+    using value_type = std::shared_ptr<RecordBatch>;\n+    using pointer = value_type const*;\n+    using reference = value_type const&;\n+\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()), reader_(NULLPTR) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator==(const RecordBatchReaderIterator& other) const {\n+      return batch_ == other.batch_;\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return !(*this == other);\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      return batch_;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+    RecordBatchReaderIterator operator++(int) {\n+      RecordBatchReaderIterator tmp(*this);\n+      Next();\n+      return tmp;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n+      if (reader_ == NULLPTR) {\n+        batch_ = RecordBatchEnd();\n+        return;\n+      }\n+      batch_ = reader_->Next();\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> batch_;\n+    RecordBatchReader* reader_;\n+  };\n+\n+  RecordBatchReaderIterator begin() { return RecordBatchReaderIterator(this); }\n+\n+  RecordBatchReaderIterator end() { return RecordBatchReaderIterator(); }\n\nReview comment:\n       Can you add a terse docstring to these two public methods?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-10T14:05:22.230+0000",
                    "updated": "2022-01-10T14:05:22.230+0000",
                    "started": "2022-01-10T14:05:22.230+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706172",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r782012491\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n\nReview comment:\n       In https://github.com/apache/arrow/blob/d88e23273fd4eb7945a5fb94cfdb6315f412ea83/cpp/src/arrow/record_batch.cc#L369 the name `Iterator` is in conflict.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T10:30:27.645+0000",
                    "updated": "2022-01-11T10:30:27.645+0000",
                    "started": "2022-01-11T10:30:27.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706758",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r782060241\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n\nReview comment:\n       Other options: \r\n   - `RangeIterator` as in https://github.com/apache/arrow/blob/d88e23273fd4eb7945a5fb94cfdb6315f412ea83/cpp/src/arrow/util/iterator.h#L134\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T11:33:56.433+0000",
                    "updated": "2022-01-11T11:33:56.433+0000",
                    "started": "2022-01-11T11:33:56.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706791",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r782081749\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,68 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    using iterator_category = std::input_iterator_tag;\n+    using difference_type = std::ptrdiff_t;\n+    using value_type = std::shared_ptr<RecordBatch>;\n+    using pointer = value_type const*;\n+    using reference = value_type const&;\n+\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()), reader_(NULLPTR) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator==(const RecordBatchReaderIterator& other) const {\n+      return batch_ == other.batch_;\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return !(*this == other);\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      return batch_;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+    RecordBatchReaderIterator operator++(int) {\n+      RecordBatchReaderIterator tmp(*this);\n+      Next();\n+      return tmp;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n+      if (reader_ == NULLPTR) {\n+        batch_ = RecordBatchEnd();\n+        return;\n+      }\n+      batch_ = reader_->Next();\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> batch_;\n+    RecordBatchReader* reader_;\n+  };\n+  /// \\brief Returns an iterator to the first record batch in the stream\n+  RecordBatchReaderIterator begin() { return RecordBatchReaderIterator(this); }\n\nReview comment:\n       Is the use of \"in the stream\" okay here, or should it be removed or replaced?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T12:05:14.130+0000",
                    "updated": "2022-01-11T12:05:14.130+0000",
                    "started": "2022-01-11T12:05:14.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706805",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706836",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r782142890\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,67 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n\nReview comment:\n       Ah, fair enough. We can keep it like this, then.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T13:29:20.319+0000",
                    "updated": "2022-01-11T13:29:20.319+0000",
                    "started": "2022-01-11T13:29:20.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706836",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r782143512\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,68 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    using iterator_category = std::input_iterator_tag;\n+    using difference_type = std::ptrdiff_t;\n+    using value_type = std::shared_ptr<RecordBatch>;\n+    using pointer = value_type const*;\n+    using reference = value_type const&;\n+\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()), reader_(NULLPTR) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator==(const RecordBatchReaderIterator& other) const {\n+      return batch_ == other.batch_;\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return !(*this == other);\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      return batch_;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+    RecordBatchReaderIterator operator++(int) {\n+      RecordBatchReaderIterator tmp(*this);\n+      Next();\n+      return tmp;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n+      if (reader_ == NULLPTR) {\n+        batch_ = RecordBatchEnd();\n+        return;\n+      }\n+      batch_ = reader_->Next();\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> batch_;\n+    RecordBatchReader* reader_;\n+  };\n+  /// \\brief Returns an iterator to the first record batch in the stream\n+  RecordBatchReaderIterator begin() { return RecordBatchReaderIterator(this); }\n\nReview comment:\n       It's ok, however please use \"Return\" (infinitive) not \"Returns\" (present tense).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T13:30:08.070+0000",
                    "updated": "2022-01-11T13:30:08.070+0000",
                    "started": "2022-01-11T13:30:08.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706837",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/706965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dhruv9vats commented on a change in pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#discussion_r782293251\n\n\n\n##########\nFile path: cpp/src/arrow/record_batch.h\n##########\n@@ -234,6 +234,68 @@ class ARROW_EXPORT RecordBatchReader {\n     return batch;\n   }\n \n+  class RecordBatchReaderIterator {\n+   public:\n+    using iterator_category = std::input_iterator_tag;\n+    using difference_type = std::ptrdiff_t;\n+    using value_type = std::shared_ptr<RecordBatch>;\n+    using pointer = value_type const*;\n+    using reference = value_type const&;\n+\n+    RecordBatchReaderIterator() : batch_(RecordBatchEnd()), reader_(NULLPTR) {}\n+\n+    explicit RecordBatchReaderIterator(RecordBatchReader* reader)\n+        : batch_(RecordBatchEnd()), reader_(reader) {\n+      Next();\n+    }\n+\n+    bool operator==(const RecordBatchReaderIterator& other) const {\n+      return batch_ == other.batch_;\n+    }\n+\n+    bool operator!=(const RecordBatchReaderIterator& other) const {\n+      return !(*this == other);\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> operator*() {\n+      ARROW_RETURN_NOT_OK(batch_.status());\n+\n+      return batch_;\n+    }\n+\n+    RecordBatchReaderIterator& operator++() {\n+      Next();\n+      return *this;\n+    }\n+\n+    RecordBatchReaderIterator operator++(int) {\n+      RecordBatchReaderIterator tmp(*this);\n+      Next();\n+      return tmp;\n+    }\n+\n+   private:\n+    std::shared_ptr<RecordBatch> RecordBatchEnd() {\n+      return std::shared_ptr<RecordBatch>(NULLPTR);\n+    }\n+\n+    void Next() {\n+      if (reader_ == NULLPTR) {\n+        batch_ = RecordBatchEnd();\n+        return;\n+      }\n+      batch_ = reader_->Next();\n+    }\n+\n+    Result<std::shared_ptr<RecordBatch>> batch_;\n+    RecordBatchReader* reader_;\n+  };\n+  /// \\brief Returns an iterator to the first record batch in the stream\n+  RecordBatchReaderIterator begin() { return RecordBatchReaderIterator(this); }\n\nReview comment:\n       Sure\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T16:01:09.209+0000",
                    "updated": "2022-01-11T16:01:09.209+0000",
                    "started": "2022-01-11T16:01:09.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706965",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/707677",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-12T17:30:21.715+0000",
                    "updated": "2022-01-12T17:30:21.715+0000",
                    "started": "2022-01-12T17:30:21.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707677",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/707678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#issuecomment-1011286586\n\n\n   Thank you very much @dhruv9vats !\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-12T17:30:34.784+0000",
                    "updated": "2022-01-12T17:30:34.784+0000",
                    "started": "2022-01-12T17:30:34.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707678",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/707680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#issuecomment-1011287163\n\n\n   Benchmark runs are scheduled for baseline = 7303b51ad2f9ac3f0c59bee7221771552ed4eb46 and contender = 7b955fc6c980e033dc112466f502b325cf5575ce. 7b955fc6c980e033dc112466f502b325cf5575ce is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/1c173a5cb70b410a8fb9c54181295aad...19db914461e04f27939ace96d7df7d9d/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f9a5a884a48447148be5a8ba9ba0f689...ed090a9faefb4b33a943285916c349fb/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/4f575a69492747e3a6a1ee430b2e7b9f...1bbf1e64d0ab4970a725bf145f37a3cf/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-12T17:31:19.734+0000",
                    "updated": "2022-01-12T17:31:19.734+0000",
                    "started": "2022-01-12T17:31:19.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707680",
                    "issueId": "13395923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/worklog/707728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11946:\nURL: https://github.com/apache/arrow/pull/11946#issuecomment-1011287163\n\n\n   Benchmark runs are scheduled for baseline = 7303b51ad2f9ac3f0c59bee7221771552ed4eb46 and contender = 7b955fc6c980e033dc112466f502b325cf5575ce. 7b955fc6c980e033dc112466f502b325cf5575ce is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/1c173a5cb70b410a8fb9c54181295aad...19db914461e04f27939ace96d7df7d9d/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f9a5a884a48447148be5a8ba9ba0f689...ed090a9faefb4b33a943285916c349fb/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/4f575a69492747e3a6a1ee430b2e7b9f...1bbf1e64d0ab4970a725bf145f37a3cf/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-12T17:51:36.091+0000",
                    "updated": "2022-01-12T17:51:36.091+0000",
                    "started": "2022-01-12T17:51:36.091+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707728",
                    "issueId": "13395923"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@761ed772[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@787e9ab5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75c1c3b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@79664488[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a518849[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@e184162[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@753fe76d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3eb6bf46[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68f36b19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@242c2434[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e22bb53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@25e56d5e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 12 17:30:11 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-12T17:30:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13663/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-08-18T15:24:00.000+0000",
        "updated": "2022-01-13T15:30:10.000+0000",
        "timeoriginalestimate": null,
        "description": "Our custom {{Iterator<T>}} has support for STL-like iteration (allowing natural for loops), but {{RecordBatchReader}} doesn't. Adding STL-like iteration would be a significant quality of life improvement for developers",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] RecordBatchReader should support STL-like iteration",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17444735",
                    "id": "17444735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "May I give this is a shot?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-16T18:50:13.097+0000",
                    "updated": "2021-11-16T18:50:13.097+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17444761",
                    "id": "17444761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Go for it! If no one has assigned themselves to the issue, it's generally fair game. I've assigned it to you now.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-11-16T19:41:14.175+0000",
                    "updated": "2021-11-16T19:41:14.175+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17445790",
                    "id": "17445790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "From what I understand, to support STL-like iteration, the following operators will have to be overloaded:\r\n\r\n++ (increment) (also decrement?)\r\n\r\n{{*}} (dereference)\r\n\r\n!= (inequality)\r\n\r\n== (equality)\r\n\r\nright?\r\n\r\n\u00a0\r\n\r\nAlso, I'm trying to find my way through the code; in this context, could some basic guidelines be provided? Like how should this functionality be implemented? Whether to use a nested class like in the case of {{{}Iterator<T>{}}}, or some other way?\r\n\r\n\u00a0\r\n\r\nSorry if I'm overlooking something obvious.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-18T09:46:38.649+0000",
                    "updated": "2021-11-18T09:53:18.616+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17445886",
                    "id": "17445886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Yes, a nested class sounds fine. You can just try to reuse what was done for {{Iterator<T>}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-18T12:14:31.978+0000",
                    "updated": "2021-11-18T12:14:31.978+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17455363",
                    "id": "17455363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~dhruv9vats] If you face any problem trying to implement this, please don't hesitate to mention!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-08T16:24:37.438+0000",
                    "updated": "2021-12-08T16:24:37.438+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17455380",
                    "id": "17455380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Hey [~apitrou],\r\n\r\nExtremely sorry for the delay. Was caught up in unavoidable school work but am now actively working on this and will keep you posted.\u00a0\r\n\r\nApologies again.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-12-08T16:52:12.243+0000",
                    "updated": "2021-12-08T16:52:12.243+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17455383",
                    "id": "17455383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "It's fine, I just wanted to make sure you're still interested :-)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-08T16:56:59.502+0000",
                    "updated": "2021-12-08T16:56:59.502+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17456692",
                    "id": "17456692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Because the {{RecordBatchReader}} is an abstract class, is there a straightforward way to define STL like iterators for it?\r\n\r\nI tried using {{{}shared_ptr as given in Iterator<T>{}}}, but can't use them as the class is abstract. Does something like {{shared_from_this()}} have to be used? [~apitrou]\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-12-09T19:26:15.403+0000",
                    "updated": "2021-12-13T17:11:35.777+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17458574",
                    "id": "17458574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Given the typical usage of STL iterators (i.e. mostly local and synchronous), I think the iterator can simply be non-owning, so you only need a raw pointer to the {{{}RecordBatchReader{}}}.\u00a0 [~bkietz]\u00a0 What do you think?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-13T17:45:24.601+0000",
                    "updated": "2021-12-13T17:45:24.601+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17466586",
                    "id": "17466586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Sorry for all the delay. Written theory exams should not exist anymore.\r\n\r\nDoes the basic structure in the PR look correct?\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhruv9vats",
                        "name": "dhruv9vats",
                        "key": "dhruv9vats",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Dhruv Vats",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-12-29T20:29:05.128+0000",
                    "updated": "2021-12-29T20:29:05.128+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17466946",
                    "id": "17466946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Yes, the basic structure looks ok. You'll probably need to add some tests before I review it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-30T17:17:00.084+0000",
                    "updated": "2021-12-30T17:17:00.084+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395923/comment/17474743",
                    "id": "17474743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11946\n[https://github.com/apache/arrow/pull/11946]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-12T17:30:11.231+0000",
                    "updated": "2022-01-12T17:30:11.231+0000"
                }
            ],
            "maxResults": 12,
            "total": 12,
            "startAt": 0
        },
        "customfield_12311820": "0|z0u0ug:",
        "customfield_12314139": null
    }
}