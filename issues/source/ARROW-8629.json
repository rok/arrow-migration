{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13301881",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881",
    "key": "ARROW-8629",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vertexclique",
            "name": "vertexclique",
            "key": "vertexclique",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=vertexclique&avatarId=41431",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vertexclique&avatarId=41431",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vertexclique&avatarId=41431",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vertexclique&avatarId=41431"
            },
            "displayName": "Mahmut Bulut",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vertexclique",
            "name": "vertexclique",
            "key": "vertexclique",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=vertexclique&avatarId=41431",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vertexclique&avatarId=41431",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vertexclique&avatarId=41431",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vertexclique&avatarId=41431"
            },
            "displayName": "Mahmut Bulut",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vertexclique",
            "name": "vertexclique",
            "key": "vertexclique",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=vertexclique&avatarId=41431",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vertexclique&avatarId=41431",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vertexclique&avatarId=41431",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vertexclique&avatarId=41431"
            },
            "displayName": "Mahmut Bulut",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8629/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/428685",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique opened a new pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061\n\n\n   1. Solves UB passing through OS.\r\n   2. Improves performance by removing indirections at intermediate array builds. (Increases throughput and decreases latency)\r\n   \r\n   <details>\r\n     <summary>Click to see Benchmark Output!</summary>\r\n     \r\n     ```\r\n   add 512                 time:   [18.299 us 18.416 us 18.542 us]\r\n                           change: [+0.7553% +1.9764% +3.0260%] (p = 0.00 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 2 outliers among 100 measurements (2.00%)\r\n     1 (1.00%) high mild\r\n     1 (1.00%) high severe\r\n   \r\n   add 512 simd            time:   [15.412 us 15.521 us 15.642 us]\r\n                           change: [-2.2152% -0.7069% +0.7204%] (p = 0.36 > 0.05)\r\n                           No change in performance detected.\r\n   Found 3 outliers among 100 measurements (3.00%)\r\n     2 (2.00%) high mild\r\n     1 (1.00%) high severe\r\n   \r\n   subtract 512            time:   [17.845 us 17.941 us 18.033 us]\r\n                           change: [-3.4447% -2.3703% -1.3902%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 4 outliers among 100 measurements (4.00%)\r\n     2 (2.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n   subtract 512 simd       time:   [15.237 us 15.359 us 15.499 us]\r\n                           change: [-3.2620% -0.8411% +1.0491%] (p = 0.49 > 0.05)\r\n                           No change in performance detected.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     5 (5.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n   multiply 512            time:   [17.737 us 17.854 us 17.991 us]\r\n                           change: [-3.8368% -2.6758% -1.4903%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     1 (1.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n   multiply 512 simd       time:   [15.158 us 15.331 us 15.536 us]\r\n                           change: [-3.5028% -1.6229% +0.4772%] (p = 0.15 > 0.05)\r\n                           No change in performance detected.\r\n   Found 9 outliers among 100 measurements (9.00%)\r\n     1 (1.00%) high mild\r\n     8 (8.00%) high severe\r\n   \r\n   divide 512              time:   [18.429 us 18.563 us 18.697 us]\r\n                           change: [-1.6791% -0.2733% +1.1091%] (p = 0.70 > 0.05)\r\n                           No change in performance detected.\r\n   Found 23 outliers among 100 measurements (23.00%)\r\n     8 (8.00%) low mild\r\n     8 (8.00%) high mild\r\n     7 (7.00%) high severe\r\n   \r\n   divide 512 simd         time:   [16.719 us 16.799 us 16.884 us]\r\n                           change: [-2.6393% -1.7489% -0.9737%] (p = 0.00 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 1 outliers among 100 measurements (1.00%)\r\n     1 (1.00%) high severe\r\n   \r\n   sum 512 no simd         time:   [8.1375 us 8.1648 us 8.1968 us]\r\n                           change: [-4.7533% -3.5008% -2.0949%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     3 (3.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   limit 512, 256 no simd  time:   [7.6325 us 7.6738 us 7.7205 us]\r\n                           change: [-1.1158% +0.6820% +2.4545%] (p = 0.46 > 0.05)\r\n                           No change in performance detected.\r\n   Found 4 outliers among 100 measurements (4.00%)\r\n     2 (2.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n   limit 512, 512 no simd  time:   [7.6268 us 7.6679 us 7.7144 us]\r\n                           change: [-1.9252% +0.2950% +2.5081%] (p = 0.81 > 0.05)\r\n                           No change in performance detected.\r\n   Found 3 outliers among 100 measurements (3.00%)\r\n     1 (1.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/array_from_vec-cc4617b21b5f717d\r\n   array_from_vec 128      time:   [867.08 ns 878.05 ns 890.59 ns]\r\n                           change: [-4.2805% -1.7058% +0.6140%] (p = 0.21 > 0.05)\r\n                           No change in performance detected.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   array_from_vec 256      time:   [972.12 ns 979.21 ns 986.07 ns]\r\n                           change: [-4.5408% -2.1099% +0.5039%] (p = 0.11 > 0.05)\r\n                           No change in performance detected.\r\n   Found 3 outliers among 100 measurements (3.00%)\r\n     3 (3.00%) high severe\r\n   \r\n   array_from_vec 512      time:   [1.2980 us 1.3059 us 1.3137 us]\r\n                           change: [-5.8054% -2.8723% +0.0052%] (p = 0.05 > 0.05)\r\n                           No change in performance detected.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     1 (1.00%) low mild\r\n     2 (2.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/boolean_kernels-4f1add90b9dd7b4c\r\n   and                     time:   [46.317 us 46.515 us 46.730 us]\r\n                           change: [-3.8904% -1.6471% +0.6492%] (p = 0.21 > 0.05)\r\n                           No change in performance detected.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     1 (1.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   and simd                time:   [10.781 us 10.852 us 10.938 us]\r\n                           change: [-11.091% -9.3126% -7.3149%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   or                      time:   [46.131 us 46.346 us 46.582 us]\r\n                           change: [-10.908% -8.7461% -6.1048%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     3 (3.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n   or simd                 time:   [10.728 us 10.783 us 10.844 us]\r\n                           change: [-12.225% -10.449% -8.7204%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     5 (5.00%) high mild\r\n     1 (1.00%) high severe\r\n   \r\n   not                     time:   [25.311 us 25.406 us 25.512 us]\r\n                           change: [-14.527% -12.309% -9.2841%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   not simd                time:   [5.6415 us 5.6910 us 5.7399 us]\r\n                           change: [-8.8171% -6.8428% -4.7340%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 11 outliers among 100 measurements (11.00%)\r\n     6 (6.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/builder-6a49123b1fedb178\r\n   bench_primitive         time:   [334.25 us 337.08 us 340.41 us]\r\n                           thrpt:  [11.475 GiB/s 11.588 GiB/s 11.687 GiB/s]\r\n                    change:\r\n                           time:   [-11.214% -6.6152% -2.5522%] (p = 0.00 < 0.05)\r\n                           thrpt:  [+2.6191% +7.0838% +12.630%]\r\n                           Performance has improved.\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     4 (4.00%) high mild\r\n     8 (8.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/cast_kernels-fe4a160bda20f75b\r\n   cast int32 to int32 512 time:   [674.87 ns 677.20 ns 679.66 ns]\r\n                           change: [-4.9499% -2.4753% +1.3820%] (p = 0.07 > 0.05)\r\n                           No change in performance detected.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     3 (3.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast int32 to uint32 512\r\n                           time:   [13.541 us 13.629 us 13.734 us]\r\n                           change: [-10.276% -7.0629% -3.5614%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     4 (4.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast int32 to float32 512\r\n                           time:   [13.871 us 13.967 us 14.085 us]\r\n                           change: [-6.5555% -3.4718% -0.4564%] (p = 0.02 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     3 (3.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   cast int32 to float64 512\r\n                           time:   [13.864 us 13.918 us 13.978 us]\r\n                           change: [-9.2226% -7.3604% -5.0705%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     1 (1.00%) high mild\r\n     7 (7.00%) high severe\r\n   \r\n   cast int32 to int64 512 time:   [13.957 us 14.068 us 14.199 us]\r\n                           change: [-12.117% -10.875% -9.5831%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     4 (4.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast float32 to int32 512\r\n                           time:   [14.655 us 14.715 us 14.783 us]\r\n                           change: [-17.597% -15.300% -12.720%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     2 (2.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast float64 to float32 512\r\n                           time:   [15.287 us 15.536 us 15.815 us]\r\n                           change: [-6.1582% -4.8992% -3.6371%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 21 outliers among 100 measurements (21.00%)\r\n     1 (1.00%) low severe\r\n     5 (5.00%) low mild\r\n     5 (5.00%) high mild\r\n     10 (10.00%) high severe\r\n   \r\n   cast float64 to uint64 512\r\n                           time:   [14.915 us 15.027 us 15.145 us]\r\n                           change: [-12.399% -10.036% -8.1195%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 2 outliers among 100 measurements (2.00%)\r\n     2 (2.00%) high mild\r\n   \r\n   cast int64 to int32 512 time:   [13.810 us 13.924 us 14.058 us]\r\n                           change: [-7.0986% -4.1922% -1.6775%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     2 (2.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast date64 to date32 512\r\n                           time:   [16.246 us 16.344 us 16.439 us]\r\n                           change: [-5.0859% -2.4719% -0.2628%] (p = 0.05 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     2 (2.00%) low mild\r\n     3 (3.00%) high mild\r\n     7 (7.00%) high severe\r\n   \r\n   cast date32 to date64 512\r\n                           time:   [15.791 us 15.882 us 15.976 us]\r\n                           change: [-5.0716% -2.9360% -1.2361%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 3 outliers among 100 measurements (3.00%)\r\n     2 (2.00%) low mild\r\n     1 (1.00%) high severe\r\n   \r\n   cast time32s to time32ms 512\r\n                           time:   [2.0995 us 2.1090 us 2.1177 us]\r\n                           change: [-0.8536% +0.4528% +1.6874%] (p = 0.50 > 0.05)\r\n                           No change in performance detected.\r\n   Found 2 outliers among 100 measurements (2.00%)\r\n     1 (1.00%) low mild\r\n     1 (1.00%) high severe\r\n   \r\n   cast time32s to time64us 512\r\n                           time:   [16.979 us 17.082 us 17.196 us]\r\n                           change: [-2.1463% -0.3436% +1.1561%] (p = 0.71 > 0.05)\r\n                           No change in performance detected.\r\n   Found 15 outliers among 100 measurements (15.00%)\r\n     4 (4.00%) low mild\r\n     7 (7.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast time64ns to time32s 512\r\n                           time:   [18.235 us 18.339 us 18.448 us]\r\n                           change: [-5.2148% -3.9091% -2.6382%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 2 outliers among 100 measurements (2.00%)\r\n     2 (2.00%) high mild\r\n   \r\n   Benchmarking cast timestamp_ns to timestamp_s 512: Collecting 100 samples in estimated 5.0018 s (6.1M iterati                                                                                                             cast timestamp_ns to timestamp_s 512\r\n                           time:   [818.85 ns 824.05 ns 829.93 ns]\r\n                           change: [+6.0716% +8.1383% +10.818%] (p = 0.00 < 0.05)\r\n                           Performance has regressed.\r\n   Found 17 outliers among 100 measurements (17.00%)\r\n     3 (3.00%) high mild\r\n     14 (14.00%) high severe\r\n   \r\n   Benchmarking cast timestamp_ms to timestamp_ns 512: Collecting 100 samples in estimated 5.0134 s (1.8M iterat                                                                                                             cast timestamp_ms to timestamp_ns 512\r\n                           time:   [2.8115 us 2.8219 us 2.8330 us]\r\n                           change: [+0.3325% +2.0477% +3.6332%] (p = 0.01 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     3 (3.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   cast timestamp_ms to i64 512\r\n                           time:   [1.2090 us 1.2182 us 1.2280 us]\r\n                           change: [-2.0055% -0.0832% +1.4288%] (p = 0.93 > 0.05)\r\n                           No change in performance detected.\r\n   Found 3 outliers among 100 measurements (3.00%)\r\n     1 (1.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/comparison_kernels-37b960b99ca4c83f\r\n   eq 512                  time:   [20.573 us 20.680 us 20.786 us]\r\n                           change: [-5.0693% -2.6875% -0.9950%] (p = 0.00 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     5 (5.00%) high mild\r\n   \r\n   eq 512 simd             time:   [20.218 us 20.344 us 20.487 us]\r\n                           change: [-2.8292% -1.7114% -0.7110%] (p = 0.00 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     2 (2.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n   neq 512                 time:   [20.521 us 20.695 us 20.898 us]\r\n                           change: [+2.7209% +4.1109% +5.4791%] (p = 0.00 < 0.05)\r\n                           Performance has regressed.\r\n   Found 13 outliers among 100 measurements (13.00%)\r\n     6 (6.00%) high mild\r\n     7 (7.00%) high severe\r\n   \r\n   neq 512 simd            time:   [19.760 us 19.897 us 20.065 us]\r\n                           change: [-1.4355% +0.4660% +2.3438%] (p = 0.64 > 0.05)\r\n                           No change in performance detected.\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     7 (7.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n   lt 512                  time:   [19.709 us 19.779 us 19.854 us]\r\n                           change: [-4.9646% -2.4118% -0.0782%] (p = 0.05 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     6 (6.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n   lt 512 simd             time:   [19.849 us 20.042 us 20.250 us]\r\n                           change: [-2.6799% -0.3414% +2.3032%] (p = 0.81 > 0.05)\r\n                           No change in performance detected.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     2 (2.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   lt_eq 512               time:   [21.172 us 21.398 us 21.670 us]\r\n                           change: [-1.5189% +0.7017% +2.6062%] (p = 0.53 > 0.05)\r\n                           No change in performance detected.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     7 (7.00%) high mild\r\n     1 (1.00%) high severe\r\n   \r\n   lt_eq 512 simd          time:   [20.667 us 20.881 us 21.119 us]\r\n                           change: [-1.2254% +1.6209% +4.2936%] (p = 0.26 > 0.05)\r\n                           No change in performance detected.\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     3 (3.00%) high mild\r\n     9 (9.00%) high severe\r\n   \r\n   gt 512                  time:   [20.677 us 20.865 us 21.080 us]\r\n                           change: [+0.4445% +2.8196% +4.6280%] (p = 0.00 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 13 outliers among 100 measurements (13.00%)\r\n     2 (2.00%) low mild\r\n     3 (3.00%) high mild\r\n     8 (8.00%) high severe\r\n   \r\n   gt 512 simd             time:   [20.205 us 20.376 us 20.572 us]\r\n                           change: [+1.1167% +3.5786% +6.4322%] (p = 0.00 < 0.05)\r\n                           Performance has regressed.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     1 (1.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   gt_eq 512               time:   [20.388 us 20.457 us 20.530 us]\r\n                           change: [-2.0628% -0.1724% +1.9895%] (p = 0.89 > 0.05)\r\n                           No change in performance detected.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     2 (2.00%) low mild\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   gt_eq 512 simd          time:   [20.050 us 20.158 us 20.266 us]\r\n                           change: [-2.9668% -0.9237% +1.2537%] (p = 0.41 > 0.05)\r\n                           No change in performance detected.\r\n   Found 4 outliers among 100 measurements (4.00%)\r\n     1 (1.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/csv_writer-8ba12ecd5b1b7b63\r\n   record_batches_to_csv   time:   [219.15 us 223.37 us 228.97 us]\r\n                           change: [-8.1368% -4.7450% -1.1190%] (p = 0.01 < 0.05)\r\n                           Performance has improved.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     5 (5.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n        Running /Users/mahmut/projects/arrow/rust/target/release/deps/take_kernels-25a2e28970e1415d\r\n   take u8 256             time:   [19.674 us 19.728 us 19.787 us]\r\n                           change: [-11.093% -8.4831% -5.6285%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     4 (4.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   take u8 512             time:   [37.091 us 37.422 us 37.802 us]\r\n                           change: [-6.8020% -4.5601% -1.5989%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     4 (4.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   take u8 1024            time:   [70.986 us 71.458 us 71.997 us]\r\n                           change: [-3.7991% -1.7970% +1.2059%] (p = 0.14 > 0.05)\r\n                           No change in performance detected.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   take i32 256            time:   [19.762 us 19.829 us 19.901 us]\r\n                           change: [-6.3630% -4.4731% -2.2024%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 9 outliers among 100 measurements (9.00%)\r\n     2 (2.00%) high mild\r\n     7 (7.00%) high severe\r\n   \r\n   take i32 512            time:   [37.087 us 37.233 us 37.401 us]\r\n                           change: [-2.8627% -1.0442% +1.0592%] (p = 0.33 > 0.05)\r\n                           No change in performance detected.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     1 (1.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n   take i32 1024           time:   [72.893 us 73.715 us 74.699 us]\r\n                           change: [-1.8626% +0.0693% +2.4955%] (p = 0.95 > 0.05)\r\n                           No change in performance detected.\r\n   Found 11 outliers among 100 measurements (11.00%)\r\n     7 (7.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   take bool 256           time:   [22.519 us 22.696 us 22.885 us]\r\n                           change: [-0.4679% +1.0003% +3.4266%] (p = 0.39 > 0.05)\r\n                           No change in performance detected.\r\n   Found 22 outliers among 100 measurements (22.00%)\r\n     8 (8.00%) low severe\r\n     6 (6.00%) low mild\r\n     5 (5.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   take bool 512           time:   [41.304 us 41.471 us 41.654 us]\r\n                           change: [-3.0177% -1.0061% +1.3302%] (p = 0.44 > 0.05)\r\n                           No change in performance detected.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   take bool 1024          time:   [80.453 us 80.677 us 80.919 us]\r\n                           change: [-2.8769% -0.7005% +2.0128%] (p = 0.63 > 0.05)\r\n                           No change in performance detected.\r\n   Found 9 outliers among 100 measurements (9.00%)\r\n     2 (2.00%) high mild\r\n     7 (7.00%) high severe\r\n     ```\r\n   </details>\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-29T18:03:13.138+0000",
                    "updated": "2020-04-29T18:03:13.138+0000",
                    "started": "2020-04-29T18:03:13.138+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428685",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/428774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#discussion_r417658203\n\n\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -20,34 +20,56 @@\n \n use std::alloc::Layout;\n use std::mem::align_of;\n+use std::ptr::NonNull;\n \n pub const ALIGNMENT: usize = 64;\n \n+///\n+/// As you can see this is global and lives as long as the program lives.\n+/// Be careful to not write anything to this pointer in any scenario.\n+/// If you use allocation methods shown here you won't have any problems.\n+const BYPASS_PTR: NonNull<u8> = unsafe { NonNull::new_unchecked(0xDEADBEEF as *mut u8) };\n+\n pub fn allocate_aligned(size: usize) -> *mut u8 {\n     unsafe {\n\nReview comment:\n       I'm not familiar with the use case of calling this with zero. Should that even be allowed?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-29T22:51:34.860+0000",
                    "updated": "2020-04-29T22:51:34.860+0000",
                    "started": "2020-04-29T22:51:34.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428774",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/428919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#discussion_r417823393\n\n\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -20,34 +20,56 @@\n \n use std::alloc::Layout;\n use std::mem::align_of;\n+use std::ptr::NonNull;\n \n pub const ALIGNMENT: usize = 64;\n \n+///\n+/// As you can see this is global and lives as long as the program lives.\n+/// Be careful to not write anything to this pointer in any scenario.\n+/// If you use allocation methods shown here you won't have any problems.\n+const BYPASS_PTR: NonNull<u8> = unsafe { NonNull::new_unchecked(0xDEADBEEF as *mut u8) };\n+\n pub fn allocate_aligned(size: usize) -> *mut u8 {\n     unsafe {\n\nReview comment:\n       It is allowed in the language itself, though my personal opinion that this should be allowed neither in this codebase nor in general at the language level. By definition, it still goes to the OS and does the necessary kernel procedure.\r\n   \r\n   I didn't want to change this code piece at first, wanted to fix it at the caller site. But I've discovered that the forgetting this at the caller site or checking it creates yet another responsibility to a newcomer to code. So I've explicitly put it in the place of memory operations.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T07:54:46.356+0000",
                    "updated": "2020-04-30T07:54:46.356+0000",
                    "started": "2020-04-30T07:54:46.356+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428919",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/429383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#discussion_r418434103\n\n\n\n##########\nFile path: rust/arrow/src/util/bit_util.rs\n##########\n@@ -148,11 +148,17 @@ pub fn count_set_bits_offset(data: &[u8], offset: usize, length: usize) -> usize\n /// Returns the ceil of `value`/`divisor`\n #[inline]\n pub fn ceil(value: usize, divisor: usize) -> usize {\n-    let mut result = value / divisor;\n-    if value % divisor != 0 {\n-        result += 1\n-    };\n-    result\n+    if value == 0_usize {\n\nReview comment:\n       what is the motivation for this change? I guess it is not related to zero sized allocation?\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -20,34 +20,56 @@\n \n use std::alloc::Layout;\n use std::mem::align_of;\n+use std::ptr::NonNull;\n \n pub const ALIGNMENT: usize = 64;\n \n+///\n+/// As you can see this is global and lives as long as the program lives.\n+/// Be careful to not write anything to this pointer in any scenario.\n+/// If you use allocation methods shown here you won't have any problems.\n+const BYPASS_PTR: NonNull<u8> = unsafe { NonNull::new_unchecked(0xDEADBEEF as *mut u8) };\n+\n pub fn allocate_aligned(size: usize) -> *mut u8 {\n     unsafe {\n-        let layout = Layout::from_size_align_unchecked(size, ALIGNMENT);\n-        std::alloc::alloc_zeroed(layout)\n+        if size == 0 {\n+            // In a perfect world, there is no need to request zero size allocation.\n+            // Currently, passing zero sized layout to alloc is UB.\n+            // This will dodge allocator api for any type.\n+            BYPASS_PTR.as_mut()\n+        } else {\n+            let layout = Layout::from_size_align_unchecked(size, ALIGNMENT);\n+            std::alloc::alloc_zeroed(layout)\n+        }\n     }\n }\n \n-pub unsafe fn free_aligned(p: *mut u8, size: usize) {\n-    std::alloc::dealloc(p, Layout::from_size_align_unchecked(size, ALIGNMENT));\n+pub unsafe fn free_aligned(ptr: *mut u8, size: usize) {\n+    if size != 0x00 && ptr != BYPASS_PTR.as_mut() {\n+        std::alloc::dealloc(ptr, Layout::from_size_align_unchecked(size, ALIGNMENT));\n+    }\n }\n \n pub unsafe fn reallocate(ptr: *mut u8, old_size: usize, new_size: usize) -> *mut u8 {\n-    let new_ptr = std::alloc::realloc(\n-        ptr,\n-        Layout::from_size_align_unchecked(old_size, ALIGNMENT),\n-        new_size,\n-    );\n-    if !new_ptr.is_null() && new_size > old_size {\n-        new_ptr.add(old_size).write_bytes(0, new_size - old_size);\n+    if old_size == 0x00 && ptr == BYPASS_PTR.as_mut() {\n\nReview comment:\n       is the first condition necessary? what if caller (accidentally) passed a positive `old_size` with the `BYPASS_PTR`? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T06:29:21.000+0000",
                    "updated": "2020-05-01T06:29:21.000+0000",
                    "started": "2020-05-01T06:29:20.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429383",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/429868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#discussion_r418999354\n\n\n\n##########\nFile path: rust/arrow/src/util/bit_util.rs\n##########\n@@ -148,11 +148,17 @@ pub fn count_set_bits_offset(data: &[u8], offset: usize, length: usize) -> usize\n /// Returns the ceil of `value`/`divisor`\n #[inline]\n pub fn ceil(value: usize, divisor: usize) -> usize {\n-    let mut result = value / divisor;\n-    if value % divisor != 0 {\n-        result += 1\n-    };\n-    result\n+    if value == 0_usize {\n\nReview comment:\n       Oh it is, meanwhile looking for zero sized allocations I came across with this, from this chunk of code:\r\n   ```\r\n   impl BufferBuilderTrait<BooleanType> for BufferBuilder<BooleanType> {\r\n       fn new(capacity: usize) -> Self {\r\n           let byte_capacity = bit_util::ceil(capacity, 8);\r\n           let actual_capacity = bit_util::round_upto_multiple_of_64(byte_capacity);\r\n           let mut buffer = MutableBuffer::new(actual_capacity);\r\n           buffer.set_null_bits(0, actual_capacity);\r\n           Self {\r\n               buffer,\r\n               len: 0,\r\n               _marker: PhantomData,\r\n           }\r\n       }\r\n   ```\r\n   \r\n   BufferBuilderTrait is using this code for every reallocation. Ceil is not euclidean C- division. According to this paper: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf So I thought better to use established C-division in this case, where things got improved from that side too.\r\n   \r\n   Separate PR should be open to fixing this in Parquet too.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-02T19:57:00.862+0000",
                    "updated": "2020-05-02T19:57:00.862+0000",
                    "started": "2020-05-02T19:57:00.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429868",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/429869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#discussion_r419000857\n\n\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -20,34 +20,56 @@\n \n use std::alloc::Layout;\n use std::mem::align_of;\n+use std::ptr::NonNull;\n \n pub const ALIGNMENT: usize = 64;\n \n+///\n+/// As you can see this is global and lives as long as the program lives.\n+/// Be careful to not write anything to this pointer in any scenario.\n+/// If you use allocation methods shown here you won't have any problems.\n+const BYPASS_PTR: NonNull<u8> = unsafe { NonNull::new_unchecked(0xDEADBEEF as *mut u8) };\n+\n pub fn allocate_aligned(size: usize) -> *mut u8 {\n     unsafe {\n-        let layout = Layout::from_size_align_unchecked(size, ALIGNMENT);\n-        std::alloc::alloc_zeroed(layout)\n+        if size == 0 {\n+            // In a perfect world, there is no need to request zero size allocation.\n+            // Currently, passing zero sized layout to alloc is UB.\n+            // This will dodge allocator api for any type.\n+            BYPASS_PTR.as_mut()\n+        } else {\n+            let layout = Layout::from_size_align_unchecked(size, ALIGNMENT);\n+            std::alloc::alloc_zeroed(layout)\n+        }\n     }\n }\n \n-pub unsafe fn free_aligned(p: *mut u8, size: usize) {\n-    std::alloc::dealloc(p, Layout::from_size_align_unchecked(size, ALIGNMENT));\n+pub unsafe fn free_aligned(ptr: *mut u8, size: usize) {\n+    if size != 0x00 && ptr != BYPASS_PTR.as_mut() {\n+        std::alloc::dealloc(ptr, Layout::from_size_align_unchecked(size, ALIGNMENT));\n+    }\n }\n \n pub unsafe fn reallocate(ptr: *mut u8, old_size: usize, new_size: usize) -> *mut u8 {\n-    let new_ptr = std::alloc::realloc(\n-        ptr,\n-        Layout::from_size_align_unchecked(old_size, ALIGNMENT),\n-        new_size,\n-    );\n-    if !new_ptr.is_null() && new_size > old_size {\n-        new_ptr.add(old_size).write_bytes(0, new_size - old_size);\n+    if old_size == 0x00 && ptr == BYPASS_PTR.as_mut() {\n\nReview comment:\n       Addressed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-02T19:57:25.476+0000",
                    "updated": "2020-05-02T19:57:25.476+0000",
                    "started": "2020-05-02T19:57:25.476+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429869",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/429872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#discussion_r419000857\n\n\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -20,34 +20,56 @@\n \n use std::alloc::Layout;\n use std::mem::align_of;\n+use std::ptr::NonNull;\n \n pub const ALIGNMENT: usize = 64;\n \n+///\n+/// As you can see this is global and lives as long as the program lives.\n+/// Be careful to not write anything to this pointer in any scenario.\n+/// If you use allocation methods shown here you won't have any problems.\n+const BYPASS_PTR: NonNull<u8> = unsafe { NonNull::new_unchecked(0xDEADBEEF as *mut u8) };\n+\n pub fn allocate_aligned(size: usize) -> *mut u8 {\n     unsafe {\n-        let layout = Layout::from_size_align_unchecked(size, ALIGNMENT);\n-        std::alloc::alloc_zeroed(layout)\n+        if size == 0 {\n+            // In a perfect world, there is no need to request zero size allocation.\n+            // Currently, passing zero sized layout to alloc is UB.\n+            // This will dodge allocator api for any type.\n+            BYPASS_PTR.as_mut()\n+        } else {\n+            let layout = Layout::from_size_align_unchecked(size, ALIGNMENT);\n+            std::alloc::alloc_zeroed(layout)\n+        }\n     }\n }\n \n-pub unsafe fn free_aligned(p: *mut u8, size: usize) {\n-    std::alloc::dealloc(p, Layout::from_size_align_unchecked(size, ALIGNMENT));\n+pub unsafe fn free_aligned(ptr: *mut u8, size: usize) {\n+    if size != 0x00 && ptr != BYPASS_PTR.as_mut() {\n+        std::alloc::dealloc(ptr, Layout::from_size_align_unchecked(size, ALIGNMENT));\n+    }\n }\n \n pub unsafe fn reallocate(ptr: *mut u8, old_size: usize, new_size: usize) -> *mut u8 {\n-    let new_ptr = std::alloc::realloc(\n-        ptr,\n-        Layout::from_size_align_unchecked(old_size, ALIGNMENT),\n-        new_size,\n-    );\n-    if !new_ptr.is_null() && new_size > old_size {\n-        new_ptr.add(old_size).write_bytes(0, new_size - old_size);\n+    if old_size == 0x00 && ptr == BYPASS_PTR.as_mut() {\n\nReview comment:\n       Addressed. True, that can be a case.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-02T20:18:05.516+0000",
                    "updated": "2020-05-02T20:18:05.516+0000",
                    "started": "2020-05-02T20:18:05.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429872",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/433658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#issuecomment-629201947\n\n\n   @sunchao rebased.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T12:16:11.560+0000",
                    "updated": "2020-05-15T12:16:11.560+0000",
                    "started": "2020-05-15T12:16:11.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433658",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/434018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#issuecomment-629593043\n\n\n   @vertexclique hmm I'm seeing multiple tests failing:\r\n   \r\n   ```\r\n   ---- ipc::reader::tests::read_generated_streams stdout ----\r\n   thread 'ipc::reader::tests::read_generated_streams' panicked at 'memory not aligned', arrow/src/buffer.rs:165:9\r\n   \r\n   ---- ipc::reader::tests::read_generated_files stdout ----\r\n   thread 'ipc::reader::tests::read_generated_files' panicked at 'memory not aligned', arrow/src/buffer.rs:165:9\r\n   \r\n   ---- ipc::writer::tests::read_and_rewrite_generated_streams stdout ----\r\n   thread 'ipc::writer::tests::read_and_rewrite_generated_streams' panicked at 'memory not aligned', arrow/src/buffer.rs:165:9\r\n   \r\n   ---- ipc::writer::tests::read_and_rewrite_generated_files stdout ----\r\n   thread 'ipc::writer::tests::read_and_rewrite_generated_files' panicked at 'memory not aligned', arrow/src/buffer.rs:165:9\r\n   ```\r\n   \r\n   these seem related. Could you take a look? Thanks.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-16T05:48:31.446+0000",
                    "updated": "2020-05-16T05:48:31.446+0000",
                    "started": "2020-05-16T05:48:31.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434018",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/434675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#issuecomment-630489059\n\n\n   @vertexclique Looks like a formatting issue needs to be resolved:\r\n   \r\n   ```\r\n   Diff in /arrow/rust/arrow/src/memory.rs at line 28:\r\n    /// As you can see this is global and lives as long as the program lives.\r\n    /// Be careful to not write anything to this pointer in any scenario.\r\n    /// If you use allocation methods shown here you won't have any problems.\r\n   -const BYPASS_PTR: NonNull<u8> =\r\n   -    unsafe { NonNull::new_unchecked(ALIGNMENT as *mut u8) };\r\n   +const BYPASS_PTR: NonNull<u8> = unsafe { NonNull::new_unchecked(ALIGNMENT as *mut u8) };\r\n    \r\n    pub fn allocate_aligned(size: usize) -> *mut u8 {\r\n        unsafe {\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T23:35:11.898+0000",
                    "updated": "2020-05-18T23:35:11.898+0000",
                    "started": "2020-05-18T23:35:11.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434675",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/435259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061#issuecomment-631132553\n\n\n   I have addressed the comments and formatting problems.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T23:03:43.446+0000",
                    "updated": "2020-05-19T23:03:43.446+0000",
                    "started": "2020-05-19T23:03:43.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "435259",
                    "issueId": "13301881"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/worklog/435274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #7061:\nURL: https://github.com/apache/arrow/pull/7061\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T23:29:06.672+0000",
                    "updated": "2020-05-19T23:29:06.672+0000",
                    "started": "2020-05-19T23:29:06.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "435274",
                    "issueId": "13301881"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4f1d4b30[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@103ed366[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f100644[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@29534923[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72d94216[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@14e98630[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b0480cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@682dd0dd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@505cf63c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@8dc2201[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7721d92d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@710c542c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue May 19 23:29:00 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-19T23:29:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8629/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-04-29T17:55:00.000+0000",
        "updated": "2020-05-19T23:29:07.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, no matter what any array construction without data creates 0 sized layouts and passes itself to Rust's allocator API, thus OS then comes back to the program and does the job.\r\n\r\nThis issue is two-fold:\r\n * First, this creates indirection and UB in a sense.\r\n * Second, degrades the performance for the merging simd, merging arrays, constructing arrays etc. and intermediate arrays when doing ops. over them.\r\n\r\nThe solution would be:\r\n * Having UB solved without a performance downside.\r\n * Improve the performance",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Eliminate indirection of ZST allocations",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301881/comment/17111616",
                    "id": "17111616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 7061\n[https://github.com/apache/arrow/pull/7061]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-05-19T23:29:00.535+0000",
                    "updated": "2020-05-19T23:29:00.535+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0e820:",
        "customfield_12314139": null
    }
}