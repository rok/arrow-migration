{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13238908",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908",
    "key": "ARROW-5563",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333774",
                "id": "12333774",
                "name": "Integration",
                "description": "Issues related to integration / compatibility tests between implementations"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5563/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/383283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377\n \n \n   WIP. cc @wesm \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-07T00:15:40.683+0000",
                    "updated": "2020-02-07T00:15:40.683+0000",
                    "started": "2020-02-07T00:15:40.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "383283",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/383285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#issuecomment-583175563\n \n \n   https://issues.apache.org/jira/browse/ARROW-5563\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-07T00:20:00.368+0000",
                    "updated": "2020-02-07T00:20:00.368+0000",
                    "started": "2020-02-07T00:20:00.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "383285",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388570441\n \n \n\n ##########\n File path: integration/README.md\n ##########\n @@ -19,64 +19,4 @@\n \n # Arrow integration testing\n \n-Our strategy for integration testing between Arrow implementations is as follows:\n-\n-* Test datasets are specified in a custom human-readable, JSON-based format\n-  designed for Arrow\n-\n-* Each implementation provides a testing executable capable of converting\n-  between the JSON and the binary Arrow file representation\n-\n-* The test executable is also capable of validating the contents of a binary\n-  file against a corresponding JSON file\n-\n-## Environment setup\n-\n-The integration test data generator and runner is written in Python and\n-currently requires Python 3.6 or higher. You can create a standalone Python\n-distribution and environment for running the tests by using [miniconda][1]. On\n-Linux this is:\n-\n-```shell\n-MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n-wget -O miniconda.sh $MINICONDA_URL\n-bash miniconda.sh -b -p miniconda\n-export PATH=`pwd`/miniconda/bin:$PATH\n-\n-conda create -n arrow-integration python=3.6 nomkl numpy\n-conda activate arrow-integration\n-```\n-\n-If you are on macOS, instead use the URL:\n-\n-```shell\n-MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n-```\n-\n-After this, you can follow the instructions in the next section.\n-\n-## Running the existing integration tests\n-\n-The integration tests are run using the `archery integration` command.\n-\n-```\n-archery integration --help\n-```\n-\n-Depending on which components you have built, you can enable and add them to\n-the test run. For example, if you only have the C++ project built, you set:\n-\n-```\n-export ARROW_CPP_EXE_PATH=$CPP_BUILD_DIR/debug\n-archery integration --with-cpp=1\n-```\n-\n-For Java, it may look like:\n-\n-```\n-VERSION=1.0.0-SNAPSHOT\n-export ARROW_JAVA_INTEGRATION_JAR=$JAVA_DIR/tools/target/arrow-tools-$VERSION-jar-with-dependencies.jar\n-archery integration --with-cpp=1 --with-java=1\n-```\n-\n-[1]: https://conda.io/miniconda.html\n+See https://github.com/apache/arrow/blob/master/docs/source/format/Integration.rst\n \n Review comment:\n   maybe this README should just be a symlink to that file?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T21:17:06.964+0000",
                    "updated": "2020-03-05T21:17:06.964+0000",
                    "started": "2020-03-05T21:17:06.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398692",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388584622\n \n \n\n ##########\n File path: integration/README.md\n ##########\n @@ -19,64 +19,4 @@\n \n # Arrow integration testing\n \n-Our strategy for integration testing between Arrow implementations is as follows:\n-\n-* Test datasets are specified in a custom human-readable, JSON-based format\n-  designed for Arrow\n-\n-* Each implementation provides a testing executable capable of converting\n-  between the JSON and the binary Arrow file representation\n-\n-* The test executable is also capable of validating the contents of a binary\n-  file against a corresponding JSON file\n-\n-## Environment setup\n-\n-The integration test data generator and runner is written in Python and\n-currently requires Python 3.6 or higher. You can create a standalone Python\n-distribution and environment for running the tests by using [miniconda][1]. On\n-Linux this is:\n-\n-```shell\n-MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n-wget -O miniconda.sh $MINICONDA_URL\n-bash miniconda.sh -b -p miniconda\n-export PATH=`pwd`/miniconda/bin:$PATH\n-\n-conda create -n arrow-integration python=3.6 nomkl numpy\n-conda activate arrow-integration\n-```\n-\n-If you are on macOS, instead use the URL:\n-\n-```shell\n-MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n-```\n-\n-After this, you can follow the instructions in the next section.\n-\n-## Running the existing integration tests\n-\n-The integration tests are run using the `archery integration` command.\n-\n-```\n-archery integration --help\n-```\n-\n-Depending on which components you have built, you can enable and add them to\n-the test run. For example, if you only have the C++ project built, you set:\n-\n-```\n-export ARROW_CPP_EXE_PATH=$CPP_BUILD_DIR/debug\n-archery integration --with-cpp=1\n-```\n-\n-For Java, it may look like:\n-\n-```\n-VERSION=1.0.0-SNAPSHOT\n-export ARROW_JAVA_INTEGRATION_JAR=$JAVA_DIR/tools/target/arrow-tools-$VERSION-jar-with-dependencies.jar\n-archery integration --with-cpp=1 --with-java=1\n-```\n-\n-[1]: https://conda.io/miniconda.html\n+See https://github.com/apache/arrow/blob/master/docs/source/format/Integration.rst\n \n Review comment:\n   Feel free; I don't trust my ability to make a symlink on macOS that git will approve of, but maybe that's paranoia.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T21:46:21.149+0000",
                    "updated": "2020-03-05T21:46:21.149+0000",
                    "started": "2020-03-05T21:46:21.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398718",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388579757\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -97,18 +200,6 @@ type:\n       // fields as defined in the Flatbuffer depending on the type name\n \n Review comment:\n   ```suggestion\r\n       }\r\n   \r\n   A ``Type`` will have other fields as defined in `Schema.fbs <https://github.com/apache/arrow/tree/master/format/Schema.fbs>`_\r\n   depending on its name.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T21:46:22.594+0000",
                    "updated": "2020-03-05T21:46:22.594+0000",
                    "started": "2020-03-05T21:46:22.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398719",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388578899\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -45,15 +132,28 @@ The high level structure of a JSON integration test files is as follows:\n \n     {\n       \"name\" : \"name_of_the_field\",\n-      \"nullable\" : false,\n+      \"nullable\" : /* boolean */,\n       \"type\" : /* Type */,\n       \"children\" : [ /* Field */ ],\n     }\n \n Review comment:\n   I'd like to see type moved here, since it's referenced by `Field` and fairly simple\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T21:46:22.597+0000",
                    "updated": "2020-03-05T21:46:22.597+0000",
                    "started": "2020-03-05T21:46:22.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398721",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388584521\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -177,3 +268,15 @@ Interval: ::\n       \"name\" : \"interval\",\n       \"unit\" : \"YEAR_MONTH\"\n     }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in the Union are the codes used to denote each type, which\n+may be different from the index of the child array. This is so that the union\n+type ids do not have to be enumerated from 0.\n \n Review comment:\n   ```suggestion\r\n   The ``typeIds`` field in ``Union`` are the codes used to denote which member of\r\n   the union is active in each array slot. Note that in general these discriminants are not identical\r\n   to the index of the corresponding child array.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T21:46:22.597+0000",
                    "updated": "2020-03-05T21:46:22.597+0000",
                    "started": "2020-03-05T21:46:22.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398720",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388586326\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -45,15 +132,28 @@ The high level structure of a JSON integration test files is as follows:\n \n     {\n       \"name\" : \"name_of_the_field\",\n-      \"nullable\" : false,\n+      \"nullable\" : /* boolean */,\n       \"type\" : /* Type */,\n       \"children\" : [ /* Field */ ],\n     }\n \n Review comment:\n   Just did that, I think.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T21:49:40.436+0000",
                    "updated": "2020-03-05T21:49:40.436+0000",
                    "started": "2020-03-05T21:49:40.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398723",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388648144\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      \"children\": [ /* FieldData */ ]\n+    }\n+\n+The \"name\" member of a ``Field`` in the ``Schema`` corresponds to the \"name\"\n+of a ``FieldData`` contained in the \"columns\" of a ``RecordBatch``.\n+For nested types (list, struct, etc.), ``Field``'s \"children\" each have a\n+\"name\" that corresponds to the \"name\" of a ``FieldData`` inside the\n+\"children\" of that ``FieldData``.\n+For ``FieldData`` inside of a ``DictionaryBatch``, the \"name\" field does not\n+correspond to anything.\n+\n+Here ``$BUFFER_TYPE`` is one of ``VALIDITY``, ``OFFSET`` (for\n+variable-length types, such as strings and lists), ``TYPE`` (for unions),\n+or ``DATA``.\n+\n+``BufferData`` is encoded based on the type of buffer:\n+\n+* ``VALIDITY``: a JSON array of 1 (valid) and 0 (null). Data for  non-nullable\n+  ``Field`` still has a ``VALIDITY`` array, even though all values are 1.\n+* ``OFFSET``: a JSON array of integers for 32-bit offsets or\n+  string-formatted integers for 64-bit offsets\n+* ``TYPE``: a JSON array of integers\n+* ``DATA``: a JSON array of encoded values\n+\n+The value encoding for ``DATA`` is different depending on the logical\n+type:\n+\n+* For boolean type: an array of 1 (true) and 0 (false)\n+* For integer-based types (including timestamps): an array of integers\n+* For 64-bit integers: an array of integers formatted as JSON strings\n+  to avoid loss of precision\n+* For floating point types: as is. Values are limited to 3 decimal places to\n+  avoid loss of precision\n+* For Binary types, a hex-string is produced to encode a variable- or\n+  fixed-size binary value\n+\n+For \"list\" type, ``BufferData`` has ``VALIDITY`` and ``OFFSET``, and the\n \n Review comment:\n   Speculative generality: we may need ``LARGE_OFFSET`` which is populated by 64 bit integer offsets encoded as strings\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:41:52.922+0000",
                    "updated": "2020-03-06T00:41:52.922+0000",
                    "started": "2020-03-06T00:41:52.922+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398799",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388650097\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n \n Review comment:\n   If you want to add null it is just `\"name\": \"null\"` for the type. \r\n   \r\n   https://github.com/apache/arrow/blob/apache-arrow-0.16.0/cpp/src/arrow/ipc/json_internal.cc#L302\r\n   \r\n   null is written with no buffers\r\n   \r\n   https://github.com/apache/arrow/blob/apache-arrow-0.16.0/cpp/src/arrow/ipc/json_internal.cc#L542\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:30.709+0000",
                    "updated": "2020-03-06T00:54:30.709+0000",
                    "started": "2020-03-06T00:54:30.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398809",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388648821\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -20,8 +20,92 @@\n Integration Testing\n ===================\n \n+Our strategy for integration testing between Arrow implementations is:\n+\n+* Test datasets are specified in a custom human-readable, JSON-based format\n+  designed for Arrow\n+* Each implementation provides a testing executable capable of converting\n+  between the JSON and the binary Arrow file representation\n+* The test executable is also capable of validating the contents of a binary\n+  file against a corresponding JSON file\n+\n+Running integration tests\n+-------------------------\n+\n+The integration test data generator and runner uses ``archery``, a Python script\n+that requires Python 3.6 or higher. You can create a standalone Python\n+distribution and environment for running the tests by using\n+`miniconda <https://conda.io/miniconda.html>`_. On Linux this is:\n+\n+.. code-block:: shell\n+   MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n+   wget -O miniconda.sh $MINICONDA_URL\n+   bash miniconda.sh -b -p miniconda\n+   export PATH=`pwd`/miniconda/bin:$PATH\n+\n+   conda create -n arrow-integration python=3.6 nomkl numpy six\n+   conda activate arrow-integration\n+\n+\n+If you are on macOS, instead use the URL:\n+\n+.. code-block:: shell\n+   MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n+\n+Once you have Python, you can install archery\n+\n+.. code-block:: shell\n+   pip install -e dev/archery\n+\n+The integration tests are run using the ``archery integration`` command.\n+\n+.. code-block:: shell\n+   archery integration --help\n+\n+In order to run integration tests, you'll first need to build each component\n+you want to include. See the respective developer docs for C++, Java, etc.\n+for instructions on building those.\n+\n+Some languages may require additional build options to enable integration\n+testing. For C++, for example, you need to add ``-DARROW_BUILD_INTEGRATION=ON``\n+to your cmake command.\n+\n+Depending on which components you have built, you can enable and add them to\n+the archery test run. For example, if you only have the C++ project built, run:\n+\n+.. code-block:: shell\n+   archery integration --with-cpp=1\n+\n+\n+For Java, it may look like:\n+\n+.. code-block:: shell\n+   VERSION=0.11.0-SNAPSHOT\n+   export ARROW_JAVA_INTEGRATION_JAR=$JAVA_DIR/tools/target/arrow-tools-$VERSION-jar-with-dependencies.jar\n+   archery integration --with-cpp=1 --with-java=1\n+\n+To run all tests, including Flight integration tests, do:\n+\n+.. code-block:: shell\n+   archery integration --with-all --run-flight\n+\n+Note that we run these tests in continuous integration, and the CI job uses\n+docker-compose. You may also run the docker-compose job locally, or at least\n+refer to it if you have questions about how to build other languages or enable\n+certain tests.\n \n Review comment:\n   A link to the latest information about how to find out how to run the docker-compose jobs would be good here. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:30.712+0000",
                    "updated": "2020-03-06T00:54:30.712+0000",
                    "started": "2020-03-06T00:54:30.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398810",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388648456\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -20,8 +20,92 @@\n Integration Testing\n ===================\n \n+Our strategy for integration testing between Arrow implementations is:\n+\n+* Test datasets are specified in a custom human-readable, JSON-based format\n+  designed for Arrow\n \n Review comment:\n   For clarify change \"designed for Arrow\" to \"designed exclusively for Arrow's integration tests\" to stave off questions of whether this is intended as a general JSON representation of Arrow data\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:30.729+0000",
                    "updated": "2020-03-06T00:54:30.729+0000",
                    "started": "2020-03-06T00:54:30.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398811",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388652089\n \n \n\n ##########\n File path: integration/README.md\n ##########\n @@ -19,64 +19,4 @@\n \n # Arrow integration testing\n \n-Our strategy for integration testing between Arrow implementations is as follows:\n-\n-* Test datasets are specified in a custom human-readable, JSON-based format\n-  designed for Arrow\n-\n-* Each implementation provides a testing executable capable of converting\n-  between the JSON and the binary Arrow file representation\n-\n-* The test executable is also capable of validating the contents of a binary\n-  file against a corresponding JSON file\n-\n-## Environment setup\n-\n-The integration test data generator and runner is written in Python and\n-currently requires Python 3.6 or higher. You can create a standalone Python\n-distribution and environment for running the tests by using [miniconda][1]. On\n-Linux this is:\n-\n-```shell\n-MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n-wget -O miniconda.sh $MINICONDA_URL\n-bash miniconda.sh -b -p miniconda\n-export PATH=`pwd`/miniconda/bin:$PATH\n-\n-conda create -n arrow-integration python=3.6 nomkl numpy\n-conda activate arrow-integration\n-```\n-\n-If you are on macOS, instead use the URL:\n-\n-```shell\n-MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n-```\n-\n-After this, you can follow the instructions in the next section.\n-\n-## Running the existing integration tests\n-\n-The integration tests are run using the `archery integration` command.\n-\n-```\n-archery integration --help\n-```\n-\n-Depending on which components you have built, you can enable and add them to\n-the test run. For example, if you only have the C++ project built, you set:\n-\n-```\n-export ARROW_CPP_EXE_PATH=$CPP_BUILD_DIR/debug\n-archery integration --with-cpp=1\n-```\n-\n-For Java, it may look like:\n-\n-```\n-VERSION=1.0.0-SNAPSHOT\n-export ARROW_JAVA_INTEGRATION_JAR=$JAVA_DIR/tools/target/arrow-tools-$VERSION-jar-with-dependencies.jar\n-archery integration --with-cpp=1 --with-java=1\n-```\n-\n-[1]: https://conda.io/miniconda.html\n+See https://github.com/apache/arrow/blob/master/docs/source/format/Integration.rst\n \n Review comment:\n   I don't think the GitHub UI is smart enough to display the contents of the symlink properly. This seems fine as it is\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:30.764+0000",
                    "updated": "2020-03-06T00:54:30.764+0000",
                    "started": "2020-03-06T00:54:30.764+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398812",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388650771\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n \n Review comment:\n   For the record, it might be preferable to instead have a `\"buffers\": [BufferData]`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:30.914+0000",
                    "updated": "2020-03-06T00:54:30.914+0000",
                    "started": "2020-03-06T00:54:30.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398813",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388651178\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      \"children\": [ /* FieldData */ ]\n+    }\n+\n+The \"name\" member of a ``Field`` in the ``Schema`` corresponds to the \"name\"\n+of a ``FieldData`` contained in the \"columns\" of a ``RecordBatch``.\n+For nested types (list, struct, etc.), ``Field``'s \"children\" each have a\n+\"name\" that corresponds to the \"name\" of a ``FieldData`` inside the\n+\"children\" of that ``FieldData``.\n+For ``FieldData`` inside of a ``DictionaryBatch``, the \"name\" field does not\n+correspond to anything.\n+\n+Here ``$BUFFER_TYPE`` is one of ``VALIDITY``, ``OFFSET`` (for\n+variable-length types, such as strings and lists), ``TYPE`` (for unions),\n+or ``DATA``.\n+\n+``BufferData`` is encoded based on the type of buffer:\n+\n+* ``VALIDITY``: a JSON array of 1 (valid) and 0 (null). Data for  non-nullable\n+  ``Field`` still has a ``VALIDITY`` array, even though all values are 1.\n+* ``OFFSET``: a JSON array of integers for 32-bit offsets or\n+  string-formatted integers for 64-bit offsets\n+* ``TYPE``: a JSON array of integers\n+* ``DATA``: a JSON array of encoded values\n+\n+The value encoding for ``DATA`` is different depending on the logical\n+type:\n+\n+* For boolean type: an array of 1 (true) and 0 (false)\n+* For integer-based types (including timestamps): an array of integers\n+* For 64-bit integers: an array of integers formatted as JSON strings\n+  to avoid loss of precision\n+* For floating point types: as is. Values are limited to 3 decimal places to\n+  avoid loss of precision\n+* For Binary types, a hex-string is produced to encode a variable- or\n+  fixed-size binary value\n+\n+For \"list\" type, ``BufferData`` has ``VALIDITY`` and ``OFFSET``, and the\n \n Review comment:\n   We do need this, can you open a JIRA about it? Note also unresolved https://issues.apache.org/jira/browse/ARROW-6512\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:30.917+0000",
                    "updated": "2020-03-06T00:54:30.917+0000",
                    "started": "2020-03-06T00:54:30.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398814",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388652267\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      \"children\": [ /* FieldData */ ]\n+    }\n+\n+The \"name\" member of a ``Field`` in the ``Schema`` corresponds to the \"name\"\n+of a ``FieldData`` contained in the \"columns\" of a ``RecordBatch``.\n+For nested types (list, struct, etc.), ``Field``'s \"children\" each have a\n+\"name\" that corresponds to the \"name\" of a ``FieldData`` inside the\n+\"children\" of that ``FieldData``.\n+For ``FieldData`` inside of a ``DictionaryBatch``, the \"name\" field does not\n+correspond to anything.\n+\n+Here ``$BUFFER_TYPE`` is one of ``VALIDITY``, ``OFFSET`` (for\n+variable-length types, such as strings and lists), ``TYPE`` (for unions),\n+or ``DATA``.\n+\n+``BufferData`` is encoded based on the type of buffer:\n+\n+* ``VALIDITY``: a JSON array of 1 (valid) and 0 (null). Data for  non-nullable\n+  ``Field`` still has a ``VALIDITY`` array, even though all values are 1.\n+* ``OFFSET``: a JSON array of integers for 32-bit offsets or\n+  string-formatted integers for 64-bit offsets\n+* ``TYPE``: a JSON array of integers\n+* ``DATA``: a JSON array of encoded values\n+\n+The value encoding for ``DATA`` is different depending on the logical\n+type:\n+\n+* For boolean type: an array of 1 (true) and 0 (false)\n+* For integer-based types (including timestamps): an array of integers\n+* For 64-bit integers: an array of integers formatted as JSON strings\n+  to avoid loss of precision\n+* For floating point types: as is. Values are limited to 3 decimal places to\n+  avoid loss of precision\n+* For Binary types, a hex-string is produced to encode a variable- or\n+  fixed-size binary value\n+\n+For \"list\" type, ``BufferData`` has ``VALIDITY`` and ``OFFSET``, and the\n \n Review comment:\n   Maybe, or maybe that can fit into OFFSET as is. Either way that sounds like something to address in ARROW-6110/6111, not here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:54:33.936+0000",
                    "updated": "2020-03-06T00:54:33.936+0000",
                    "started": "2020-03-06T00:54:33.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398815",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388653043\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      \"children\": [ /* FieldData */ ]\n+    }\n+\n+The \"name\" member of a ``Field`` in the ``Schema`` corresponds to the \"name\"\n+of a ``FieldData`` contained in the \"columns\" of a ``RecordBatch``.\n+For nested types (list, struct, etc.), ``Field``'s \"children\" each have a\n+\"name\" that corresponds to the \"name\" of a ``FieldData`` inside the\n+\"children\" of that ``FieldData``.\n+For ``FieldData`` inside of a ``DictionaryBatch``, the \"name\" field does not\n+correspond to anything.\n+\n+Here ``$BUFFER_TYPE`` is one of ``VALIDITY``, ``OFFSET`` (for\n+variable-length types, such as strings and lists), ``TYPE`` (for unions),\n+or ``DATA``.\n+\n+``BufferData`` is encoded based on the type of buffer:\n+\n+* ``VALIDITY``: a JSON array of 1 (valid) and 0 (null). Data for  non-nullable\n+  ``Field`` still has a ``VALIDITY`` array, even though all values are 1.\n+* ``OFFSET``: a JSON array of integers for 32-bit offsets or\n+  string-formatted integers for 64-bit offsets\n+* ``TYPE``: a JSON array of integers\n+* ``DATA``: a JSON array of encoded values\n+\n+The value encoding for ``DATA`` is different depending on the logical\n+type:\n+\n+* For boolean type: an array of 1 (true) and 0 (false)\n+* For integer-based types (including timestamps): an array of integers\n+* For 64-bit integers: an array of integers formatted as JSON strings\n+  to avoid loss of precision\n+* For floating point types: as is. Values are limited to 3 decimal places to\n+  avoid loss of precision\n+* For Binary types, a hex-string is produced to encode a variable- or\n+  fixed-size binary value\n+\n+For \"list\" type, ``BufferData`` has ``VALIDITY`` and ``OFFSET``, and the\n \n Review comment:\n   Yeah I think we would just use a different parser for Large* types\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:55:43.194+0000",
                    "updated": "2020-03-06T00:55:43.194+0000",
                    "started": "2020-03-06T00:55:43.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398816",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388665932\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -20,8 +20,92 @@\n Integration Testing\n ===================\n \n+Our strategy for integration testing between Arrow implementations is:\n+\n+* Test datasets are specified in a custom human-readable, JSON-based format\n+  designed for Arrow\n+* Each implementation provides a testing executable capable of converting\n+  between the JSON and the binary Arrow file representation\n+* The test executable is also capable of validating the contents of a binary\n+  file against a corresponding JSON file\n+\n+Running integration tests\n+-------------------------\n+\n+The integration test data generator and runner uses ``archery``, a Python script\n+that requires Python 3.6 or higher. You can create a standalone Python\n+distribution and environment for running the tests by using\n+`miniconda <https://conda.io/miniconda.html>`_. On Linux this is:\n+\n+.. code-block:: shell\n+   MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n+   wget -O miniconda.sh $MINICONDA_URL\n+   bash miniconda.sh -b -p miniconda\n+   export PATH=`pwd`/miniconda/bin:$PATH\n+\n+   conda create -n arrow-integration python=3.6 nomkl numpy six\n+   conda activate arrow-integration\n+\n+\n+If you are on macOS, instead use the URL:\n+\n+.. code-block:: shell\n+   MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n+\n+Once you have Python, you can install archery\n+\n+.. code-block:: shell\n+   pip install -e dev/archery\n+\n+The integration tests are run using the ``archery integration`` command.\n+\n+.. code-block:: shell\n+   archery integration --help\n+\n+In order to run integration tests, you'll first need to build each component\n+you want to include. See the respective developer docs for C++, Java, etc.\n+for instructions on building those.\n+\n+Some languages may require additional build options to enable integration\n+testing. For C++, for example, you need to add ``-DARROW_BUILD_INTEGRATION=ON``\n+to your cmake command.\n+\n+Depending on which components you have built, you can enable and add them to\n+the archery test run. For example, if you only have the C++ project built, run:\n+\n+.. code-block:: shell\n+   archery integration --with-cpp=1\n+\n+\n+For Java, it may look like:\n+\n+.. code-block:: shell\n+   VERSION=0.11.0-SNAPSHOT\n+   export ARROW_JAVA_INTEGRATION_JAR=$JAVA_DIR/tools/target/arrow-tools-$VERSION-jar-with-dependencies.jar\n+   archery integration --with-cpp=1 --with-java=1\n+\n+To run all tests, including Flight integration tests, do:\n+\n+.. code-block:: shell\n+   archery integration --with-all --run-flight\n+\n+Note that we run these tests in continuous integration, and the CI job uses\n+docker-compose. You may also run the docker-compose job locally, or at least\n+refer to it if you have questions about how to build other languages or enable\n+certain tests.\n \n Review comment:\n   Will do, though _those_ docs aren't in great shape either.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T01:21:50.963+0000",
                    "updated": "2020-03-06T01:21:50.963+0000",
                    "started": "2020-03-06T01:21:50.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398831",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398832",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388665433\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n \n Review comment:\n   Maybe so though that's out of scope here since I'm documenting as-built.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T01:21:50.996+0000",
                    "updated": "2020-03-06T01:21:50.996+0000",
                    "started": "2020-03-06T01:21:50.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398832",
                    "issueId": "13238908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/worklog/398834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6377: ARROW-5563: [Format] Update integration test JSON format documentation\nURL: https://github.com/apache/arrow/pull/6377#discussion_r388667085\n \n \n\n ##########\n File path: docs/source/format/Integration.rst\n ##########\n @@ -175,5 +228,144 @@ Interval: ::\n \n     {\n       \"name\" : \"interval\",\n-      \"unit\" : \"YEAR_MONTH\"\n+      \"unit\" : \"YEAR_MONTH|DAY_TIME\"\n+    }\n+\n+Union: ::\n+\n+    {\n+      \"name\" : \"union\",\n+      \"mode\" : \"Sparse|Dense\",\n+      \"typeIds\" : [ /* integer */ ]\n+    }\n+\n+The ``typeIds`` field in ``Union`` are the codes used to denote which member of\n+the union is active in each array slot. Note that in general these discriminants are not identical\n+to the index of the corresponding child array.\n+\n+List: ::\n+\n+    {\n+      \"name\": \"list\"\n+    }\n+\n+The type that the list is a \"list of\" will be included in the ``Field``'s\n+\"children\" member, as a single ``Field`` there. For example, for a list of\n+``int32``, ::\n+\n+    {\n+      \"name\": \"list_nullable\",\n+      \"type\": {\n+        \"name\": \"list\"\n+      },\n+      \"nullable\": true,\n+      \"children\": [\n+        {\n+          \"name\": \"item\",\n+          \"type\": {\n+            \"name\": \"int\",\n+            \"isSigned\": true,\n+            \"bitWidth\": 32\n+          },\n+          \"nullable\": true,\n+          \"children\": []\n+        }\n+      ]\n+    }\n+\n+FixedSizeList: ::\n+\n+    {\n+      \"name\": \"fixedsizelist\",\n+      \"listSize\": /* integer */\n+    }\n+\n+This type likewise comes with a length-1 \"children\" array.\n+\n+Struct: ::\n+\n+    {\n+      \"name\": \"struct\"\n+    }\n+\n+The ``Field``'s \"children\" contains an array of ``Fields`` with meaningful\n+names and types.\n+\n+Map: ::\n+\n+    {\n+      \"name\": \"map\",\n+      \"keysSorted\": /* boolean */\n+    }\n+\n+The ``Field``'s \"children\" contains a single ``struct`` field, which itself\n+contains 2 children, named \"key\" and \"value\".\n+\n+**RecordBatch**::\n+\n+    {\n+      \"count\": /* integer number of rows */,\n+      \"columns\": [ /* FieldData */ ]\n+    }\n+\n+**DictionaryBatch**::\n+\n+    {\n+      \"id\": /* integer */,\n+      \"data\": [ /* RecordBatch */ ]\n     }\n+\n+**FieldData**::\n+\n+    {\n+      \"name\": \"field_name\",\n+      \"count\" \"field_length\",\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      ...\n+      \"$BUFFER_TYPE\": /* BufferData */\n+      \"children\": [ /* FieldData */ ]\n+    }\n+\n+The \"name\" member of a ``Field`` in the ``Schema`` corresponds to the \"name\"\n+of a ``FieldData`` contained in the \"columns\" of a ``RecordBatch``.\n+For nested types (list, struct, etc.), ``Field``'s \"children\" each have a\n+\"name\" that corresponds to the \"name\" of a ``FieldData`` inside the\n+\"children\" of that ``FieldData``.\n+For ``FieldData`` inside of a ``DictionaryBatch``, the \"name\" field does not\n+correspond to anything.\n+\n+Here ``$BUFFER_TYPE`` is one of ``VALIDITY``, ``OFFSET`` (for\n+variable-length types, such as strings and lists), ``TYPE`` (for unions),\n+or ``DATA``.\n+\n+``BufferData`` is encoded based on the type of buffer:\n+\n+* ``VALIDITY``: a JSON array of 1 (valid) and 0 (null). Data for  non-nullable\n+  ``Field`` still has a ``VALIDITY`` array, even though all values are 1.\n+* ``OFFSET``: a JSON array of integers for 32-bit offsets or\n+  string-formatted integers for 64-bit offsets\n+* ``TYPE``: a JSON array of integers\n+* ``DATA``: a JSON array of encoded values\n+\n+The value encoding for ``DATA`` is different depending on the logical\n+type:\n+\n+* For boolean type: an array of 1 (true) and 0 (false)\n+* For integer-based types (including timestamps): an array of integers\n+* For 64-bit integers: an array of integers formatted as JSON strings\n+  to avoid loss of precision\n+* For floating point types: as is. Values are limited to 3 decimal places to\n+  avoid loss of precision\n+* For Binary types, a hex-string is produced to encode a variable- or\n+  fixed-size binary value\n+\n+For \"list\" type, ``BufferData`` has ``VALIDITY`` and ``OFFSET``, and the\n \n Review comment:\n   It sounds like we're covered by the language that's already there: \r\n   \r\n   ```\r\n   * ``OFFSET``: a JSON array of integers for 32-bit offsets or\r\n     string-formatted integers for 64-bit offsets\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T01:25:32.901+0000",
                    "updated": "2020-03-06T01:25:32.901+0000",
                    "started": "2020-03-06T01:25:32.901+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398834",
                    "issueId": "13238908"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@353b6e9f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67cda05f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16ad8c5d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1ce8198f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c77b719[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@16339aa0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c86335f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@307e7b21[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@100dd48[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b6ca152[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@562d67ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@15c9a93c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 06 01:39:55 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-06T01:39:55.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5563/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-06-12T00:49:03.000+0000",
        "updated": "2020-04-14T11:20:37.000+0000",
        "timeoriginalestimate": null,
        "description": "This has slipped behind what is in the integration tests",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format] Update integration test JSON format documentation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/comment/17032012",
                    "id": "17032012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "This is no longer in Metadata.rst. There is docs/format/Integration.rst. I'll update some other related docs in the process.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-02-06T23:15:54.729+0000",
                    "updated": "2020-02-06T23:15:54.729+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238908/comment/17052645",
                    "id": "17052645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6377\n[https://github.com/apache/arrow/pull/6377]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-06T01:39:55.728+0000",
                    "updated": "2020-03-06T01:39:55.728+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z03n68:",
        "customfield_12314139": null
    }
}