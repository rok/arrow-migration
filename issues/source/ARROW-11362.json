{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13354150",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150",
    "key": "ARROW-11362",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11362/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan opened a new pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305\n\n\n   This function `to_array_of_size` is about 8.3% of instructions in the db-benchmark queries.\r\n   \r\n   This uses the PR https://github.com/apache/arrow/pull/9293\r\n   \r\n   The case of converting an int32 to an array improved by ~5x according to the microbenchmark:\r\n   \r\n   ```\r\n   to_array_of_size 100000 time:   [55.501 us 55.627 us 55.809 us]                                    \r\n                           change: [-82.457% -82.384% -82.299%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 3 outliers among 100 measurements (3.00%)\r\n     2 (2.00%) high mild\r\n     1 (1.00%) high severe\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T22:56:49.475+0000",
                    "updated": "2021-01-23T22:56:49.475+0000",
                    "started": "2021-01-23T22:56:49.474+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540640",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766195307\n\n\n   https://issues.apache.org/jira/browse/ARROW-11362\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T22:57:02.850+0000",
                    "updated": "2021-01-23T22:57:02.850+0000",
                    "started": "2021-01-23T22:57:02.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540641",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540644",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766197876\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=h1) Report\n   > Merging [#9305](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=desc) (69c298e) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.01%`.\n   > The diff coverage is `63.46%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9305/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9305      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.85%   +0.01%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53034      +85     \n   ==========================================\n   + Hits        43336    43412      +76     \n   - Misses       9613     9622       +9     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `56.22% <44.61%> (-2.74%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `94.48% <93.33%> (-0.05%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `94.11% <95.83%> (+4.11%)` | :arrow_up: |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `96.21% <0.00%> (+2.52%)` | :arrow_up: |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `84.21% <0.00%> (+5.26%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=footer). Last update [67d0c2e...69c298e](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T23:19:59.808+0000",
                    "updated": "2021-01-23T23:19:59.808+0000",
                    "started": "2021-01-23T23:19:59.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540644",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766329191\n\n\n   I noticed that this is also being used in `hash_aggregate::create_batch_from_map`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T11:05:57.375+0000",
                    "updated": "2021-01-24T11:05:57.375+0000",
                    "started": "2021-01-24T11:05:57.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540688",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766329608\n\n\n   @jorgecarleitao yes, but those are on `GroupByScalar` instead of `ScalarValue`. I think it might clean up some code by having just one  `ScalarValue` enum defined and reusing functions like this?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T11:08:53.545+0000",
                    "updated": "2021-01-24T11:08:53.545+0000",
                    "started": "2021-01-24T11:08:53.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540689",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766197876\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=h1) Report\n   > Merging [#9305](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=desc) (d612b0f) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.01%`.\n   > The diff coverage is `62.85%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9305/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9305      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.85%   +0.01%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53035      +86     \n   ==========================================\n   + Hits        43336    43412      +76     \n   - Misses       9613     9623      +10     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `56.04% <43.93%> (-2.93%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `94.48% <93.33%> (-0.05%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `94.11% <95.83%> (+4.11%)` | :arrow_up: |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `96.21% <0.00%> (+2.52%)` | :arrow_up: |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `84.21% <0.00%> (+5.26%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=footer). Last update [67d0c2e...6144a23](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T11:19:33.837+0000",
                    "updated": "2021-01-24T11:19:33.837+0000",
                    "started": "2021-01-24T11:19:33.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540692",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766197876\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=h1) Report\n   > Merging [#9305](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=desc) (6144a23) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.00%`.\n   > The diff coverage is `62.26%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9305/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #9305   +/-   ##\n   =======================================\n     Coverage   81.84%   81.85%           \n   =======================================\n     Files         215      215           \n     Lines       52949    53036   +87     \n   =======================================\n   + Hits        43336    43412   +76     \n   - Misses       9613     9624   +11     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `55.85% <43.28%> (-3.12%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `94.48% <93.33%> (-0.05%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `94.11% <95.83%> (+4.11%)` | :arrow_up: |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `96.21% <0.00%> (+2.52%)` | :arrow_up: |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `84.21% <0.00%> (+5.26%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=footer). Last update [67d0c2e...6144a23](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T11:21:49.958+0000",
                    "updated": "2021-01-24T11:21:49.958+0000",
                    "started": "2021-01-24T11:21:49.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540694",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766343030\n\n\n   CI failures don't seem to be related to the changes.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T12:52:10.135+0000",
                    "updated": "2021-01-24T12:52:10.135+0000",
                    "started": "2021-01-24T12:52:10.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540711",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#discussion_r563510962\n\n\n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -205,28 +205,104 @@ impl ScalarValue {\n             ScalarValue::Boolean(e) => {\n                 Arc::new(BooleanArray::from(vec![*e; size])) as ArrayRef\n             }\n-            ScalarValue::Float64(e) => {\n-                Arc::new(Float64Array::from(vec![*e; size])) as ArrayRef\n-            }\n-            ScalarValue::Float32(e) => Arc::new(Float32Array::from(vec![*e; size])),\n-            ScalarValue::Int8(e) => Arc::new(Int8Array::from(vec![*e; size])),\n-            ScalarValue::Int16(e) => Arc::new(Int16Array::from(vec![*e; size])),\n-            ScalarValue::Int32(e) => Arc::new(Int32Array::from(vec![*e; size])),\n-            ScalarValue::Int64(e) => Arc::new(Int64Array::from(vec![*e; size])),\n-            ScalarValue::UInt8(e) => Arc::new(UInt8Array::from(vec![*e; size])),\n-            ScalarValue::UInt16(e) => Arc::new(UInt16Array::from(vec![*e; size])),\n-            ScalarValue::UInt32(e) => Arc::new(UInt32Array::from(vec![*e; size])),\n-            ScalarValue::UInt64(e) => Arc::new(UInt64Array::from(vec![*e; size])),\n-            ScalarValue::TimeMicrosecond(e) => {\n-                Arc::new(TimestampMicrosecondArray::from(vec![*e]))\n-            }\n-            ScalarValue::TimeNanosecond(e) => {\n-                Arc::new(TimestampNanosecondArray::from_opt_vec(vec![*e], None))\n-            }\n-            ScalarValue::Utf8(e) => Arc::new(StringArray::from(vec![e.as_deref(); size])),\n-            ScalarValue::LargeUtf8(e) => {\n-                Arc::new(LargeStringArray::from(vec![e.as_deref(); size]))\n-            }\n+            ScalarValue::Float64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n+            },\n+            ScalarValue::Float32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float32Array>()),\n+            },\n+            ScalarValue::Int8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int8Array>()),\n+            },\n+            ScalarValue::Int16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int16Array>()),\n+            },\n+            ScalarValue::Int32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int32Array>()),\n+            },\n+            ScalarValue::Int64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int64Array>()),\n+            },\n+            ScalarValue::UInt8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt8Array>()),\n+            },\n+            ScalarValue::UInt16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt16Array>()),\n+            },\n+            ScalarValue::UInt32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt32Array>()),\n+            },\n+            ScalarValue::UInt64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt64Array>()),\n+            },\n+            ScalarValue::TimeMicrosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampMicrosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampMicrosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::TimeNanosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampNanosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampNanosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::Utf8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(StringArray::from_iter_values(repeat(value).take(size)))\n+                }\n+                None => {\n+                    Arc::new(repeat(e.as_deref()).take(size).collect::<StringArray>())\n\nReview comment:\n       any reason to use `e.as_deref` instead of `None`? Just curious.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-25T07:36:11.862+0000",
                    "updated": "2021-01-25T07:36:11.862+0000",
                    "started": "2021-01-25T07:36:11.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540909",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766197876\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=h1) Report\n   > Merging [#9305](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=desc) (e07f7e5) into [master](https://codecov.io/gh/apache/arrow/commit/cf7638fd61a9371630db63ebe866fbc4693d482f?el=desc) (cf7638f) will **decrease** coverage by `0.04%`.\n   > The diff coverage is `43.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9305/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9305      +/-   ##\n   ==========================================\n   - Coverage   81.89%   81.85%   -0.05%     \n   ==========================================\n     Files         215      215              \n     Lines       52988    53036      +48     \n   ==========================================\n   + Hits        43392    43410      +18     \n   - Misses       9596     9626      +30     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `55.85% <43.28%> (-3.12%)` | :arrow_down: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.24% <0.00%> (-0.20%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=footer). Last update [cf7638f...e07f7e5](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-25T07:54:40.034+0000",
                    "updated": "2021-01-25T07:54:40.034+0000",
                    "started": "2021-01-25T07:54:40.034+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540923",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#discussion_r563564784\n\n\n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -205,28 +205,104 @@ impl ScalarValue {\n             ScalarValue::Boolean(e) => {\n                 Arc::new(BooleanArray::from(vec![*e; size])) as ArrayRef\n             }\n-            ScalarValue::Float64(e) => {\n-                Arc::new(Float64Array::from(vec![*e; size])) as ArrayRef\n-            }\n-            ScalarValue::Float32(e) => Arc::new(Float32Array::from(vec![*e; size])),\n-            ScalarValue::Int8(e) => Arc::new(Int8Array::from(vec![*e; size])),\n-            ScalarValue::Int16(e) => Arc::new(Int16Array::from(vec![*e; size])),\n-            ScalarValue::Int32(e) => Arc::new(Int32Array::from(vec![*e; size])),\n-            ScalarValue::Int64(e) => Arc::new(Int64Array::from(vec![*e; size])),\n-            ScalarValue::UInt8(e) => Arc::new(UInt8Array::from(vec![*e; size])),\n-            ScalarValue::UInt16(e) => Arc::new(UInt16Array::from(vec![*e; size])),\n-            ScalarValue::UInt32(e) => Arc::new(UInt32Array::from(vec![*e; size])),\n-            ScalarValue::UInt64(e) => Arc::new(UInt64Array::from(vec![*e; size])),\n-            ScalarValue::TimeMicrosecond(e) => {\n-                Arc::new(TimestampMicrosecondArray::from(vec![*e]))\n-            }\n-            ScalarValue::TimeNanosecond(e) => {\n-                Arc::new(TimestampNanosecondArray::from_opt_vec(vec![*e], None))\n-            }\n-            ScalarValue::Utf8(e) => Arc::new(StringArray::from(vec![e.as_deref(); size])),\n-            ScalarValue::LargeUtf8(e) => {\n-                Arc::new(LargeStringArray::from(vec![e.as_deref(); size]))\n-            }\n+            ScalarValue::Float64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n+            },\n+            ScalarValue::Float32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float32Array>()),\n+            },\n+            ScalarValue::Int8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int8Array>()),\n+            },\n+            ScalarValue::Int16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int16Array>()),\n+            },\n+            ScalarValue::Int32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int32Array>()),\n+            },\n+            ScalarValue::Int64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int64Array>()),\n+            },\n+            ScalarValue::UInt8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt8Array>()),\n+            },\n+            ScalarValue::UInt16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt16Array>()),\n+            },\n+            ScalarValue::UInt32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt32Array>()),\n+            },\n+            ScalarValue::UInt64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt64Array>()),\n+            },\n+            ScalarValue::TimeMicrosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampMicrosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampMicrosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::TimeNanosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampNanosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampNanosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::Utf8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(StringArray::from_iter_values(repeat(value).take(size)))\n+                }\n+                None => {\n+                    Arc::new(repeat(e.as_deref()).take(size).collect::<StringArray>())\n\nReview comment:\n       I couldn't get the `None` compiling here. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-25T09:15:23.334+0000",
                    "updated": "2021-01-25T09:15:23.334+0000",
                    "started": "2021-01-25T09:15:23.334+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540963",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#discussion_r563566682\n\n\n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -205,28 +205,104 @@ impl ScalarValue {\n             ScalarValue::Boolean(e) => {\n                 Arc::new(BooleanArray::from(vec![*e; size])) as ArrayRef\n             }\n-            ScalarValue::Float64(e) => {\n-                Arc::new(Float64Array::from(vec![*e; size])) as ArrayRef\n-            }\n-            ScalarValue::Float32(e) => Arc::new(Float32Array::from(vec![*e; size])),\n-            ScalarValue::Int8(e) => Arc::new(Int8Array::from(vec![*e; size])),\n-            ScalarValue::Int16(e) => Arc::new(Int16Array::from(vec![*e; size])),\n-            ScalarValue::Int32(e) => Arc::new(Int32Array::from(vec![*e; size])),\n-            ScalarValue::Int64(e) => Arc::new(Int64Array::from(vec![*e; size])),\n-            ScalarValue::UInt8(e) => Arc::new(UInt8Array::from(vec![*e; size])),\n-            ScalarValue::UInt16(e) => Arc::new(UInt16Array::from(vec![*e; size])),\n-            ScalarValue::UInt32(e) => Arc::new(UInt32Array::from(vec![*e; size])),\n-            ScalarValue::UInt64(e) => Arc::new(UInt64Array::from(vec![*e; size])),\n-            ScalarValue::TimeMicrosecond(e) => {\n-                Arc::new(TimestampMicrosecondArray::from(vec![*e]))\n-            }\n-            ScalarValue::TimeNanosecond(e) => {\n-                Arc::new(TimestampNanosecondArray::from_opt_vec(vec![*e], None))\n-            }\n-            ScalarValue::Utf8(e) => Arc::new(StringArray::from(vec![e.as_deref(); size])),\n-            ScalarValue::LargeUtf8(e) => {\n-                Arc::new(LargeStringArray::from(vec![e.as_deref(); size]))\n-            }\n+            ScalarValue::Float64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n+            },\n+            ScalarValue::Float32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float32Array>()),\n+            },\n+            ScalarValue::Int8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int8Array>()),\n+            },\n+            ScalarValue::Int16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int16Array>()),\n+            },\n+            ScalarValue::Int32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int32Array>()),\n+            },\n+            ScalarValue::Int64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int64Array>()),\n+            },\n+            ScalarValue::UInt8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt8Array>()),\n+            },\n+            ScalarValue::UInt16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt16Array>()),\n+            },\n+            ScalarValue::UInt32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt32Array>()),\n+            },\n+            ScalarValue::UInt64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt64Array>()),\n+            },\n+            ScalarValue::TimeMicrosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampMicrosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampMicrosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::TimeNanosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampNanosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampNanosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::Utf8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(StringArray::from_iter_values(repeat(value).take(size)))\n+                }\n+                None => {\n+                    Arc::new(repeat(e.as_deref()).take(size).collect::<StringArray>())\n\nReview comment:\n       Updated.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-25T09:18:24.672+0000",
                    "updated": "2021-01-25T09:18:24.672+0000",
                    "started": "2021-01-25T09:18:24.671+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540964",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/540985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766197876\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=h1) Report\n   > Merging [#9305](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=desc) (555eb1d) into [master](https://codecov.io/gh/apache/arrow/commit/cf7638fd61a9371630db63ebe866fbc4693d482f?el=desc) (cf7638f) will **decrease** coverage by `0.04%`.\n   > The diff coverage is `43.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9305/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9305      +/-   ##\n   ==========================================\n   - Coverage   81.89%   81.85%   -0.05%     \n   ==========================================\n     Files         215      215              \n     Lines       52988    53036      +48     \n   ==========================================\n   + Hits        43392    43410      +18     \n   - Misses       9596     9626      +30     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `55.85% <43.28%> (-3.12%)` | :arrow_down: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9305/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.24% <0.00%> (-0.20%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=footer). Last update [cf7638f...555eb1d](https://codecov.io/gh/apache/arrow/pull/9305?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-25T10:03:59.759+0000",
                    "updated": "2021-01-25T10:03:59.759+0000",
                    "started": "2021-01-25T10:03:59.759+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540985",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/541744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#discussion_r563564784\n\n\n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -205,28 +205,104 @@ impl ScalarValue {\n             ScalarValue::Boolean(e) => {\n                 Arc::new(BooleanArray::from(vec![*e; size])) as ArrayRef\n             }\n-            ScalarValue::Float64(e) => {\n-                Arc::new(Float64Array::from(vec![*e; size])) as ArrayRef\n-            }\n-            ScalarValue::Float32(e) => Arc::new(Float32Array::from(vec![*e; size])),\n-            ScalarValue::Int8(e) => Arc::new(Int8Array::from(vec![*e; size])),\n-            ScalarValue::Int16(e) => Arc::new(Int16Array::from(vec![*e; size])),\n-            ScalarValue::Int32(e) => Arc::new(Int32Array::from(vec![*e; size])),\n-            ScalarValue::Int64(e) => Arc::new(Int64Array::from(vec![*e; size])),\n-            ScalarValue::UInt8(e) => Arc::new(UInt8Array::from(vec![*e; size])),\n-            ScalarValue::UInt16(e) => Arc::new(UInt16Array::from(vec![*e; size])),\n-            ScalarValue::UInt32(e) => Arc::new(UInt32Array::from(vec![*e; size])),\n-            ScalarValue::UInt64(e) => Arc::new(UInt64Array::from(vec![*e; size])),\n-            ScalarValue::TimeMicrosecond(e) => {\n-                Arc::new(TimestampMicrosecondArray::from(vec![*e]))\n-            }\n-            ScalarValue::TimeNanosecond(e) => {\n-                Arc::new(TimestampNanosecondArray::from_opt_vec(vec![*e], None))\n-            }\n-            ScalarValue::Utf8(e) => Arc::new(StringArray::from(vec![e.as_deref(); size])),\n-            ScalarValue::LargeUtf8(e) => {\n-                Arc::new(LargeStringArray::from(vec![e.as_deref(); size]))\n-            }\n+            ScalarValue::Float64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n+            },\n+            ScalarValue::Float32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float32Array>()),\n+            },\n+            ScalarValue::Int8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int8Array>()),\n+            },\n+            ScalarValue::Int16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int16Array>()),\n+            },\n+            ScalarValue::Int32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int32Array>()),\n+            },\n+            ScalarValue::Int64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int64Array>()),\n+            },\n+            ScalarValue::UInt8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt8Array>()),\n+            },\n+            ScalarValue::UInt16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt16Array>()),\n+            },\n+            ScalarValue::UInt32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt32Array>()),\n+            },\n+            ScalarValue::UInt64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt64Array>()),\n+            },\n+            ScalarValue::TimeMicrosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampMicrosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampMicrosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::TimeNanosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampNanosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampNanosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::Utf8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(StringArray::from_iter_values(repeat(value).take(size)))\n+                }\n+                None => {\n+                    Arc::new(repeat(e.as_deref()).take(size).collect::<StringArray>())\n\nReview comment:\n       I couldn't get the `None` compiling here. \n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -205,28 +205,104 @@ impl ScalarValue {\n             ScalarValue::Boolean(e) => {\n                 Arc::new(BooleanArray::from(vec![*e; size])) as ArrayRef\n             }\n-            ScalarValue::Float64(e) => {\n-                Arc::new(Float64Array::from(vec![*e; size])) as ArrayRef\n-            }\n-            ScalarValue::Float32(e) => Arc::new(Float32Array::from(vec![*e; size])),\n-            ScalarValue::Int8(e) => Arc::new(Int8Array::from(vec![*e; size])),\n-            ScalarValue::Int16(e) => Arc::new(Int16Array::from(vec![*e; size])),\n-            ScalarValue::Int32(e) => Arc::new(Int32Array::from(vec![*e; size])),\n-            ScalarValue::Int64(e) => Arc::new(Int64Array::from(vec![*e; size])),\n-            ScalarValue::UInt8(e) => Arc::new(UInt8Array::from(vec![*e; size])),\n-            ScalarValue::UInt16(e) => Arc::new(UInt16Array::from(vec![*e; size])),\n-            ScalarValue::UInt32(e) => Arc::new(UInt32Array::from(vec![*e; size])),\n-            ScalarValue::UInt64(e) => Arc::new(UInt64Array::from(vec![*e; size])),\n-            ScalarValue::TimeMicrosecond(e) => {\n-                Arc::new(TimestampMicrosecondArray::from(vec![*e]))\n-            }\n-            ScalarValue::TimeNanosecond(e) => {\n-                Arc::new(TimestampNanosecondArray::from_opt_vec(vec![*e], None))\n-            }\n-            ScalarValue::Utf8(e) => Arc::new(StringArray::from(vec![e.as_deref(); size])),\n-            ScalarValue::LargeUtf8(e) => {\n-                Arc::new(LargeStringArray::from(vec![e.as_deref(); size]))\n-            }\n+            ScalarValue::Float64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n+            },\n+            ScalarValue::Float32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float32Array>()),\n+            },\n+            ScalarValue::Int8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int8Array>()),\n+            },\n+            ScalarValue::Int16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int16Array>()),\n+            },\n+            ScalarValue::Int32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int32Array>()),\n+            },\n+            ScalarValue::Int64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int64Array>()),\n+            },\n+            ScalarValue::UInt8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt8Array>()),\n+            },\n+            ScalarValue::UInt16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt16Array>()),\n+            },\n+            ScalarValue::UInt32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt32Array>()),\n+            },\n+            ScalarValue::UInt64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt64Array>()),\n+            },\n+            ScalarValue::TimeMicrosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampMicrosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampMicrosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::TimeNanosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampNanosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampNanosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::Utf8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(StringArray::from_iter_values(repeat(value).take(size)))\n+                }\n+                None => {\n+                    Arc::new(repeat(e.as_deref()).take(size).collect::<StringArray>())\n\nReview comment:\n       Updated.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T04:15:57.136+0000",
                    "updated": "2021-01-26T04:15:57.136+0000",
                    "started": "2021-01-26T04:15:57.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541744",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/541813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-766197876\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T04:22:06.369+0000",
                    "updated": "2021-01-26T04:22:06.369+0000",
                    "started": "2021-01-26T04:22:06.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541813",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/541894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#discussion_r563510962\n\n\n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -205,28 +205,104 @@ impl ScalarValue {\n             ScalarValue::Boolean(e) => {\n                 Arc::new(BooleanArray::from(vec![*e; size])) as ArrayRef\n             }\n-            ScalarValue::Float64(e) => {\n-                Arc::new(Float64Array::from(vec![*e; size])) as ArrayRef\n-            }\n-            ScalarValue::Float32(e) => Arc::new(Float32Array::from(vec![*e; size])),\n-            ScalarValue::Int8(e) => Arc::new(Int8Array::from(vec![*e; size])),\n-            ScalarValue::Int16(e) => Arc::new(Int16Array::from(vec![*e; size])),\n-            ScalarValue::Int32(e) => Arc::new(Int32Array::from(vec![*e; size])),\n-            ScalarValue::Int64(e) => Arc::new(Int64Array::from(vec![*e; size])),\n-            ScalarValue::UInt8(e) => Arc::new(UInt8Array::from(vec![*e; size])),\n-            ScalarValue::UInt16(e) => Arc::new(UInt16Array::from(vec![*e; size])),\n-            ScalarValue::UInt32(e) => Arc::new(UInt32Array::from(vec![*e; size])),\n-            ScalarValue::UInt64(e) => Arc::new(UInt64Array::from(vec![*e; size])),\n-            ScalarValue::TimeMicrosecond(e) => {\n-                Arc::new(TimestampMicrosecondArray::from(vec![*e]))\n-            }\n-            ScalarValue::TimeNanosecond(e) => {\n-                Arc::new(TimestampNanosecondArray::from_opt_vec(vec![*e], None))\n-            }\n-            ScalarValue::Utf8(e) => Arc::new(StringArray::from(vec![e.as_deref(); size])),\n-            ScalarValue::LargeUtf8(e) => {\n-                Arc::new(LargeStringArray::from(vec![e.as_deref(); size]))\n-            }\n+            ScalarValue::Float64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n+            },\n+            ScalarValue::Float32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Float32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Float32Array>()),\n+            },\n+            ScalarValue::Int8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int8Array>()),\n+            },\n+            ScalarValue::Int16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int16Array>()),\n+            },\n+            ScalarValue::Int32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int32Array>()),\n+            },\n+            ScalarValue::Int64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(Int64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<Int64Array>()),\n+            },\n+            ScalarValue::UInt8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt8Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt8Array>()),\n+            },\n+            ScalarValue::UInt16(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt16Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt16Array>()),\n+            },\n+            ScalarValue::UInt32(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt32Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt32Array>()),\n+            },\n+            ScalarValue::UInt64(e) => match e {\n+                Some(value) => {\n+                    Arc::new(UInt64Array::from_iter_values(repeat(*value).take(size)))\n+                }\n+                None => Arc::new(repeat(None).take(size).collect::<UInt64Array>()),\n+            },\n+            ScalarValue::TimeMicrosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampMicrosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampMicrosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::TimeNanosecond(e) => match e {\n+                Some(value) => Arc::new(TimestampNanosecondArray::from_iter_values(\n+                    repeat(*value).take(size),\n+                )),\n+                None => Arc::new(\n+                    repeat(None)\n+                        .take(size)\n+                        .collect::<TimestampNanosecondArray>(),\n+                ),\n+            },\n+            ScalarValue::Utf8(e) => match e {\n+                Some(value) => {\n+                    Arc::new(StringArray::from_iter_values(repeat(value).take(size)))\n+                }\n+                None => {\n+                    Arc::new(repeat(e.as_deref()).take(size).collect::<StringArray>())\n\nReview comment:\n       any reason to use `e.as_deref` instead of `None`? Just curious.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T04:30:28.135+0000",
                    "updated": "2021-01-26T04:30:28.135+0000",
                    "started": "2021-01-26T04:30:28.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541894",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/542142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-767499594\n\n\n   The clippy failures were fixed in https://github.com/apache/arrow/pull/9314 - a quick rebase can probably get this PR green\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T12:05:38.302+0000",
                    "updated": "2021-01-26T12:05:38.302+0000",
                    "started": "2021-01-26T12:05:38.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "542142",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/542358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-767773870\n\n\n   PR is updated against master @jorgecarleitao @alamb \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T19:27:38.629+0000",
                    "updated": "2021-01-26T19:27:38.629+0000",
                    "started": "2021-01-26T19:27:38.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "542358",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/544000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305#issuecomment-769551141\n\n\n   @Dandandan there is a missing license in `rust/datafusion/benches/scalar.rs`. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T03:32:10.290+0000",
                    "updated": "2021-01-29T03:32:10.290+0000",
                    "started": "2021-01-29T03:32:10.290+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544000",
                    "issueId": "13354150"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/worklog/544334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #9305:\nURL: https://github.com/apache/arrow/pull/9305\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T16:17:32.177+0000",
                    "updated": "2021-01-29T16:17:32.177+0000",
                    "started": "2021-01-29T16:17:32.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544334",
                    "issueId": "13354150"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@42a953c9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32478908[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3887d599[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@36860448[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@795fcda5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@eea0fdd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8473884[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@e65c980[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9d01f0c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@571a7d0c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6628fc73[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@462110ff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 29 16:17:46 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-29T16:17:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11362/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-01-23T22:27:18.000+0000",
        "updated": "2021-01-29T19:26:11.000+0000",
        "timeoriginalestimate": null,
        "description": "To improve performance of\u00a0\r\nto_array_of_size",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Use iterator APIs in to_array_of_size to improve performance",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354150/comment/17274545",
                    "id": "17274545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 9305\n[https://github.com/apache/arrow/pull/9305]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-29T16:17:46.967+0000",
                    "updated": "2021-01-29T16:17:46.967+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mwu0:",
        "customfield_12314139": null
    }
}