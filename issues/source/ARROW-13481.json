{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13392406",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13392406",
    "key": "ARROW-13481",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/8",
            "id": "8",
            "description": "The described issue is not actually a problem - it is as designed.",
            "name": "Not A Problem"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=awalga",
            "name": "awalga",
            "key": "awalga",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "abeel walga",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=awalga",
            "name": "awalga",
            "key": "awalga",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "abeel walga",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13481/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@30d57530[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ebc3c62[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25d83acd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5a785d38[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fba9295[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3ce0d861[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@588a8362[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@408384d6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b868869[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@519f66a8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d027e6a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@17bf428[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 27 14:41:50 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "Java"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-19T02:03:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13481/watchers",
            "watchCount": 2,
            "isWatching": true
        },
        "created": "2021-07-28T19:49:20.000+0000",
        "updated": "2022-08-27T14:41:50.000+0000",
        "timeoriginalestimate": null,
        "description": "I am assuming ArrowStreamWriter/ArrowStreamReader support writing batches with different record count. \r\nWhen reading from VectorSchemaRoot readBatch = reader.getVectorSchemaRoot(), readBatch.getRowCount() returns the max of all batch row count.\r\nThis limit the ability to loop on the vectors contained in the batch.\r\n\r\nA sample code:\r\n\r\n{code:java}\r\npackage io.scribe.blckch.core.io;\r\n\r\nimport org.apache.arrow.memory.RootAllocator;\r\nimport org.apache.arrow.vector.BitVector;\r\nimport org.apache.arrow.vector.FieldVector;\r\nimport org.apache.arrow.vector.VarCharVector;\r\nimport org.apache.arrow.vector.VectorSchemaRoot;\r\nimport org.apache.arrow.vector.ipc.ArrowStreamReader;\r\nimport org.apache.arrow.vector.ipc.ArrowStreamWriter;\r\nimport org.apache.arrow.vector.types.pojo.Field;\r\n\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.nio.channels.Channels;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class Arrow {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        RootAllocator allocator = new RootAllocator(Long.MAX_VALUE);\r\n\r\n        BitVector bitVector = new BitVector(\"boolean\", allocator);\r\n        VarCharVector varCharVector = new VarCharVector(\"varchar\", allocator);\r\n        bitVector.allocateNew();\r\n        varCharVector.allocateNew();\r\n\r\n        int l0 = Double.valueOf(Math.floor(Math.random() * 10)).intValue() + 1;\r\n        System.out.println(\"Write Batch \" + l0 + \" length \" + l0);\r\n\r\n        for (int j = 0; j < l0; ++j) {\r\n            bitVector.setSafe(j, j);\r\n            varCharVector.setSafe(j, String.format(\"char-%s-%s\", 0, j).getBytes(StandardCharsets.UTF_8));\r\n        }\r\n        bitVector.setValueCount(l0);\r\n        varCharVector.setValueCount(l0);\r\n\r\n        List<Field> fields = Arrays.asList(bitVector.getField(), varCharVector.getField());\r\n        List<FieldVector> vectors = Arrays.asList(bitVector, varCharVector);\r\n\r\n        VectorSchemaRoot root = new VectorSchemaRoot(fields, vectors);\r\n\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        try (ArrowStreamWriter writer = new ArrowStreamWriter(root, /*DictionaryProvider=*/null, Channels.newChannel(out))) {\r\n            writer.start();\r\n            writer.writeBatch();\r\n            for (int i = 1; i < 5; ++i) {\r\n                final BitVector bits = (BitVector) root.getVector(0);\r\n                final VarCharVector chars = (VarCharVector) root.getVector(1);\r\n                bits.reset();\r\n                chars.reset();\r\n\r\n                int l = Double.valueOf(Math.floor(Math.random() * 10)).intValue() + 1;\r\n                System.out.println(\"Write Batch \" + i + \" length \" + l);\r\n\r\n                for (int j = 0; j < l; ++j) {\r\n                    bits.setSafe(j, j);\r\n                    chars.setSafe(j, String.format(\"char-%s-%s\", i, j).getBytes(StandardCharsets.UTF_8));\r\n                }\r\n                bits.setValueCount(l);\r\n                chars.setValueCount(l);\r\n\r\n                writer.writeBatch();\r\n            }\r\n            writer.end();\r\n        }\r\n\r\n        try (ArrowStreamReader reader = new ArrowStreamReader(new ByteArrayInputStream(out.toByteArray()), allocator)) {\r\n\r\n            for (int i = 0; i < 5; i++) {\r\n                // This will be loaded with new values on every call to loadNextBatch\r\n                reader.loadNextBatch();\r\n                VectorSchemaRoot readBatch = reader.getVectorSchemaRoot();\r\n\r\n                final BitVector bits = (BitVector) readBatch.getVector(0);\r\n                final VarCharVector chars = (VarCharVector) readBatch.getVector(1);\r\n                int l = readBatch.getRowCount();\r\n                // int l = bits.getValueCount();\r\n                System.out.println(\"Batch \" + i + \" length \" + l);\r\n\r\n                for (int j = 0; j < l; ++j) {\r\n                    System.out.println(bits.get(j) + \" \" + new String(chars.get(j)));\r\n                }\r\n            }\r\n        }\r\n\r\n        out.close();\r\n        root.clear();\r\n        root.close();\r\n    }\r\n}\r\n\r\n{code}\r\n\r\n",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JAVA][VECTOR]: stream write/read when writing batches of different row count",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z0tf5c:",
        "customfield_12314139": null
    }
}