{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13263568",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568",
    "key": "ARROW-6950",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6950/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/332632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720\n \n \n   The example consumes a directory of the nyc-taxi dataset in parquet format. It applies a projection of columns named `pickup_at`, `dropoff_at` and `total_amount` and a filter of `total_amount > 1000`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T15:20:38.571+0000",
                    "updated": "2019-10-23T15:20:38.571+0000",
                    "started": "2019-10-23T15:20:38.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332632",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/332641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#issuecomment-545501966\n \n \n   https://issues.apache.org/jira/browse/ARROW-6950\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T15:32:04.064+0000",
                    "updated": "2019-10-23T15:32:04.064+0000",
                    "started": "2019-10-23T15:32:04.064+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332641",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#issuecomment-545910322\n \n \n   @fsaintjacques Appveyor segfaults\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:10:43.831+0000",
                    "updated": "2019-10-24T13:10:43.831+0000",
                    "started": "2019-10-24T13:10:43.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333383",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#issuecomment-545912361\n \n \n   I didn't know the examples were run in the test suite. I added a fail safe for CI (the example expected a single argument file path).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:15:43.349+0000",
                    "updated": "2019-10-24T13:15:43.349+0000",
                    "started": "2019-10-24T13:15:43.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333387",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338568399\n \n \n\n ##########\n File path: cpp/examples/arrow/CMakeLists.txt\n ##########\n @@ -16,3 +16,11 @@\n # under the License.\n \n ADD_ARROW_EXAMPLE(row-wise-conversion-example)\n+\n+if (ARROW_PARQUET AND ARROW_DATASET)\n+  message(\"dataset:\" ${ARROW_DATASET_LIBRARIES})\n \n Review comment:\n   debug code?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:09.673+0000",
                    "updated": "2019-10-24T13:29:09.673+0000",
                    "started": "2019-10-24T13:29:09.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333396",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338571579\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,136 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n+  Selector s;\n+  s.base_dir = path;\n+  s.recursive = true;\n+\n+  std::shared_ptr<DataSourceDiscovery> discovery;\n+  ABORT_ON_FAILURE(FileSystemDataSourceDiscovery::Make(fs, s, format, &discovery));\n+\n+  std::shared_ptr<Schema> inspect_schema;\n+  ABORT_ON_FAILURE(discovery->Inspect(&inspect_schema));\n+\n+  std::shared_ptr<DataSource> source;\n+  ABORT_ON_FAILURE(discovery->Finish(&source));\n+\n+  return std::make_shared<Dataset>(DataSourceVector{source}, inspect_schema);\n+}\n+\n+std::shared_ptr<Scanner> GetScannerFromDataset(std::shared_ptr<Dataset> dataset,\n+                                               std::vector<std::string> columns,\n+                                               std::shared_ptr<Expression> filter) {\n+  std::unique_ptr<ScannerBuilder> scanner_builder;\n+  ABORT_ON_FAILURE(dataset->NewScan(&scanner_builder));\n+\n+  if (!columns.empty()) {\n+    ABORT_ON_FAILURE(scanner_builder->Project(columns));\n+  }\n+\n+  if (filter != nullptr) {\n \n Review comment:\n   nit: filter should never be nullptr\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:09.673+0000",
                    "updated": "2019-10-24T13:29:09.673+0000",
                    "started": "2019-10-24T13:29:09.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333397",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338570053\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,136 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n+  Selector s;\n+  s.base_dir = path;\n+  s.recursive = true;\n+\n+  std::shared_ptr<DataSourceDiscovery> discovery;\n+  ABORT_ON_FAILURE(FileSystemDataSourceDiscovery::Make(fs, s, format, &discovery));\n+\n+  std::shared_ptr<Schema> inspect_schema;\n+  ABORT_ON_FAILURE(discovery->Inspect(&inspect_schema));\n+\n+  std::shared_ptr<DataSource> source;\n+  ABORT_ON_FAILURE(discovery->Finish(&source));\n+\n+  return std::make_shared<Dataset>(DataSourceVector{source}, inspect_schema);\n+}\n+\n+std::shared_ptr<Scanner> GetScannerFromDataset(std::shared_ptr<Dataset> dataset,\n+                                               std::vector<std::string> columns,\n+                                               std::shared_ptr<Expression> filter) {\n+  std::unique_ptr<ScannerBuilder> scanner_builder;\n+  ABORT_ON_FAILURE(dataset->NewScan(&scanner_builder));\n+\n+  if (!columns.empty()) {\n+    ABORT_ON_FAILURE(scanner_builder->Project(columns));\n+  }\n+\n+  if (filter != nullptr) {\n+    ABORT_ON_FAILURE(scanner_builder->Filter(filter));\n+  }\n+\n+  std::unique_ptr<Scanner> scanner;\n+  ABORT_ON_FAILURE(scanner_builder->Finish(&scanner));\n+\n+  return scanner;\n+}\n+\n+std::shared_ptr<Table> GetTableFromScanner(std::shared_ptr<Scanner> scanner) {\n+  std::shared_ptr<Table> table;\n+  ABORT_ON_FAILURE(scanner->ToTable(&table));\n+  return table;\n+}\n+\n+int main(int argc, char** argv) {\n+  auto fs = std::make_shared<LocalFileSystem>();\n+  auto format = std::make_shared<ParquetFileFormat>();\n+\n+  if (argc != 2) {\n+    // Fake success for CI purposes.\n+    return EXIT_SUCCESS;\n+  }\n+\n+  auto dataset = GetDatasetFromPath(fs.get(), format, argv[1]);\n+\n+  // Limit the number of returned columns\n+  std::vector<std::string> columns{\"pickup_at\", \"dropoff_at\", \"total_amount\"};\n+  // Filter the rows on a predicate\n+  auto filter = (FieldExpression(\"total_amount\") > 1000.0f).Copy();\n \n Review comment:\n   Nit: I think it looks a bit odd to mix the DSL and explicit class names like this. If you don't want to import the string literal operator (see `filter_test.cc`), maybe:\r\n   ```suggestion\r\n     auto filter = greater(field_ref(\"total_amount\"), scalar(1000.0f));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:09.732+0000",
                    "updated": "2019-10-24T13:29:09.732+0000",
                    "started": "2019-10-24T13:29:09.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333398",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338584040\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,136 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n+  Selector s;\n+  s.base_dir = path;\n+  s.recursive = true;\n+\n+  std::shared_ptr<DataSourceDiscovery> discovery;\n+  ABORT_ON_FAILURE(FileSystemDataSourceDiscovery::Make(fs, s, format, &discovery));\n+\n+  std::shared_ptr<Schema> inspect_schema;\n+  ABORT_ON_FAILURE(discovery->Inspect(&inspect_schema));\n+\n+  std::shared_ptr<DataSource> source;\n+  ABORT_ON_FAILURE(discovery->Finish(&source));\n+\n+  return std::make_shared<Dataset>(DataSourceVector{source}, inspect_schema);\n+}\n+\n+std::shared_ptr<Scanner> GetScannerFromDataset(std::shared_ptr<Dataset> dataset,\n+                                               std::vector<std::string> columns,\n+                                               std::shared_ptr<Expression> filter) {\n+  std::unique_ptr<ScannerBuilder> scanner_builder;\n+  ABORT_ON_FAILURE(dataset->NewScan(&scanner_builder));\n+\n+  if (!columns.empty()) {\n+    ABORT_ON_FAILURE(scanner_builder->Project(columns));\n+  }\n+\n+  if (filter != nullptr) {\n \n Review comment:\n   I made it such that because I meant the example to have options in the future, e.g. take the filter from argv (--filter=100, --repeat-source=3, ...).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:50:03.029+0000",
                    "updated": "2019-10-24T13:50:03.029+0000",
                    "started": "2019-10-24T13:50:03.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333419",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338584120\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,136 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n+  Selector s;\n+  s.base_dir = path;\n+  s.recursive = true;\n+\n+  std::shared_ptr<DataSourceDiscovery> discovery;\n+  ABORT_ON_FAILURE(FileSystemDataSourceDiscovery::Make(fs, s, format, &discovery));\n+\n+  std::shared_ptr<Schema> inspect_schema;\n+  ABORT_ON_FAILURE(discovery->Inspect(&inspect_schema));\n+\n+  std::shared_ptr<DataSource> source;\n+  ABORT_ON_FAILURE(discovery->Finish(&source));\n+\n+  return std::make_shared<Dataset>(DataSourceVector{source}, inspect_schema);\n+}\n+\n+std::shared_ptr<Scanner> GetScannerFromDataset(std::shared_ptr<Dataset> dataset,\n+                                               std::vector<std::string> columns,\n+                                               std::shared_ptr<Expression> filter) {\n+  std::unique_ptr<ScannerBuilder> scanner_builder;\n+  ABORT_ON_FAILURE(dataset->NewScan(&scanner_builder));\n+\n+  if (!columns.empty()) {\n+    ABORT_ON_FAILURE(scanner_builder->Project(columns));\n+  }\n+\n+  if (filter != nullptr) {\n+    ABORT_ON_FAILURE(scanner_builder->Filter(filter));\n+  }\n+\n+  std::unique_ptr<Scanner> scanner;\n+  ABORT_ON_FAILURE(scanner_builder->Finish(&scanner));\n+\n+  return scanner;\n+}\n+\n+std::shared_ptr<Table> GetTableFromScanner(std::shared_ptr<Scanner> scanner) {\n+  std::shared_ptr<Table> table;\n+  ABORT_ON_FAILURE(scanner->ToTable(&table));\n+  return table;\n+}\n+\n+int main(int argc, char** argv) {\n+  auto fs = std::make_shared<LocalFileSystem>();\n+  auto format = std::make_shared<ParquetFileFormat>();\n+\n+  if (argc != 2) {\n+    // Fake success for CI purposes.\n+    return EXIT_SUCCESS;\n+  }\n+\n+  auto dataset = GetDatasetFromPath(fs.get(), format, argv[1]);\n+\n+  // Limit the number of returned columns\n+  std::vector<std::string> columns{\"pickup_at\", \"dropoff_at\", \"total_amount\"};\n+  // Filter the rows on a predicate\n+  auto filter = (FieldExpression(\"total_amount\") > 1000.0f).Copy();\n \n Review comment:\n   I just didn't know what to import to make it work :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:50:10.889+0000",
                    "updated": "2019-10-24T13:50:10.889+0000",
                    "started": "2019-10-24T13:50:10.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333420",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338662146\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,136 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n+  Selector s;\n+  s.base_dir = path;\n+  s.recursive = true;\n+\n+  std::shared_ptr<DataSourceDiscovery> discovery;\n+  ABORT_ON_FAILURE(FileSystemDataSourceDiscovery::Make(fs, s, format, &discovery));\n+\n+  std::shared_ptr<Schema> inspect_schema;\n+  ABORT_ON_FAILURE(discovery->Inspect(&inspect_schema));\n+\n+  std::shared_ptr<DataSource> source;\n+  ABORT_ON_FAILURE(discovery->Finish(&source));\n+\n+  return std::make_shared<Dataset>(DataSourceVector{source}, inspect_schema);\n+}\n+\n+std::shared_ptr<Scanner> GetScannerFromDataset(std::shared_ptr<Dataset> dataset,\n+                                               std::vector<std::string> columns,\n+                                               std::shared_ptr<Expression> filter) {\n+  std::unique_ptr<ScannerBuilder> scanner_builder;\n+  ABORT_ON_FAILURE(dataset->NewScan(&scanner_builder));\n+\n+  if (!columns.empty()) {\n+    ABORT_ON_FAILURE(scanner_builder->Project(columns));\n+  }\n+\n+  if (filter != nullptr) {\n \n Review comment:\n   This is also to show that Filter() is optional, I'll leave it like this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T16:05:22.318+0000",
                    "updated": "2019-10-24T16:05:22.318+0000",
                    "started": "2019-10-24T16:05:22.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333542",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/333611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r338705840\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,136 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n+  Selector s;\n+  s.base_dir = path;\n+  s.recursive = true;\n+\n+  std::shared_ptr<DataSourceDiscovery> discovery;\n+  ABORT_ON_FAILURE(FileSystemDataSourceDiscovery::Make(fs, s, format, &discovery));\n+\n+  std::shared_ptr<Schema> inspect_schema;\n+  ABORT_ON_FAILURE(discovery->Inspect(&inspect_schema));\n+\n+  std::shared_ptr<DataSource> source;\n+  ABORT_ON_FAILURE(discovery->Finish(&source));\n+\n+  return std::make_shared<Dataset>(DataSourceVector{source}, inspect_schema);\n+}\n+\n+std::shared_ptr<Scanner> GetScannerFromDataset(std::shared_ptr<Dataset> dataset,\n+                                               std::vector<std::string> columns,\n+                                               std::shared_ptr<Expression> filter) {\n+  std::unique_ptr<ScannerBuilder> scanner_builder;\n+  ABORT_ON_FAILURE(dataset->NewScan(&scanner_builder));\n+\n+  if (!columns.empty()) {\n+    ABORT_ON_FAILURE(scanner_builder->Project(columns));\n+  }\n+\n+  if (filter != nullptr) {\n \n Review comment:\n   If filter is optional, then please make the default `scalar(true)`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T17:43:06.502+0000",
                    "updated": "2019-10-24T17:43:06.502+0000",
                    "started": "2019-10-24T17:43:06.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333611",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/334266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r339177403\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n \n Review comment:\n   You could use a namespace alias instead e.g. `namespace ds = arrow::dataset`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T18:15:15.506+0000",
                    "updated": "2019-10-25T18:15:15.506+0000",
                    "started": "2019-10-25T18:15:15.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334266",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/334267",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r339178621\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n \n Review comment:\n   These aren't used\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T18:15:15.652+0000",
                    "updated": "2019-10-25T18:15:15.652+0000",
                    "started": "2019-10-25T18:15:15.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334267",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/334268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r339178563\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n \n Review comment:\n   Could use `namespace fs = arrow::fs` or just call out the file namespace\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T18:15:15.655+0000",
                    "updated": "2019-10-25T18:15:15.655+0000",
                    "started": "2019-10-25T18:15:15.655+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334268",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/334269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r339177802\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n \n Review comment:\n   Does it make sense to have `arrow/dataset/api.h`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T18:15:15.757+0000",
                    "updated": "2019-10-25T18:15:15.757+0000",
                    "started": "2019-10-25T18:15:15.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334269",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/334270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r339178018\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n \n Review comment:\n   Some of these includes seem unneeded\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T18:15:15.780+0000",
                    "updated": "2019-10-25T18:15:15.780+0000",
                    "started": "2019-10-25T18:15:15.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334270",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/335352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r339872214\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+using arrow::dataset::string_literals::operator\"\" _;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n \n Review comment:\n   Could you describe somewhere what the files under path should look like? And what the paths should be, if that's relevant for partition discovery?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T02:38:06.307+0000",
                    "updated": "2019-10-29T02:38:06.307+0000",
                    "started": "2019-10-29T02:38:06.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335352",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/335515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720#discussion_r340065284\n \n \n\n ##########\n File path: cpp/examples/arrow/dataset-parquet-scan-example.cc\n ##########\n @@ -0,0 +1,137 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+\n+#include <arrow/dataset/dataset.h>\n+#include <arrow/dataset/discovery.h>\n+#include <arrow/dataset/file_base.h>\n+#include <arrow/dataset/file_parquet.h>\n+#include <arrow/dataset/filter.h>\n+#include <arrow/dataset/scanner.h>\n+#include <arrow/filesystem/localfs.h>\n+#include <arrow/util/iterator.h>\n+#include <arrow/util/task_group.h>\n+#include <arrow/util/thread_pool.h>\n+\n+using arrow::field;\n+using arrow::int16;\n+using arrow::Schema;\n+using arrow::Table;\n+\n+using arrow::internal::TaskGroup;\n+using arrow::internal::ThreadPool;\n+\n+using arrow::fs::FileSystem;\n+using arrow::fs::LocalFileSystem;\n+using arrow::fs::Selector;\n+\n+using arrow::dataset::Dataset;\n+using arrow::dataset::DataSource;\n+using arrow::dataset::DataSourceDiscovery;\n+using arrow::dataset::DataSourceVector;\n+using arrow::dataset::Expression;\n+using arrow::dataset::FieldExpression;\n+using arrow::dataset::FileFormat;\n+using arrow::dataset::FileSystemDataSourceDiscovery;\n+using arrow::dataset::ParquetFileFormat;\n+using arrow::dataset::PartitionScheme;\n+using arrow::dataset::Scanner;\n+using arrow::dataset::ScannerBuilder;\n+using arrow::dataset::ScanTask;\n+using arrow::dataset::string_literals::operator\"\" _;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+std::shared_ptr<Dataset> GetDatasetFromPath(FileSystem* fs,\n+                                            std::shared_ptr<FileFormat> format,\n+                                            std::string path) {\n+  // Find all files under `path`\n \n Review comment:\n   This example doesn't use partitions yet. I didn't want to add it because it would achieve nothing. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T13:14:32.905+0000",
                    "updated": "2019-10-29T13:14:32.905+0000",
                    "started": "2019-10-29T13:14:32.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335515",
                    "issueId": "13263568"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/worklog/336931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5720: ARROW-6950: [C++][Dataset] Add dataset benchmark example\nURL: https://github.com/apache/arrow/pull/5720\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-31T17:08:33.501+0000",
                    "updated": "2019-10-31T17:08:33.501+0000",
                    "started": "2019-10-31T17:08:33.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "336931",
                    "issueId": "13263568"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
            "id": "6",
            "description": "A new unit, integration or system test.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
            "name": "Test",
            "subtask": false
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5fee7df3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61b23c67[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bfcfa23[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bddae3f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23610ab3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@cc96b72[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6008b52a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@76324342[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d2dfba5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1a788989[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ffcce09[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5bb0b2e7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 31 17:09:19 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-31T17:09:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6950/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-10-21T14:41:33.000+0000",
        "updated": "2020-04-10T15:32:47.000+0000",
        "timeoriginalestimate": null,
        "description": "Create an executable that load a directory with a known partition scheme with a filter and a projection. This will be used as a baseline for future performance improvement but also to show various feature of the dataset API.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Add example/benchmark for reading parquet files with dataset",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263568/comment/16964213",
                    "id": "16964213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5720\n[https://github.com/apache/arrow/pull/5720]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-31T17:09:19.314+0000",
                    "updated": "2019-10-31T17:09:19.314+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z07srk:",
        "customfield_12314139": null
    }
}