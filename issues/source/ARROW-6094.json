{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13248324",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324",
    "key": "ARROW-6094",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6094/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 33,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/286666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980\n \n \n   coupled with proposal in https://docs.google.com/document/d/1zLdFYikk3owbKpHvJrARLMlmYpi-Ef6OJy7H90MqViA/edit?usp=sharing\r\n   \r\n   can be merged once that proposal is approved\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T12:10:27.582+0000",
                    "updated": "2019-08-01T12:10:27.582+0000",
                    "started": "2019-08-01T12:10:27.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286666",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/286691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r309683384\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -221,6 +221,19 @@ public void getFlightInfo(Flight.FlightDescriptor request, StreamObserver<Flight\n     }\n   }\n \n+  @Override\n+  public void getFlightSchema(Flight.FlightDescriptor request, StreamObserver<Flight.SchemaResult> responseObserver) {\n+    try {\n+      SchemaResult result = producer\n+              .getFlightSchema(makeContext((ServerCallStreamObserver<?>) responseObserver),\n+                      new FlightDescriptor(request));\n+      responseObserver.onNext(result.toProtocol());\n+      responseObserver.onCompleted();\n+    } catch (Exception ex) {\n+      responseObserver.onError(ex);\n \n Review comment:\n   This should use `StatusUtils.toGrpcException`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T13:00:59.146+0000",
                    "updated": "2019-08-01T13:00:59.146+0000",
                    "started": "2019-08-01T13:00:59.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286691",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/292314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#issuecomment-520086586\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=h1) Report\n   > Merging [#4980](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/b98a560fc5619a7bd0dcc47a94de5f4419937701?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n   > The diff coverage is `80.55%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4980/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4980      +/-   ##\n   ==========================================\n   - Coverage   87.59%   87.58%   -0.02%     \n   ==========================================\n     Files        1009     1009              \n     Lines      143902   144010     +108     \n     Branches     1418     1418              \n   ==========================================\n   + Hits       126056   126136      +80     \n   - Misses      17484    17512      +28     \n     Partials      362      362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/flight.py](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZmxpZ2h0LnB5) | `80% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/server.h](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/flight.h](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0Lmg=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/flight-test.cc](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvZmxpZ2h0LXRlc3QuY2M=) | `98.08% <100%> (+0.02%)` | :arrow_up: |\n   | [cpp/src/arrow/flight/types.h](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuaA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/client.cc](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvY2xpZW50LmNj) | `92.52% <100%> (+0.39%)` | :arrow_up: |\n   | [cpp/src/arrow/flight/client.h](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvY2xpZW50Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `81.81% <100%> (+0.56%)` | :arrow_up: |\n   | [cpp/src/arrow/python/flight.cc](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0LmNj) | `92.85% <100%> (+0.6%)` | :arrow_up: |\n   | [python/pyarrow/\\_flight.pyx](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2ZsaWdodC5weXg=) | `53.51% <43.47%> (-0.38%)` | :arrow_down: |\n   | ... and [9 more](https://codecov.io/gh/apache/arrow/pull/4980/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=footer). Last update [b98a560...7cc3b37](https://codecov.io/gh/apache/arrow/pull/4980?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T22:41:15.507+0000",
                    "updated": "2019-08-09T22:41:15.507+0000",
                    "started": "2019-08-09T22:41:15.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292314",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#issuecomment-523741281\n \n \n   @rymurr it looks like this needs to be rebased.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T04:21:21.587+0000",
                    "updated": "2019-08-22T04:21:21.587+0000",
                    "started": "2019-08-22T04:21:21.587+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299154",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on issue #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#issuecomment-523784864\n \n \n   hey @emkornfield, thanks for pointing that out. Rebased now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T07:28:18.666+0000",
                    "updated": "2019-08-22T07:28:18.666+0000",
                    "started": "2019-08-22T07:28:18.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299226",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r316958023\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.h\n ##########\n @@ -319,6 +319,32 @@ struct ARROW_FLIGHT_EXPORT FlightPayload {\n   ipc::internal::IpcPayload ipc_message;\n };\n \n+/// \\brief Schema result returned after a schema request RPC\n+struct ARROW_FLIGHT_EXPORT SchemaResult {\n+ public:\n+  explicit SchemaResult(std::string schema)\n+      : raw_schema_(std::move(schema)), reconstructed_schema_(false) {}\n+  explicit SchemaResult(std::string&& schema)\n \n Review comment:\n   any reason this is needed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T02:52:35.906+0000",
                    "updated": "2019-08-23T02:52:35.906+0000",
                    "started": "2019-08-23T02:52:35.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299879",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r316958240\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.h\n ##########\n @@ -319,6 +319,32 @@ struct ARROW_FLIGHT_EXPORT FlightPayload {\n   ipc::internal::IpcPayload ipc_message;\n };\n \n+/// \\brief Schema result returned after a schema request RPC\n+struct ARROW_FLIGHT_EXPORT SchemaResult {\n+ public:\n+  explicit SchemaResult(std::string schema)\n+      : raw_schema_(std::move(schema)), reconstructed_schema_(false) {}\n+  explicit SchemaResult(std::string&& schema)\n+      : raw_schema_(std::move(schema)), reconstructed_schema_(false) {}\n+\n+  /// \\brief Deserialize the Arrow schema of the dataset, to be passed\n+  /// to each call to DoGet. Populate any dictionary encoded fields\n+  /// into a DictionaryMemo for bookkeeping\n+  /// \\param[in,out] dictionary_memo for dictionary bookkeeping, will\n+  /// be modified\n+  /// \\param[out] out the reconstructed Schema\n+  Status GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                   std::shared_ptr<Schema>* out) const;\n+\n+  const std::string& serialized_schema() const { return raw_schema_; }\n+  void set_schema(const std::string& schema) { raw_schema_ = schema; }\n \n Review comment:\n   is this needed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T02:53:55.689+0000",
                    "updated": "2019-08-23T02:53:55.689+0000",
                    "started": "2019-08-23T02:53:55.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299880",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r316958531\n \n \n\n ##########\n File path: cpp/src/arrow/python/flight.h\n ##########\n @@ -205,6 +212,10 @@ Status CreateFlightInfo(const std::shared_ptr<arrow::Schema>& schema,\n                         int64_t total_records, int64_t total_bytes,\n                         std::unique_ptr<arrow::flight::FlightInfo>* out);\n \n+ARROW_PYTHON_EXPORT\n+Status CreateSchemaResult(const std::shared_ptr<arrow::Schema>& schema,\n \n Review comment:\n   please document this function.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T02:55:44.933+0000",
                    "updated": "2019-08-23T02:55:44.933+0000",
                    "started": "2019-08-23T02:55:44.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299881",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r316958960\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   is there any reason to do this work lazily?  Can parsing be done in a static factory method instead (and make the constructed private?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T02:58:58.338+0000",
                    "updated": "2019-08-23T02:58:58.338+0000",
                    "started": "2019-08-23T02:58:58.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299882",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/299884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r316959196\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/SchemaResult.java\n ##########\n @@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.Channels;\n+\n+import org.apache.arrow.flight.impl.Flight;\n+import org.apache.arrow.vector.ipc.ReadChannel;\n+import org.apache.arrow.vector.ipc.WriteChannel;\n+import org.apache.arrow.vector.ipc.message.MessageSerializer;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+import com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream;\n+import com.google.common.collect.ImmutableList;\n+import com.google.protobuf.ByteString;\n+\n+/**\n+ * Opaque result returned after executing a getSchema request.\n+ *\n+ * <p>POJO wrapper around the Flight protocol buffer message sharing the same name.\n+ */\n+public class SchemaResult {\n+\n+  private Schema schema;\n+\n+  public SchemaResult(Schema schema) {\n+    this.schema = schema;\n+  }\n+\n+  /**\n+   * Constructs from the protocol buffer representation.\n+   */\n+  SchemaResult(Flight.SchemaResult pbSchemaResult) {\n \n Review comment:\n   given the parsing required it might be better to expose this as a static factory method.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T03:00:40.387+0000",
                    "updated": "2019-08-23T03:00:40.387+0000",
                    "started": "2019-08-23T03:00:40.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299884",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/300706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on issue #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#issuecomment-524546237\n \n \n   Thanks a lot for the code review @emkornfield I have addressed your comments in my patch. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-24T12:25:02.848+0000",
                    "updated": "2019-08-24T12:25:02.848+0000",
                    "started": "2019-08-24T12:25:02.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300706",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/302604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318421679\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   @rymurr sorry, but I'm not sure if I saw your response here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T07:06:46.676+0000",
                    "updated": "2019-08-28T07:06:46.676+0000",
                    "started": "2019-08-28T07:06:46.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302604",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/302610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318428680\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   Ahhh, missed that comment. Will fix asap. I was following the pattern from getflightinfo but I agree that it's not needed here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T07:27:01.026+0000",
                    "updated": "2019-08-28T07:27:01.026+0000",
                    "started": "2019-08-28T07:27:01.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302610",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/302611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318428696\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   Ahhh, missed that comment. Will fix asap. I was following the pattern from getflightinfo but I agree that it's not needed here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T07:27:03.204+0000",
                    "updated": "2019-08-28T07:27:03.204+0000",
                    "started": "2019-08-28T07:27:03.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302611",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/302933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318428696\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   Ahhh, missed that comment. Will fix asap. I was following the pattern from getflightinfo but I agree that it's not needed here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T14:49:16.574+0000",
                    "updated": "2019-08-28T14:49:16.574+0000",
                    "started": "2019-08-28T14:49:16.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302933",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/302993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318664943\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   Hey @emkornfield not sure what you mean here actually. GetSchema should be run lazily if it is to reuse an existing dictionary_memo. What were you thinking should be put in the static method and which constructor is private. Do you mean SchemaResult has a private constructor? That is fine by me but the schema would still require a dict memo to convert from a string.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T16:02:12.492+0000",
                    "updated": "2019-08-28T16:02:12.492+0000",
                    "started": "2019-08-28T16:02:12.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302993",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/303383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318897235\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.cc\n ##########\n @@ -118,6 +118,19 @@ std::string FlightDescriptor::ToString() const {\n   return ss.str();\n }\n \n+Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                               std::shared_ptr<Schema>* out) const {\n+  if (reconstructed_schema_) {\n+    *out = schema_;\n+    return Status::OK();\n+  }\n+  io::BufferReader schema_reader(raw_schema_);\n \n Review comment:\n   I'm not sure of the exact use-case but it seems like one of two options:\r\n   1.  The schema should be reparsed each time to account fo the dictionary_memo being passed in, so the memo gets populated properly.\r\n   2.  In the static method case, the DictionaryMemo becomes a field on the Result.\r\n   \r\n   It looks like there are other comments below that it appears you didn't address.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T06:00:54.976+0000",
                    "updated": "2019-08-29T06:00:54.976+0000",
                    "started": "2019-08-29T06:00:54.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303383",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/303424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318921230\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.h\n ##########\n @@ -319,6 +319,32 @@ struct ARROW_FLIGHT_EXPORT FlightPayload {\n   ipc::internal::IpcPayload ipc_message;\n };\n \n+/// \\brief Schema result returned after a schema request RPC\n+struct ARROW_FLIGHT_EXPORT SchemaResult {\n+ public:\n+  explicit SchemaResult(std::string schema)\n+      : raw_schema_(std::move(schema)), reconstructed_schema_(false) {}\n+  explicit SchemaResult(std::string&& schema)\n \n Review comment:\n   no, this has been removed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T07:25:52.789+0000",
                    "updated": "2019-08-29T07:25:52.789+0000",
                    "started": "2019-08-29T07:25:52.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303424",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/303425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318921284\n \n \n\n ##########\n File path: cpp/src/arrow/flight/types.h\n ##########\n @@ -319,6 +319,32 @@ struct ARROW_FLIGHT_EXPORT FlightPayload {\n   ipc::internal::IpcPayload ipc_message;\n };\n \n+/// \\brief Schema result returned after a schema request RPC\n+struct ARROW_FLIGHT_EXPORT SchemaResult {\n+ public:\n+  explicit SchemaResult(std::string schema)\n+      : raw_schema_(std::move(schema)), reconstructed_schema_(false) {}\n+  explicit SchemaResult(std::string&& schema)\n+      : raw_schema_(std::move(schema)), reconstructed_schema_(false) {}\n+\n+  /// \\brief Deserialize the Arrow schema of the dataset, to be passed\n+  /// to each call to DoGet. Populate any dictionary encoded fields\n+  /// into a DictionaryMemo for bookkeeping\n+  /// \\param[in,out] dictionary_memo for dictionary bookkeeping, will\n+  /// be modified\n+  /// \\param[out] out the reconstructed Schema\n+  Status GetSchema(ipc::DictionaryMemo* dictionary_memo,\n+                   std::shared_ptr<Schema>* out) const;\n+\n+  const std::string& serialized_schema() const { return raw_schema_; }\n+  void set_schema(const std::string& schema) { raw_schema_ = schema; }\n \n Review comment:\n   no, this has been removed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T07:26:03.845+0000",
                    "updated": "2019-08-29T07:26:03.845+0000",
                    "started": "2019-08-29T07:26:03.844+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303425",
                    "issueId": "13248324"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/worklog/303426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #4980: ARROW-6094: [FlightRPC][Proposal] add flight rpc method getFlightSchema\nURL: https://github.com/apache/arrow/pull/4980#discussion_r318921332\n \n \n\n ##########\n File path: cpp/src/arrow/python/flight.h\n ##########\n @@ -205,6 +212,10 @@ Status CreateFlightInfo(const std::shared_ptr<arrow::Schema>& schema,\n                         int64_t total_records, int64_t total_bytes,\n                         std::unique_ptr<arrow::flight::FlightInfo>* out);\n \n+ARROW_PYTHON_EXPORT\n+Status CreateSchemaResult(const std::shared_ptr<arrow::Schema>& schema,\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T07:26:11.377+0000",
                    "updated": "2019-08-29T07:26:11.377+0000",
                    "started": "2019-08-29T07:26:11.377+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303426",
                    "issueId": "13248324"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 19200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@49893b50[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@662975bc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@47e04303[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6ac94ad6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7959155b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@23a8f2ad[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66955580[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@462a2c7e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77e80a2d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13b1b3e7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fc4cd44[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@481a431e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 31 03:27:48 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-31T03:27:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6094/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-01T11:56:08.000+0000",
        "updated": "2019-08-31T03:27:48.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement GetFlightSchema as per https://docs.google.com/document/d/1zLdFYikk3owbKpHvJrARLMlmYpi-Ef6OJy7H90MqViA/edit?usp=sharing\r\n\r\nand \r\nhttps://lists.apache.org/thread.html/3539984493cf3d4d439bef25c150fa9e09e0b43ce0afb6be378d41df@%3Cdev.arrow.apache.org%3E",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format][Flight] Add GetFlightSchema to Flight RPC",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248324/comment/16920000",
                    "id": "16920000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4980\n[https://github.com/apache/arrow/pull/4980]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-31T03:27:48.261+0000",
                    "updated": "2019-08-31T03:27:48.261+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z058lk:",
        "customfield_12314139": null
    }
}