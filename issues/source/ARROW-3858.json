{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13200162",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200162",
    "key": "ARROW-3858",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3858/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200162/worklog/168942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 opened a new pull request #3017: ARROW-3858: [GLib] Use {class_name}_get_instance_private\nURL: https://github.com/apache/arrow/pull/3017\n \n \n   Because `G_TYPE_INSTANCE_GET_PRIVATE` has been deprecated since version 2.58.\r\n   https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-PRIVATE\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T00:11:30.394+0000",
                    "updated": "2018-11-23T00:11:30.394+0000",
                    "started": "2018-11-23T00:11:30.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168942",
                    "issueId": "13200162"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200162/worklog/169094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #3017: ARROW-3858: [GLib] Use {class_name}_get_instance_private\nURL: https://github.com/apache/arrow/pull/3017\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/arrow-glib/array-builder.cpp b/c_glib/arrow-glib/array-builder.cpp\nindex 6ca7cbd4cc..a5c75790de 100644\n--- a/c_glib/arrow-glib/array-builder.cpp\n+++ b/c_glib/arrow-glib/array-builder.cpp\n@@ -243,10 +243,10 @@ G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE(GArrowArrayBuilder,\n                                     garrow_array_builder,\n                                     G_TYPE_OBJECT)\n \n-#define GARROW_ARRAY_BUILDER_GET_PRIVATE(obj)                           \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                                   \\\n-                               GARROW_TYPE_ARRAY_BUILDER,               \\\n-                               GArrowArrayBuilderPrivate))\n+#define GARROW_ARRAY_BUILDER_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowArrayBuilderPrivate *>(           \\\n+     garrow_array_builder_get_instance_private(       \\\n+       GARROW_ARRAY_BUILDER(obj)))\n \n static void\n garrow_array_builder_finalize(GObject *object)\n@@ -2940,10 +2940,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowListArrayBuilder,\n                            garrow_list_array_builder,\n                            GARROW_TYPE_ARRAY_BUILDER)\n \n-#define GARROW_LIST_ARRAY_BUILDER_GET_PRIVATE(obj)              \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\n-                               GARROW_TYPE_LIST_ARRAY_BUILDER,  \\\n-                               GArrowListArrayBuilderPrivate))\n+#define GARROW_LIST_ARRAY_BUILDER_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowListArrayBuilderPrivate *>(            \\\n+     garrow_list_array_builder_get_instance_private(       \\\n+       GARROW_LIST_ARRAY_BUILDER(obj)))\n \n static void\n garrow_list_array_builder_dispose(GObject *object)\n@@ -3110,10 +3110,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowStructArrayBuilder,\n                            garrow_struct_array_builder,\n                            GARROW_TYPE_ARRAY_BUILDER)\n \n-#define GARROW_STRUCT_ARRAY_BUILDER_GET_PRIVATE(obj)                    \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                                   \\\n-                               GARROW_TYPE_STRUCT_ARRAY_BUILDER,        \\\n-                               GArrowStructArrayBuilderPrivate))\n+#define GARROW_STRUCT_ARRAY_BUILDER_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowStructArrayBuilderPrivate *>(            \\\n+     garrow_struct_array_builder_get_instance_private(       \\\n+       GARROW_STRUCT_ARRAY_BUILDER(obj)))\n \n static void\n garrow_struct_array_builder_dispose(GObject *object)\ndiff --git a/c_glib/arrow-glib/basic-array.cpp b/c_glib/arrow-glib/basic-array.cpp\nindex 9a60c46b59..77f64fc0a8 100644\n--- a/c_glib/arrow-glib/basic-array.cpp\n+++ b/c_glib/arrow-glib/basic-array.cpp\n@@ -211,8 +211,10 @@ enum {\n \n G_DEFINE_TYPE_WITH_PRIVATE(GArrowArray, garrow_array, G_TYPE_OBJECT)\n \n-#define GARROW_ARRAY_GET_PRIVATE(obj)                                   \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj), GARROW_TYPE_ARRAY, GArrowArrayPrivate))\n+#define GARROW_ARRAY_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowArrayPrivate *>(          \\\n+     garrow_array_get_instance_private(       \\\n+       GARROW_ARRAY(obj)))\n \n static void\n garrow_array_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/basic-data-type.cpp b/c_glib/arrow-glib/basic-data-type.cpp\nindex 8099d78594..24133c99f4 100644\n--- a/c_glib/arrow-glib/basic-data-type.cpp\n+++ b/c_glib/arrow-glib/basic-data-type.cpp\n@@ -101,10 +101,10 @@ G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE(GArrowDataType,\n                                     garrow_data_type,\n                                     G_TYPE_OBJECT)\n \n-#define GARROW_DATA_TYPE_GET_PRIVATE(obj)               \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n-                               GARROW_TYPE_DATA_TYPE,   \\\n-                               GArrowDataTypePrivate))\n+#define GARROW_DATA_TYPE_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowDataTypePrivate *>(           \\\n+     garrow_data_type_get_instance_private(       \\\n+       GARROW_DATA_TYPE(obj)))\n \n static void\n garrow_data_type_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/buffer.cpp b/c_glib/arrow-glib/buffer.cpp\nindex 82a6c2a93d..9ba98f05e5 100644\n--- a/c_glib/arrow-glib/buffer.cpp\n+++ b/c_glib/arrow-glib/buffer.cpp\n@@ -55,8 +55,10 @@ enum {\n \n G_DEFINE_TYPE_WITH_PRIVATE(GArrowBuffer, garrow_buffer, G_TYPE_OBJECT)\n \n-#define GARROW_BUFFER_GET_PRIVATE(obj) \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj), GARROW_TYPE_BUFFER, GArrowBufferPrivate))\n+#define GARROW_BUFFER_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowBufferPrivate *>(          \\\n+     garrow_buffer_get_instance_private(       \\\n+       GARROW_BUFFER(obj)))\n \n static void\n garrow_buffer_dispose(GObject *object)\ndiff --git a/c_glib/arrow-glib/chunked-array.cpp b/c_glib/arrow-glib/chunked-array.cpp\nindex dbbf053c9c..e046b0d547 100644\n--- a/c_glib/arrow-glib/chunked-array.cpp\n+++ b/c_glib/arrow-glib/chunked-array.cpp\n@@ -52,10 +52,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowChunkedArray,\n                            garrow_chunked_array,\n                            G_TYPE_OBJECT)\n \n-#define GARROW_CHUNKED_ARRAY_GET_PRIVATE(obj)                   \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\n-                               GARROW_TYPE_CHUNKED_ARRAY,       \\\n-                               GArrowChunkedArrayPrivate))\n+#define GARROW_CHUNKED_ARRAY_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowChunkedArrayPrivate *>(           \\\n+     garrow_chunked_array_get_instance_private(       \\\n+       GARROW_CHUNKED_ARRAY(obj)))\n \n static void\n garrow_chunked_array_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/decimal.cpp b/c_glib/arrow-glib/decimal.cpp\nindex 79bf7e4d4d..67b2d43b10 100644\n--- a/c_glib/arrow-glib/decimal.cpp\n+++ b/c_glib/arrow-glib/decimal.cpp\n@@ -49,10 +49,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n                            garrow_decimal128,\n                            G_TYPE_OBJECT)\n \n-#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                      \\\n-                               GARROW_TYPE_DECIMAL128,     \\\n-                               GArrowDecimal128Private))\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowDecimal128Private *>(          \\\n+     garrow_decimal128_get_instance_private(       \\\n+       GARROW_DECIMAL128(obj)))\n \n static void\n garrow_decimal128_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/field.cpp b/c_glib/arrow-glib/field.cpp\nindex 8fd9dd6e5b..b989d288ec 100644\n--- a/c_glib/arrow-glib/field.cpp\n+++ b/c_glib/arrow-glib/field.cpp\n@@ -48,10 +48,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowField,\n                            garrow_field,\n                            G_TYPE_OBJECT)\n \n-#define GARROW_FIELD_GET_PRIVATE(obj)               \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),               \\\n-                               GARROW_TYPE_FIELD,   \\\n-                               GArrowFieldPrivate))\n+#define GARROW_FIELD_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowFieldPrivate *>(          \\\n+     garrow_field_get_instance_private(       \\\n+       GARROW_FIELD(obj)))\n \n static void\n garrow_field_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/input-stream.cpp b/c_glib/arrow-glib/input-stream.cpp\nindex 69a20b0f71..cb36e49067 100644\n--- a/c_glib/arrow-glib/input-stream.cpp\n+++ b/c_glib/arrow-glib/input-stream.cpp\n@@ -105,10 +105,10 @@ G_DEFINE_TYPE_WITH_CODE(GArrowInputStream,\n                         G_IMPLEMENT_INTERFACE(GARROW_TYPE_READABLE,\n                                               garrow_input_stream_readable_interface_init));\n \n-#define GARROW_INPUT_STREAM_GET_PRIVATE(obj)                    \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\n-                               GARROW_TYPE_INPUT_STREAM,        \\\n-                               GArrowInputStreamPrivate))\n+#define GARROW_INPUT_STREAM_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowInputStreamPrivate *>(           \\\n+     garrow_input_stream_get_instance_private(       \\\n+       GARROW_INPUT_STREAM(obj)))\n \n static void\n garrow_input_stream_finalize(GObject *object)\n@@ -338,10 +338,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowBufferInputStream,\n                            garrow_buffer_input_stream,\n                            GARROW_TYPE_SEEKABLE_INPUT_STREAM);\n \n-#define GARROW_BUFFER_INPUT_STREAM_GET_PRIVATE(obj)                     \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                                   \\\n-                               GARROW_TYPE_BUFFER_INPUT_STREAM,         \\\n-                               GArrowBufferInputStreamPrivate))\n+#define GARROW_BUFFER_INPUT_STREAM_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowBufferInputStreamPrivate *>(            \\\n+     garrow_buffer_input_stream_get_instance_private(       \\\n+       GARROW_BUFFER_INPUT_STREAM(obj)))\n \n static void\n garrow_buffer_input_stream_dispose(GObject *object)\ndiff --git a/c_glib/arrow-glib/output-stream.cpp b/c_glib/arrow-glib/output-stream.cpp\nindex aa0a13cb87..df6de0c1f4 100644\n--- a/c_glib/arrow-glib/output-stream.cpp\n+++ b/c_glib/arrow-glib/output-stream.cpp\n@@ -103,10 +103,10 @@ G_DEFINE_TYPE_WITH_CODE(GArrowOutputStream,\n                         G_IMPLEMENT_INTERFACE(GARROW_TYPE_WRITABLE,\n                                               garrow_output_stream_writable_interface_init));\n \n-#define GARROW_OUTPUT_STREAM_GET_PRIVATE(obj)                   \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\n-                               GARROW_TYPE_OUTPUT_STREAM,       \\\n-                               GArrowOutputStreamPrivate))\n+#define GARROW_OUTPUT_STREAM_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowOutputStreamPrivate *>(           \\\n+     garrow_output_stream_get_instance_private(       \\\n+       GARROW_OUTPUT_STREAM(obj)))\n \n static void\n garrow_output_stream_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/reader.cpp b/c_glib/arrow-glib/reader.cpp\nindex b4b5c089b6..c6c96670ba 100644\n--- a/c_glib/arrow-glib/reader.cpp\n+++ b/c_glib/arrow-glib/reader.cpp\n@@ -70,10 +70,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowRecordBatchReader,\n                            garrow_record_batch_reader,\n                            G_TYPE_OBJECT);\n \n-#define GARROW_RECORD_BATCH_READER_GET_PRIVATE(obj)             \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\n-                               GARROW_TYPE_RECORD_BATCH_READER, \\\n-                               GArrowRecordBatchReaderPrivate))\n+#define GARROW_RECORD_BATCH_READER_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowRecordBatchReaderPrivate *>(            \\\n+     garrow_record_batch_reader_get_instance_private(       \\\n+       GARROW_RECORD_BATCH_READER(obj)))\n \n static void\n garrow_record_batch_reader_finalize(GObject *object)\n@@ -322,10 +322,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowRecordBatchFileReader,\n                            garrow_record_batch_file_reader,\n                            G_TYPE_OBJECT);\n \n-#define GARROW_RECORD_BATCH_FILE_READER_GET_PRIVATE(obj)                \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                                   \\\n-                               GARROW_TYPE_RECORD_BATCH_FILE_READER,    \\\n-                               GArrowRecordBatchFileReaderPrivate))\n+#define GARROW_RECORD_BATCH_FILE_READER_GET_PRIVATE(obj)        \\\n+  static_cast<GArrowRecordBatchFileReaderPrivate *>(            \\\n+     garrow_record_batch_file_reader_get_instance_private(      \\\n+       GARROW_RECORD_BATCH_FILE_READER(obj)))\n \n static void\n garrow_record_batch_file_reader_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/record-batch.cpp b/c_glib/arrow-glib/record-batch.cpp\nindex 0d0777dabb..f905b065de 100644\n--- a/c_glib/arrow-glib/record-batch.cpp\n+++ b/c_glib/arrow-glib/record-batch.cpp\n@@ -72,10 +72,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowRecordBatch,\n                            garrow_record_batch,\n                            G_TYPE_OBJECT)\n \n-#define GARROW_RECORD_BATCH_GET_PRIVATE(obj)               \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),               \\\n-                               GARROW_TYPE_RECORD_BATCH,   \\\n-                               GArrowRecordBatchPrivate))\n+#define GARROW_RECORD_BATCH_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowRecordBatchPrivate *>(           \\\n+     garrow_record_batch_get_instance_private(       \\\n+       GARROW_RECORD_BATCH(obj)))\n \n static void\n garrow_record_batch_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/schema.cpp b/c_glib/arrow-glib/schema.cpp\nindex ba98c9ba8b..1affaaede7 100644\n--- a/c_glib/arrow-glib/schema.cpp\n+++ b/c_glib/arrow-glib/schema.cpp\n@@ -48,10 +48,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowSchema,\n                            garrow_schema,\n                            G_TYPE_OBJECT)\n \n-#define GARROW_SCHEMA_GET_PRIVATE(obj)                  \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n-                               GARROW_TYPE_SCHEMA,      \\\n-                               GArrowSchemaPrivate))\n+#define GARROW_SCHEMA_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowSchemaPrivate *>(          \\\n+     garrow_schema_get_instance_private(       \\\n+       GARROW_SCHEMA(obj)))\n \n static void\n garrow_schema_finalize(GObject *object)\ndiff --git a/c_glib/arrow-glib/table.cpp b/c_glib/arrow-glib/table.cpp\nindex 5e72c878d3..b4d0d2c6d8 100644\n--- a/c_glib/arrow-glib/table.cpp\n+++ b/c_glib/arrow-glib/table.cpp\n@@ -51,10 +51,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowTable,\n                            garrow_table,\n                            G_TYPE_OBJECT)\n \n-#define GARROW_TABLE_GET_PRIVATE(obj)               \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),               \\\n-                               GARROW_TYPE_TABLE,   \\\n-                               GArrowTablePrivate))\n+#define GARROW_TABLE_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowTablePrivate *>(          \\\n+     garrow_table_get_instance_private(       \\\n+       GARROW_TABLE(obj)))\n \n static void\n garrow_table_dispose(GObject *object)\ndiff --git a/c_glib/arrow-glib/tensor.cpp b/c_glib/arrow-glib/tensor.cpp\nindex e7d3c38f7c..ff2683de4e 100644\n--- a/c_glib/arrow-glib/tensor.cpp\n+++ b/c_glib/arrow-glib/tensor.cpp\n@@ -51,8 +51,10 @@ enum {\n \n G_DEFINE_TYPE_WITH_PRIVATE(GArrowTensor, garrow_tensor, G_TYPE_OBJECT)\n \n-#define GARROW_TENSOR_GET_PRIVATE(obj)                                   \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj), GARROW_TYPE_TENSOR, GArrowTensorPrivate))\n+#define GARROW_TENSOR_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowTensorPrivate *>(          \\\n+     garrow_tensor_get_instance_private(       \\\n+       GARROW_TENSOR(obj)))\n \n static void\n garrow_tensor_dispose(GObject *object)\ndiff --git a/c_glib/arrow-glib/writer.cpp b/c_glib/arrow-glib/writer.cpp\nindex 1ddb5befec..b0da00c2ae 100644\n--- a/c_glib/arrow-glib/writer.cpp\n+++ b/c_glib/arrow-glib/writer.cpp\n@@ -65,10 +65,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowRecordBatchWriter,\n                            garrow_record_batch_writer,\n                            G_TYPE_OBJECT);\n \n-#define GARROW_RECORD_BATCH_WRITER_GET_PRIVATE(obj)             \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\n-                               GARROW_TYPE_RECORD_BATCH_WRITER, \\\n-                               GArrowRecordBatchWriterPrivate))\n+#define GARROW_RECORD_BATCH_WRITER_GET_PRIVATE(obj)         \\\n+  static_cast<GArrowRecordBatchWriterPrivate *>(            \\\n+     garrow_record_batch_writer_get_instance_private(       \\\n+       GARROW_RECORD_BATCH_WRITER(obj)))\n \n static void\n garrow_record_batch_writer_finalize(GObject *object)\ndiff --git a/c_glib/gandiva-glib/projector.cpp b/c_glib/gandiva-glib/projector.cpp\nindex 036576f764..5ba8a22830 100644\n--- a/c_glib/gandiva-glib/projector.cpp\n+++ b/c_glib/gandiva-glib/projector.cpp\n@@ -55,10 +55,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GGandivaProjector,\n                            ggandiva_projector,\n                            G_TYPE_OBJECT)\n \n-#define GGANDIVA_PROJECTOR_GET_PRIVATE(obj)                 \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                       \\\n-                               GGANDIVA_TYPE_PROJECTOR,     \\\n-                               GGandivaProjectorPrivate))\n+#define GGANDIVA_PROJECTOR_GET_PRIVATE(obj)         \\\n+  static_cast<GGandivaProjectorPrivate *>(          \\\n+     ggandiva_projector_get_instance_private(       \\\n+       GGANDIVA_PROJECTOR(obj)))\n \n static void\n ggandiva_projector_finalize(GObject *object)\ndiff --git a/c_glib/plasma-glib/client.cpp b/c_glib/plasma-glib/client.cpp\nindex e8eb699541..f818c971de 100644\n--- a/c_glib/plasma-glib/client.cpp\n+++ b/c_glib/plasma-glib/client.cpp\n@@ -51,10 +51,10 @@ G_DEFINE_TYPE_WITH_PRIVATE(GPlasmaClient,\n                            gplasma_client,\n                            G_TYPE_OBJECT)\n \n-#define GPLASMA_CLIENT_GET_PRIVATE(obj)                 \\\n-  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n-                               GPLASMA_TYPE_CLIENT,     \\\n-                               GPlasmaClientPrivate))\n+#define GPLASMA_CLIENT_GET_PRIVATE(obj)         \\\n+  static_cast<GPlasmaClientPrivate *>(          \\\n+     gplasma_client_get_instance_private(       \\\n+       GPLASMA_CLIENT(obj)))\n \n static void\n gplasma_client_finalize(GObject *object)\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T22:39:05.510+0000",
                    "updated": "2018-11-23T22:39:05.510+0000",
                    "started": "2018-11-23T22:39:05.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169094",
                    "issueId": "13200162"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7c208a73[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@649488cf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b7be306[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2b69cc56[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@130b5976[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4ece3d6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@303b439e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@55d532b3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c5c0196[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7f4db398[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1580285c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@69bcd0f5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Nov 23 22:45:39 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-23T22:45:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3858/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-22T23:54:16.000+0000",
        "updated": "2018-11-23T22:45:39.000+0000",
        "timeoriginalestimate": null,
        "description": "Because G_TYPE_INSTANCE_GET_PRIVATE has been deprecated since version 2.58.\r\n\r\nhttps://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-PRIVATE",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Use {class_name}_get_instance_private",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200162/comment/16697541",
                    "id": "16697541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 3017\n[https://github.com/apache/arrow/pull/3017]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-11-23T22:45:39.512+0000",
                    "updated": "2018-11-23T22:45:39.512+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00sk0:",
        "customfield_12314139": null
    }
}