{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13243862",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862",
    "key": "ARROW-5883",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5883/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 8,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/273939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4830: ARROW-5883: [Java] Support Dictionary Encoding for List type\nURL: https://github.com/apache/arrow/pull/4830\n \n \n   As described in http://arrow.apache.org/docs/format/Layout.html#dictionary-encoding, List type encoding should be supported.\r\n   \r\n   Now ListVector getObject returns a ArrayList implementation, and its equals and hashCode are already overwritten, so it could be directly supported to be hashMap key in DictionaryEncoder. Since we won't change Dictionary data during encoding/decoding process, use mutable key seems dose't matter.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T09:54:00.888+0000",
                    "updated": "2019-07-09T09:54:00.888+0000",
                    "started": "2019-07-09T09:54:00.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273939",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/273981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4830: ARROW-5883: [Java] Support Dictionary Encoding for List type\nURL: https://github.com/apache/arrow/pull/4830#issuecomment-509598959\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=h1) Report\n   > Merging [#4830](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3f767ce38866b87e29aa5a964176e978ddf4899e?src=pr&el=desc) will **increase** coverage by `2.15%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4830/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #4830      +/-   ##\n   =========================================\n   + Coverage   87.44%   89.6%   +2.15%     \n   =========================================\n     Files         997     662     -335     \n     Lines      139804   96427   -43377     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       122246   86399   -35847     \n   + Misses      17196   10028    -7168     \n   + Partials      362       0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | ... and [329 more](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=footer). Last update [3f767ce...4977531](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T11:09:40.468+0000",
                    "updated": "2019-07-09T11:09:40.468+0000",
                    "started": "2019-07-09T11:09:40.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273981",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/274681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4830: ARROW-5883: [Java] Support dictionary encoding for List and Struct type\nURL: https://github.com/apache/arrow/pull/4830#discussion_r301907989\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n ##########\n @@ -142,4 +148,194 @@ public void testEncodeLargeVector() {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testEncodeList() {\n+    // Create a new value vector\n+    try (final ListVector vector = ListVector.empty(\"vector\", allocator);\n+        final ListVector dictionaryVector = ListVector.empty(\"dict\", allocator);) {\n+\n+      UnionListWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      // set some values\n+      writer.setPosition(0);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setPosition(1);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setPosition(2);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setPosition(3);\n+      writer.startList();\n+      writer.integer().writeInt(30);\n+      writer.integer().writeInt(40);\n+      writer.integer().writeInt(50);\n+      writer.endList();\n+\n+      writer.setPosition(4);\n+      writer.startList();\n+      writer.integer().writeInt(30);\n+      writer.integer().writeInt(40);\n+      writer.integer().writeInt(50);\n+      writer.endList();\n+\n+      writer.setPosition(5);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setValueCount(6);\n+\n+      UnionListWriter dictWriter = dictionaryVector.getWriter();\n+      dictWriter.allocate();\n+\n+      dictWriter.setPosition(0);\n+      dictWriter.startList();\n+      dictWriter.integer().writeInt(10);\n+      dictWriter.integer().writeInt(20);\n+      dictWriter.endList();\n+\n+      dictWriter.setPosition(1);\n+      dictWriter.startList();\n+      dictWriter.integer().writeInt(30);\n+      dictWriter.integer().writeInt(40);\n+      dictWriter.integer().writeInt(50);\n+      dictWriter.endList();\n+\n+      dictWriter.setValueCount(2);\n+\n+      Dictionary dictionary = new Dictionary(dictionaryVector, new DictionaryEncoding(1L, false, null));\n+\n+      try (final ValueVector encoded = (FieldVector) DictionaryEncoder.encode(vector, dictionary)) {\n+        // verify indices\n+        assertEquals(IntVector.class, encoded.getClass());\n+\n+        IntVector index = ((IntVector)encoded);\n+        assertEquals(6, index.getValueCount());\n+        assertEquals(0, index.get(0));\n+        assertEquals(0, index.get(1));\n+        assertEquals(0, index.get(2));\n+        assertEquals(1, index.get(3));\n+        assertEquals(1, index.get(4));\n+        assertEquals(0, index.get(5));\n+\n+        // now run through the decoder and verify we get the original back\n+        try (ValueVector decoded = DictionaryEncoder.decode(encoded, dictionary)) {\n+          assertEquals(vector.getClass(), decoded.getClass());\n+          assertEquals(vector.getValueCount(), decoded.getValueCount());\n+          for (int i = 0; i < 5; i++) {\n+            assertEquals(vector.getObject(i), decoded.getObject(i));\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testEncodeStruct() {\n+    // Create a new value vector\n+    try (final StructVector vector = StructVector.empty(\"vector\", allocator);\n+        final StructVector dictionaryVector = StructVector.empty(\"dict\", allocator);) {\n+      vector.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+      dictionaryVector.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      dictionaryVector.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+\n+      NullableStructWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      writer.start();\n \n Review comment:\n   I think this test would be clearer if you added helper methods for addStruct so it is clearer to see which entries are actually equal\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T06:47:57.093+0000",
                    "updated": "2019-07-10T06:47:57.093+0000",
                    "started": "2019-07-10T06:47:57.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274681",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/274683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4830: ARROW-5883: [Java] Support dictionary encoding for List and Struct type\nURL: https://github.com/apache/arrow/pull/4830#discussion_r301908201\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n ##########\n @@ -142,4 +148,194 @@ public void testEncodeLargeVector() {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testEncodeList() {\n+    // Create a new value vector\n+    try (final ListVector vector = ListVector.empty(\"vector\", allocator);\n+        final ListVector dictionaryVector = ListVector.empty(\"dict\", allocator);) {\n+\n+      UnionListWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      // set some values\n+      writer.setPosition(0);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n \n Review comment:\n   see comment below on helper method.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T06:48:32.018+0000",
                    "updated": "2019-07-10T06:48:32.018+0000",
                    "started": "2019-07-10T06:48:32.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274683",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/274699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4830: ARROW-5883: [Java] Support dictionary encoding for List and Struct type\nURL: https://github.com/apache/arrow/pull/4830#discussion_r301915863\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n ##########\n @@ -142,4 +148,194 @@ public void testEncodeLargeVector() {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testEncodeList() {\n+    // Create a new value vector\n+    try (final ListVector vector = ListVector.empty(\"vector\", allocator);\n+        final ListVector dictionaryVector = ListVector.empty(\"dict\", allocator);) {\n+\n+      UnionListWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      // set some values\n+      writer.setPosition(0);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setPosition(1);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setPosition(2);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setPosition(3);\n+      writer.startList();\n+      writer.integer().writeInt(30);\n+      writer.integer().writeInt(40);\n+      writer.integer().writeInt(50);\n+      writer.endList();\n+\n+      writer.setPosition(4);\n+      writer.startList();\n+      writer.integer().writeInt(30);\n+      writer.integer().writeInt(40);\n+      writer.integer().writeInt(50);\n+      writer.endList();\n+\n+      writer.setPosition(5);\n+      writer.startList();\n+      writer.integer().writeInt(10);\n+      writer.integer().writeInt(20);\n+      writer.endList();\n+\n+      writer.setValueCount(6);\n+\n+      UnionListWriter dictWriter = dictionaryVector.getWriter();\n+      dictWriter.allocate();\n+\n+      dictWriter.setPosition(0);\n+      dictWriter.startList();\n+      dictWriter.integer().writeInt(10);\n+      dictWriter.integer().writeInt(20);\n+      dictWriter.endList();\n+\n+      dictWriter.setPosition(1);\n+      dictWriter.startList();\n+      dictWriter.integer().writeInt(30);\n+      dictWriter.integer().writeInt(40);\n+      dictWriter.integer().writeInt(50);\n+      dictWriter.endList();\n+\n+      dictWriter.setValueCount(2);\n+\n+      Dictionary dictionary = new Dictionary(dictionaryVector, new DictionaryEncoding(1L, false, null));\n+\n+      try (final ValueVector encoded = (FieldVector) DictionaryEncoder.encode(vector, dictionary)) {\n+        // verify indices\n+        assertEquals(IntVector.class, encoded.getClass());\n+\n+        IntVector index = ((IntVector)encoded);\n+        assertEquals(6, index.getValueCount());\n+        assertEquals(0, index.get(0));\n+        assertEquals(0, index.get(1));\n+        assertEquals(0, index.get(2));\n+        assertEquals(1, index.get(3));\n+        assertEquals(1, index.get(4));\n+        assertEquals(0, index.get(5));\n+\n+        // now run through the decoder and verify we get the original back\n+        try (ValueVector decoded = DictionaryEncoder.decode(encoded, dictionary)) {\n+          assertEquals(vector.getClass(), decoded.getClass());\n+          assertEquals(vector.getValueCount(), decoded.getValueCount());\n+          for (int i = 0; i < 5; i++) {\n+            assertEquals(vector.getObject(i), decoded.getObject(i));\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testEncodeStruct() {\n+    // Create a new value vector\n+    try (final StructVector vector = StructVector.empty(\"vector\", allocator);\n+        final StructVector dictionaryVector = StructVector.empty(\"dict\", allocator);) {\n+      vector.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+      dictionaryVector.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      dictionaryVector.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+\n+      NullableStructWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      writer.start();\n \n Review comment:\n   Sure, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T07:15:47.586+0000",
                    "updated": "2019-07-10T07:15:47.586+0000",
                    "started": "2019-07-10T07:15:47.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274699",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/274804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4830: ARROW-5883: [Java] Support dictionary encoding for List and Struct type\nURL: https://github.com/apache/arrow/pull/4830#issuecomment-509598959\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=h1) Report\n   > Merging [#4830](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3f767ce38866b87e29aa5a964176e978ddf4899e?src=pr&el=desc) will **increase** coverage by `2.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4830/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #4830      +/-   ##\n   =========================================\n   + Coverage   87.44%   89.6%   +2.16%     \n   =========================================\n     Files         997     662     -335     \n     Lines      139804   96427   -43377     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       122246   86408   -35838     \n   + Misses      17196   10019    -7177     \n   + Partials      362       0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | ... and [328 more](https://codecov.io/gh/apache/arrow/pull/4830/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=footer). Last update [3f767ce...ced12cc](https://codecov.io/gh/apache/arrow/pull/4830?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T11:37:09.831+0000",
                    "updated": "2019-07-10T11:37:09.831+0000",
                    "started": "2019-07-10T11:37:09.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274804",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/275692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4830: ARROW-5883: [Java] Support dictionary encoding for List and Struct type\nURL: https://github.com/apache/arrow/pull/4830#issuecomment-510779033\n \n \n   +1, LGTM.  Conda is unrelated.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T07:24:18.484+0000",
                    "updated": "2019-07-12T07:24:18.484+0000",
                    "started": "2019-07-12T07:24:18.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275692",
                    "issueId": "13243862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/worklog/275693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4830: ARROW-5883: [Java] Support dictionary encoding for List and Struct type\nURL: https://github.com/apache/arrow/pull/4830\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T07:27:14.448+0000",
                    "updated": "2019-07-12T07:27:14.448+0000",
                    "started": "2019-07-12T07:27:14.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275693",
                    "issueId": "13243862"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@34c47577[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cd7459d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@463dc6d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@30309820[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d3e8ed4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@27f364f0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f5005a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3b956df5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12740c7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2e9c2e27[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@216e7b6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@31044073[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 12 07:28:11 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-12T07:28:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5883/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-09T09:50:08.000+0000",
        "updated": "2019-08-01T22:39:53.000+0000",
        "timeoriginalestimate": null,
        "description": "As described in\u00a0[http://arrow.apache.org/docs/format/Layout.html#dictionary-encoding], List type encoding should be supported.\r\n\r\nNow ListVector getObject returns a ArrayList implementation, and its equals and hashCode are already overwritten, so it could be directly supported to be hashMap key in DictionaryEncoder. Since we won't change Dictionary data during encoding/decoding process, use mutable key seems dose't matter.\r\n\r\nStructVector is similar to ListVector.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support dictionary encoding for List and Struct type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243862/comment/16883595",
                    "id": "16883595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4830\n[https://github.com/apache/arrow/pull/4830]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-12T07:28:11.931+0000",
                    "updated": "2019-07-12T07:28:11.931+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04hnk:",
        "customfield_12314139": null
    }
}