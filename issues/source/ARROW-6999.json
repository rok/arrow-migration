{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13264614",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614",
    "key": "ARROW-6999",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
            "name": "goodiegoodman",
            "key": "goodiegoodman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Tom Goodman",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
            "name": "goodiegoodman",
            "key": "goodiegoodman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Tom Goodman",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6999/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/335478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750\n \n \n   https://issues.apache.org/jira/browse/ARROW-6999\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T11:05:02.514+0000",
                    "updated": "2019-10-29T11:05:02.514+0000",
                    "started": "2019-10-29T11:05:02.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335478",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/335480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#issuecomment-547371993\n \n \n   https://issues.apache.org/jira/browse/ARROW-6999\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T11:16:29.531+0000",
                    "updated": "2019-10-29T11:16:29.531+0000",
                    "started": "2019-10-29T11:16:29.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335480",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/335486",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#issuecomment-547380941\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=h1) Report\n   > Merging [#5750](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/89b5a2484161c9cab7bb33d899d696729f119126?src=pr&el=desc) will **decrease** coverage by `22.04%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5750/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #5750       +/-   ##\n   ===========================================\n   - Coverage   88.96%   66.92%   -22.05%     \n   ===========================================\n     Files         992      534      -458     \n     Lines      135218    75606    -59612     \n     Branches     1501        0     -1501     \n   ===========================================\n   - Hits       120300    50596    -69704     \n   - Misses      14553    25010    +10457     \n   + Partials      365        0      -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYW5kYXMucHk=) | `94.69% <100%> (+0.03%)` | :arrow_up: |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `97.08% <100%> (+0.07%)` | :arrow_up: |\n   | [cpp/src/arrow/util/memory.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/filesystem/path\\_tree.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3BhdGhfdHJlZS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/date\\_utils.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RhdGVfdXRpbHMuaA==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/memory.cc](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/decimal\\_type\\_util.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfdHlwZV91dGlsLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/logical\\_type.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2xvZ2ljYWxfdHlwZS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/parquet/hasher.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2hhc2hlci5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/basic\\_decimal\\_scalar.h](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Jhc2ljX2RlY2ltYWxfc2NhbGFyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | ... and [719 more](https://codecov.io/gh/apache/arrow/pull/5750/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=footer). Last update [89b5a24...fa67785](https://codecov.io/gh/apache/arrow/pull/5750?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T11:43:05.835+0000",
                    "updated": "2019-10-29T11:43:05.835+0000",
                    "started": "2019-10-29T11:43:05.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335486",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/335519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#discussion_r340071590\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -449,6 +449,34 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n             index_levels, columns_to_convert, convert_fields)\n \n \n+def _is_index_level(df, name):\n+    \"\"\"\n+    Check if 'name' (column from a Schema) corresponds to an Index level\n+    (potentially without a name) of the DataFrame.\n+    \"\"\"\n+    if name in df.index.names:\n \n Review comment:\n   `return (name in df.index.names) or _is_generated_index_name(name)`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T13:33:46.528+0000",
                    "updated": "2019-10-29T13:33:46.528+0000",
                    "started": "2019-10-29T13:33:46.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335519",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/335520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#discussion_r340075108\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -449,6 +449,34 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n             index_levels, columns_to_convert, convert_fields)\n \n \n+def _is_index_level(df, name):\n+    \"\"\"\n+    Check if 'name' (column from a Schema) corresponds to an Index level\n+    (potentially without a name) of the DataFrame.\n+    \"\"\"\n+    if name in df.index.names:\n+        return True\n+    elif _is_generated_index_name(name):\n+        return True\n+    else:\n+        return False\n+\n+\n+def _get_index_level(df, name):\n+    \"\"\"\n+    Get the index level of a DataFrame given 'name' (column name in an arrow\n+    Schema)\n+    \"\"\"\n+    if name in df.index.names:\n \n Review comment:\n   A small refactor with only one exit point.\r\n   \r\n   ```python\r\n   key = name\r\n   if name not in df.index.names:\r\n     key = int(name.lstrip(\"__index_level_\").rstrip(\"__\"))\r\n   \r\n   return df.index.get_level_values(key)\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T13:33:46.667+0000",
                    "updated": "2019-10-29T13:33:46.667+0000",
                    "started": "2019-10-29T13:33:46.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335520",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/336129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#issuecomment-547846249\n \n \n   @fsaintjacques Thanks for the review! Simplified a bit based on your comment, and also ended up combining both functions in one. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-30T10:59:50.828+0000",
                    "updated": "2019-10-30T10:59:50.828+0000",
                    "started": "2019-10-30T10:59:50.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "336129",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/338641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#discussion_r342478526\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -449,6 +455,19 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n             index_levels, columns_to_convert, convert_fields)\n \n \n+def _get_index_level(df, name):\n+    \"\"\"\n+    Get the index level of a DataFrame given 'name' (column name in an arrow\n+    Schema).\n+    \"\"\"\n+    key = name\n+    if name not in df.index.names and _is_generated_index_name(name):\n+        # we know we have an autogenerated name => extract number and get\n+        # the index level positionally\n+        key = int(name.lstrip(\"__index_level_\").rstrip(\"__\"))\n \n Review comment:\n   The check in the if statement (`_is_generated_index_name(name)`) ensures it has the `__index_level_i__` format. I could use a `re.match` to get out the `i`, but because I know the exact format, that felt like unnecessary overhead. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T10:12:05.263+0000",
                    "updated": "2019-11-05T10:12:05.263+0000",
                    "started": "2019-11-05T10:12:05.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338641",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/338643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#discussion_r342479416\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -449,6 +455,19 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n             index_levels, columns_to_convert, convert_fields)\n \n \n+def _get_index_level(df, name):\n+    \"\"\"\n+    Get the index level of a DataFrame given 'name' (column name in an arrow\n+    Schema).\n+    \"\"\"\n+    key = name\n+    if name not in df.index.names and _is_generated_index_name(name):\n+        # we know we have an autogenerated name => extract number and get\n+        # the index level positionally\n+        key = int(name.lstrip(\"__index_level_\").rstrip(\"__\"))\n \n Review comment:\n   Or simply `name[len(\"__index_level_\"):-2]`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T10:14:03.080+0000",
                    "updated": "2019-11-05T10:14:03.080+0000",
                    "started": "2019-11-05T10:14:03.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338643",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/338661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#discussion_r342495710\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -449,6 +455,19 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n             index_levels, columns_to_convert, convert_fields)\n \n \n+def _get_index_level(df, name):\n+    \"\"\"\n+    Get the index level of a DataFrame given 'name' (column name in an arrow\n+    Schema).\n+    \"\"\"\n+    key = name\n+    if name not in df.index.names and _is_generated_index_name(name):\n+        # we know we have an autogenerated name => extract number and get\n+        # the index level positionally\n+        key = int(name.lstrip(\"__index_level_\").rstrip(\"__\"))\n \n Review comment:\n   Thanks, that's indeed a bit simpler. Updated with this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T10:48:42.648+0000",
                    "updated": "2019-11-05T10:48:42.648+0000",
                    "started": "2019-11-05T10:48:42.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338661",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/338784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750#issuecomment-549851446\n \n \n   AppVeyor build: https://ci.appveyor.com/project/jorisvandenbossche/arrow/builds/28623073\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T14:40:10.000+0000",
                    "updated": "2019-11-05T14:40:10.000+0000",
                    "started": "2019-11-05T14:40:09.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338784",
                    "issueId": "13264614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/worklog/338785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5750: ARROW-6999: [Python] Fix unnamed index when specifying schema in Table.from_pandas\nURL: https://github.com/apache/arrow/pull/5750\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T14:40:27.687+0000",
                    "updated": "2019-11-05T14:40:27.687+0000",
                    "started": "2019-11-05T14:40:27.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338785",
                    "issueId": "13264614"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@15c6b0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cc98845[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3dc012e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2ddb2eb4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@314565a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5158c8b0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cb2df28[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@18e8f284[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29aac14[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1590e9bf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f212fba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@30828c08[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 05 14:40:22 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-05T14:40:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6999/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-10-26T16:34:38.000+0000",
        "updated": "2019-11-05T14:40:34.000+0000",
        "timeoriginalestimate": null,
        "description": "Steps to reproduce:\r\n # Generate any DataFrame's pyarrow Schema using\u00a0Table.from_pandas\r\n # Pass the generated schema as input into Table.from_pandas\r\n # Causes KeyError: '__index_level_0__'\r\n\r\nWe did not have this issue with pyarrow==0.11.0 which we used to write many partitions across years.\u00a0 Our goal now is to use pyarrow==0.15.0 and produce schema going forward that are *backwards compatible* (i.e. also have\u00a0'__index_level_0__'), so we should not need to re-generate all prior years' partitions when we migrate to 0.15.0.\r\n\r\nWe cannot set _preserve_index=False_, since that effectively deletes\u00a0'__index_level_0__', causing inconsistent schema across earlier partitions that had been written using pyarrow==0.11.0.\r\n\r\n\u00a0\r\n{code:java}\r\nimport pandas as pd\r\nimport pyarrow as pa\r\ndf = pd.DataFrame() \r\nschema = pa.Table.from_pandas(df).schema\r\npa_table = pa.Table.from_pandas(df, schema=schema)\r\n\r\n{code}\r\n{noformat}\r\nTraceback (most recent call last):\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pandas/core/indexes/base.py\", line 3078, in get_loc\r\n    return self._engine.get_loc(key)\r\n  File \"pandas/_libs/index.pyx\", line 140, in pandas._libs.index.IndexEngine.get_loc\r\n  File \"pandas/_libs/index.pyx\", line 162, in pandas._libs.index.IndexEngine.get_loc\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1492, in pandas._libs.hashtable.PyObjectHashTable.get_item\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1500, in pandas._libs.hashtable.PyObjectHashTable.get_item\r\nKeyError: '__index_level_0__'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 408, in _get_columns_to_convert_given_schema\r\n    col = df[name]\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pandas/core/frame.py\", line 2688, in __getitem__\r\n    return self._getitem_column(key)\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pandas/core/frame.py\", line 2695, in _getitem_column\r\n    return self._get_item_cache(key)\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pandas/core/generic.py\", line 2489, in _get_item_cache\r\n    values = self._data.get(item)\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pandas/core/internals.py\", line 4115, in get\r\n    loc = self.items.get_loc(item)\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pandas/core/indexes/base.py\", line 3080, in get_loc\r\n    return self._engine.get_loc(self._maybe_cast_indexer(key))\r\n  File \"pandas/_libs/index.pyx\", line 140, in pandas._libs.index.IndexEngine.get_loc\r\n  File \"pandas/_libs/index.pyx\", line 162, in pandas._libs.index.IndexEngine.get_loc\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1492, in pandas._libs.hashtable.PyObjectHashTable.get_item\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1500, in pandas._libs.hashtable.PyObjectHashTable.get_item\r\nKeyError: '__index_level_0__'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-36-6711a2fcec96>\", line 5, in <module>\r\n    pa_table = pa.Table.from_pandas(df, schema=pa.Table.from_pandas(df).schema)\r\n  File \"pyarrow/table.pxi\", line 1057, in pyarrow.lib.Table.from_pandas\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 517, in dataframe_to_arrays\r\n    columns)\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 337, in _get_columns_to_convert\r\n    return _get_columns_to_convert_given_schema(df, schema, preserve_index)\r\n  File \"/GAAR/FIAG/sandbox/software/miniconda3/envs/rc_sfi_2019.1/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 426, in _get_columns_to_convert_given_schema\r\n    \"in the columns or index\".format(name))\r\nKeyError: \"name '__index_level_0__' present in the specified schema is not found in the columns or index\"\r\n{noformat}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12984196",
                "id": "12984196",
                "filename": "test3.hdf",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                    "name": "goodiegoodman",
                    "key": "goodiegoodman",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                    },
                    "displayName": "Tom Goodman",
                    "active": true,
                    "timeZone": "America/Los_Angeles"
                },
                "created": "2019-10-28T18:05:50.703+0000",
                "size": 6746000,
                "mimeType": "application/x-hdf",
                "content": "https://issues.apache.org/jira/secure/attachment/12984196/test3.hdf"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] KeyError: '__index_level_0__' passing Table.from_pandas its own schema",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "pandas==0.23.4\r\npyarrow==0.15.0  # Issue also with 0.14.0, 0.13.0 & 0.12.0. but not 0.11.0\r\n",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16960418",
                    "id": "16960418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'll let [~jorisvandenbossche] take a look",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-26T19:09:27.150+0000",
                    "updated": "2019-10-26T19:09:27.150+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16960931",
                    "id": "16960931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~goodiegoodman] thanks for the report!\r\n\r\nYour \"steps to reproduce\" actually do work if you do not use an empty dataframe:\r\n\r\n{code}\r\nIn [15]: import pandas as pd \r\n    ...: import pyarrow as pa \r\n    ...: df = pd.DataFrame({'a': [1, 2, 3]})  \r\n    ...: schema = pa.Table.from_pandas(df).schema \r\n    ...: pa_table = pa.Table.from_pandas(df, schema=schema)                                                                                                                                                        \r\n\r\nIn [16]: schema                                                                                                                                                                                                    \r\nOut[16]: \r\na: int64\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [{\"kind\": \"range\", \"name\": null, \"start\": 0, \"'\r\n            b'stop\": 3, \"step\": 1}], \"column_indexes\": [{\"name\": null, \"field_'\r\n            b'name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"'\r\n            b'metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"a\", \"f'\r\n            b'ield_name\": \"a\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\", '\r\n            b'\"metadata\": null}], \"creator\": {\"library\": \"pyarrow\", \"version\":'\r\n            b' \"0.15.1.dev177+g5df424bd6\"}, \"pandas_version\": \"0.26.0.dev0+669'\r\n            b'.g3c29114b1\"}'}\r\n{code}\r\n\r\nThe empty dataframe is tricky edge-case regarding the index, because in such a case the index is not a RangeIndex but a empty object-dtype Index (see ARROW-5104 for a similar report about that aspect).  \r\n\r\nThat said, if passing an explicit schema, and if there is a column not found that has a \"\\_\\_index_level_i\\_\\_\" pattern, we should try to handle this (certainly in case of passing {{preserve_index=True}}).\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-28T11:00:55.872+0000",
                    "updated": "2019-10-28T11:00:55.872+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16961145",
                    "id": "16961145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "So this case is clearly a bug in the new implementation, I would say:\r\n\r\n{code}\r\nIn [23]: import pandas as pd \r\n    ...: import pyarrow as pa \r\n    ...: df = pd.DataFrame({'a': [1, 2, 3]})  \r\n    ...: schema = pa.Table.from_pandas(df, preserve_index=True).schema \r\n    ...: pa_table = pa.Table.from_pandas(df, schema=schema, preserve_index=True)                                                                                                                                   \r\n...\r\nKeyError: \"name '__index_level_0__' present in the specified schema is not found in the columns or index\"\r\n{code}\r\n\r\nSo if you specify {{preserve_index=True}}, and there is an index in the schema that did not have a name in the DataFrame (so ending up as the generated {{\\_\\_index_level_i\\_\\_}}), the above should work when passing an explicit schema matching that.\r\n\r\nWill look into fixing this (it's a pity that 0.15.1 is already released, it would have been nice to include this).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-28T15:15:30.367+0000",
                    "updated": "2019-10-28T15:15:30.367+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16961317",
                    "id": "16961317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                        "name": "goodiegoodman",
                        "key": "goodiegoodman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Tom Goodman",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~jorisvandenbossche]\u00a0please try this with the attached [^test3.hdf] (not empty)\r\n{code:java}\r\ndf2 = pd.read_hdf('test3.hdf','foo')\r\npa.Table.from_pandas(df2, schema=pa.Table.from_pandas(df2).schema){code}\r\nI still get\u00a0KeyError: '__index_level_0__' (+without+ specifying preserve_index)._\u00a0\r\n\r\nThis may be because the index on test3.hdf is Int64Index and I see [pyarrow docs|https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table.from_pandas] say default behavior is to \"store the index as a column\", except for rage indexes.\u00a0 This unfortunately makes the bug more prevalent.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                        "name": "goodiegoodman",
                        "key": "goodiegoodman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Tom Goodman",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-28T18:12:21.427+0000",
                    "updated": "2019-10-28T19:24:11.174+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16961882",
                    "id": "16961882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Thanks for the reproducer! It's indeed due to the non-range index. Doing this in terms of the simpler example, I think the following is equivalent to your example:\r\n\r\n{code}\r\ndf2 = pd.DataFrame({'a': [1, 2, 3]}, index=[0, 1, 2])\r\npa.Table.from_pandas(df2, schema=pa.Table.from_pandas(df2).schema)\r\n{code}\r\n\r\nwhich gives indeed that error. In the end, it boils down to the same bug as my example above using a RangeIndex but with specifying {{preserve_index=True}} (as that forces the index to become a column, just as if you have a non-rangeindex).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-29T10:44:56.749+0000",
                    "updated": "2019-10-29T10:45:09.999+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16961948",
                    "id": "16961948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~goodiegoodman] so I did a PR to fix this: https://github.com/apache/arrow/pull/5750 (I try to add a lot of test cases when refactoring this for 0.15, it's a pity I overlooked this (quite obvious in hindsight) one).\r\n\r\nBut the question for you still is: is there a way to deal with this that is compatible across different releases?  \r\nI am not fully understanding your explanation from above:\r\n\r\n{quote}We did not have this issue with pyarrow==0.11.0 which we used to write many partitions across years.  Our goal now is to use pyarrow==0.15.0 and produce schema going forward that are backwards compatible (i.e. also have '_index_level_0_'), so we should not need to re-generate all prior years' partitions when we migrate to 0.15.0.{quote}\r\n\r\nWhat do you mean exactly with \"write\"? (to what file format? or how is the schema stored?) \r\nOne option I can think off (but not sure it fits your usecase) is to make sure that your index has a name.  Adapting the above example:\r\n\r\n{code}\r\ndf3 = pd.DataFrame({'a': [1, 2, 3]}, index=pd.Int64Index([0, 1, 2], name='index'))\r\npa.Table.from_pandas(df3, schema=pa.Table.from_pandas(df3).schema)\r\n{code}\r\n\r\nThis works on 0.11.0 and on 0.15.0. However, this then fails on 0.13/0.14 (which is one of the reasons we tried to clean up and normalize this handling of the passed schema in 0.15).\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-29T12:24:04.533+0000",
                    "updated": "2019-10-29T12:24:04.533+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16962254",
                    "id": "16962254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                        "name": "goodiegoodman",
                        "key": "goodiegoodman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Tom Goodman",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~jorisvandenbossche] thank you for the quick turn-around!\r\n\r\nWe store the partitions in parquet files, with directories defining partitions and _common_metadata file holding schema.\u00a0 This allows us to use the [ParquetDataset partition level filters|https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetDataset.html#pyarrow-parquet-parquetdataset]\u00a0like [[('yyyymm', '=', 201909)]] ...\r\n{noformat}\r\ntree\r\n.\r\n|-- _common_metadata\r\n|-- yyyymm=201909\r\n|   `-- e097411586b0460e860c331b63fecb2b.parquet\r\n`-- yyyymm=201910\r\n    `-- b8de9aa413194cc4af6f4802b5c4923f.parquet\r\n.\r\n.\r\n\r\n{noformat}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                        "name": "goodiegoodman",
                        "key": "goodiegoodman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Tom Goodman",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-29T17:20:43.561+0000",
                    "updated": "2019-10-29T17:26:51.041+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16962353",
                    "id": "16962353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                        "name": "goodiegoodman",
                        "key": "goodiegoodman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Tom Goodman",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Thanks to your suggestions, we now have a work-around that allows us to remain backwards-compatible!\r\nIf we get a KeyError due to missing  '__index_level_0__', we'll set df.index.name = '__index_level_0__' and re-call same from_pandas function.\r\n{code:java}\r\n    try:\r\n        table = pa.Table.from_pandas(df, schema=schema)\r\n    except KeyError as e:\r\n        if '__index_level_0__' in str(e):  # Happens in pyarrow 0.15.0, not 0.11.0\r\n            df.index.name = '__index_level_0__'\r\n            table = pa.Table.from_pandas(df, schema=schema)\r\n        else:\r\n            raise e\r\n{code}\r\n_Thanks so much [~jorisvandenbossche]!_",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=goodiegoodman",
                        "name": "goodiegoodman",
                        "key": "goodiegoodman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Tom Goodman",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-29T19:43:04.526+0000",
                    "updated": "2019-10-29T19:43:22.690+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16962472",
                    "id": "16962472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "That sounds as a decent enough workaround for now. Happy you found a way to deal with it!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-29T21:19:01.728+0000",
                    "updated": "2019-10-29T21:19:12.866+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264614/comment/16967575",
                    "id": "16967575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5750\n[https://github.com/apache/arrow/pull/5750]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-11-05T14:40:22.203+0000",
                    "updated": "2019-11-05T14:40:22.203+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z07z80:",
        "customfield_12314139": null
    }
}