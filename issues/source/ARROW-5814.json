{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13242459",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459",
    "key": "ARROW-5814",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12564587",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12564587",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "outwardIssue": {
                    "id": "13242911",
                    "key": "ARROW-5834",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242911",
                    "fields": {
                        "summary": "[Java] Apply new hash map in DictionaryEncoder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5814/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765\n \n \n   Related to [ARROW-5814](https://issues.apache.org/jira/browse/ARROW-5814).\r\n   \r\n   As a follow-up of https://github.com/apache/arrow/pull/4698. Implement a Map<Object, int> for DictionaryEncoder to reduce boxing/unboxing operations.\r\n   \r\n   Benchmark:\r\n   DictionaryEncodeHashMapBenchmarks.testHashMap: avgt 5 31151.345 \u00b1 1661.878 ns/op\r\n   DictionaryEncodeHashMapBenchmarks.testDictionaryEncodeHashMap: avgt 5 15549.902 \u00b1 771.647 ns/op\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-01T09:41:44.904+0000",
                    "updated": "2019-07-01T09:41:44.904+0000",
                    "started": "2019-07-01T09:41:44.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270057",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270078",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-507211069\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=h1) Report\n   > Merging [#4765](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/91b4cbce0c3eb4d82d8f5a33b878d1bfba7651a3?src=pr&el=desc) will **increase** coverage by `3.02%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4765/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4765      +/-   ##\n   ==========================================\n   + Coverage   86.44%   89.46%   +3.02%     \n   ==========================================\n     Files         992      659     -333     \n     Lines      138020    95198   -42822     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       119307    85166   -34141     \n   + Misses      18351    10032    -8319     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/projector.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Byb2plY3Rvci5jYw==) | `90.75% <0%> (-5.12%)` | :arrow_down: |\n   | [cpp/src/gandiva/gdv\\_function\\_stubs.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2dkdl9mdW5jdGlvbl9zdHVicy5jYw==) | `94.8% <0%> (-3.48%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `95.29% <0%> (-1.77%)` | :arrow_down: |\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [cpp/src/gandiva/expr\\_validator.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJfdmFsaWRhdG9yLmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/annotator\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Fubm90YXRvcl90ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/field\\_descriptor.h](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2ZpZWxkX2Rlc2NyaXB0b3IuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/annotator.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Fubm90YXRvci5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | ... and [335 more](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=footer). Last update [91b4cbc...10596ad](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-01T10:36:18.558+0000",
                    "updated": "2019-07-01T10:36:18.558+0000",
                    "started": "2019-07-01T10:36:18.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270078",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#discussion_r299311306\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/ObjectIntMap.java\n ##########\n @@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n \n Review comment:\n   why did you choose this package?  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T05:59:20.161+0000",
                    "updated": "2019-07-02T05:59:20.161+0000",
                    "started": "2019-07-02T05:59:20.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270614",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#discussion_r299311246\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/ObjectIntMap.java\n ##########\n @@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+/**\n+ * Specific hash map for int type value, reducing boxing/unboxing operations.\n+ * @param <K> key type.\n+ */\n+public interface ObjectIntMap<K> {\n+\n+  int put(K key, int value);\n \n Review comment:\n   javadoc on the methods please.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T05:59:20.161+0000",
                    "updated": "2019-07-02T05:59:20.161+0000",
                    "started": "2019-07-02T05:59:20.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270615",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#discussion_r299312886\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/DictionaryEncodeHashMap.java\n ##########\n @@ -0,0 +1,298 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Implementation of the {@link ObjectIntMap} interface, used for DictionaryEncoder.\n+ * Note that value in this map is always not less than 0, and -1 represents a null value.\n+ * @param <K> key type.\n+ */\n+public class DictionaryEncodeHashMap<K> implements ObjectIntMap<K> {\n+\n+  static final int NULL_VALUE = -1;\n+\n+  static final int DEFAULT_INITIAL_CAPACITY = 1 << 4;\n+\n+  static final int MAXIMUM_CAPACITY = 1 << 30;\n+\n+  static final float DEFAULT_LOAD_FACTOR = 0.75f;\n+\n+  static final Entry<?>[] EMPTY_TABLE = {};\n+\n+  transient Entry<K>[] table = (Entry<K>[]) EMPTY_TABLE;\n+\n+  transient int size;\n+\n+  int threshold;\n+\n+  final float loadFactor;\n+\n+  /**\n+   * Constructs an empty map with the specified initial capacity and load factor.\n+   */\n+  public DictionaryEncodeHashMap(int initialCapacity, float loadFactor) {\n+    if (initialCapacity < 0) {\n+      throw new IllegalArgumentException(\"Illegal initial capacity: \" +\n+          initialCapacity);\n+    }\n+    if (initialCapacity > MAXIMUM_CAPACITY) {\n+      initialCapacity = MAXIMUM_CAPACITY;\n+    }\n+    if (loadFactor <= 0 || Float.isNaN(loadFactor)) {\n+      throw new IllegalArgumentException(\"Illegal load factor: \" +\n+          loadFactor);\n+    }\n+    this.loadFactor = loadFactor;\n+    this.threshold = initialCapacity;\n+  }\n+\n+  public DictionaryEncodeHashMap(int initialCapacity) {\n+    this(initialCapacity, DEFAULT_LOAD_FACTOR);\n+  }\n+\n+  public DictionaryEncodeHashMap() {\n+    this(DEFAULT_INITIAL_CAPACITY, DEFAULT_LOAD_FACTOR);\n+  }\n+\n+  private void inflateTable(int threshold) {\n+    int capacity = roundUpToPowerOf2(threshold);\n+    this.threshold = (int) Math.min(capacity * loadFactor, MAXIMUM_CAPACITY + 1);\n+    table = new Entry[capacity];\n+  }\n+\n+  static final int hash(Object key) {\n+    int h;\n+    return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n+  }\n+\n+  static int indexFor(int h, int length) {\n+    return h & (length - 1);\n+  }\n+\n+\n+  static final int roundUpToPowerOf2(int size) {\n+    int n = size - 1;\n+    n |= n >>> 1;\n+    n |= n >>> 2;\n+    n |= n >>> 4;\n+    n |= n >>> 8;\n+    n |= n >>> 16;\n+    return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n+  }\n+\n+  @Override\n+  public int get(K key) {\n+    int hash = hash(key);\n+    int index = indexFor(hash, table.length);\n+    for (Entry<K> e = table[index] ; e != null ; e = e.next) {\n+      if ((e.hash == hash) && e.key.equals(key)) {\n+        return e.value;\n+      }\n+    }\n+    return NULL_VALUE;\n+  }\n+\n+  @Override\n+  public int put(K key, int value) {\n+    if (table == EMPTY_TABLE) {\n+      inflateTable(threshold);\n+    }\n+\n+    if (key == null) {\n+      return putForNullKey(value);\n+    }\n+\n+    int hash = hash(key);\n+    int i = indexFor(hash, table.length);\n+    for (Entry<K> e = table[i]; e != null; e = e.next) {\n+      Object k;\n+      if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n+        int oldValue = e.value;\n+        e.value = value;\n+        return oldValue;\n+      }\n+    }\n+\n+    addEntry(hash, key, value, i);\n+    return NULL_VALUE;\n+  }\n+\n+\n+  @Override\n+  public int remove(K key) {\n+    Entry<K> e = removeEntryForKey(key);\n+    return (e == null ? NULL_VALUE : e.value);\n+  }\n+\n+  void createEntry(int hash, K key, int value, int bucketIndex) {\n+    Entry<K> e = table[bucketIndex];\n+    table[bucketIndex] = new Entry<>(hash, key, value, e);\n+    size++;\n+  }\n+\n+  private int putForNullKey(int value) {\n+    for (Entry<K> e = table[0]; e != null; e = e.next) {\n+      if (e.key == null) {\n+        int oldValue = e.value;\n+        e.value = value;\n+        return oldValue;\n+      }\n+    }\n+    addEntry(0, null, value, 0);\n+    return NULL_VALUE;\n+  }\n+\n+  void addEntry(int hash, K key, int value, int bucketIndex) {\n+    if ((size >= threshold) && (null != table[bucketIndex])) {\n+      resize(2 * table.length);\n+      hash = (null != key) ? hash(key) : 0;\n+      bucketIndex = indexFor(hash, table.length);\n+    }\n+\n+    createEntry(hash, key, value, bucketIndex);\n+  }\n+\n+  void resize(int newCapacity) {\n+    Entry[] oldTable = table;\n+    int oldCapacity = oldTable.length;\n+    if (oldCapacity == MAXIMUM_CAPACITY) {\n+      threshold = Integer.MAX_VALUE;\n+      return;\n+    }\n+\n+    Entry[] newTable = new Entry[newCapacity];\n+    transfer(newTable);\n+    table = newTable;\n+    threshold = (int)Math.min(newCapacity * loadFactor, MAXIMUM_CAPACITY + 1);\n+  }\n+\n+  void transfer(Entry[] newTable) {\n+    int newCapacity = newTable.length;\n+    for (Entry<K> e : table) {\n+      while (null != e) {\n+        Entry<K> next = e.next;\n+        int i = indexFor(e.hash, newCapacity);\n+        e.next = newTable[i];\n+        newTable[i] = e;\n+        e = next;\n+      }\n+    }\n+  }\n+\n+  final Entry<K> removeEntryForKey(Object key) {\n+    if (size == 0) {\n+      return null;\n+    }\n+    int hash = (key == null) ? 0 : hash(key);\n+    int i = indexFor(hash, table.length);\n+    Entry<K> prev = table[i];\n+    Entry<K> e = prev;\n+\n+    while (e != null) {\n+      Entry<K> next = e.next;\n+      Object k;\n+      if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) {\n+        size--;\n+        if (prev == e) {\n+          table[i] = next;\n+        } else {\n+          prev.next = next;\n+        }\n+\n+        return e;\n+      }\n+      prev = e;\n+      e = next;\n+    }\n+\n+    return e;\n+  }\n+\n+  /**\n+   * Returns the number of mappings in this Map.\n+   */\n+  public int size() {\n+    return size;\n+  }\n+\n+  /**\n+   * Removes all elements from this map, leaving it empty.\n+   */\n+  public void clear() {\n+    size = 0;\n+    for (int i = 0; i < table.length; i++) {\n+      table[i] = null;\n+    }\n+  }\n+\n+  /**\n+   * Class to keep key-value data within hash map.\n+   * @param <K> key type.\n+   */\n+  static class Entry<K> {\n+    final K key;\n+    int value;\n+    Entry<K> next;\n \n Review comment:\n   open addressing can perform better under some circumstances I think but this is a good start.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T05:59:49.972+0000",
                    "updated": "2019-07-02T05:59:49.972+0000",
                    "started": "2019-07-02T05:59:49.971+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270616",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#discussion_r299329816\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/ObjectIntMap.java\n ##########\n @@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+/**\n+ * Specific hash map for int type value, reducing boxing/unboxing operations.\n+ * @param <K> key type.\n+ */\n+public interface ObjectIntMap<K> {\n+\n+  int put(K key, int value);\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T07:04:35.409+0000",
                    "updated": "2019-07-02T07:04:35.409+0000",
                    "started": "2019-07-02T07:04:35.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270647",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#discussion_r299330004\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/ObjectIntMap.java\n ##########\n @@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n \n Review comment:\n   No particular reason, removed to vector module already.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T07:05:17.169+0000",
                    "updated": "2019-07-02T07:05:17.169+0000",
                    "started": "2019-07-02T07:05:17.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270649",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#discussion_r299330890\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/DictionaryEncodeHashMap.java\n ##########\n @@ -0,0 +1,298 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Implementation of the {@link ObjectIntMap} interface, used for DictionaryEncoder.\n+ * Note that value in this map is always not less than 0, and -1 represents a null value.\n+ * @param <K> key type.\n+ */\n+public class DictionaryEncodeHashMap<K> implements ObjectIntMap<K> {\n+\n+  static final int NULL_VALUE = -1;\n+\n+  static final int DEFAULT_INITIAL_CAPACITY = 1 << 4;\n+\n+  static final int MAXIMUM_CAPACITY = 1 << 30;\n+\n+  static final float DEFAULT_LOAD_FACTOR = 0.75f;\n+\n+  static final Entry<?>[] EMPTY_TABLE = {};\n+\n+  transient Entry<K>[] table = (Entry<K>[]) EMPTY_TABLE;\n+\n+  transient int size;\n+\n+  int threshold;\n+\n+  final float loadFactor;\n+\n+  /**\n+   * Constructs an empty map with the specified initial capacity and load factor.\n+   */\n+  public DictionaryEncodeHashMap(int initialCapacity, float loadFactor) {\n+    if (initialCapacity < 0) {\n+      throw new IllegalArgumentException(\"Illegal initial capacity: \" +\n+          initialCapacity);\n+    }\n+    if (initialCapacity > MAXIMUM_CAPACITY) {\n+      initialCapacity = MAXIMUM_CAPACITY;\n+    }\n+    if (loadFactor <= 0 || Float.isNaN(loadFactor)) {\n+      throw new IllegalArgumentException(\"Illegal load factor: \" +\n+          loadFactor);\n+    }\n+    this.loadFactor = loadFactor;\n+    this.threshold = initialCapacity;\n+  }\n+\n+  public DictionaryEncodeHashMap(int initialCapacity) {\n+    this(initialCapacity, DEFAULT_LOAD_FACTOR);\n+  }\n+\n+  public DictionaryEncodeHashMap() {\n+    this(DEFAULT_INITIAL_CAPACITY, DEFAULT_LOAD_FACTOR);\n+  }\n+\n+  private void inflateTable(int threshold) {\n+    int capacity = roundUpToPowerOf2(threshold);\n+    this.threshold = (int) Math.min(capacity * loadFactor, MAXIMUM_CAPACITY + 1);\n+    table = new Entry[capacity];\n+  }\n+\n+  static final int hash(Object key) {\n+    int h;\n+    return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n+  }\n+\n+  static int indexFor(int h, int length) {\n+    return h & (length - 1);\n+  }\n+\n+\n+  static final int roundUpToPowerOf2(int size) {\n+    int n = size - 1;\n+    n |= n >>> 1;\n+    n |= n >>> 2;\n+    n |= n >>> 4;\n+    n |= n >>> 8;\n+    n |= n >>> 16;\n+    return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n+  }\n+\n+  @Override\n+  public int get(K key) {\n+    int hash = hash(key);\n+    int index = indexFor(hash, table.length);\n+    for (Entry<K> e = table[index] ; e != null ; e = e.next) {\n+      if ((e.hash == hash) && e.key.equals(key)) {\n+        return e.value;\n+      }\n+    }\n+    return NULL_VALUE;\n+  }\n+\n+  @Override\n+  public int put(K key, int value) {\n+    if (table == EMPTY_TABLE) {\n+      inflateTable(threshold);\n+    }\n+\n+    if (key == null) {\n+      return putForNullKey(value);\n+    }\n+\n+    int hash = hash(key);\n+    int i = indexFor(hash, table.length);\n+    for (Entry<K> e = table[i]; e != null; e = e.next) {\n+      Object k;\n+      if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n+        int oldValue = e.value;\n+        e.value = value;\n+        return oldValue;\n+      }\n+    }\n+\n+    addEntry(hash, key, value, i);\n+    return NULL_VALUE;\n+  }\n+\n+\n+  @Override\n+  public int remove(K key) {\n+    Entry<K> e = removeEntryForKey(key);\n+    return (e == null ? NULL_VALUE : e.value);\n+  }\n+\n+  void createEntry(int hash, K key, int value, int bucketIndex) {\n+    Entry<K> e = table[bucketIndex];\n+    table[bucketIndex] = new Entry<>(hash, key, value, e);\n+    size++;\n+  }\n+\n+  private int putForNullKey(int value) {\n+    for (Entry<K> e = table[0]; e != null; e = e.next) {\n+      if (e.key == null) {\n+        int oldValue = e.value;\n+        e.value = value;\n+        return oldValue;\n+      }\n+    }\n+    addEntry(0, null, value, 0);\n+    return NULL_VALUE;\n+  }\n+\n+  void addEntry(int hash, K key, int value, int bucketIndex) {\n+    if ((size >= threshold) && (null != table[bucketIndex])) {\n+      resize(2 * table.length);\n+      hash = (null != key) ? hash(key) : 0;\n+      bucketIndex = indexFor(hash, table.length);\n+    }\n+\n+    createEntry(hash, key, value, bucketIndex);\n+  }\n+\n+  void resize(int newCapacity) {\n+    Entry[] oldTable = table;\n+    int oldCapacity = oldTable.length;\n+    if (oldCapacity == MAXIMUM_CAPACITY) {\n+      threshold = Integer.MAX_VALUE;\n+      return;\n+    }\n+\n+    Entry[] newTable = new Entry[newCapacity];\n+    transfer(newTable);\n+    table = newTable;\n+    threshold = (int)Math.min(newCapacity * loadFactor, MAXIMUM_CAPACITY + 1);\n+  }\n+\n+  void transfer(Entry[] newTable) {\n+    int newCapacity = newTable.length;\n+    for (Entry<K> e : table) {\n+      while (null != e) {\n+        Entry<K> next = e.next;\n+        int i = indexFor(e.hash, newCapacity);\n+        e.next = newTable[i];\n+        newTable[i] = e;\n+        e = next;\n+      }\n+    }\n+  }\n+\n+  final Entry<K> removeEntryForKey(Object key) {\n+    if (size == 0) {\n+      return null;\n+    }\n+    int hash = (key == null) ? 0 : hash(key);\n+    int i = indexFor(hash, table.length);\n+    Entry<K> prev = table[i];\n+    Entry<K> e = prev;\n+\n+    while (e != null) {\n+      Entry<K> next = e.next;\n+      Object k;\n+      if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) {\n+        size--;\n+        if (prev == e) {\n+          table[i] = next;\n+        } else {\n+          prev.next = next;\n+        }\n+\n+        return e;\n+      }\n+      prev = e;\n+      e = next;\n+    }\n+\n+    return e;\n+  }\n+\n+  /**\n+   * Returns the number of mappings in this Map.\n+   */\n+  public int size() {\n+    return size;\n+  }\n+\n+  /**\n+   * Removes all elements from this map, leaving it empty.\n+   */\n+  public void clear() {\n+    size = 0;\n+    for (int i = 0; i < table.length; i++) {\n+      table[i] = null;\n+    }\n+  }\n+\n+  /**\n+   * Class to keep key-value data within hash map.\n+   * @param <K> key type.\n+   */\n+  static class Entry<K> {\n+    final K key;\n+    int value;\n+    Entry<K> next;\n \n Review comment:\n   Agreed, I have tested ObjectIntMap in eclipse-collections which use open addressing but seems performance is worse than HashMap, BWT, some attempts can be made as follows. Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T07:07:53.018+0000",
                    "updated": "2019-07-02T07:07:53.018+0000",
                    "started": "2019-07-02T07:07:53.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270650",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-507552689\n \n \n   Sorry, also some unit tests would be nice\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T07:19:30.241+0000",
                    "updated": "2019-07-02T07:19:30.241+0000",
                    "started": "2019-07-02T07:19:30.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270653",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-507211069\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=h1) Report\n   > Merging [#4765](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/91b4cbce0c3eb4d82d8f5a33b878d1bfba7651a3?src=pr&el=desc) will **increase** coverage by `3.02%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4765/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4765      +/-   ##\n   ==========================================\n   + Coverage   86.44%   89.46%   +3.02%     \n   ==========================================\n     Files         992      659     -333     \n     Lines      138020    95218   -42802     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       119307    85185   -34122     \n   + Misses      18351    10033    -8318     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/projector.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Byb2plY3Rvci5jYw==) | `90.75% <0%> (-5.12%)` | :arrow_down: |\n   | [cpp/src/gandiva/gdv\\_function\\_stubs.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2dkdl9mdW5jdGlvbl9zdHVicy5jYw==) | `94.8% <0%> (-3.48%)` | :arrow_down: |\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [cpp/src/gandiva/expr\\_validator.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJfdmFsaWRhdG9yLmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/annotator\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Fubm90YXRvcl90ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/field\\_descriptor.h](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2ZpZWxkX2Rlc2NyaXB0b3IuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/annotator.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Fubm90YXRvci5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/parser-test.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcGFyc2VyLXRlc3QuY2M=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | ... and [334 more](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=footer). Last update [91b4cbc...f620033](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T07:43:36.861+0000",
                    "updated": "2019-07-02T07:43:36.861+0000",
                    "started": "2019-07-02T07:43:36.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270669",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-507567314\n \n \n   > Sorry, also some unit tests would be nice\r\n   \r\n   Thanks a lot for your reminder, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T08:02:46.311+0000",
                    "updated": "2019-07-02T08:02:46.311+0000",
                    "started": "2019-07-02T08:02:46.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270675",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/270718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-507211069\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=h1) Report\n   > Merging [#4765](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/91b4cbce0c3eb4d82d8f5a33b878d1bfba7651a3?src=pr&el=desc) will **increase** coverage by `3.03%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4765/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4765      +/-   ##\n   ==========================================\n   + Coverage   86.44%   89.47%   +3.03%     \n   ==========================================\n     Files         992      659     -333     \n     Lines      138020    95218   -42802     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       119307    85196   -34111     \n   + Misses      18351    10022    -8329     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/projector.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Byb2plY3Rvci5jYw==) | `90.75% <0%> (-5.12%)` | :arrow_down: |\n   | [cpp/src/gandiva/gdv\\_function\\_stubs.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2dkdl9mdW5jdGlvbl9zdHVicy5jYw==) | `94.8% <0%> (-3.48%)` | :arrow_down: |\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [cpp/src/gandiva/expr\\_validator.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJfdmFsaWRhdG9yLmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/annotator\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Fubm90YXRvcl90ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/field\\_descriptor.h](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2ZpZWxkX2Rlc2NyaXB0b3IuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/annotator.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Fubm90YXRvci5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/parser-test.cc](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcGFyc2VyLXRlc3QuY2M=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | ... and [338 more](https://codecov.io/gh/apache/arrow/pull/4765/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=footer). Last update [91b4cbc...38ee5a4](https://codecov.io/gh/apache/arrow/pull/4765?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-02T08:49:56.889+0000",
                    "updated": "2019-07-02T08:49:56.889+0000",
                    "started": "2019-07-02T08:49:56.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "270718",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/271368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-507930418\n \n \n   +1, LGTM.  I assume there will be a follow-up PR to incorporate this  into the actual dictionary logic.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-03T04:11:25.164+0000",
                    "updated": "2019-07-03T04:11:25.164+0000",
                    "started": "2019-07-03T04:11:25.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "271368",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/271369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-03T04:13:50.506+0000",
                    "updated": "2019-07-03T04:13:50.506+0000",
                    "started": "2019-07-03T04:13:50.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "271369",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/271543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-508042215\n \n \n   > Another possible extension that can be done in a follow-up is intead of make the dictionary from Object->Int you can make it only store hash and then wrap the dictionary array, and do comparisons directly between array contents.\r\n   \r\n   I don't quite understand what you mean here, could you give some more informations? Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-03T10:46:10.458+0000",
                    "updated": "2019-07-03T10:46:10.458+0000",
                    "started": "2019-07-03T10:46:10.457+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "271543",
                    "issueId": "13242459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/worklog/271544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4765: ARROW-5814: [Java] Implement a <Object, int> HashMap for DictionaryEncoder\nURL: https://github.com/apache/arrow/pull/4765#issuecomment-508042215\n \n \n   > Another possible extension that can be done in a follow-up is intead of make the dictionary from Object->Int you can make it only store hash and then wrap the dictionary array, and do comparisons directly between array contents.\r\n   \r\n   @emkornfield \r\n   I don't quite understand what you mean here, could you give some more informations? Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-03T10:46:36.182+0000",
                    "updated": "2019-07-03T10:46:36.182+0000",
                    "started": "2019-07-03T10:46:36.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "271544",
                    "issueId": "13242459"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@30f4b492[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51d974b2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67244e12[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7dc2daa0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@232f2ae9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58121c90[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d039d5e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@76ff5384[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c5d57d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@64633857[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@658ba0e8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@69e4acae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 03 04:14:05 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-03T04:14:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5814/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-01T09:37:28.000+0000",
        "updated": "2019-08-01T22:39:20.000+0000",
        "timeoriginalestimate": null,
        "description": "As a follow-up of [ARROW-5726|https://issues.apache.org/jira/browse/ARROW-5726]. Implement a Map<Object, int> for DictionaryEncoder to reduce boxing/unboxing operations.\r\n\r\nBenchmark:\r\nDictionaryEncodeHashMapBenchmarks.testHashMap: avgt  5  31151.345 \u00b1 1661.878 ns/op\r\nDictionaryEncodeHashMapBenchmarks.testDictionaryEncodeHashMap: avgt  5  15549.902 \u00b1 771.647 ns/op",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Implement a <Object, int> HashMap for DictionaryEncoder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13242459/comment/16877467",
                    "id": "16877467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4765\n[https://github.com/apache/arrow/pull/4765]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-03T04:14:05.377+0000",
                    "updated": "2019-07-03T04:14:05.377+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0490g:",
        "customfield_12314139": null
    }
}