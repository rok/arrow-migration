{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13167416",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416",
    "key": "ARROW-2729",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2729/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/114349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 opened a new pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152\n \n \n   Support Decimal128Array and DecimalType.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-21T14:32:27.528+0000",
                    "updated": "2018-06-21T14:32:27.528+0000",
                    "started": "2018-06-21T14:32:27.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114349",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/114362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#issuecomment-399140117\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2152?src=pr&el=h1) Report\n   > Merging [#2152](https://codecov.io/gh/apache/arrow/pull/2152?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/884474ca5ca1b8da55c0b23eb7cb784c2cd9bdb4?src=pr&el=desc) will **not change** coverage.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2152/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2152?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #2152   +/-   ##\n   =======================================\n     Coverage   86.39%   86.39%           \n   =======================================\n     Files         230      230           \n     Lines       40701    40701           \n   =======================================\n     Hits        35162    35162           \n     Misses       5539     5539\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2152?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2152?src=pr&el=footer). Last update [884474c...1f3b62d](https://codecov.io/gh/apache/arrow/pull/2152?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-21T15:15:57.215+0000",
                    "updated": "2018-06-21T15:15:57.215+0000",
                    "started": "2018-06-21T15:15:57.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114362",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/arrow-glib/array-builder.cpp b/c_glib/arrow-glib/array-builder.cpp\nindex 343615bd90..6ca7cbd4cc 100644\n--- a/c_glib/arrow-glib/array-builder.cpp\n+++ b/c_glib/arrow-glib/array-builder.cpp\n@@ -25,6 +25,7 @@\n #include <arrow-glib/data-type.hpp>\n #include <arrow-glib/error.hpp>\n #include <arrow-glib/type.hpp>\n+#include <arrow-glib/decimal.hpp>\n \n template <typename BUILDER, typename VALUE>\n gboolean\n@@ -223,6 +224,9 @@ G_BEGIN_DECLS\n  *\n  * #GArrowStructArrayBuilder is the class to create a new\n  * #GArrowStructArray.\n+ *\n+ * #GArrowDecimal128ArrayBuilder is the class to create a new\n+ * #GArrowDecimal128Array.\n  */\n \n typedef struct GArrowArrayBuilderPrivate_ {\n@@ -3270,6 +3274,61 @@ garrow_struct_array_builder_get_field_builders(GArrowStructArrayBuilder *builder\n }\n \n \n+G_DEFINE_TYPE(GArrowDecimal128ArrayBuilder,\n+              garrow_decimal128_array_builder,\n+              GARROW_TYPE_ARRAY_BUILDER)\n+\n+static void\n+garrow_decimal128_array_builder_init(GArrowDecimal128ArrayBuilder *builder)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_builder_class_init(GArrowDecimal128ArrayBuilderClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_builder_new:\n+ * @data_type: #GArrowDecimalDataType for the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128ArrayBuilder.\n+ *\n+ * Since: 0.10.0\n+ */\n+GArrowDecimal128ArrayBuilder *\n+garrow_decimal128_array_builder_new(GArrowDecimalDataType *data_type)\n+{\n+  auto arrow_data_type = garrow_data_type_get_raw(GARROW_DATA_TYPE(data_type));\n+  auto builder = garrow_array_builder_new(arrow_data_type,\n+                                          NULL,\n+                                          \"[decimal128-array-builder][new]\");\n+  return GARROW_DECIMAL128_ARRAY_BUILDER(builder);\n+}\n+\n+/**\n+ * garrow_decimal128_array_builder_append:\n+ * @builder: A #GArrowDecimal128ArrayBuilder.\n+ * @value: A decimal value.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: %TRUE on success, %FALSE if there was an error.\n+ *\n+ * Since: 0.10.0\n+ */\n+gboolean\n+garrow_decimal128_array_builder_append(GArrowDecimal128ArrayBuilder *builder,\n+                                       GArrowDecimal128 *value,\n+                                       GError **error)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(value);\n+  return garrow_array_builder_append<arrow::Decimal128Builder *>\n+    (GARROW_ARRAY_BUILDER(builder),\n+     *arrow_decimal,\n+     error,\n+     \"[decimal128-array-builder][append]\");\n+}\n+\n G_END_DECLS\n \n GArrowArrayBuilder *\n@@ -3338,6 +3397,9 @@ garrow_array_builder_new_raw(arrow::ArrayBuilder *arrow_builder,\n     case arrow::Type::type::STRUCT:\n       type = GARROW_TYPE_STRUCT_ARRAY_BUILDER;\n       break;\n+    case arrow::Type::type::DECIMAL:\n+      type = GARROW_TYPE_DECIMAL128_ARRAY_BUILDER;\n+      break;\n     default:\n       type = GARROW_TYPE_ARRAY_BUILDER;\n       break;\ndiff --git a/c_glib/arrow-glib/array-builder.h b/c_glib/arrow-glib/array-builder.h\nindex 284a78fdb3..7a33058f2c 100644\n--- a/c_glib/arrow-glib/array-builder.h\n+++ b/c_glib/arrow-glib/array-builder.h\n@@ -21,6 +21,7 @@\n \n #include <arrow-glib/array.h>\n #include <arrow-glib/gobject-type.h>\n+#include <arrow-glib/decimal.h>\n \n G_BEGIN_DECLS\n \n@@ -1309,4 +1310,53 @@ GArrowArrayBuilder *garrow_struct_array_builder_get_field_builder(GArrowStructAr\n                                                                   gint i);\n GList *garrow_struct_array_builder_get_field_builders(GArrowStructArrayBuilder *builder);\n \n+\n+#define GARROW_TYPE_DECIMAL128_ARRAY_BUILDER        \\\n+  (garrow_decimal128_array_builder_get_type())\n+#define GARROW_DECIMAL128_ARRAY_BUILDER(obj)                        \\\n+  (G_TYPE_CHECK_INSTANCE_CAST((obj),                                \\\n+                              GARROW_TYPE_DECIMAL128_ARRAY_BUILDER, \\\n+                              GArrowDecimal128ArrayBuilder))\n+#define GARROW_DECIMAL128_ARRAY_BUILDER_CLASS(klass)                \\\n+  (G_TYPE_CHECK_CLASS_CAST((klass),                                 \\\n+                           GARROW_TYPE_DECIMAL128_ARRAY_BUILDER,    \\\n+                           GArrowDecimal128ArrayBuilderClass))\n+#define GARROW_IS_DECIMAL128_ARRAY_BUILDER(obj)                             \\\n+  (G_TYPE_CHECK_INSTANCE_TYPE((obj),                                        \\\n+                              GARROW_TYPE_DECIMAL128_ARRAY_BUILDER))\n+#define GARROW_IS_DECIMAL128_ARRAY_BUILDER_CLASS(klass)             \\\n+  (G_TYPE_CHECK_CLASS_TYPE((klass),                                 \\\n+                           GARROW_TYPE_DECIMAL128_ARRAY_BUILDER))\n+#define GARROW_DECIMAL128_ARRAY_BUILDER_GET_CLASS(obj)              \\\n+  (G_TYPE_INSTANCE_GET_CLASS((obj),                                 \\\n+                             GARROW_TYPE_DECIMAL128_ARRAY_BUILDER,  \\\n+                             GArrowDecimal128ArrayBuilderClass))\n+\n+typedef struct _GArrowDecimal128ArrayBuilder         GArrowDecimal128ArrayBuilder;\n+typedef struct _GArrowDecimal128ArrayBuilderClass    GArrowDecimal128ArrayBuilderClass;\n+\n+/**\n+ * GArrowDecimal128ArrayBuilder:\n+ *\n+ * It wraps `arrow::Decimal128Builder`.\n+ */\n+struct _GArrowDecimal128ArrayBuilder\n+{\n+  /*< private >*/\n+  GArrowArrayBuilder parent_instance;\n+};\n+\n+struct _GArrowDecimal128ArrayBuilderClass\n+{\n+  GArrowArrayBuilderClass parent_class;\n+};\n+\n+GType garrow_decimal128_array_builder_get_type(void) G_GNUC_CONST;\n+\n+GArrowDecimal128ArrayBuilder *garrow_decimal128_array_builder_new(GArrowDecimalDataType *data_type);\n+\n+gboolean garrow_decimal128_array_builder_append(GArrowDecimal128ArrayBuilder *builder,\n+                                                GArrowDecimal128 *value,\n+                                                GError **error);\n+\n G_END_DECLS\ndiff --git a/c_glib/arrow-glib/basic-array.cpp b/c_glib/arrow-glib/basic-array.cpp\nindex 923d192c76..9223056143 100644\n--- a/c_glib/arrow-glib/basic-array.cpp\n+++ b/c_glib/arrow-glib/basic-array.cpp\n@@ -27,6 +27,7 @@\n #include <arrow-glib/basic-data-type.hpp>\n #include <arrow-glib/error.hpp>\n #include <arrow-glib/type.hpp>\n+#include <arrow-glib/decimal.hpp>\n \n #include <iostream>\n #include <sstream>\n@@ -194,6 +195,10 @@ G_BEGIN_DECLS\n  * nanoseconds since midnight in 64-bit signed integer array. It can\n  * store zero or more time data. If you don't have Arrow format data,\n  * you need to use #GArrowTime64ArrayBuilder to create a new array.\n+ *\n+ * #GArrowDecimal128Array is a class for 128-bit decimal array. It can store zero\n+ * or more 128-bit decimal data. If you don't have Arrow format data, you need\n+ * to use #GArrowDecimalArrayBuilder to create a new array.\n  */\n \n typedef struct GArrowArrayPrivate_ {\n@@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n+garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\n+                                  gint64 i)\n+{\n+  auto arrow_array = garrow_array_get_raw(GARROW_ARRAY(array));\n+  auto arrow_decimal128_array =\n+    static_cast<arrow::Decimal128Array *>(arrow_array.get());\n+  auto value = arrow_decimal128_array->FormatValue(i);\n+  return g_strndup(value.data(), value.size());\n+}\n+\n G_END_DECLS\n \n GArrowArray *\n@@ -2180,6 +2233,9 @@ garrow_array_new_raw(std::shared_ptr<arrow::Array> *arrow_array)\n   case arrow::Type::type::DICTIONARY:\n     type = GARROW_TYPE_DICTIONARY_ARRAY;\n     break;\n+  case arrow::Type::type::DECIMAL:\n+    type = GARROW_TYPE_DECIMAL128_ARRAY;\n+    break;\n   default:\n     type = GARROW_TYPE_ARRAY;\n     break;\ndiff --git a/c_glib/arrow-glib/basic-array.h b/c_glib/arrow-glib/basic-array.h\nindex 4bf0af3aeb..957e938cfa 100644\n--- a/c_glib/arrow-glib/basic-array.h\n+++ b/c_glib/arrow-glib/basic-array.h\n@@ -630,4 +630,31 @@ gint64 garrow_time64_array_get_value(GArrowTime64Array *array,\n const gint64 *garrow_time64_array_get_values(GArrowTime64Array *array,\n                                              gint64 *length);\n \n+\n+#define GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY (garrow_fixed_size_binary_array_get_type())\n+G_DECLARE_DERIVABLE_TYPE(GArrowFixedSizeBinaryArray,\n+                         garrow_fixed_size_binary_array,\n+                         GARROW,\n+                         FIXED_SIZE_BINARY_ARRAY,\n+                         GArrowPrimitiveArray)\n+struct _GArrowFixedSizeBinaryArrayClass\n+{\n+  GArrowPrimitiveArrayClass parent_class;\n+};\n+\n+\n+#define GARROW_TYPE_DECIMAL128_ARRAY (garrow_decimal128_array_get_type())\n+G_DECLARE_DERIVABLE_TYPE(GArrowDecimal128Array,\n+                         garrow_decimal128_array,\n+                         GARROW,\n+                         DECIMAL128_ARRAY,\n+                         GArrowFixedSizeBinaryArray)\n+struct _GArrowDecimal128ArrayClass\n+{\n+  GArrowFixedSizeBinaryArrayClass parent_class;\n+};\n+\n+gchar *garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\n+                                         gint64 i);\n+\n G_END_DECLS\ndiff --git a/c_glib/arrow-glib/basic-data-type.cpp b/c_glib/arrow-glib/basic-data-type.cpp\nindex 82abfa35c8..d5706f106b 100644\n--- a/c_glib/arrow-glib/basic-data-type.cpp\n+++ b/c_glib/arrow-glib/basic-data-type.cpp\n@@ -84,6 +84,8 @@ G_BEGIN_DECLS\n  *\n  * #GArrowTime64DataType is a class for the number of microseconds or\n  * nanoseconds since midnight in 64-bit signed integer data type.\n+ *\n+ * #GArrowDecimalDataType is a class for 128-bit decimal data type.\n  */\n \n typedef struct GArrowDataTypePrivate_ {\n@@ -1037,6 +1039,41 @@ garrow_time64_data_type_new(GArrowTimeUnit unit, GError **error)\n   return data_type;\n }\n \n+\n+G_DEFINE_TYPE(GArrowDecimalDataType,                \\\n+              garrow_decimal_data_type,             \\\n+              GARROW_TYPE_DATA_TYPE)\n+\n+static void\n+garrow_decimal_data_type_init(GArrowDecimalDataType *object)\n+{\n+}\n+\n+static void\n+garrow_decimal_data_type_class_init(GArrowDecimalDataTypeClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal_data_type_new:\n+ *\n+ * Returns: The newly created decimal datatype.\n+ *\n+ * Since: 0.10.0\n+ */\n+GArrowDecimalDataType *\n+garrow_decimal_data_type_new(gint32 precision,\n+                             gint32 scale)\n+{\n+  auto arrow_data_type = arrow::decimal(precision, scale);\n+\n+  GArrowDecimalDataType *data_type =\n+    GARROW_DECIMAL_DATA_TYPE(g_object_new(GARROW_TYPE_DECIMAL_DATA_TYPE,\n+                                          \"data-type\", &arrow_data_type,\n+                                          NULL));\n+  return data_type;\n+}\n+\n G_END_DECLS\n \n GArrowDataType *\n@@ -1112,6 +1149,9 @@ garrow_data_type_new_raw(std::shared_ptr<arrow::DataType> *arrow_data_type)\n   case arrow::Type::type::DICTIONARY:\n     type = GARROW_TYPE_DICTIONARY_DATA_TYPE;\n     break;\n+  case arrow::Type::type::DECIMAL:\n+    type = GARROW_TYPE_DECIMAL_DATA_TYPE;\n+    break;\n   default:\n     type = GARROW_TYPE_DATA_TYPE;\n     break;\ndiff --git a/c_glib/arrow-glib/basic-data-type.h b/c_glib/arrow-glib/basic-data-type.h\nindex 478c905e9f..fe27042bd4 100644\n--- a/c_glib/arrow-glib/basic-data-type.h\n+++ b/c_glib/arrow-glib/basic-data-type.h\n@@ -21,6 +21,7 @@\n \n #include <arrow-glib/gobject-type.h>\n #include <arrow-glib/type.h>\n+#include <arrow-glib/decimal.h>\n \n G_BEGIN_DECLS\n \n@@ -648,4 +649,49 @@ GType                 garrow_time64_data_type_get_type (void) G_GNUC_CONST;\n GArrowTime64DataType *garrow_time64_data_type_new      (GArrowTimeUnit unit,\n                                                         GError **error);\n \n+\n+#define GARROW_TYPE_DECIMAL_DATA_TYPE            \\\n+  (garrow_decimal_data_type_get_type())\n+#define GARROW_DECIMAL_DATA_TYPE(obj)                            \\\n+  (G_TYPE_CHECK_INSTANCE_CAST((obj),                             \\\n+                              GARROW_TYPE_DECIMAL_DATA_TYPE,     \\\n+                              GArrowDecimalDataType))\n+#define GARROW_DECIMAL_DATA_TYPE_CLASS(klass)                    \\\n+  (G_TYPE_CHECK_CLASS_CAST((klass),                              \\\n+                           GARROW_TYPE_DECIMAL_DATA_TYPE,        \\\n+                           GArrowDecimalDataTypeClass))\n+#define GARROW_IS_DECIMAL_DATA_TYPE(obj)                         \\\n+  (G_TYPE_CHECK_INSTANCE_TYPE((obj),                             \\\n+                            GARROW_TYPE_DECIMAL_DATA_TYPE))\n+#define GARROW_IS_DECIMAL_DATA_TYPE_CLASS(klass)                 \\\n+  (G_TYPE_CHECK_CLASS_TYPE((klass),                              \\\n+                           GARROW_TYPE_DECIMAL_DATA_TYPE))\n+#define GARROW_DECIMAL_DATA_TYPE_GET_CLASS(obj),                 \\\n+  (G_TYPE_INSTANCE_GET_CLASS((obj),                              \\\n+                             GARROW_TYPE_DECIMAL_DATA_TYPE,      \\\n+                             GArrowDecimalDataTypeClass))\n+\n+typedef struct _GArrowDecimalDataType       GArrowDecimalDataType;\n+typedef struct _GArrowDecimalDataTypeClass  GArrowDecimalDataTypeClass;\n+\n+/**\n+ * GArrowDecimalType:\n+ *\n+ * It wraps `arrow::DecimalType`.\n+ */\n+struct _GArrowDecimalDataType\n+{\n+  /*< private >*/\n+  GArrowDataType parent_instance;\n+};\n+\n+struct _GArrowDecimalDataTypeClass\n+{\n+  GArrowDataTypeClass parent_class;\n+};\n+\n+GType                   garrow_decimal_data_type_get_type (void) G_GNUC_CONST;\n+GArrowDecimalDataType   *garrow_decimal_data_type_new     (gint32 precision,\n+                                                           gint32 scale);\n+\n G_END_DECLS\ndiff --git a/c_glib/test/test-decimal-array.rb b/c_glib/test/test-decimal-array.rb\nnew file mode 100644\nindex 0000000000..303cc07124\n--- /dev/null\n+++ b/c_glib/test/test-decimal-array.rb\n@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+class TestDecimalArray < Test::Unit::TestCase\n+  def test_value\n+    data_type = Arrow::DecimalDataType.new(8,2)\n+    builder = Arrow::Decimal128ArrayBuilder.new(data_type)\n+    decimal = Arrow::Decimal128.new(\"23423445\")\n+    builder.append(decimal)\n+    array = builder.finish\n+    assert_equal(\"234234.45\", array.get_value(0))\n+  end\n+end\ndiff --git a/c_glib/test/test-decimal-data-type.rb b/c_glib/test/test-decimal-data-type.rb\nnew file mode 100644\nindex 0000000000..dc3db3c6a5\n--- /dev/null\n+++ b/c_glib/test/test-decimal-data-type.rb\n@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+class TestDecimalDataType < Test::Unit::TestCase\n+  def test_type\n+    data_type = Arrow::DecimalDataType.new(2, 0)\n+    assert_equal(Arrow::Type::DECIMAL, data_type.id)\n+  end\n+\n+  def test_to_s\n+    data_type = Arrow::DecimalDataType.new(2, 0)\n+    assert_equal(\"decimal(2, 0)\", data_type.to_s)\n+  end\n+end\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T08:10:18.472+0000",
                    "updated": "2018-06-23T08:10:18.472+0000",
                    "started": "2018-06-23T08:10:18.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115049",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r197609913\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   How about returning `GArrowDecimal128` instead of `gchar *` as a follow-up pull request?\r\n   If we return `GArrowDecimal128`, we can convert the value to `gchar *`, `gint64` and so on.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T11:52:16.922+0000",
                    "updated": "2018-06-23T11:52:16.922+0000",
                    "started": "2018-06-23T11:52:16.922+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115074",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r197609879\n \n \n\n ##########\n File path: c_glib/arrow-glib/array-builder.h\n ##########\n @@ -1309,4 +1310,53 @@ GArrowArrayBuilder *garrow_struct_array_builder_get_field_builder(GArrowStructAr\n                                                                   gint i);\n GList *garrow_struct_array_builder_get_field_builders(GArrowStructArrayBuilder *builder);\n \n+\n+#define GARROW_TYPE_DECIMAL128_ARRAY_BUILDER        \\\n+  (garrow_decimal128_array_builder_get_type())\n \n Review comment:\n   Can you try to use `G_DECLARE_DERIVABLE_TYPE()` as a follow-up pull request?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T11:52:16.922+0000",
                    "updated": "2018-06-23T11:52:16.922+0000",
                    "started": "2018-06-23T11:52:16.922+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115073",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r197609944\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-data-type.h\n ##########\n @@ -648,4 +649,49 @@ GType                 garrow_time64_data_type_get_type (void) G_GNUC_CONST;\n GArrowTime64DataType *garrow_time64_data_type_new      (GArrowTimeUnit unit,\n                                                         GError **error);\n \n+\n+#define GARROW_TYPE_DECIMAL_DATA_TYPE            \\\n \n Review comment:\n   Can you try to use `G_DECLARE_DERIVABLE_TYPE()` as a follow-up pull request?\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T11:52:17.056+0000",
                    "updated": "2018-06-23T11:52:17.056+0000",
                    "started": "2018-06-23T11:52:17.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115075",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115081",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#issuecomment-399685014\n \n \n   Sorry for merging this a little too fast. I'll wait for @kou to review other GLib PRs\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T15:05:10.280+0000",
                    "updated": "2018-06-23T15:05:10.280+0000",
                    "started": "2018-06-23T15:05:10.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115081",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#issuecomment-399687818\n \n \n   No problem.\r\n   We can create follow-up pull requests. :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T15:48:10.017+0000",
                    "updated": "2018-06-23T15:48:10.017+0000",
                    "started": "2018-06-23T15:48:10.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115084",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on issue #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#issuecomment-399738723\n \n \n   Thank you for review. \r\n   I'll create follow-up pull requests to resolve your comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-24T08:21:06.864+0000",
                    "updated": "2018-06-24T08:21:06.864+0000",
                    "started": "2018-06-24T08:21:06.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115137",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 edited a comment on issue #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#issuecomment-399738723\n \n \n   Thank you for review. \r\n   I'll create a follow-up pull request to resolve your comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-24T08:27:19.512+0000",
                    "updated": "2018-06-24T08:27:19.512+0000",
                    "started": "2018-06-24T08:27:19.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115138",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r197802173\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   @kou \r\n   Please confirm my understanding.\r\n   \r\n   ```\r\n   GArrowDecimal128 *\r\n   garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n                                     gint64 i)\r\n   {\r\n     auto arrow_array = garrow_array_get_raw(GARROW_ARRAY(array));\r\n     auto arrow_decimal128_array =\r\n       static_cast<arrow::Decimal128Array *>(arrow_array.get());\r\n     auto value = arrow_decimal128_array->FormatValue(i);\r\n     auto arrow_decimal = std::make_shared<arrow::Decimal128>(value);\r\n     return garrow_decimal128_new_raw(&arrow_decimal);\r\n   }\r\n   ```\r\n   \r\n   ```\r\n   def test_value\r\n       data_type = Arrow::DecimalDataType.new(8,2)\r\n       builder = Arrow::Decimal128ArrayBuilder.new(data_type)\r\n       decimal = Arrow::Decimal128.new(\"23423445\")\r\n       builder.append(decimal)\r\n       array = builder.finish\r\n       assert_equal(\"23423445\", array.get_value(0).to_s)\r\n     end\r\n   ```\r\n   \r\n   In the code above, GArrowDecimal128 does not include scale.\r\n   \r\n   \r\n   \r\n   Does GArrowDecimal128 need to return including scale?\r\n   I don't know how to return GArrowDecimal128 including scale.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-25T13:48:30.628+0000",
                    "updated": "2018-06-25T13:48:30.628+0000",
                    "started": "2018-06-25T13:48:30.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115420",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 edited a comment on issue #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#issuecomment-399738723\n \n \n   Thank you for review. \r\n   I'll create follow-up pull requests to resolve your comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-25T14:30:20.298+0000",
                    "updated": "2018-06-25T14:30:20.298+0000",
                    "started": "2018-06-25T14:30:20.297+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115445",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r198033743\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   The scale information has `GArrowDecimalDataType` not `GArrowDecimal128`. We can get `GArrowDecimalDataType` from `array.value_data_type`.\r\n   We don't have `garrow_decimal_data_type_get_scale()` (and `_precision()`) for now. When we create them, we can write like the following:\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/basic-array.cpp b/c_glib/arrow-glib/basic-array.cpp\r\n   index 92230561..00e1746c 100644\r\n   --- a/c_glib/arrow-glib/basic-array.cpp\r\n   +++ b/c_glib/arrow-glib/basic-array.cpp\r\n   @@ -2143,19 +2143,20 @@ garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\r\n     * @array: A #GArrowDecimal128Array.\r\n     * @i: The index of the target value.\r\n     *\r\n   - * Returns: The i-th value.\r\n   + * Returns: (transfer full): The i-th value.\r\n     *\r\n     * Since: 0.10.0\r\n     */\r\n   -gchar *\r\n   +GArrowDecimal128 *\r\n    garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n                                      gint64 i)\r\n    {\r\n      auto arrow_array = garrow_array_get_raw(GARROW_ARRAY(array));\r\n      auto arrow_decimal128_array =\r\n        static_cast<arrow::Decimal128Array *>(arrow_array.get());\r\n   -  auto value = arrow_decimal128_array->FormatValue(i);\r\n   -  return g_strndup(value.data(), value.size());\r\n   +  auto arrow_decimal =\r\n   +    std::make_shared<arrow::Decimal128>(arrow_decimal128_array->GetValue(i));\r\n   +  return garrow_decimal128_new_raw(&arrow_decimal);\r\n    }\r\n    \r\n    G_END_DECLS\r\n   diff --git a/c_glib/arrow-glib/basic-array.h b/c_glib/arrow-glib/basic-array.h\r\n   index 957e938c..ac20fec7 100644\r\n   --- a/c_glib/arrow-glib/basic-array.h\r\n   +++ b/c_glib/arrow-glib/basic-array.h\r\n   @@ -654,7 +654,7 @@ struct _GArrowDecimal128ArrayClass\r\n      GArrowFixedSizeBinaryArrayClass parent_class;\r\n    };\r\n    \r\n   -gchar *garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n   -                                         gint64 i);\r\n   +GArrowDecimal128 *garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n   +                                                    gint64 i);\r\n    \r\n    G_END_DECLS\r\n   diff --git a/c_glib/test/test-decimal-array.rb b/c_glib/test/test-decimal-array.rb\r\n   index 303cc071..f75b12c9 100644\r\n   --- a/c_glib/test/test-decimal-array.rb\r\n   +++ b/c_glib/test/test-decimal-array.rb\r\n   @@ -22,6 +22,7 @@ class TestDecimalArray < Test::Unit::TestCase\r\n        decimal = Arrow::Decimal128.new(\"23423445\")\r\n        builder.append(decimal)\r\n        array = builder.finish\r\n   -    assert_equal(\"234234.45\", array.get_value(0))\r\n   +    assert_equal(\"234234.45\",\r\n   +                 array.get_value(0).to_string_scale(array.value_data_type.scale))\r\n      end\r\n    end\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-26T07:05:09.051+0000",
                    "updated": "2018-06-26T07:05:09.051+0000",
                    "started": "2018-06-26T07:05:09.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115811",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/115963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r198146331\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   Thanks.\r\n   I understand what you meant.\r\n   I'll create follow-up pull requests to resolve your comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-26T13:39:26.994+0000",
                    "updated": "2018-06-26T13:39:26.994+0000",
                    "started": "2018-06-26T13:39:26.993+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115963",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/116246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r198340867\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   Good!\r\n   \r\n   i thought about API. It's better that the current `get_value` function is remained and renamed to `format_value`. Because it'll be useful for some cases. Here is a patch to show this concept:\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/basic-array.h b/c_glib/arrow-glib/basic-array.h\r\n   index 957e938c..23891698 100644\r\n   --- a/c_glib/arrow-glib/basic-array.h\r\n   +++ b/c_glib/arrow-glib/basic-array.h\r\n   @@ -654,7 +654,7 @@ struct _GArrowDecimal128ArrayClass\r\n      GArrowFixedSizeBinaryArrayClass parent_class;\r\n    };\r\n    \r\n   -gchar *garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n   -                                         gint64 i);\r\n   +gchar *garrow_decimal128_array_format_value(GArrowDecimal128Array *array,\r\n   +                                            gint64 i);\r\n    \r\n    G_END_DECLS\r\n   diff --git a/c_glib/arrow-glib/basic-array.cpp b/c_glib/arrow-glib/basic-array.cpp\r\n   index 92230561..098dc5e6 100644\r\n   --- a/c_glib/arrow-glib/basic-array.cpp\r\n   +++ b/c_glib/arrow-glib/basic-array.cpp\r\n   @@ -2145,11 +2145,14 @@ garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\r\n     *\r\n     * Returns: The i-th value.\r\n     *\r\n   + * The returned string should be freed with g_free() when no longer\r\n   + * needed.\r\n   + *\r\n     * Since: 0.10.0\r\n     */\r\n    gchar *\r\n   -garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n   -                                  gint64 i)\r\n   +garrow_decimal128_array_format_value(GArrowDecimal128Array *array,\r\n   +                                     gint64 i)\r\n    {\r\n      auto arrow_array = garrow_array_get_raw(GARROW_ARRAY(array));\r\n      auto arrow_decimal128_array =\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-27T01:09:15.369+0000",
                    "updated": "2018-06-27T01:09:15.369+0000",
                    "started": "2018-06-27T01:09:15.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "116246",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/116247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r198340867\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   Good!\r\n   \r\n   i thought about API. It's better that the current `get_value` function is remained and renamed to `format_value`. Because it'll be useful for some cases. Here is a patch to show this concept:\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/basic-array.h b/c_glib/arrow-glib/basic-array.h\r\n   index 957e938c..23891698 100644\r\n   --- a/c_glib/arrow-glib/basic-array.h\r\n   +++ b/c_glib/arrow-glib/basic-array.h\r\n   @@ -654,7 +654,7 @@ struct _GArrowDecimal128ArrayClass\r\n      GArrowFixedSizeBinaryArrayClass parent_class;\r\n    };\r\n    \r\n   -gchar *garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n   -                                         gint64 i);\r\n   +gchar *garrow_decimal128_array_format_value(GArrowDecimal128Array *array,\r\n   +                                            gint64 i);\r\n    \r\n    G_END_DECLS\r\n   diff --git a/c_glib/arrow-glib/basic-array.cpp b/c_glib/arrow-glib/basic-array.cpp\r\n   index 92230561..ba26c93f 100644\r\n   --- a/c_glib/arrow-glib/basic-array.cpp\r\n   +++ b/c_glib/arrow-glib/basic-array.cpp\r\n   @@ -2139,17 +2139,20 @@ garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\r\n    }\r\n    \r\n    /**\r\n   - * garrow_decimal128_array_get_value:\r\n   + * garrow_decimal128_array_format_value:\r\n     * @array: A #GArrowDecimal128Array.\r\n     * @i: The index of the target value.\r\n     *\r\n   - * Returns: The i-th value.\r\n   + * Returns: The formatted i-th value.\r\n   + *\r\n   + * The returned string should be freed with g_free() when no longer\r\n   + * needed.\r\n     *\r\n     * Since: 0.10.0\r\n     */\r\n    gchar *\r\n   -garrow_decimal128_array_get_value(GArrowDecimal128Array *array,\r\n   -                                  gint64 i)\r\n   +garrow_decimal128_array_format_value(GArrowDecimal128Array *array,\r\n   +                                     gint64 i)\r\n    {\r\n      auto arrow_array = garrow_array_get_raw(GARROW_ARRAY(array));\r\n      auto arrow_decimal128_array =\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-27T01:09:59.076+0000",
                    "updated": "2018-06-27T01:09:59.076+0000",
                    "started": "2018-06-27T01:09:59.075+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "116247",
                    "issueId": "13167416"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/worklog/116424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #2152: ARROW-2729: [GLib] Add decimal128 array builder\nURL: https://github.com/apache/arrow/pull/2152#discussion_r198507537\n \n \n\n ##########\n File path: c_glib/arrow-glib/basic-array.cpp\n ##########\n @@ -2105,6 +2110,54 @@ garrow_time64_array_get_values(GArrowTime64Array *array,\n   return reinterpret_cast<const gint64 *>(values);\n }\n \n+\n+G_DEFINE_TYPE(GArrowFixedSizeBinaryArray,\n+              garrow_fixed_size_binary_array,\n+              GARROW_TYPE_PRIMITIVE_ARRAY)\n+static void\n+garrow_fixed_size_binary_array_init(GArrowFixedSizeBinaryArray *object)\n+{\n+}\n+\n+static void\n+garrow_fixed_size_binary_array_class_init(GArrowFixedSizeBinaryArrayClass *klass)\n+{\n+}\n+\n+\n+G_DEFINE_TYPE(GArrowDecimal128Array,\n+              garrow_decimal128_array,\n+              GARROW_TYPE_FIXED_SIZE_BINARY_ARRAY)\n+static void\n+garrow_decimal128_array_init(GArrowDecimal128Array *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_array_class_init(GArrowDecimal128ArrayClass *klass)\n+{\n+}\n+\n+/**\n+ * garrow_decimal128_array_get_value:\n+ * @array: A #GArrowDecimal128Array.\n+ * @i: The index of the target value.\n+ *\n+ * Returns: The i-th value.\n+ *\n+ * Since: 0.10.0\n+ */\n+gchar *\n \n Review comment:\n   Thanks!\r\n   That makes sense. I'll rename it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-27T14:04:45.593+0000",
                    "updated": "2018-06-27T14:04:45.593+0000",
                    "started": "2018-06-27T14:04:45.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "116424",
                    "issueId": "13167416"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@584c81c7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2021d0fa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6db616d6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@433ead9a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@171aeb7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@17872f6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c25d4a9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a41f0ca[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ac08fca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@68edb7a6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a1fa68e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7fbdc2a7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jun 23 08:10:34 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-06-23T08:10:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2729/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-06-21T14:27:12.000+0000",
        "updated": "2018-06-27T14:04:45.000+0000",
        "timeoriginalestimate": null,
        "description": "Support\u00a0Decimal128Array and DecimalType.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Add decimal128 array builder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13167416/comment/16521001",
                    "id": "16521001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2152\n[https://github.com/apache/arrow/pull/2152]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-23T08:10:34.627+0000",
                    "updated": "2018-06-23T08:10:34.627+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3v3f3:",
        "customfield_12314139": null
    }
}