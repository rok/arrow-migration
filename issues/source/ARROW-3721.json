{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13197046",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046",
    "key": "ARROW-3721",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3721/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/163837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T08:41:47.710+0000",
                    "updated": "2018-11-08T08:41:47.710+0000",
                    "started": "2018-11-08T08:41:47.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163837",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/163855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#issuecomment-436947965\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=h1) Report\n   > Merging [#2920](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/df4eb302f3bf03585c7ac2f7af07b145b5441d0f?src=pr&el=desc) will **increase** coverage by `1.11%`.\n   > The diff coverage is `67.3%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2920/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2920      +/-   ##\n   ==========================================\n   + Coverage   86.24%   87.36%   +1.11%     \n   ==========================================\n     Files         485      417      -68     \n     Lines       68132    63021    -5111     \n   ==========================================\n   - Hits        58760    55057    -3703     \n   + Misses       9278     7964    -1314     \n   + Partials       94        0      -94\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_gandiva.py](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9nYW5kaXZhLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/gandiva.pyx](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZ2FuZGl2YS5weXg=) | `59.66% <52.77%> (-2.69%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `94.92% <0%> (-2.18%)` | :arrow_down: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | ... and [78 more](https://codecov.io/gh/apache/arrow/pull/2920/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=footer). Last update [df4eb30...c951efc](https://codecov.io/gh/apache/arrow/pull/2920?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T10:30:49.405+0000",
                    "updated": "2018-11-08T10:30:49.405+0000",
                    "started": "2018-11-08T10:30:49.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163855",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/163858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r231840226\n \n \n\n ##########\n File path: python/pyarrow/gandiva.pyx\n ##########\n @@ -150,10 +163,49 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n+cdef inline DataType _ensure_type(object type):\n \n Review comment:\n   There is an `_as_type` function defined in `types.pxi`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T10:46:15.838+0000",
                    "updated": "2018-11-08T10:46:15.838+0000",
                    "started": "2018-11-08T10:46:15.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163858",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/163860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r231840475\n \n \n\n ##########\n File path: python/pyarrow/gandiva.pyx\n ##########\n @@ -150,10 +163,49 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n+cdef inline DataType _ensure_type(object type):\n+    if type is None:\n+        return None\n+    elif not isinstance(type, DataType):\n+        return type_for_alias(type)\n+    else:\n+        return type\n+\n+\n cdef class TreeExprBuilder:\n \n-    def make_literal(self, value):\n-        cdef shared_ptr[CNode] r = TreeExprBuilder_MakeLiteral(value)\n+    def make_literal(self, value, dtype):\n+        cdef shared_ptr[CNode] r\n+        cdef DataType type = _ensure_type(dtype)\n \n Review comment:\n   Tests for passing types as string and a failing case?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T10:47:04.580+0000",
                    "updated": "2018-11-08T10:47:04.580+0000",
                    "started": "2018-11-08T10:47:04.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163860",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r232085673\n \n \n\n ##########\n File path: python/pyarrow/gandiva.pyx\n ##########\n @@ -150,10 +163,49 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n+cdef inline DataType _ensure_type(object type):\n \n Review comment:\n   Thanks, I'm using that now (but it requires to make that symbol available in lib.pxd, not sure if we want that).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T22:33:39.057+0000",
                    "updated": "2018-11-08T22:33:39.057+0000",
                    "started": "2018-11-08T22:33:39.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164117",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r232085718\n \n \n\n ##########\n File path: python/pyarrow/gandiva.pyx\n ##########\n @@ -150,10 +163,49 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n+cdef inline DataType _ensure_type(object type):\n+    if type is None:\n+        return None\n+    elif not isinstance(type, DataType):\n+        return type_for_alias(type)\n+    else:\n+        return type\n+\n+\n cdef class TreeExprBuilder:\n \n-    def make_literal(self, value):\n-        cdef shared_ptr[CNode] r = TreeExprBuilder_MakeLiteral(value)\n+    def make_literal(self, value, dtype):\n+        cdef shared_ptr[CNode] r\n+        cdef DataType type = _ensure_type(dtype)\n \n Review comment:\n   Added, thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T22:33:54.682+0000",
                    "updated": "2018-11-08T22:33:54.682+0000",
                    "started": "2018-11-08T22:33:54.681+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164119",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164408",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r232318456\n \n \n\n ##########\n File path: python/pyarrow/gandiva.pyx\n ##########\n @@ -150,10 +163,49 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n+cdef inline DataType _ensure_type(object type):\n \n Review comment:\n   Converted it to a pure python function. We have another `cdef inline _ensure_type` in array.pxi which causes other issues, will resolve it in a follow-up PR, see https://issues.apache.org/jira/browse/ARROW-3735\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-09T16:44:42.695+0000",
                    "updated": "2018-11-09T16:44:42.695+0000",
                    "started": "2018-11-09T16:44:42.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164408",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r232318530\n \n \n\n ##########\n File path: python/pyarrow/gandiva.pyx\n ##########\n @@ -150,10 +163,49 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n+cdef inline DataType _ensure_type(object type):\n+    if type is None:\n+        return None\n+    elif not isinstance(type, DataType):\n+        return type_for_alias(type)\n+    else:\n+        return type\n+\n+\n cdef class TreeExprBuilder:\n \n-    def make_literal(self, value):\n-        cdef shared_ptr[CNode] r = TreeExprBuilder_MakeLiteral(value)\n+    def make_literal(self, value, dtype):\n+        cdef shared_ptr[CNode] r\n+        cdef DataType type = _ensure_type(dtype)\n \n Review comment:\n   Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-09T16:44:58.199+0000",
                    "updated": "2018-11-09T16:44:58.199+0000",
                    "started": "2018-11-09T16:44:58.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164409",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#discussion_r232330390\n \n \n\n ##########\n File path: python/pyarrow/tests/test_gandiva.py\n ##########\n @@ -91,10 +91,73 @@ def test_filter():\n \n     builder = gandiva.TreeExprBuilder()\n     node_a = builder.make_field(table.schema.field_by_name(\"a\"))\n-    thousand = builder.make_literal(1000.0)\n+    thousand = builder.make_literal(1000.0, pa.float64())\n     cond = builder.make_function(\"less_than\", [node_a, thousand], pa.bool_())\n     condition = builder.make_condition(cond)\n \n     filter = gandiva.make_filter(table.schema, condition)\n     result = filter.evaluate(table.to_batches()[0], pa.default_memory_pool())\n     assert result.to_array().equals(pa.array(range(1000), type=pa.uint32()))\n+\n+\n+@pytest.mark.gandiva\n+def test_literals():\n+    import pyarrow.gandiva as gandiva\n+\n+    builder = gandiva.TreeExprBuilder()\n+\n+    builder.make_literal(True, pa.bool_())\n+    builder.make_literal(0, pa.uint8())\n+    builder.make_literal(1, pa.uint16())\n+    builder.make_literal(2, pa.uint32())\n+    builder.make_literal(3, pa.uint64())\n+    builder.make_literal(4, pa.int8())\n+    builder.make_literal(5, pa.int16())\n+    builder.make_literal(6, pa.int32())\n+    builder.make_literal(7, pa.int64())\n+    builder.make_literal(8.0, pa.float32())\n+    builder.make_literal(9.0, pa.float64())\n+    builder.make_literal(\"hello\", pa.string())\n+    builder.make_literal(b\"world\", pa.binary())\n+\n+    builder.make_literal(True, \"bool\")\n+    builder.make_literal(0, \"uint8\")\n+    builder.make_literal(1, \"uint16\")\n+    builder.make_literal(2, \"uint32\")\n+    builder.make_literal(3, \"uint64\")\n+    builder.make_literal(4, \"int8\")\n+    builder.make_literal(5, \"int16\")\n+    builder.make_literal(6, \"int32\")\n+    builder.make_literal(7, \"int64\")\n+    builder.make_literal(8.0, \"float32\")\n+    builder.make_literal(9.0, \"float64\")\n+    builder.make_literal(\"hello\", \"string\")\n+    builder.make_literal(b\"world\", \"binary\")\n+\n+    with pytest.raises(TypeError):\n+        builder.make_literal(\"hello\", pa.int64())\n+        builder.make_literal(True, None)\n \n Review comment:\n   This line isn't running.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-09T17:23:04.161+0000",
                    "updated": "2018-11-09T17:23:04.161+0000",
                    "started": "2018-11-09T17:23:04.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164428",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs closed pull request #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/gandiva.pyx b/python/pyarrow/gandiva.pyx\nindex 7bc462f078..7a6c09e8ed 100644\n--- a/python/pyarrow/gandiva.pyx\n+++ b/python/pyarrow/gandiva.pyx\n@@ -27,14 +27,28 @@ from libc.stdint cimport int64_t, uint8_t, uintptr_t\n \n from pyarrow.includes.libarrow cimport *\n from pyarrow.compat import frombytes\n-from pyarrow.lib cimport check_status, pyarrow_wrap_array\n+from pyarrow.types import _as_type\n+from pyarrow.lib cimport (Array, DataType, Field, MemoryPool, RecordBatch,\n+                          Schema, check_status, pyarrow_wrap_array)\n \n from pyarrow.includes.libgandiva cimport (CCondition, CExpression,\n                                           CNode, CProjector, CFilter,\n                                           CSelectionVector,\n                                           TreeExprBuilder_MakeExpression,\n                                           TreeExprBuilder_MakeFunction,\n-                                          TreeExprBuilder_MakeLiteral,\n+                                          TreeExprBuilder_MakeBoolLiteral,\n+                                          TreeExprBuilder_MakeUInt8Literal,\n+                                          TreeExprBuilder_MakeUInt16Literal,\n+                                          TreeExprBuilder_MakeUInt32Literal,\n+                                          TreeExprBuilder_MakeUInt64Literal,\n+                                          TreeExprBuilder_MakeInt8Literal,\n+                                          TreeExprBuilder_MakeInt16Literal,\n+                                          TreeExprBuilder_MakeInt32Literal,\n+                                          TreeExprBuilder_MakeInt64Literal,\n+                                          TreeExprBuilder_MakeFloatLiteral,\n+                                          TreeExprBuilder_MakeDoubleLiteral,\n+                                          TreeExprBuilder_MakeStringLiteral,\n+                                          TreeExprBuilder_MakeBinaryLiteral,\n                                           TreeExprBuilder_MakeField,\n                                           TreeExprBuilder_MakeIf,\n                                           TreeExprBuilder_MakeCondition,\n@@ -42,8 +56,6 @@ from pyarrow.includes.libgandiva cimport (CCondition, CExpression,\n                                           Projector_Make,\n                                           Filter_Make)\n \n-from pyarrow.lib cimport (Array, DataType, Field, MemoryPool,\n-                          RecordBatch, Schema)\n \n cdef class Node:\n     cdef:\n@@ -150,10 +162,40 @@ cdef class Filter:\n             batch.sp_batch.get()[0], selection))\n         return SelectionVector.create(selection)\n \n+\n cdef class TreeExprBuilder:\n \n-    def make_literal(self, value):\n-        cdef shared_ptr[CNode] r = TreeExprBuilder_MakeLiteral(value)\n+    def make_literal(self, value, dtype):\n+        cdef shared_ptr[CNode] r\n+        cdef DataType type = _as_type(dtype)\n+        if type.id == _Type_BOOL:\n+            r = TreeExprBuilder_MakeBoolLiteral(value)\n+        elif type.id == _Type_UINT8:\n+            r = TreeExprBuilder_MakeUInt8Literal(value)\n+        elif type.id == _Type_UINT16:\n+            r = TreeExprBuilder_MakeUInt16Literal(value)\n+        elif type.id == _Type_UINT32:\n+            r = TreeExprBuilder_MakeUInt32Literal(value)\n+        elif type.id == _Type_UINT64:\n+            r = TreeExprBuilder_MakeUInt64Literal(value)\n+        elif type.id == _Type_INT8:\n+            r = TreeExprBuilder_MakeInt8Literal(value)\n+        elif type.id == _Type_INT16:\n+            r = TreeExprBuilder_MakeInt16Literal(value)\n+        elif type.id == _Type_INT32:\n+            r = TreeExprBuilder_MakeInt32Literal(value)\n+        elif type.id == _Type_INT64:\n+            r = TreeExprBuilder_MakeInt64Literal(value)\n+        elif type.id == _Type_FLOAT:\n+            r = TreeExprBuilder_MakeFloatLiteral(value)\n+        elif type.id == _Type_DOUBLE:\n+            r = TreeExprBuilder_MakeDoubleLiteral(value)\n+        elif type.id == _Type_STRING:\n+            r = TreeExprBuilder_MakeStringLiteral(value.encode('UTF-8'))\n+        elif type.id == _Type_BINARY:\n+            r = TreeExprBuilder_MakeBinaryLiteral(value)\n+        else:\n+            raise TypeError(\"Didn't recognize dtype \" + str(dtype))\n         return Node.create(r)\n \n     def make_expression(self, Node root_node, Field return_field):\ndiff --git a/python/pyarrow/includes/libgandiva.pxd b/python/pyarrow/includes/libgandiva.pxd\nindex b1e45af437..f8106bcf3f 100644\n--- a/python/pyarrow/includes/libgandiva.pxd\n+++ b/python/pyarrow/includes/libgandiva.pxd\n@@ -56,9 +56,45 @@ cdef extern from \"gandiva/arrow.h\" namespace \"gandiva\" nogil:\n \n cdef extern from \"gandiva/tree_expr_builder.h\" namespace \"gandiva\" nogil:\n \n-    cdef shared_ptr[CNode] TreeExprBuilder_MakeLiteral \\\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeBoolLiteral \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(c_bool value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeUInt8Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(uint8_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeUInt16Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(uint16_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeUInt32Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(uint32_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeUInt64Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(uint64_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeInt8Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(int8_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeInt16Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(int16_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeInt32Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(int32_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeInt64Literal \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(int64_t value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeFloatLiteral \\\n+        \"gandiva::TreeExprBuilder::MakeLiteral\"(float value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeDoubleLiteral \\\n         \"gandiva::TreeExprBuilder::MakeLiteral\"(double value)\n \n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeStringLiteral \\\n+        \"gandiva::TreeExprBuilder::MakeStringLiteral\"(const c_string& value)\n+\n+    cdef shared_ptr[CNode] TreeExprBuilder_MakeBinaryLiteral \\\n+        \"gandiva::TreeExprBuilder::MakeBinaryLiteral\"(const c_string& value)\n+\n     cdef shared_ptr[CExpression] TreeExprBuilder_MakeExpression\\\n         \"gandiva::TreeExprBuilder::MakeExpression\"(\n             shared_ptr[CNode] root_node, shared_ptr[CField] result_field)\ndiff --git a/python/pyarrow/tests/test_gandiva.py b/python/pyarrow/tests/test_gandiva.py\nindex f5874e4acf..579f88d32d 100644\n--- a/python/pyarrow/tests/test_gandiva.py\n+++ b/python/pyarrow/tests/test_gandiva.py\n@@ -91,10 +91,74 @@ def test_filter():\n \n     builder = gandiva.TreeExprBuilder()\n     node_a = builder.make_field(table.schema.field_by_name(\"a\"))\n-    thousand = builder.make_literal(1000.0)\n+    thousand = builder.make_literal(1000.0, pa.float64())\n     cond = builder.make_function(\"less_than\", [node_a, thousand], pa.bool_())\n     condition = builder.make_condition(cond)\n \n     filter = gandiva.make_filter(table.schema, condition)\n     result = filter.evaluate(table.to_batches()[0], pa.default_memory_pool())\n     assert result.to_array().equals(pa.array(range(1000), type=pa.uint32()))\n+\n+\n+@pytest.mark.gandiva\n+def test_literals():\n+    import pyarrow.gandiva as gandiva\n+\n+    builder = gandiva.TreeExprBuilder()\n+\n+    builder.make_literal(True, pa.bool_())\n+    builder.make_literal(0, pa.uint8())\n+    builder.make_literal(1, pa.uint16())\n+    builder.make_literal(2, pa.uint32())\n+    builder.make_literal(3, pa.uint64())\n+    builder.make_literal(4, pa.int8())\n+    builder.make_literal(5, pa.int16())\n+    builder.make_literal(6, pa.int32())\n+    builder.make_literal(7, pa.int64())\n+    builder.make_literal(8.0, pa.float32())\n+    builder.make_literal(9.0, pa.float64())\n+    builder.make_literal(\"hello\", pa.string())\n+    builder.make_literal(b\"world\", pa.binary())\n+\n+    builder.make_literal(True, \"bool\")\n+    builder.make_literal(0, \"uint8\")\n+    builder.make_literal(1, \"uint16\")\n+    builder.make_literal(2, \"uint32\")\n+    builder.make_literal(3, \"uint64\")\n+    builder.make_literal(4, \"int8\")\n+    builder.make_literal(5, \"int16\")\n+    builder.make_literal(6, \"int32\")\n+    builder.make_literal(7, \"int64\")\n+    builder.make_literal(8.0, \"float32\")\n+    builder.make_literal(9.0, \"float64\")\n+    builder.make_literal(\"hello\", \"string\")\n+    builder.make_literal(b\"world\", \"binary\")\n+\n+    with pytest.raises(TypeError):\n+        builder.make_literal(\"hello\", pa.int64())\n+    with pytest.raises(TypeError):\n+        builder.make_literal(True, None)\n+\n+\n+@pytest.mark.gandiva\n+def test_regex():\n+    import pyarrow.gandiva as gandiva\n+\n+    elements = [\"park\", \"sparkle\", \"bright spark and fire\", \"spark\"]\n+    data = pa.array(elements, type=pa.string())\n+    table = pa.Table.from_arrays([data], names=['a'])\n+\n+    builder = gandiva.TreeExprBuilder()\n+    node_a = builder.make_field(table.schema.field_by_name(\"a\"))\n+    regex = builder.make_literal(\"%spark%\", pa.string())\n+    like = builder.make_function(\"like\", [node_a, regex], pa.bool_())\n+\n+    field_result = pa.field(\"b\", pa.bool_())\n+    expr = builder.make_expression(like, field_result)\n+\n+    projector = gandiva.make_projector(\n+        table.schema, [expr], pa.default_memory_pool())\n+\n+    r, = projector.evaluate(table.to_batches()[0])\n+    b = pa.array([False, True, True, True], type=pa.bool_())\n+    assert r.equals(b)\ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex 92ef0f363a..51a565963c 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -830,13 +830,11 @@ def field(name, type, bint nullable=True, dict metadata=None):\n     cdef:\n         shared_ptr[CKeyValueMetadata] c_meta\n         Field result = Field.__new__(Field)\n-        DataType _type\n+        DataType _type = _as_type(type)\n \n     if metadata is not None:\n         convert_metadata(metadata, &c_meta)\n \n-    _type = _as_type(type)\n-\n     result.sp_field.reset(new CField(tobytes(name), _type.sp_type,\n                                      nullable == 1, c_meta))\n     result.field = result.sp_field.get()\n@@ -844,14 +842,6 @@ def field(name, type, bint nullable=True, dict metadata=None):\n     return result\n \n \n-cdef _as_type(type):\n-    if isinstance(type, DataType):\n-        return type\n-    if not isinstance(type, six.string_types):\n-        raise TypeError(type)\n-    return type_for_alias(type)\n-\n-\n cdef set PRIMITIVE_TYPES = set([\n     _Type_NA, _Type_BOOL,\n     _Type_UINT8, _Type_INT8,\n@@ -1431,6 +1421,15 @@ def type_for_alias(name):\n     return alias()\n \n \n+def _as_type(type):\n+    if isinstance(type, DataType):\n+        return type\n+    elif isinstance(type, six.string_types):\n+        return type_for_alias(type)\n+    else:\n+        raise TypeError(type)\n+\n+\n def schema(fields, dict metadata=None):\n     \"\"\"\n     Construct pyarrow.Schema from collection of fields\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-09T19:35:31.652+0000",
                    "updated": "2018-11-09T19:35:31.652+0000",
                    "started": "2018-11-09T19:35:31.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164490",
                    "issueId": "13197046"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/worklog/164508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2920: ARROW-3721: [Gandiva] [Python] Support all Gandiva literals\nURL: https://github.com/apache/arrow/pull/2920#issuecomment-437487906\n \n \n   Thanks @kszucs \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-09T20:37:37.634+0000",
                    "updated": "2018-11-09T20:37:37.634+0000",
                    "started": "2018-11-09T20:37:37.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164508",
                    "issueId": "13197046"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2e76170f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@438fe32d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f97ffbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3bdf5ea[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16838cd1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@d08640d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d62101d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@619cb6fe[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b735b18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@25957277[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38ea7c20[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3c451685[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Nov 09 19:35:25 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-09T19:35:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3721/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-08T08:36:46.000+0000",
        "updated": "2019-06-03T12:29:56.000+0000",
        "timeoriginalestimate": null,
        "description": "Support all the literals from [https://github.com/apache/arrow/blob/5b116ab175292fe70ed3c8727bcc6868b9695f4a/cpp/src/gandiva/tree_expr_builder.h#L35]\u00a0in the Cython bindings.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] [Python] Support all Gandiva literals",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197046/comment/16681877",
                    "id": "16681877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 2920\n[https://github.com/apache/arrow/pull/2920]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-11-09T19:35:25.279+0000",
                    "updated": "2018-11-09T19:35:25.279+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s009gg:",
        "customfield_12314139": null
    }
}