{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13274744",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744",
    "key": "ARROW-7400",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7400/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/360201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoids the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039\n \n \n   This issue is in response of a discussion in: https://github.com/apache/arrow/pull/5540#discussion_r329487232.\r\n   \r\n   The quick sort algorithm can degenerate to an O(n^2) algorithm, if the pivot is selected poorly. This is an important problem, as the worst case can happen, if the input vector is alrady sorted, which is frequently encountered in practice.\r\n   \r\n   After some investigation, we solve the problem with a simple but effective approach: take 3 samples and choose the median (with at most 3 comparisons) as the pivot. This sorts the vector which is already sorted in O(nlogn) time.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-16T12:11:04.695+0000",
                    "updated": "2019-12-16T12:11:04.695+0000",
                    "started": "2019-12-16T12:11:04.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "360201",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/360206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6039: ARROW-7400: [Java] Avoids the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-566037336\n \n \n   https://issues.apache.org/jira/browse/ARROW-7400\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-16T12:18:08.718+0000",
                    "updated": "2019-12-16T12:18:08.718+0000",
                    "started": "2019-12-16T12:18:08.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "360206",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/360843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r358745476\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -85,8 +91,54 @@ private void quickSort() {\n     }\n   }\n \n+  /**\n+   *  Select the pivot as the median of 3 samples.\n+   */\n+  void choosePivot(int low, int high) {\n+    if (high - low < PIVOT_SELECTION_THRESHOLD) {\n \n Review comment:\n   Note that instead of skipping pivot selection, the threshold should probably trigger the use of insertion sort on small subarrays. Usually, quicksort implementations switch to insertion sort for arrays smaller than 10-20 elements.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-17T11:43:36.023+0000",
                    "updated": "2019-12-17T11:43:36.023+0000",
                    "started": "2019-12-17T11:43:36.023+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "360843",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/361279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r359134952\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -85,8 +91,54 @@ private void quickSort() {\n     }\n   }\n \n+  /**\n+   *  Select the pivot as the median of 3 samples.\n+   */\n+  void choosePivot(int low, int high) {\n+    if (high - low < PIVOT_SELECTION_THRESHOLD) {\n \n Review comment:\n   @pitrou Thanks a lot for the good suggestion. I agree with you that it is an optimization that will definitely improve the sort performance, and we really need it in our code base.\r\n   \r\n   I am not sure if we should implement it in this particular PR, or in a separate one in the future.\r\n   Maybe insertion sort is a separate feature (I don't know), as it has some distinct advantages compared with quick sort:\r\n   \r\n   1. It is extremely efficient for small vectors (as you have pointed out)\r\n   2. For an already sorted vector, its time complexity is O(n) (vs. O(nlogn) for quick sort).\r\n   \r\n   Would you please give your suggestion?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-18T03:16:52.205+0000",
                    "updated": "2019-12-18T03:16:52.205+0000",
                    "started": "2019-12-18T03:16:52.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "361279",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/363187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-568844061\n \n \n   > @liyafan82 Thanks for the improvement.\r\n   > \r\n   > I have a question: Looking at the improvement approach (esp. after adding the insertion sort under threshold, this much looks like the [Introspective Sorting and Selection Algorithms ](https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291097-024X%28199708%2927%3A8%3C983%3A%3AAID-SPE117%3E3.0.CO%3B2-%23). I am not 100% sure but I think the C++ `std::sort` also use very similar algorithm @pitrou?\r\n   \r\n   @walterddr Thanks a lot for your comments.\r\n   \r\n   I think our approach is similar to the reference, with two differences:\r\n   1. We do not limit the recursive depth, as we have revised the algorithm to a non-recursive one in a previous issue. \r\n   2. When the range is small enough, we switch to insertion sort, instead of heap sort. (The insertion sort cannot be used if the recursive depth is limited, as the worst case time complexity can be O(n^2). But this is not a problem, if the threshold to switch algorithm is a constant, as in our approach). \r\n   \r\n   According to my investigation, the implementation of C++ std::sort is very close to the reference (limit recursive depth & switch to heap sort). I am using gcc 4.8.5. \r\n   \r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-25T05:53:36.090+0000",
                    "updated": "2019-12-25T05:53:36.090+0000",
                    "started": "2019-12-25T05:53:36.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "363187",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/363691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-569115344\n \n \n   @walterddr This implementation doesn't protect against O(n**2) worst case, it just tries to make it unlikely.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-26T18:56:55.569+0000",
                    "updated": "2019-12-26T18:56:55.569+0000",
                    "started": "2019-12-26T18:56:55.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "363691",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/363777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "walterddr commented on issue #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-569152757\n \n \n   thanks for the explanation @pitrou and @liyafan82 . That's also what I thought as well. This might be a dumb question.. but any reason why we can't implemented the algorithm in the paper or similar to how C++ does it to prevent the worse case O(n^2)? (of course, with the non-recursive way as suggested in #5540)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-27T00:02:29.487+0000",
                    "updated": "2019-12-27T00:02:29.487+0000",
                    "started": "2019-12-27T00:02:29.486+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "363777",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/363814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-569169787\n \n \n   > thanks for the explanation @pitrou and @liyafan82 . That's also what I thought as well. This might be a dumb question.. but any reason why we can't implemented the algorithm in the paper or similar to how C++ does it to prevent the worse case O(n^2)? (of course, with the non-recursive way as suggested in #5540)?\r\n   \r\n   Good question.\r\n   IMO, a non-recursive algorithm is in general faster than a recursive one.\r\n   \r\n   In addition, insertion sort is faster than heap sort for small data sets. For example, intensive sort benchmarks have been performed in http://alejandroerickson.com/j/2016/08/02/benchmarking-int-sorting-algorithms.html and results show that insertion sort is much faster than heap sort for small data sets (e.g. with no more than 100 elements).\r\n   \r\n   I think C++ library does not switch to insertion sort, because it has to control the recursive depth (to avoid stack overflow), and so it cannot control the data set size to switch algorithm. In the extreme case, the algorithm may degenerate to a O(n^2) algorithm (even if the pivots are selected perfectly). The fundamental reason is that it is a recursive algorithm. \r\n   \r\n   @pitrou Please correct me if I am wrong.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-27T02:30:56.416+0000",
                    "updated": "2019-12-27T02:30:56.416+0000",
                    "started": "2019-12-27T02:30:56.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "363814",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/363815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-569171105\n \n \n   @walterddr It seems you are interested algorithms implemented in Java. We have a design doc (https://docs.google.com/document/d/17nqHWS7gs0vARfeDAcUEbhKMOYHnCtA46TOY_Nls69s/edit#heading=h.3432tw3uqfeg) discussing the algorithms. \r\n   \r\n   Maybe you can find some points that can be useful in your scenario, and we would like to provide anything to help :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-27T02:40:21.057+0000",
                    "updated": "2019-12-27T02:40:21.057+0000",
                    "started": "2019-12-27T02:40:21.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "363815",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/364470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#issuecomment-569565294\n \n \n   > @liyafan82 appreciate the quick reply and the explanation, after some digging I think in order to avoid worst case O(n^2), a linear time median computation is needed in order to avoid choosing pivot at extreme. however, in your explanation - it seems to make more sense to avoid doing so in practices, as compute the real median has a high constant/linear penalty.\r\n   > \r\n   > Also I would definitely take a deeper look at the algorithm design doc, thanks for sharing!\r\n   \r\n   @walterddr As you have indicated, by choosing the pivot inappropriately, the algorithm may degenerate to O(n^2) time. IMO, most practical algorithms find pivots by heuristics or randomized algorithms. The reasoning is that finding the median exactly is expensive, and the theoretical worst case happens rarely (even if we ignore the problem of selecting pivot completely, we get O(nlogn) time on average, if the input data set is uniformly distributed. What we are doing is to further reduce the probability of the worst case).\r\n   \r\n   Glad that you are interested in the doc, if there is anything we can do, please feel free to contact us. Thank you in advance. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-30T02:25:37.051+0000",
                    "updated": "2019-12-30T02:25:37.051+0000",
                    "started": "2019-12-30T02:25:37.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "364470",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/373421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r367782018\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestIndexSorter.java\n ##########\n @@ -113,4 +113,45 @@ public void testSortLargeIncreasingInt() {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testChoosePivot() {\n \n Review comment:\n   I think you need more test coverage here for selecting the midpoint from the 3 sampled points (ideally as different testes).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-17T06:09:06.841+0000",
                    "updated": "2020-01-17T06:09:06.841+0000",
                    "started": "2020-01-17T06:09:06.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "373421",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/373422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r367782126\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.IntVector;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Test cases for {@link InsertionSorter}.\n+ */\n+public class TestInsertionSorter {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void prepare() {\n+    allocator = new RootAllocator(1024 * 1024);\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    allocator.close();\n+  }\n+\n+  private void testSortIntVectorRange(int start, int end, int vectorLength) {\n+    try (IntVector vector = new IntVector(\"vector\", allocator);\n+         IntVector buffer = new IntVector(\"buffer\", allocator)) {\n+\n+      vector.allocateNew(vectorLength);\n \n Review comment:\n   please use vector populator instead of loops.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-17T06:09:49.294+0000",
                    "updated": "2020-01-17T06:09:49.294+0000",
                    "started": "2020-01-17T06:09:49.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "373422",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/374375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r368350759\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestIndexSorter.java\n ##########\n @@ -113,4 +113,45 @@ public void testSortLargeIncreasingInt() {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testChoosePivot() {\n \n Review comment:\n   Sure. I added test cases for all possible permutations for 3 values, and find bugs during the process. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-20T02:38:54.060+0000",
                    "updated": "2020-01-20T02:38:54.060+0000",
                    "started": "2020-01-20T02:38:54.060+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374375",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/374376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r368350804\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.IntVector;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Test cases for {@link InsertionSorter}.\n+ */\n+public class TestInsertionSorter {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void prepare() {\n+    allocator = new RootAllocator(1024 * 1024);\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    allocator.close();\n+  }\n+\n+  private void testSortIntVectorRange(int start, int end, int vectorLength) {\n+    try (IntVector vector = new IntVector(\"vector\", allocator);\n+         IntVector buffer = new IntVector(\"buffer\", allocator)) {\n+\n+      vector.allocateNew(vectorLength);\n \n Review comment:\n   Revised. Thanks for the good point. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-20T02:39:09.439+0000",
                    "updated": "2020-01-20T02:39:09.439+0000",
                    "started": "2020-01-20T02:39:09.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374376",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/380665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r373915844\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.IntVector;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Test cases for {@link InsertionSorter}.\n+ */\n+public class TestInsertionSorter {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void prepare() {\n+    allocator = new RootAllocator(1024 * 1024);\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    allocator.close();\n+  }\n+\n+  private void testSortIntVectorRange(int start, int end, int vectorLength) {\n+    try (IntVector vector = new IntVector(\"vector\", allocator);\n+         IntVector buffer = new IntVector(\"buffer\", allocator)) {\n+\n+      vector.allocateNew(vectorLength);\n \n Review comment:\n   This wasn't what I had in mind.  It is still hard to understand what the tests are doing.\r\n   \r\n   Creating a Vector of [5, 4, 3, 2, 1]  then showing that insert for the middle three elements is [5, 2, 3, 4, 1] is much more helpful (if longer arrays are needed to demonstrate then that is fine.  I don't think an array larger then 10 should be needed?  \r\n   \r\n   Google has published some of their internal [tips](https://testing.googleblog.com/2014/07/testing-on-toilet-dont-put-logic-in.html) on testing, I think the one linked describes my thinking on this.  The others are worth reading as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:12:44.070+0000",
                    "updated": "2020-02-03T04:12:44.070+0000",
                    "started": "2020-02-03T04:12:44.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380665",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/382059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r375050224\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.IntVector;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Test cases for {@link InsertionSorter}.\n+ */\n+public class TestInsertionSorter {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void prepare() {\n+    allocator = new RootAllocator(1024 * 1024);\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    allocator.close();\n+  }\n+\n+  private void testSortIntVectorRange(int start, int end, int vectorLength) {\n+    try (IntVector vector = new IntVector(\"vector\", allocator);\n+         IntVector buffer = new IntVector(\"buffer\", allocator)) {\n+\n+      vector.allocateNew(vectorLength);\n \n Review comment:\n   @emkornfield Thanks for the article and good suggestion. \r\n   I have revised the tests accordingly. Please take a look.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T04:07:38.839+0000",
                    "updated": "2020-02-05T04:07:38.839+0000",
                    "started": "2020-02-05T04:07:38.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382059",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/382081",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r375075432\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -43,51 +45,49 @@ public void shutdown() {\n     allocator.close();\n   }\n \n-  private void testSortIntVectorRange(int start, int end, int vectorLength) {\n+  private static final int VECTOR_LENGTH = 10;\n+\n+  private void testSortIntVectorRange(int start, int end, int[] expected) {\n     try (IntVector vector = new IntVector(\"vector\", allocator);\n          IntVector buffer = new IntVector(\"buffer\", allocator)) {\n \n-      vector.allocateNew(vectorLength);\n       buffer.allocateNew(1);\n \n-      for (int i = 0; i < vectorLength; i++) {\n-        // place values in reverse order\n-        vector.set(i, vectorLength - i - 1);\n-      }\n+      ValueVectorDataPopulator.setVector(vector, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0);\n+      assertEquals(VECTOR_LENGTH, vector.getValueCount());\n \n       VectorValueComparator<IntVector> comparator =\n           DefaultVectorComparators.createDefaultComparator(vector);\n       InsertionSorter.insertionSort(vector, start, end, comparator, buffer);\n \n-      // verify results\n-      for (int i = start, expected = vectorLength - end - 1; i < end; i++, expected++) {\n-        assertEquals(expected, vector.get(i));\n+      assertEquals(VECTOR_LENGTH, expected.length);\n+      for (int i = 0; i < VECTOR_LENGTH; i++) {\n+        assertFalse(vector.isNull(i));\n+        assertEquals(expected[i], vector.get(i));\n       }\n     }\n   }\n \n   @Test\n   public void testSortIntVector() {\n-    testSortIntVectorRange(0, 99, 100);\n-    testSortIntVectorRange(15, 30, 100);\n-    testSortIntVectorRange(50, 50, 100);\n-    testSortIntVectorRange(50, 51, 100);\n-    testSortIntVectorRange(0, 30, 100);\n-    testSortIntVectorRange(72, 99, 100);\n+    testSortIntVectorRange(2, 5, new int[] {9, 8, 4, 5, 6, 7, 3, 2, 1, 0});\n+    testSortIntVectorRange(3, 7, new int[] {9, 8, 7, 2, 3, 4, 5, 6, 1, 0});\n+    testSortIntVectorRange(3,4, new int[] {9, 8, 7, 5, 6, 4, 3, 2, 1, 0});\n \n Review comment:\n   nit: please fix spacing here and below.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T06:15:54.376+0000",
                    "updated": "2020-02-05T06:15:54.376+0000",
                    "started": "2020-02-05T06:15:54.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382081",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/382082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r375075497\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -96,19 +96,22 @@ private void testSortIndicesRange(int start, int end, int vectorLength) {\n       InsertionSorter.insertionSort(indices, start, end, comparator);\n \n       // verify results\n-      for (int i = start, expected = vectorLength - end - 1; i < end; i++, expected++) {\n-        assertEquals(expected, indices.get(i));\n+      assertEquals(VECTOR_LENGTH, expectedIndices.length);\n+      for (int i = 0; i < VECTOR_LENGTH; i++) {\n+        assertFalse(indices.isNull(i));\n+        assertEquals(expectedIndices[i], indices.get(i));\n       }\n     }\n   }\n \n   @Test\n   public void testSortIndices() {\n-    testSortIntVectorRange(0, 99, 100);\n-    testSortIntVectorRange(15, 30, 100);\n-    testSortIntVectorRange(50, 50, 100);\n-    testSortIntVectorRange(50, 51, 100);\n-    testSortIntVectorRange(0, 30, 100);\n-    testSortIntVectorRange(72, 99, 100);\n+    testSortIndicesRange(2, 5, new int[] {0, 1, 5, 4, 3, 2, 6, 7, 8, 9});\n+    testSortIndicesRange(3, 7, new int[] {0, 1, 2, 7, 6, 5, 4, 3, 8, 9});\n+    testSortIndicesRange(3,4, new int[] {0, 1, 2, 4, 3, 5, 6, 7, 8, 9});\n \n Review comment:\n   nit: spacing between 1rst to args.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T06:16:08.605+0000",
                    "updated": "2020-02-05T06:16:08.605+0000",
                    "started": "2020-02-05T06:16:08.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382082",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/382174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r375161794\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -43,51 +45,49 @@ public void shutdown() {\n     allocator.close();\n   }\n \n-  private void testSortIntVectorRange(int start, int end, int vectorLength) {\n+  private static final int VECTOR_LENGTH = 10;\n+\n+  private void testSortIntVectorRange(int start, int end, int[] expected) {\n     try (IntVector vector = new IntVector(\"vector\", allocator);\n          IntVector buffer = new IntVector(\"buffer\", allocator)) {\n \n-      vector.allocateNew(vectorLength);\n       buffer.allocateNew(1);\n \n-      for (int i = 0; i < vectorLength; i++) {\n-        // place values in reverse order\n-        vector.set(i, vectorLength - i - 1);\n-      }\n+      ValueVectorDataPopulator.setVector(vector, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0);\n+      assertEquals(VECTOR_LENGTH, vector.getValueCount());\n \n       VectorValueComparator<IntVector> comparator =\n           DefaultVectorComparators.createDefaultComparator(vector);\n       InsertionSorter.insertionSort(vector, start, end, comparator, buffer);\n \n-      // verify results\n-      for (int i = start, expected = vectorLength - end - 1; i < end; i++, expected++) {\n-        assertEquals(expected, vector.get(i));\n+      assertEquals(VECTOR_LENGTH, expected.length);\n+      for (int i = 0; i < VECTOR_LENGTH; i++) {\n+        assertFalse(vector.isNull(i));\n+        assertEquals(expected[i], vector.get(i));\n       }\n     }\n   }\n \n   @Test\n   public void testSortIntVector() {\n-    testSortIntVectorRange(0, 99, 100);\n-    testSortIntVectorRange(15, 30, 100);\n-    testSortIntVectorRange(50, 50, 100);\n-    testSortIntVectorRange(50, 51, 100);\n-    testSortIntVectorRange(0, 30, 100);\n-    testSortIntVectorRange(72, 99, 100);\n+    testSortIntVectorRange(2, 5, new int[] {9, 8, 4, 5, 6, 7, 3, 2, 1, 0});\n+    testSortIntVectorRange(3, 7, new int[] {9, 8, 7, 2, 3, 4, 5, 6, 1, 0});\n+    testSortIntVectorRange(3,4, new int[] {9, 8, 7, 5, 6, 4, 3, 2, 1, 0});\n \n Review comment:\n   Resolved. Thanks for your careful review. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T10:04:33.628+0000",
                    "updated": "2020-02-05T10:04:33.628+0000",
                    "started": "2020-02-05T10:04:33.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382174",
                    "issueId": "13274744"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/worklog/382175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6039: ARROW-7400: [Java] Avoid the worst case for quick sort\nURL: https://github.com/apache/arrow/pull/6039#discussion_r375161992\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/sort/TestInsertionSorter.java\n ##########\n @@ -96,19 +96,22 @@ private void testSortIndicesRange(int start, int end, int vectorLength) {\n       InsertionSorter.insertionSort(indices, start, end, comparator);\n \n       // verify results\n-      for (int i = start, expected = vectorLength - end - 1; i < end; i++, expected++) {\n-        assertEquals(expected, indices.get(i));\n+      assertEquals(VECTOR_LENGTH, expectedIndices.length);\n+      for (int i = 0; i < VECTOR_LENGTH; i++) {\n+        assertFalse(indices.isNull(i));\n+        assertEquals(expectedIndices[i], indices.get(i));\n       }\n     }\n   }\n \n   @Test\n   public void testSortIndices() {\n-    testSortIntVectorRange(0, 99, 100);\n-    testSortIntVectorRange(15, 30, 100);\n-    testSortIntVectorRange(50, 50, 100);\n-    testSortIntVectorRange(50, 51, 100);\n-    testSortIntVectorRange(0, 30, 100);\n-    testSortIntVectorRange(72, 99, 100);\n+    testSortIndicesRange(2, 5, new int[] {0, 1, 5, 4, 3, 2, 6, 7, 8, 9});\n+    testSortIndicesRange(3, 7, new int[] {0, 1, 2, 7, 6, 5, 4, 3, 8, 9});\n+    testSortIndicesRange(3,4, new int[] {0, 1, 2, 4, 3, 5, 6, 7, 8, 9});\n \n Review comment:\n   Resolved. Thank you. Maybe we need to further enhance Java style checking. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T10:05:00.571+0000",
                    "updated": "2020-02-05T10:05:00.571+0000",
                    "started": "2020-02-05T10:05:00.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382175",
                    "issueId": "13274744"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@8ffef01[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@527631dd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e993dbd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@d02116a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76cafdfd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2583073c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@250a2e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1fc47a85[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e405995[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c70386[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@487c698[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@382b84df[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 18 04:34:11 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-18T04:34:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7400/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-12-16T12:08:35.000+0000",
        "updated": "2020-02-18T04:34:11.000+0000",
        "timeoriginalestimate": null,
        "description": "This issue is in response of a discussion in: https://github.com/apache/arrow/pull/5540#discussion_r329487232.\r\n\r\nThe quick sort algorithm can degenerate to an O(n^2) algorithm, if the pivot is selected poorly. This is an important problem, as the worst case can happen, if the input vector is alrady sorted, which is frequently encountered in practice.\r\n\r\nAfter some investigation, we solve the problem with a simple but effective approach: take 3 samples and choose the median (with at most 3 comparisons) as the pivot. This sorts the vector which is already sorted in O(nlogn) time. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Avoids the worst case for quick sort",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274744/comment/17038780",
                    "id": "17038780",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 6039\n[https://github.com/apache/arrow/pull/6039]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-02-18T04:34:11.461+0000",
                    "updated": "2020-02-18T04:34:11.461+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z09pqg:",
        "customfield_12314139": null
    }
}