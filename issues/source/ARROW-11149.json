{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13350711",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711",
    "key": "ARROW-11149",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ovrweb",
            "name": "ovrweb",
            "key": "ovrweb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Patsura Dmitry",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ovrweb",
            "name": "ovrweb",
            "key": "ovrweb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Patsura Dmitry",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ovrweb",
            "name": "ovrweb",
            "key": "ovrweb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Patsura Dmitry",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11149/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr opened a new pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114\n\n\n   Hello!\r\n   \r\n   Thanks\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T17:34:14.194+0000",
                    "updated": "2021-01-06T17:34:14.194+0000",
                    "started": "2021-01-06T17:34:14.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532011",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r552842524\n\n\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -295,6 +298,185 @@ impl fmt::Debug for FixedSizeListArray {\n     }\n }\n \n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident, $list_builder:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = $list_builder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($type_builder:ident, $list_builder:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder = $list_builder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! make_empty_list_fn {\n+    ($name:ident, $list_builder:ident) => {\n+        pub fn $name(item_type: DataType) -> Result<ArrayRef> {\n+            match item_type {\n+                DataType::UInt8 => {\n+                    build_empty_list_array_with_primitive_items!(UInt8Type, $list_builder)\n+                }\n+                DataType::UInt16 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        UInt16Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::UInt32 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        UInt32Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::UInt64 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        UInt64Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Int8 => {\n+                    build_empty_list_array_with_primitive_items!(Int8Type, $list_builder)\n+                }\n+                DataType::Int16 => {\n+                    build_empty_list_array_with_primitive_items!(Int16Type, $list_builder)\n+                }\n+                DataType::Int32 => {\n+                    build_empty_list_array_with_primitive_items!(Int32Type, $list_builder)\n+                }\n+                DataType::Int64 => {\n+                    build_empty_list_array_with_primitive_items!(Int64Type, $list_builder)\n+                }\n+                DataType::Float32 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Float32Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Float64 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Float64Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Boolean => {\n+                    //build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+                    todo!()\n+                }\n+                DataType::Date32(_) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Date32Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Date64(_) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Date64Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time32(TimeUnit::Second) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time32SecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time32(TimeUnit::Millisecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time32MillisecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time64(TimeUnit::Microsecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time64MicrosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time64(TimeUnit::Nanosecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time64NanosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Second) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationSecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Millisecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationMillisecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Microsecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationMicrosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Nanosecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationNanosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Second, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampSecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Millisecond, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampMillisecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Microsecond, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampMicrosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Nanosecond, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampNanosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Utf8 => {\n+                    build_empty_list_array_with_non_primitive_items!(\n+                        StringBuilder,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Binary => {\n+                    build_empty_list_array_with_non_primitive_items!(\n+                        BinaryBuilder,\n+                        $list_builder\n+                    )\n+                }\n+                _ => Err(ArrowError::Unsupported(format!(\n\nReview comment:\n       What `ArrowError` should I throw on implemented? todo!? Or let's declare this one?\r\n   \r\n   Thanks\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T17:36:09.097+0000",
                    "updated": "2021-01-06T17:36:09.097+0000",
                    "started": "2021-01-06T17:36:09.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532012",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-755643977\n\n\n   https://issues.apache.org/jira/browse/ARROW-11149\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T20:28:29.269+0000",
                    "updated": "2021-01-06T20:28:29.269+0000",
                    "started": "2021-01-06T20:28:29.269+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532116",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r552842524\n\n\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -295,6 +298,185 @@ impl fmt::Debug for FixedSizeListArray {\n     }\n }\n \n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident, $list_builder:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = $list_builder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($type_builder:ident, $list_builder:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder = $list_builder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! make_empty_list_fn {\n+    ($name:ident, $list_builder:ident) => {\n+        pub fn $name(item_type: DataType) -> Result<ArrayRef> {\n+            match item_type {\n+                DataType::UInt8 => {\n+                    build_empty_list_array_with_primitive_items!(UInt8Type, $list_builder)\n+                }\n+                DataType::UInt16 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        UInt16Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::UInt32 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        UInt32Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::UInt64 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        UInt64Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Int8 => {\n+                    build_empty_list_array_with_primitive_items!(Int8Type, $list_builder)\n+                }\n+                DataType::Int16 => {\n+                    build_empty_list_array_with_primitive_items!(Int16Type, $list_builder)\n+                }\n+                DataType::Int32 => {\n+                    build_empty_list_array_with_primitive_items!(Int32Type, $list_builder)\n+                }\n+                DataType::Int64 => {\n+                    build_empty_list_array_with_primitive_items!(Int64Type, $list_builder)\n+                }\n+                DataType::Float32 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Float32Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Float64 => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Float64Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Boolean => {\n+                    //build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+                    todo!()\n+                }\n+                DataType::Date32(_) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Date32Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Date64(_) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Date64Type,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time32(TimeUnit::Second) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time32SecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time32(TimeUnit::Millisecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time32MillisecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time64(TimeUnit::Microsecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time64MicrosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Time64(TimeUnit::Nanosecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        Time64NanosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Second) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationSecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Millisecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationMillisecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Microsecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationMicrosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Duration(TimeUnit::Nanosecond) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        DurationNanosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Second, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampSecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Millisecond, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampMillisecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Microsecond, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampMicrosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Timestamp(TimeUnit::Nanosecond, _) => {\n+                    build_empty_list_array_with_primitive_items!(\n+                        TimestampNanosecondType,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Utf8 => {\n+                    build_empty_list_array_with_non_primitive_items!(\n+                        StringBuilder,\n+                        $list_builder\n+                    )\n+                }\n+                DataType::Binary => {\n+                    build_empty_list_array_with_non_primitive_items!(\n+                        BinaryBuilder,\n+                        $list_builder\n+                    )\n+                }\n+                _ => Err(ArrowError::Unsupported(format!(\n\nReview comment:\n       What `ArrowError` should I throw on unimplemented? todo!? Or let's declare this one?\r\n   \r\n   Thanks\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T21:26:34.218+0000",
                    "updated": "2021-01-06T21:26:34.218+0000",
                    "started": "2021-01-06T21:26:34.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532145",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-755931020\n\n\n   I believe that we can make this with generics, now that we have `GenericListBuilder::<Offset>()`. It would make the code simpler to read, and a consistent function signature.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T07:08:39.543+0000",
                    "updated": "2021-01-07T07:08:39.543+0000",
                    "started": "2021-01-07T07:08:39.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532295",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-756192484\n\n\n   @jorgecarleitao You are right, but I was thinking about modifying `make_empty_list_fn` macros to support  `FixedSizeListBuilder`, which is not `GenericListBuilder`.\r\n   \r\n   Something like:\r\n   \r\n   `make_empty_list_fn!(build_empty_fixed_size_list_array, FixedSizeListBuilder);`\r\n   \r\n   But I am having a problem with constructing it, `FixedSizeListBuilder` requires 2 arguments in `new` method instead of one like `GenericListBuilder`.\r\n   \r\n   `pub fn new(values_builder: T, length: i32) -> Self {`\r\n   \r\n   Do you have any solutions how is it possible to do by Marcos? And is it a good idea?\r\n   \r\n   Thanks!\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T15:38:36.404+0000",
                    "updated": "2021-01-07T15:38:36.404+0000",
                    "started": "2021-01-07T15:38:36.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532553",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-756212761\n\n\n   Last time I tried something similar, I had to implement the `FixedSizeList` differently. A fixed sized will always need to receive an extra parameter.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T16:10:15.358+0000",
                    "updated": "2021-01-07T16:10:15.358+0000",
                    "started": "2021-01-07T16:10:15.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532578",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-756213425\n\n\n   Yes, better to implement it differently\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T16:11:21.250+0000",
                    "updated": "2021-01-07T16:11:21.250+0000",
                    "started": "2021-01-07T16:11:21.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532580",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/532639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-756253421\n\n\n   @jorgecarleitao and @nevi-me \ud83d\udc4d \r\n   \r\n   I've moved build_empty_list_array to function `build_empty_list_array<OffsetSize: OffsetSizeTrait>`, and introduce `build_empty_fixed_size_list_array` by different implementation as suggested above.\r\n   \r\n   Thanks\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T17:14:39.162+0000",
                    "updated": "2021-01-07T17:14:39.162+0000",
                    "started": "2021-01-07T17:14:39.161+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532639",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/534591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-758273338\n\n\n   @andygrove Can you take a look? Thanks\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T22:48:09.485+0000",
                    "updated": "2021-01-11T22:48:09.485+0000",
                    "started": "2021-01-11T22:48:09.485+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534591",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/536330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r557868676\n\n\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -295,6 +299,264 @@ impl fmt::Debug for FixedSizeListArray {\n     }\n }\n \n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident, $offset_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, PrimitiveBuilder<$item_type>>::new(\n+                values_builder,\n+            );\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($type_builder:ident, $offset_type:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, $type_builder>::new(values_builder);\n\nReview comment:\n       Note that for an empty list, we know that the offset buffer will be a single entry, `0`, and the values buffer will be an empty buffer (len = `0`). Therefore, this code could be simplified by just passing the buffers directly instead of using builders.\r\n   \n\n##########\nFile path: rust/arrow/src/error.rs\n##########\n@@ -90,6 +91,9 @@ impl From<serde_json::Error> for ArrowError {\n impl Display for ArrowError {\n     fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {\n         match self {\n+            ArrowError::Unsupported(source) => {\n\nReview comment:\n       What do you think of `Unimplemented` instead of `Unsupported`? Just to be consistent with the `unimplemented!` macro that rust already offers.\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -295,6 +299,264 @@ impl fmt::Debug for FixedSizeListArray {\n     }\n }\n \n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident, $offset_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, PrimitiveBuilder<$item_type>>::new(\n+                values_builder,\n+            );\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($type_builder:ident, $offset_type:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, $type_builder>::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+pub fn build_empty_list_array<OffsetSize: OffsetSizeTrait>(\n+    item_type: DataType,\n+) -> Result<ArrayRef> {\n+    match item_type {\n+        DataType::UInt8 => {\n+            build_empty_list_array_with_primitive_items!(UInt8Type, OffsetSize)\n+        }\n+        DataType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(UInt16Type, OffsetSize)\n+        }\n+        DataType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(UInt32Type, OffsetSize)\n+        }\n+        DataType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(UInt64Type, OffsetSize)\n+        }\n+        DataType::Int8 => {\n+            build_empty_list_array_with_primitive_items!(Int8Type, OffsetSize)\n+        }\n+        DataType::Int16 => {\n+            build_empty_list_array_with_primitive_items!(Int16Type, OffsetSize)\n+        }\n+        DataType::Int32 => {\n+            build_empty_list_array_with_primitive_items!(Int32Type, OffsetSize)\n+        }\n+        DataType::Int64 => {\n+            build_empty_list_array_with_primitive_items!(Int64Type, OffsetSize)\n+        }\n+        DataType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(Float32Type, OffsetSize)\n+        }\n+        DataType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(Float64Type, OffsetSize)\n+        }\n+        DataType::Boolean => {\n+            build_empty_list_array_with_non_primitive_items!(BooleanBuilder, OffsetSize)\n+        }\n+        DataType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(Date32Type, OffsetSize)\n+        }\n+        DataType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(Date64Type, OffsetSize)\n+        }\n+        DataType::Time32(TimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(Time32SecondType, OffsetSize)\n+        }\n+        DataType::Time32(TimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                Time32MillisecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Time64(TimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                Time64MicrosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Time64(TimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(Time64NanosecondType, OffsetSize)\n+        }\n+        DataType::Duration(TimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(DurationSecondType, OffsetSize)\n+        }\n+        DataType::Duration(TimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                DurationMillisecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                DurationMicrosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                DurationNanosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Second, _) => {\n+            build_empty_list_array_with_primitive_items!(TimestampSecondType, OffsetSize)\n+        }\n+        DataType::Timestamp(TimeUnit::Millisecond, _) => {\n+            build_empty_list_array_with_primitive_items!(\n+                TimestampMillisecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Microsecond, _) => {\n+            build_empty_list_array_with_primitive_items!(\n+                TimestampMicrosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Nanosecond, _) => {\n+            build_empty_list_array_with_primitive_items!(\n+                TimestampNanosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Utf8 => {\n+            build_empty_list_array_with_non_primitive_items!(StringBuilder, OffsetSize)\n+        }\n+        DataType::Binary => {\n+            build_empty_list_array_with_non_primitive_items!(BinaryBuilder, OffsetSize)\n+        }\n+        _ => Err(ArrowError::Unsupported(format!(\n+            \"GenericListBuilder of type List({:?}) is not supported\",\n+            item_type\n+        ))),\n+    }\n+}\n+\n+macro_rules! build_empty_fixed_size_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = FixedSizeListBuilder::new(values_builder, 0);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_fixed_size_list_array_with_non_primitive_items {\n+    ($type_builder:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder = FixedSizeListBuilder::new(values_builder, 0);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+pub fn build_empty_fixed_size_list_array(item_type: DataType) -> Result<ArrayRef> {\n+    match item_type {\n+        DataType::UInt8 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt8Type)\n+        }\n+        DataType::UInt16 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt16Type)\n+        }\n+        DataType::UInt32 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt32Type)\n+        }\n+        DataType::UInt64 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt64Type)\n+        }\n+        DataType::Int8 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int8Type)\n+        }\n+        DataType::Int16 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int16Type)\n+        }\n+        DataType::Int32 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int32Type)\n+        }\n+        DataType::Int64 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int64Type)\n+        }\n+        DataType::Float32 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Float32Type)\n+        }\n+        DataType::Float64 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Float64Type)\n+        }\n+        DataType::Boolean => {\n+            build_empty_fixed_size_list_array_with_non_primitive_items!(BooleanBuilder)\n+        }\n+        DataType::Date32(_) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Date32Type)\n+        }\n+        DataType::Date64(_) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Date64Type)\n+        }\n+        DataType::Time32(TimeUnit::Second) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time32SecondType)\n+        }\n+        DataType::Time32(TimeUnit::Millisecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time32MillisecondType)\n+        }\n+        DataType::Time64(TimeUnit::Microsecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time64MicrosecondType)\n+        }\n+        DataType::Time64(TimeUnit::Nanosecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time64NanosecondType)\n+        }\n+        DataType::Duration(TimeUnit::Second) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(DurationSecondType)\n+        }\n+        DataType::Duration(TimeUnit::Millisecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                DurationMillisecondType\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Microsecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                DurationMicrosecondType\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Nanosecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                DurationNanosecondType\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Second, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(TimestampSecondType)\n+        }\n+        DataType::Timestamp(TimeUnit::Millisecond, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                TimestampMillisecondType\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Microsecond, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                TimestampMicrosecondType\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Nanosecond, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                TimestampNanosecondType\n+            )\n+        }\n+        DataType::Utf8 => {\n+            build_empty_fixed_size_list_array_with_non_primitive_items!(StringBuilder)\n+        }\n+        DataType::Binary => {\n+            build_empty_fixed_size_list_array_with_non_primitive_items!(BinaryBuilder)\n+        }\n+        _ => Err(ArrowError::Unsupported(format!(\n+            \"FixedSizeListBuilder of type FixedSizeList({:?}) is not supported\",\n+            item_type\n+        ))),\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use crate::{\n\nReview comment:\n       Could you add a test just to verify?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-15T05:26:02.045+0000",
                    "updated": "2021-01-15T05:26:02.045+0000",
                    "started": "2021-01-15T05:26:02.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536330",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/536811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r558894537\n\n\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -295,6 +299,264 @@ impl fmt::Debug for FixedSizeListArray {\n     }\n }\n \n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident, $offset_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, PrimitiveBuilder<$item_type>>::new(\n+                values_builder,\n+            );\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($type_builder:ident, $offset_type:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, $type_builder>::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+pub fn build_empty_list_array<OffsetSize: OffsetSizeTrait>(\n+    item_type: DataType,\n+) -> Result<ArrayRef> {\n+    match item_type {\n+        DataType::UInt8 => {\n+            build_empty_list_array_with_primitive_items!(UInt8Type, OffsetSize)\n+        }\n+        DataType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(UInt16Type, OffsetSize)\n+        }\n+        DataType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(UInt32Type, OffsetSize)\n+        }\n+        DataType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(UInt64Type, OffsetSize)\n+        }\n+        DataType::Int8 => {\n+            build_empty_list_array_with_primitive_items!(Int8Type, OffsetSize)\n+        }\n+        DataType::Int16 => {\n+            build_empty_list_array_with_primitive_items!(Int16Type, OffsetSize)\n+        }\n+        DataType::Int32 => {\n+            build_empty_list_array_with_primitive_items!(Int32Type, OffsetSize)\n+        }\n+        DataType::Int64 => {\n+            build_empty_list_array_with_primitive_items!(Int64Type, OffsetSize)\n+        }\n+        DataType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(Float32Type, OffsetSize)\n+        }\n+        DataType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(Float64Type, OffsetSize)\n+        }\n+        DataType::Boolean => {\n+            build_empty_list_array_with_non_primitive_items!(BooleanBuilder, OffsetSize)\n+        }\n+        DataType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(Date32Type, OffsetSize)\n+        }\n+        DataType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(Date64Type, OffsetSize)\n+        }\n+        DataType::Time32(TimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(Time32SecondType, OffsetSize)\n+        }\n+        DataType::Time32(TimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                Time32MillisecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Time64(TimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                Time64MicrosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Time64(TimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(Time64NanosecondType, OffsetSize)\n+        }\n+        DataType::Duration(TimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(DurationSecondType, OffsetSize)\n+        }\n+        DataType::Duration(TimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                DurationMillisecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                DurationMicrosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(\n+                DurationNanosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Second, _) => {\n+            build_empty_list_array_with_primitive_items!(TimestampSecondType, OffsetSize)\n+        }\n+        DataType::Timestamp(TimeUnit::Millisecond, _) => {\n+            build_empty_list_array_with_primitive_items!(\n+                TimestampMillisecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Microsecond, _) => {\n+            build_empty_list_array_with_primitive_items!(\n+                TimestampMicrosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Nanosecond, _) => {\n+            build_empty_list_array_with_primitive_items!(\n+                TimestampNanosecondType,\n+                OffsetSize\n+            )\n+        }\n+        DataType::Utf8 => {\n+            build_empty_list_array_with_non_primitive_items!(StringBuilder, OffsetSize)\n+        }\n+        DataType::Binary => {\n+            build_empty_list_array_with_non_primitive_items!(BinaryBuilder, OffsetSize)\n+        }\n+        _ => Err(ArrowError::Unsupported(format!(\n+            \"GenericListBuilder of type List({:?}) is not supported\",\n+            item_type\n+        ))),\n+    }\n+}\n+\n+macro_rules! build_empty_fixed_size_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = FixedSizeListBuilder::new(values_builder, 0);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_fixed_size_list_array_with_non_primitive_items {\n+    ($type_builder:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder = FixedSizeListBuilder::new(values_builder, 0);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+pub fn build_empty_fixed_size_list_array(item_type: DataType) -> Result<ArrayRef> {\n+    match item_type {\n+        DataType::UInt8 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt8Type)\n+        }\n+        DataType::UInt16 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt16Type)\n+        }\n+        DataType::UInt32 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt32Type)\n+        }\n+        DataType::UInt64 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(UInt64Type)\n+        }\n+        DataType::Int8 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int8Type)\n+        }\n+        DataType::Int16 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int16Type)\n+        }\n+        DataType::Int32 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int32Type)\n+        }\n+        DataType::Int64 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Int64Type)\n+        }\n+        DataType::Float32 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Float32Type)\n+        }\n+        DataType::Float64 => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Float64Type)\n+        }\n+        DataType::Boolean => {\n+            build_empty_fixed_size_list_array_with_non_primitive_items!(BooleanBuilder)\n+        }\n+        DataType::Date32(_) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Date32Type)\n+        }\n+        DataType::Date64(_) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Date64Type)\n+        }\n+        DataType::Time32(TimeUnit::Second) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time32SecondType)\n+        }\n+        DataType::Time32(TimeUnit::Millisecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time32MillisecondType)\n+        }\n+        DataType::Time64(TimeUnit::Microsecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time64MicrosecondType)\n+        }\n+        DataType::Time64(TimeUnit::Nanosecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(Time64NanosecondType)\n+        }\n+        DataType::Duration(TimeUnit::Second) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(DurationSecondType)\n+        }\n+        DataType::Duration(TimeUnit::Millisecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                DurationMillisecondType\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Microsecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                DurationMicrosecondType\n+            )\n+        }\n+        DataType::Duration(TimeUnit::Nanosecond) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                DurationNanosecondType\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Second, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(TimestampSecondType)\n+        }\n+        DataType::Timestamp(TimeUnit::Millisecond, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                TimestampMillisecondType\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Microsecond, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                TimestampMicrosecondType\n+            )\n+        }\n+        DataType::Timestamp(TimeUnit::Nanosecond, _) => {\n+            build_empty_fixed_size_list_array_with_primitive_items!(\n+                TimestampNanosecondType\n+            )\n+        }\n+        DataType::Utf8 => {\n+            build_empty_fixed_size_list_array_with_non_primitive_items!(StringBuilder)\n+        }\n+        DataType::Binary => {\n+            build_empty_fixed_size_list_array_with_non_primitive_items!(BinaryBuilder)\n+        }\n+        _ => Err(ArrowError::Unsupported(format!(\n+            \"FixedSizeListBuilder of type FixedSizeList({:?}) is not supported\",\n+            item_type\n+        ))),\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use crate::{\n\nReview comment:\n       Thanks, added.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T14:01:45.541+0000",
                    "updated": "2021-01-16T14:01:45.541+0000",
                    "started": "2021-01-16T14:01:45.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536811",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/536813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r558895099\n\n\n\n##########\nFile path: rust/arrow/src/error.rs\n##########\n@@ -90,6 +91,9 @@ impl From<serde_json::Error> for ArrowError {\n impl Display for ArrowError {\n     fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {\n         match self {\n+            ArrowError::Unsupported(source) => {\n\nReview comment:\n       I found a better name from reading parquet sources, It's called `NYI` (Not yet implemented), I think it's better to use similar names accross packages.\r\n   \r\n   Thanks\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T14:03:23.963+0000",
                    "updated": "2021-01-16T14:03:23.963+0000",
                    "started": "2021-01-16T14:03:23.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536813",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/536814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r558895099\n\n\n\n##########\nFile path: rust/arrow/src/error.rs\n##########\n@@ -90,6 +91,9 @@ impl From<serde_json::Error> for ArrowError {\n impl Display for ArrowError {\n     fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {\n         match self {\n+            ArrowError::Unsupported(source) => {\n\nReview comment:\n       I found a better name from reading parquet sources, It's called `NYI` (Not yet implemented), I think it's better to use similar names accross packages.\r\n   \r\n   Renamed.\r\n   \r\n   Thanks\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T14:03:36.890+0000",
                    "updated": "2021-01-16T14:03:36.890+0000",
                    "started": "2021-01-16T14:03:36.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536814",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/536817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-761570918\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=h1) Report\n   > Merging [#9114](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=desc) (849d8d3) into [master](https://codecov.io/gh/apache/arrow/commit/1393188e1aa1b3d59993ce7d4ade7f7ac8570959?el=desc) (1393188) will **decrease** coverage by `0.01%`.\n   > The diff coverage is `39.79%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9114/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9114      +/-   ##\n   ==========================================\n   - Coverage   81.61%   81.59%   -0.02%     \n   ==========================================\n     Files         215      215              \n     Lines       51867    51928      +61     \n   ==========================================\n   + Hits        42329    42370      +41     \n   - Misses       9538     9558      +20     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/physical\\_plan/common.rs](https://codecov.io/gh/apache/arrow/pull/9114/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2NvbW1vbi5ycw==) | `74.28% <0.00%> (-4.51%)` | :arrow_down: |\n   | [rust/parquet/src/arrow/array\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9114/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJheV9yZWFkZXIucnM=) | `73.65% <0.00%> (+2.25%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9114/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `83.33% <43.67%> (-9.78%)` | :arrow_down: |\n   | [rust/arrow/src/error.rs](https://codecov.io/gh/apache/arrow/pull/9114/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZXJyb3IucnM=) | `9.52% <50.00%> (-0.48%)` | :arrow_down: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9114/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `94.86% <0.00%> (-0.20%)` | :arrow_down: |\n   | [rust/arrow/src/array/builder.rs](https://codecov.io/gh/apache/arrow/pull/9114/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYnVpbGRlci5ycw==) | `86.30% <0.00%> (+0.40%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=footer). Last update [eaa7b7a...c898107](https://codecov.io/gh/apache/arrow/pull/9114?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T14:18:30.784+0000",
                    "updated": "2021-01-16T14:18:30.784+0000",
                    "started": "2021-01-16T14:18:30.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536817",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/537934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r560369235\n\n\n\n##########\nFile path: rust/arrow/src/error.rs\n##########\n@@ -24,6 +24,9 @@ use std::error::Error;\n /// Many different operations in the `arrow` crate return this error type.\n #[derive(Debug)]\n pub enum ArrowError {\n+    /// \"Not yet implemented\" Arrow error.\n+    /// Returned when functionality is not yet available.\n+    NYI(String),\n\nReview comment:\n       I think that the error name should be explicit, like all others. I can't understand what `NYI` means without having to go to the docs, and in an error message, the person often has no access to the docs (at least not in a 1 click thing). \r\n   \r\n   `NotYetImplemented`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-19T17:49:55.215+0000",
                    "updated": "2021-01-19T17:49:55.215+0000",
                    "started": "2021-01-19T17:49:55.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "537934",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/538063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r560497147\n\n\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -295,6 +299,264 @@ impl fmt::Debug for FixedSizeListArray {\n     }\n }\n \n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident, $offset_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, PrimitiveBuilder<$item_type>>::new(\n+                values_builder,\n+            );\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($type_builder:ident, $offset_type:ident) => {{\n+        let values_builder = $type_builder::new(0);\n+        let mut builder =\n+            GenericListBuilder::<$offset_type, $type_builder>::new(values_builder);\n\nReview comment:\n       Arrow API is a Complex, I still dont know how to do it pretty simple as you suggested with Buffer. I think it's not a big performance impact to use builder in this place.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-19T21:09:21.337+0000",
                    "updated": "2021-01-19T21:09:21.337+0000",
                    "started": "2021-01-19T21:09:21.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538063",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/538403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#discussion_r560935453\n\n\n\n##########\nFile path: rust/arrow/src/error.rs\n##########\n@@ -24,6 +24,9 @@ use std::error::Error;\n /// Many different operations in the `arrow` crate return this error type.\n #[derive(Debug)]\n pub enum ArrowError {\n+    /// \"Not yet implemented\" Arrow error.\n+    /// Returned when functionality is not yet available.\n+    NYI(String),\n\nReview comment:\n       I agree that `NotYetImplemented` is a better name\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-20T12:51:59.011+0000",
                    "updated": "2021-01-20T12:51:59.011+0000",
                    "started": "2021-01-20T12:51:59.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538403",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/538478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ovr commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-763672988\n\n\n   @alamb Rebased + renamed NYI -> `NotYetImplemented` in Arrow. Thanks\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-20T14:55:34.577+0000",
                    "updated": "2021-01-20T14:55:34.577+0000",
                    "started": "2021-01-20T14:55:34.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538478",
                    "issueId": "13350711"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/worklog/538592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9114:\nURL: https://github.com/apache/arrow/pull/9114#issuecomment-763837298\n\n\n   Awesome -- thanks @ovr !\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-20T18:15:56.075+0000",
                    "updated": "2021-01-20T18:15:56.075+0000",
                    "started": "2021-01-20T18:15:56.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538592",
                    "issueId": "13350711"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1542f733[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d7269e8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70822363[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3ef129b2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37af287e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@18b027d2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79c8969c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4e439cae[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61a1c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@19f688a9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24b7917d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7643cfa9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 20 18:18:54 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-20T18:18:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11149/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-01-06T17:28:08.000+0000",
        "updated": "2021-01-20T18:18:59.000+0000",
        "timeoriginalestimate": null,
        "description": "Hello!\r\n\r\nThanks",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] create_batch_empty - support List, LargeList",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350711/comment/17268756",
                    "id": "17268756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9114\n[https://github.com/apache/arrow/pull/9114]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-20T18:18:54.965+0000",
                    "updated": "2021-01-20T18:18:54.965+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mbmg:",
        "customfield_12314139": null
    }
}