{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13374474",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474",
    "key": "ARROW-12512",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "csv",
            "dataset",
            "datasets",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12512/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/591672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #10216:\nURL: https://github.com/apache/arrow/pull/10216\n\n\n   This refactors the CSV writer to expose a writer class, then hooks it up to Datasets.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-30T17:51:27.525+0000",
                    "updated": "2021-04-30T17:51:27.525+0000",
                    "started": "2021-04-30T17:51:27.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591672",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/591673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10216:\nURL: https://github.com/apache/arrow/pull/10216#issuecomment-830260397\n\n\n   https://issues.apache.org/jira/browse/ARROW-12512\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-30T17:51:51.240+0000",
                    "updated": "2021-04-30T17:51:51.240+0000",
                    "started": "2021-04-30T17:51:51.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591673",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10216:\nURL: https://github.com/apache/arrow/pull/10216#issuecomment-831339235\n\n\n   Closing for now - will submit the CSV writer separately first.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T15:26:49.219+0000",
                    "updated": "2021-05-03T15:26:49.219+0000",
                    "started": "2021-05-03T15:26:49.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592218",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #10216:\nURL: https://github.com/apache/arrow/pull/10216\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T15:26:52.428+0000",
                    "updated": "2021-05-03T15:26:52.428+0000",
                    "started": "2021-05-03T15:26:52.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592219",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592332",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230\n\n\n   This refactors the CSV write support to expose an explicit CSV writer class, and adds Python bindings and Datasets support.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T19:01:19.750+0000",
                    "updated": "2021-05-03T19:01:19.750+0000",
                    "started": "2021-05-03T19:01:19.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592332",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592336",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#issuecomment-831469241\n\n\n   https://issues.apache.org/jira/browse/ARROW-12512\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T19:06:32.286+0000",
                    "updated": "2021-05-03T19:06:32.286+0000",
                    "started": "2021-05-03T19:06:32.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592336",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#issuecomment-831936440\n\n\n   @emkornfield would you be free to take a look (at least the CSV side, if not the Datasets side)? No rush of course.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T13:21:19.020+0000",
                    "updated": "2021-05-04T13:21:19.020+0000",
                    "started": "2021-05-04T13:21:19.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592734",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#issuecomment-832153963\n\n\n   Does this also enable writing CSV with the dataset API in Python? (`write_dataset(..., format=\"csv\")`\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T18:31:07.955+0000",
                    "updated": "2021-05-04T18:31:07.955+0000",
                    "started": "2021-05-04T18:31:07.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592925",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/592928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#issuecomment-832156102\n\n\n   @jorisvandenbossche I missed that: CsvFileFormat.make_write_options in Python needs to be updated as well.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T18:34:33.823+0000",
                    "updated": "2021-05-04T18:34:33.823+0000",
                    "started": "2021-05-04T18:34:33.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592928",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630379347\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+      std::shared_ptr<Schema> schema, MemoryPool* pool, const WriteOptions& options) {\n\nReview comment:\n       Maybe take in `IOContext` instead of `MemoryPool*`?  If you later decide to add support for cancellation it'll save you from having to change the API.\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+      std::shared_ptr<Schema> schema, MemoryPool* pool, const WriteOptions& options) {\n+    if (!pool) pool = default_memory_pool();\n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n       char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n       ASSIGN_OR_RAISE(populators[col],\n                       MakePopulator(*schema->field(col), end_char, pool));\n     }\n-    return std::unique_ptr<CSVConverter>(\n-        new CSVConverter(std::move(schema), std::move(populators), pool));\n+    auto writer = std::shared_ptr<CSVConverter>(\n+        new CSVConverter(sink, std::move(owned_sink), std::move(schema),\n+                         std::move(populators), pool, options));\n+    if (options.include_header) {\n+      RETURN_NOT_OK(writer->PrepareForContentsWrite());\n+      RETURN_NOT_OK(writer->WriteHeader());\n+    }\n+    return writer;\n   }\n \n-  Status WriteCSV(const RecordBatch& batch, const WriteOptions& options,\n-                  io::OutputStream* out) {\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n-    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options.batch_size);\n+  Status WriteRecordBatch(const RecordBatch& batch) override {\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n+    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options_.batch_size);\n     for (auto maybe_slice : iterator) {\n       ASSIGN_OR_RAISE(std::shared_ptr<RecordBatch> slice, maybe_slice);\n       RETURN_NOT_OK(TranslateMinimalBatch(*slice));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n+      stats_.num_record_batches++;\n     }\n     return Status::OK();\n   }\n \n-  Status WriteCSV(const Table& table, const WriteOptions& options,\n-                  io::OutputStream* out) {\n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n     TableBatchReader reader(table);\n-    reader.set_chunksize(options.batch_size);\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n+    reader.set_chunksize(max_chunksize > 0 ? max_chunksize : options_.batch_size);\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n     std::shared_ptr<RecordBatch> batch;\n     RETURN_NOT_OK(reader.ReadNext(&batch));\n     while (batch != nullptr) {\n       RETURN_NOT_OK(TranslateMinimalBatch(*batch));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n       RETURN_NOT_OK(reader.ReadNext(&batch));\n+      stats_.num_record_batches++;\n     }\n \n     return Status::OK();\n   }\n \n+  Status Close() override { return Status::OK(); }\n\nReview comment:\n       No need to close `owned_sink_`?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+      std::shared_ptr<Schema> schema, MemoryPool* pool, const WriteOptions& options) {\n+    if (!pool) pool = default_memory_pool();\n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n       char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n       ASSIGN_OR_RAISE(populators[col],\n                       MakePopulator(*schema->field(col), end_char, pool));\n     }\n-    return std::unique_ptr<CSVConverter>(\n-        new CSVConverter(std::move(schema), std::move(populators), pool));\n+    auto writer = std::shared_ptr<CSVConverter>(\n+        new CSVConverter(sink, std::move(owned_sink), std::move(schema),\n+                         std::move(populators), pool, options));\n+    if (options.include_header) {\n+      RETURN_NOT_OK(writer->PrepareForContentsWrite());\n+      RETURN_NOT_OK(writer->WriteHeader());\n+    }\n+    return writer;\n   }\n \n-  Status WriteCSV(const RecordBatch& batch, const WriteOptions& options,\n-                  io::OutputStream* out) {\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n-    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options.batch_size);\n+  Status WriteRecordBatch(const RecordBatch& batch) override {\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n+    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options_.batch_size);\n     for (auto maybe_slice : iterator) {\n       ASSIGN_OR_RAISE(std::shared_ptr<RecordBatch> slice, maybe_slice);\n       RETURN_NOT_OK(TranslateMinimalBatch(*slice));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n+      stats_.num_record_batches++;\n     }\n     return Status::OK();\n   }\n \n-  Status WriteCSV(const Table& table, const WriteOptions& options,\n-                  io::OutputStream* out) {\n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n     TableBatchReader reader(table);\n-    reader.set_chunksize(options.batch_size);\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n+    reader.set_chunksize(max_chunksize > 0 ? max_chunksize : options_.batch_size);\n\nReview comment:\n       Seems a little odd to have two options to control `batch_size`.  I suppose it's a \"default\" batch size and a \"specific for this table\" batch size?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -355,7 +370,9 @@ class CSVConverter {\n     return header_length + (kQuoteDelimiterCount * schema_->num_fields());\n   }\n \n-  Status WriteHeader(io::OutputStream* out) {\n+  Status WriteHeader() {\n+    if (header_written_) return Status::OK();\n\nReview comment:\n       Would it be clearer to return `Invalid` here to inform the caller they are doing something odd?  Or is it sometimes hard for the caller to know when the header will be written?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n\nReview comment:\n       Why isn't it named `CSVWriter`?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+      std::shared_ptr<Schema> schema, MemoryPool* pool, const WriteOptions& options) {\n+    if (!pool) pool = default_memory_pool();\n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n       char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n       ASSIGN_OR_RAISE(populators[col],\n                       MakePopulator(*schema->field(col), end_char, pool));\n     }\n-    return std::unique_ptr<CSVConverter>(\n-        new CSVConverter(std::move(schema), std::move(populators), pool));\n+    auto writer = std::shared_ptr<CSVConverter>(\n+        new CSVConverter(sink, std::move(owned_sink), std::move(schema),\n+                         std::move(populators), pool, options));\n+    if (options.include_header) {\n+      RETURN_NOT_OK(writer->PrepareForContentsWrite());\n+      RETURN_NOT_OK(writer->WriteHeader());\n+    }\n+    return writer;\n   }\n \n-  Status WriteCSV(const RecordBatch& batch, const WriteOptions& options,\n-                  io::OutputStream* out) {\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n-    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options.batch_size);\n+  Status WriteRecordBatch(const RecordBatch& batch) override {\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n+    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options_.batch_size);\n     for (auto maybe_slice : iterator) {\n       ASSIGN_OR_RAISE(std::shared_ptr<RecordBatch> slice, maybe_slice);\n       RETURN_NOT_OK(TranslateMinimalBatch(*slice));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n+      stats_.num_record_batches++;\n     }\n     return Status::OK();\n   }\n \n-  Status WriteCSV(const Table& table, const WriteOptions& options,\n-                  io::OutputStream* out) {\n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n     TableBatchReader reader(table);\n-    reader.set_chunksize(options.batch_size);\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n+    reader.set_chunksize(max_chunksize > 0 ? max_chunksize : options_.batch_size);\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n     std::shared_ptr<RecordBatch> batch;\n     RETURN_NOT_OK(reader.ReadNext(&batch));\n     while (batch != nullptr) {\n       RETURN_NOT_OK(TranslateMinimalBatch(*batch));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n       RETURN_NOT_OK(reader.ReadNext(&batch));\n+      stats_.num_record_batches++;\n     }\n \n     return Status::OK();\n   }\n \n+  Status Close() override { return Status::OK(); }\n+\n+  ipc::WriteStats stats() const override { return stats_; }\n+\n  private:\n-  CSVConverter(std::shared_ptr<Schema> schema,\n-               std::vector<std::unique_ptr<ColumnPopulator>> populators, MemoryPool* pool)\n-      : column_populators_(std::move(populators)),\n+  CSVConverter(io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+               std::shared_ptr<Schema> schema,\n+               std::vector<std::unique_ptr<ColumnPopulator>> populators, MemoryPool* pool,\n+               const WriteOptions& options)\n+      : sink_(sink),\n+        owned_sink_(std::move(owned_sink)),\n+        column_populators_(std::move(populators)),\n         offsets_(0, 0, ::arrow::stl::allocator<char*>(pool)),\n         schema_(std::move(schema)),\n-        pool_(pool) {}\n+        pool_(pool),\n+        options_(options) {}\n \n-  Status PrepareForContentsWrite(const WriteOptions& options, io::OutputStream* out) {\n+  Status PrepareForContentsWrite() {\n\nReview comment:\n       Does `data_buffer_` ever revert back to `nullptr`?  Why isn't it just initialized once at construction?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -403,34 +420,41 @@ class CSVConverter {\n   }\n \n   static constexpr int64_t kColumnSizeGuess = 8;\n+  io::OutputStream* sink_;\n+  std::shared_ptr<io::OutputStream> owned_sink_;\n   std::vector<std::unique_ptr<ColumnPopulator>> column_populators_;\n   std::vector<int32_t, arrow::stl::allocator<int32_t>> offsets_;\n   std::shared_ptr<ResizableBuffer> data_buffer_;\n   const std::shared_ptr<Schema> schema_;\n   MemoryPool* pool_;\n+  WriteOptions options_;\n+  ipc::WriteStats stats_;\n+  bool header_written_ = false;\n };\n \n }  // namespace\n \n Status WriteCSV(const Table& table, const WriteOptions& options, MemoryPool* pool,\n                 arrow::io::OutputStream* output) {\n-  if (pool == nullptr) {\n-    pool = default_memory_pool();\n-  }\n-  ASSIGN_OR_RAISE(std::unique_ptr<CSVConverter> converter,\n-                  CSVConverter::Make(table.schema(), pool));\n-  return converter->WriteCSV(table, options, output);\n+  ASSIGN_OR_RAISE(auto converter,\n+                  CSVConverter::Make(output, nullptr, table.schema(), pool, options));\n+  RETURN_NOT_OK(converter->WriteTable(table, /*max_chunksize=*/-1));\n\nReview comment:\n       Given that `options` has a `batch_size` it feels odd here that we have to pass in `-1`.\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n\nReview comment:\n       It seems like other places we have the \"maybe owned stream\" pattern (e.g. arrow::ipc::InputStreamMessageReader) we use overloads to make it a bit clearer that it is one or the other.  It might be good to do that here.\n\n##########\nFile path: cpp/src/arrow/csv/writer_test.cc\n##########\n@@ -91,6 +92,26 @@ class TestWriteCSV : public ::testing::TestWithParam<WriterTestParams> {\n     ASSIGN_OR_RAISE(std::shared_ptr<Buffer> buffer, out->Finish());\n     return std::string(reinterpret_cast<const char*>(buffer->data()), buffer->size());\n   }\n+\n+  Result<std::string> ToCsvStringWriter(const Table& data, const WriteOptions& options) {\n\nReview comment:\n       This method name is confusing to me.  Maybe just `ToCsvStringViaWriter`?  I guess it makes a bit more sense when I look at the test.\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -256,5 +267,46 @@ Result<RecordBatchGenerator> CsvFileFormat::ScanBatchesAsync(\n   return GeneratorFromReader(std::move(reader_fut));\n }\n \n+//\n+// CsvFileWriter, CsvFileWriteOptions\n+//\n+\n+std::shared_ptr<FileWriteOptions> CsvFileFormat::DefaultWriteOptions() {\n+  std::shared_ptr<CsvFileWriteOptions> csv_options(\n+      new CsvFileWriteOptions(shared_from_this()));\n+  csv_options->options =\n+      std::make_shared<csv::WriteOptions>(csv::WriteOptions::Defaults());\n+  csv_options->pool = default_memory_pool();\n\nReview comment:\n       I'm a little surprised that `pool` is not a property of `FileWriteOptions`.\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -256,5 +267,46 @@ Result<RecordBatchGenerator> CsvFileFormat::ScanBatchesAsync(\n   return GeneratorFromReader(std::move(reader_fut));\n }\n \n+//\n+// CsvFileWriter, CsvFileWriteOptions\n+//\n+\n+std::shared_ptr<FileWriteOptions> CsvFileFormat::DefaultWriteOptions() {\n+  std::shared_ptr<CsvFileWriteOptions> csv_options(\n\nReview comment:\n       I suppose you are not using `make_shared` here because you are `using` the constructor of the base type?\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -3107,6 +3107,33 @@ def test_write_dataset_parquet(tempdir):\n         assert meta.format_version == version\n \n \n+def test_write_dataset_csv(tempdir):\n+    table = pa.table([\n+        pa.array(range(20)), pa.array(np.random.randn(20)),\n+        pa.array(np.repeat(['a', 'b'], 10))\n+    ], names=[\"f1\", \"f2\", \"part\"])\n\nReview comment:\n       The column here is named `part` which makes me think it is going to be used for partitioning but that isn't actually done.  I'm not sure this is a problem as much as an observation.\n\n##########\nFile path: python/pyarrow/_csv.pxd\n##########\n@@ -44,3 +44,11 @@ cdef class ReadOptions(_Weakrefable):\n \n     @staticmethod\n     cdef ReadOptions wrap(CCSVReadOptions options)\n+\n+\n+cdef class WriteOptions(_Weakrefable):\n+    cdef:\n+        unique_ptr[CCSVWriteOptions] options\n\nReview comment:\n       Why does this need to be a `unique_ptr`?  `CCSVWriteOptions` is pretty trivial.\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -83,6 +82,37 @@ struct ARROW_DS_EXPORT CsvFragmentScanOptions : public FragmentScanOptions {\n   csv::ReadOptions read_options = csv::ReadOptions::Defaults();\n };\n \n+class ARROW_DS_EXPORT CsvFileWriteOptions : public FileWriteOptions {\n+ public:\n+  /// Options passed to csv::MakeCSVWriter. use_threads is ignored\n+  std::shared_ptr<csv::WriteOptions> options;\n\nReview comment:\n       `options` is a little ambiguous.  Perhaps `format_options` or `csv_options` or `writer_options`?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1747,8 +1749,15 @@ cdef class CsvFileFormat(FileFormat):\n         FileFormat.init(self, sp)\n         self.csv_format = <CCsvFileFormat*> sp.get()\n \n-    def make_write_options(self):\n-        raise NotImplemented(\"writing CSV datasets\")\n+    def make_write_options(self, WriteOptions options=None,\n\nReview comment:\n       This is kind of confusing having a method named `make_write_options` that takes in an instance of `WriteOptions`.  Perhaps in C++ it wouldn't be so bad but for Python I think we might want something more understandable.\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n\nReview comment:\n       Although I suppose it is hidden behind `MakeCSVWriter`.  Which I suppose begs the question \"Why have the non-owned option at all?\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:09:09.414+0000",
                    "updated": "2021-05-11T18:09:09.414+0000",
                    "started": "2021-05-11T18:09:09.414+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594662",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630421629\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+      std::shared_ptr<Schema> schema, MemoryPool* pool, const WriteOptions& options) {\n+    if (!pool) pool = default_memory_pool();\n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n       char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n       ASSIGN_OR_RAISE(populators[col],\n                       MakePopulator(*schema->field(col), end_char, pool));\n     }\n-    return std::unique_ptr<CSVConverter>(\n-        new CSVConverter(std::move(schema), std::move(populators), pool));\n+    auto writer = std::shared_ptr<CSVConverter>(\n+        new CSVConverter(sink, std::move(owned_sink), std::move(schema),\n+                         std::move(populators), pool, options));\n+    if (options.include_header) {\n+      RETURN_NOT_OK(writer->PrepareForContentsWrite());\n+      RETURN_NOT_OK(writer->WriteHeader());\n+    }\n+    return writer;\n   }\n \n-  Status WriteCSV(const RecordBatch& batch, const WriteOptions& options,\n-                  io::OutputStream* out) {\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n-    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options.batch_size);\n+  Status WriteRecordBatch(const RecordBatch& batch) override {\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n+    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options_.batch_size);\n     for (auto maybe_slice : iterator) {\n       ASSIGN_OR_RAISE(std::shared_ptr<RecordBatch> slice, maybe_slice);\n       RETURN_NOT_OK(TranslateMinimalBatch(*slice));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n+      stats_.num_record_batches++;\n     }\n     return Status::OK();\n   }\n \n-  Status WriteCSV(const Table& table, const WriteOptions& options,\n-                  io::OutputStream* out) {\n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n     TableBatchReader reader(table);\n-    reader.set_chunksize(options.batch_size);\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n+    reader.set_chunksize(max_chunksize > 0 ? max_chunksize : options_.batch_size);\n\nReview comment:\n       There's a bit of an impedance mismatch because I elected to reuse the ipc::RecordBatchWriter interface, which has parameters like that in the API. I could at least introduce an overload that doesn't require specifying it for convenience.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:23:32.185+0000",
                    "updated": "2021-05-11T18:23:32.185+0000",
                    "started": "2021-05-11T18:23:32.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594665",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630422293\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n\nReview comment:\n       The WriteCSV helpers in writer.h actually use the non-owned version - for completeness I should introduce an overload of MakeCSVWriter that exposes that as well.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:24:25.592+0000",
                    "updated": "2021-05-11T18:24:25.592+0000",
                    "started": "2021-05-11T18:24:25.591+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594666",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630423088\n\n\n\n##########\nFile path: python/pyarrow/_csv.pxd\n##########\n@@ -44,3 +44,11 @@ cdef class ReadOptions(_Weakrefable):\n \n     @staticmethod\n     cdef ReadOptions wrap(CCSVReadOptions options)\n+\n+\n+cdef class WriteOptions(_Weakrefable):\n+    cdef:\n+        unique_ptr[CCSVWriteOptions] options\n\nReview comment:\n       Mostly for consistency with the other options, and in case we add things to WriteOptions that would make it a non-standard layout type, in which case Cython will generate a lot of compiler warnings as it relies on sizeof.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:25:39.319+0000",
                    "updated": "2021-05-11T18:25:39.319+0000",
                    "started": "2021-05-11T18:25:39.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594667",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630423781\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1747,8 +1749,15 @@ cdef class CsvFileFormat(FileFormat):\n         FileFormat.init(self, sp)\n         self.csv_format = <CCsvFileFormat*> sp.get()\n \n-    def make_write_options(self):\n-        raise NotImplemented(\"writing CSV datasets\")\n+    def make_write_options(self, WriteOptions options=None,\n\nReview comment:\n       I could have it take **kwargs which get forwarded to csv.WriteOptions; now that I look, that's what ParquetFileFormat does.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:26:46.539+0000",
                    "updated": "2021-05-11T18:26:46.539+0000",
                    "started": "2021-05-11T18:26:46.539+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594669",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630431388\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,65 +283,79 @@ Result<std::unique_ptr<ColumnPopulator>> MakePopulator(const Field& field, char\n   return std::unique_ptr<ColumnPopulator>(factory.populator);\n }\n \n-class CSVConverter {\n+class CSVConverter : public ipc::RecordBatchWriter {\n  public:\n-  static Result<std::unique_ptr<CSVConverter>> Make(std::shared_ptr<Schema> schema,\n-                                                    MemoryPool* pool) {\n+  static Result<std::shared_ptr<CSVConverter>> Make(\n+      io::OutputStream* sink, std::shared_ptr<io::OutputStream> owned_sink,\n+      std::shared_ptr<Schema> schema, MemoryPool* pool, const WriteOptions& options) {\n+    if (!pool) pool = default_memory_pool();\n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n       char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n       ASSIGN_OR_RAISE(populators[col],\n                       MakePopulator(*schema->field(col), end_char, pool));\n     }\n-    return std::unique_ptr<CSVConverter>(\n-        new CSVConverter(std::move(schema), std::move(populators), pool));\n+    auto writer = std::shared_ptr<CSVConverter>(\n+        new CSVConverter(sink, std::move(owned_sink), std::move(schema),\n+                         std::move(populators), pool, options));\n+    if (options.include_header) {\n+      RETURN_NOT_OK(writer->PrepareForContentsWrite());\n+      RETURN_NOT_OK(writer->WriteHeader());\n+    }\n+    return writer;\n   }\n \n-  Status WriteCSV(const RecordBatch& batch, const WriteOptions& options,\n-                  io::OutputStream* out) {\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n-    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options.batch_size);\n+  Status WriteRecordBatch(const RecordBatch& batch) override {\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n+    RecordBatchIterator iterator = RecordBatchSliceIterator(batch, options_.batch_size);\n     for (auto maybe_slice : iterator) {\n       ASSIGN_OR_RAISE(std::shared_ptr<RecordBatch> slice, maybe_slice);\n       RETURN_NOT_OK(TranslateMinimalBatch(*slice));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n+      stats_.num_record_batches++;\n     }\n     return Status::OK();\n   }\n \n-  Status WriteCSV(const Table& table, const WriteOptions& options,\n-                  io::OutputStream* out) {\n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n     TableBatchReader reader(table);\n-    reader.set_chunksize(options.batch_size);\n-    RETURN_NOT_OK(PrepareForContentsWrite(options, out));\n+    reader.set_chunksize(max_chunksize > 0 ? max_chunksize : options_.batch_size);\n+    RETURN_NOT_OK(PrepareForContentsWrite());\n     std::shared_ptr<RecordBatch> batch;\n     RETURN_NOT_OK(reader.ReadNext(&batch));\n     while (batch != nullptr) {\n       RETURN_NOT_OK(TranslateMinimalBatch(*batch));\n-      RETURN_NOT_OK(out->Write(data_buffer_));\n+      RETURN_NOT_OK(sink_->Write(data_buffer_));\n       RETURN_NOT_OK(reader.ReadNext(&batch));\n+      stats_.num_record_batches++;\n     }\n \n     return Status::OK();\n   }\n \n+  Status Close() override { return Status::OK(); }\n\nReview comment:\n       The IPC reader doesn't do this either, oddly. I guess it is not a Rust 'exclusively owned' sink but merely, 'keep this sink alive'. (Though, that does beg the question: what's the point? Either you're the only one keeping it alive, and so you should close it, or you aren't the only one, and you don't need a shared_ptr. I would guess it's just less of a footgun to have a strong reference than a potentially dangling one, though.)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:39:00.428+0000",
                    "updated": "2021-05-11T18:39:00.428+0000",
                    "started": "2021-05-11T18:39:00.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594676",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/594744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r630466154\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -256,5 +267,46 @@ Result<RecordBatchGenerator> CsvFileFormat::ScanBatchesAsync(\n   return GeneratorFromReader(std::move(reader_fut));\n }\n \n+//\n+// CsvFileWriter, CsvFileWriteOptions\n+//\n+\n+std::shared_ptr<FileWriteOptions> CsvFileFormat::DefaultWriteOptions() {\n+  std::shared_ptr<CsvFileWriteOptions> csv_options(\n\nReview comment:\n       Ah, it's because it's a protected constructor, and make_shared only works with a public constructor.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T19:34:21.586+0000",
                    "updated": "2021-05-11T19:34:21.586+0000",
                    "started": "2021-05-11T19:34:21.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594744",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/595422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r631162520\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -403,34 +415,44 @@ class CSVConverter {\n   }\n \n   static constexpr int64_t kColumnSizeGuess = 8;\n+  io::OutputStream* sink_;\n+  std::shared_ptr<io::OutputStream> owned_sink_;\n\nReview comment:\n       shared_ptr seems strange in general for a OutputStream which seems for the most part should have only one owner.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T15:44:48.355+0000",
                    "updated": "2021-05-12T15:44:48.355+0000",
                    "started": "2021-05-12T15:44:48.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595422",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/595423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r631163305\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -403,34 +415,44 @@ class CSVConverter {\n   }\n \n   static constexpr int64_t kColumnSizeGuess = 8;\n+  io::OutputStream* sink_;\n+  std::shared_ptr<io::OutputStream> owned_sink_;\n   std::vector<std::unique_ptr<ColumnPopulator>> column_populators_;\n   std::vector<int32_t, arrow::stl::allocator<int32_t>> offsets_;\n   std::shared_ptr<ResizableBuffer> data_buffer_;\n   const std::shared_ptr<Schema> schema_;\n-  MemoryPool* pool_;\n+  WriteOptions options_;\n+  ipc::WriteStats stats_;\n };\n \n }  // namespace\n \n-Status WriteCSV(const Table& table, const WriteOptions& options, MemoryPool* pool,\n+Status WriteCSV(const Table& table, const WriteOptions& options,\n                 arrow::io::OutputStream* output) {\n-  if (pool == nullptr) {\n-    pool = default_memory_pool();\n-  }\n-  ASSIGN_OR_RAISE(std::unique_ptr<CSVConverter> converter,\n-                  CSVConverter::Make(table.schema(), pool));\n-  return converter->WriteCSV(table, options, output);\n+  ASSIGN_OR_RAISE(auto converter, MakeCSVWriter(output, table.schema(), options));\n\nReview comment:\n       nit: should converter now be writer?  (same question below)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T15:45:43.731+0000",
                    "updated": "2021-05-12T15:45:43.731+0000",
                    "started": "2021-05-12T15:45:43.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595423",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/595426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r631165033\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -83,6 +82,35 @@ struct ARROW_DS_EXPORT CsvFragmentScanOptions : public FragmentScanOptions {\n   csv::ReadOptions read_options = csv::ReadOptions::Defaults();\n };\n \n+class ARROW_DS_EXPORT CsvFileWriteOptions : public FileWriteOptions {\n+ public:\n+  /// Options passed to csv::MakeCSVWriter. use_threads is ignored\n\nReview comment:\n       Is use_threads used elsewhere?  The way the code is structured threads could be used for the casts, so if it is important we might want to file a follow-up JIRA.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T15:48:04.537+0000",
                    "updated": "2021-05-12T15:48:04.537+0000",
                    "started": "2021-05-12T15:48:04.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595426",
                    "issueId": "13374474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/worklog/595430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10230:\nURL: https://github.com/apache/arrow/pull/10230#discussion_r631166917\n\n\n\n##########\nFile path: python/pyarrow/_csv.pyx\n##########\n@@ -946,15 +951,44 @@ def write_csv(data, output_file, write_options=None,\n \n     get_writer(output_file, &stream)\n     c_memory_pool = maybe_unbox_memory_pool(memory_pool)\n+    c_write_options.io_context = CIOContext(c_memory_pool)\n     if isinstance(data, RecordBatch):\n         batch = pyarrow_unwrap_batch(data).get()\n         with nogil:\n-            check_status(WriteCSV(deref(batch), c_write_options, c_memory_pool,\n-                                  stream.get()))\n+            check_status(WriteCSV(deref(batch), c_write_options, stream.get()))\n     elif isinstance(data, Table):\n         table = pyarrow_unwrap_table(data).get()\n         with nogil:\n-            check_status(WriteCSV(deref(table), c_write_options, c_memory_pool,\n-                                  stream.get()))\n+            check_status(WriteCSV(deref(table), c_write_options, stream.get()))\n     else:\n         raise TypeError(f\"Expected Table or RecordBatch, got '{type(data)}'\")\n+\n+\n+cdef class CsvWriter(_CRecordBatchWriter):\n\nReview comment:\n       nit: as much as I appreciate Csv naming convention I think CSV is used everywhere else?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T15:50:09.022+0000",
                    "updated": "2021-05-12T15:50:09.022+0000",
                    "started": "2021-05-12T15:50:09.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595430",
                    "issueId": "13374474"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@bd6aae9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d3afa6e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52fae502[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@38798cb9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32016f82[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@72d87340[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@778f5aec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3671ce0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3aa31e71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b503816[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6855baa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3d3ed786[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jul 05 14:18:08 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-05T14:18:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12512/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-04-22T17:53:51.000+0000",
        "updated": "2021-07-06T11:10:53.000+0000",
        "timeoriginalestimate": null,
        "description": "Now that there's a CSV writer, we should hook it up to Datasets.\r\n\r\nIt seems some refactoring will be needed to expose a full writer class for CSV so that Datasets can write batches incrementally.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Implement CSV writing support",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/comment/17337955",
                    "id": "17337955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "FYI, I opened https://issues.apache.org/jira/browse/ARROW-11828?filter=-2\u00a0a while ago to cover refactoring.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-02T05:19:18.008+0000",
                    "updated": "2021-05-02T05:19:18.008+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/comment/17338423",
                    "id": "17338423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Ah thanks, I missed that - let me split my current PR and submit the CSV writer object by itself (and add Python bindings perhaps).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-03T15:26:07.413+0000",
                    "updated": "2021-05-03T15:26:07.413+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/comment/17338442",
                    "id": "17338442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "probably no hard need to split the PR, just want to make sure we close it out.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-03T15:59:25.202+0000",
                    "updated": "2021-05-03T15:59:25.202+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374474/comment/17374870",
                    "id": "17374870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10230\n[https://github.com/apache/arrow/pull/10230]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-07-05T14:18:08.377+0000",
                    "updated": "2021-07-05T14:18:08.377+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qcpc:",
        "customfield_12314139": null
    }
}