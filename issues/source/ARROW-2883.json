{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13173201",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201",
    "key": "ARROW-2883",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2883/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 4,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/worklog/125633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2298: ARROW-2883: [C++] Fix Clang warnings in code built with -DARROW_GPU=ON\nURL: https://github.com/apache/arrow/pull/2298\n \n \n   I also opened issues ARROW-2887, ARROW-2888 which surfaced on handling these warnings\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-20T19:46:15.657+0000",
                    "updated": "2018-07-20T19:46:15.657+0000",
                    "started": "2018-07-20T19:46:15.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125633",
                    "issueId": "13173201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/worklog/125639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2298: ARROW-2883: [C++] Fix Clang warnings in code built with -DARROW_GPU=ON\nURL: https://github.com/apache/arrow/pull/2298#issuecomment-406719435\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=h1) Report\n   > Merging [#2298](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7d2fbeba31763c978d260a9771184a13a63aaaf7?src=pr&el=desc) will **increase** coverage by `2.39%`.\n   > The diff coverage is `92.3%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2298/graphs/tree.svg?src=pr&width=650&token=LpTCFbqVT1&height=150)](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2298      +/-   ##\n   ==========================================\n   + Coverage   84.29%   86.69%   +2.39%     \n   ==========================================\n     Files         292      236      -56     \n     Lines       44559    41820    -2739     \n   ==========================================\n   - Hits        37562    36255    -1307     \n   + Misses       6966     5565    -1401     \n   + Partials       31        0      -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `83.86% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `98.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `88.88% <92.3%> (+0.04%)` | :arrow_up: |\n   | [go/arrow/memory/go\\_allocator.go](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2dvX2FsbG9jYXRvci5nbw==) | | |\n   | [go/arrow/array/numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVtZXJpYy5nZW4uZ28=) | | |\n   | [go/arrow/memory/checked\\_allocator.go](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2NoZWNrZWRfYWxsb2NhdG9yLmdv) | | |\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | | |\n   | [go/arrow/array/booleanbuilder.go](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbmJ1aWxkZXIuZ28=) | | |\n   | [go/arrow/type\\_traits\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfbnVtZXJpYy5nZW4uZ28=) | | |\n   | ... and [50 more](https://codecov.io/gh/apache/arrow/pull/2298/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=footer). Last update [7d2fbeb...4ab2474](https://codecov.io/gh/apache/arrow/pull/2298?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-20T20:34:14.938+0000",
                    "updated": "2018-07-20T20:34:14.938+0000",
                    "started": "2018-07-20T20:34:14.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125639",
                    "issueId": "13173201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/worklog/125712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2298: ARROW-2883: [C++] Fix Clang warnings in code built with -DARROW_GPU=ON\nURL: https://github.com/apache/arrow/pull/2298#issuecomment-406802686\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-21T15:08:00.719+0000",
                    "updated": "2018-07-21T15:08:00.719+0000",
                    "started": "2018-07-21T15:08:00.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125712",
                    "issueId": "13173201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/worklog/125713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2298: ARROW-2883: [C++] Fix Clang warnings in code built with -DARROW_GPU=ON\nURL: https://github.com/apache/arrow/pull/2298\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/gpu/CMakeLists.txt b/cpp/src/arrow/gpu/CMakeLists.txt\nindex 7192c43c8f..2235915c4a 100644\n--- a/cpp/src/arrow/gpu/CMakeLists.txt\n+++ b/cpp/src/arrow/gpu/CMakeLists.txt\n@@ -26,6 +26,8 @@ endif()\n find_package(CUDA REQUIRED)\n include_directories(SYSTEM ${CUDA_INCLUDE_DIRS})\n \n+message(STATUS \"CUDA Libraries: ${CUDA_LIBRARIES}\")\n+\n set(ARROW_GPU_SRCS\n   cuda_arrow_ipc.cc\n   cuda_context.cc\ndiff --git a/cpp/src/arrow/gpu/cuda_memory.h b/cpp/src/arrow/gpu/cuda_memory.h\nindex 7eb8b884fd..669a183b66 100644\n--- a/cpp/src/arrow/gpu/cuda_memory.h\n+++ b/cpp/src/arrow/gpu/cuda_memory.h\n@@ -133,7 +133,7 @@ class ARROW_EXPORT CudaIpcMemHandle {\n class ARROW_EXPORT CudaBufferReader : public io::BufferReader {\n  public:\n   explicit CudaBufferReader(const std::shared_ptr<Buffer>& buffer);\n-  ~CudaBufferReader();\n+  ~CudaBufferReader() override;\n \n   /// \\brief Read bytes into pre-allocated host memory\n   /// \\param[in] nbytes number of bytes to read\n@@ -157,7 +157,7 @@ class ARROW_EXPORT CudaBufferReader : public io::BufferReader {\n class ARROW_EXPORT CudaBufferWriter : public io::WriteableFile {\n  public:\n   explicit CudaBufferWriter(const std::shared_ptr<CudaBuffer>& buffer);\n-  ~CudaBufferWriter();\n+  ~CudaBufferWriter() override;\n \n   /// \\brief Close writer and flush buffered bytes to GPU\n   Status Close() override;\ndiff --git a/cpp/src/plasma/client.cc b/cpp/src/plasma/client.cc\nindex e7d9d448db..2d977ec2e3 100644\n--- a/cpp/src/plasma/client.cc\n+++ b/cpp/src/plasma/client.cc\n@@ -280,7 +280,7 @@ PlasmaBuffer::~PlasmaBuffer() { ARROW_UNUSED(client_->Release(object_id_)); }\n \n PlasmaClient::Impl::Impl() {\n #ifdef PLASMA_GPU\n-  CudaDeviceManager::GetInstance(&manager_);\n+  DCHECK_OK(CudaDeviceManager::GetInstance(&manager_));\n #endif\n }\n \n@@ -408,7 +408,7 @@ Status PlasmaClient::Impl::Create(const ObjectID& object_id, int64_t data_size,\n     if (metadata != NULL) {\n       // Copy the metadata to the buffer.\n       CudaBufferWriter writer(std::dynamic_pointer_cast<CudaBuffer>(*data));\n-      writer.WriteAt(object.data_size, metadata, metadata_size);\n+      RETURN_NOT_OK(writer.WriteAt(object.data_size, metadata, metadata_size));\n     }\n #else\n     ARROW_LOG(FATAL) << \"Arrow GPU library is not enabled.\";\ndiff --git a/cpp/src/plasma/protocol.cc b/cpp/src/plasma/protocol.cc\nindex 5f761c494f..da5624971b 100644\n--- a/cpp/src/plasma/protocol.cc\n+++ b/cpp/src/plasma/protocol.cc\n@@ -131,7 +131,7 @@ Status SendCreateReply(int sock, ObjectID object_id, PlasmaObject* object,\n   flatbuffers::Offset<fb::CudaHandle> ipc_handle;\n   if (object->device_num != 0) {\n     std::shared_ptr<arrow::Buffer> handle;\n-    object->ipc_handle->Serialize(arrow::default_memory_pool(), &handle);\n+    RETURN_NOT_OK(object->ipc_handle->Serialize(arrow::default_memory_pool(), &handle));\n     ipc_handle =\n         fb::CreateCudaHandle(fbb, fbb.CreateVector(handle->data(), handle->size()));\n   }\n@@ -171,8 +171,8 @@ Status ReadCreateReply(uint8_t* data, size_t size, ObjectID* object_id,\n   object->device_num = message->plasma_object()->device_num();\n #ifdef PLASMA_GPU\n   if (object->device_num != 0) {\n-    CudaIpcMemHandle::FromBuffer(message->ipc_handle()->handle()->data(),\n-                                 &object->ipc_handle);\n+    RETURN_NOT_OK(CudaIpcMemHandle::FromBuffer(message->ipc_handle()->handle()->data(),\n+                                               &object->ipc_handle));\n   }\n #endif\n   return PlasmaErrorStatus(message->error());\n@@ -503,7 +503,7 @@ Status SendGetReply(int sock, ObjectID object_ids[],\n #ifdef PLASMA_GPU\n     if (object.device_num != 0) {\n       std::shared_ptr<arrow::Buffer> handle;\n-      object.ipc_handle->Serialize(arrow::default_memory_pool(), &handle);\n+      RETURN_NOT_OK(object.ipc_handle->Serialize(arrow::default_memory_pool(), &handle));\n       handles.push_back(\n           fb::CreateCudaHandle(fbb, fbb.CreateVector(handle->data(), handle->size())));\n     }\n@@ -538,8 +538,9 @@ Status ReadGetReply(uint8_t* data, size_t size, ObjectID object_ids[],\n     plasma_objects[i].device_num = object->device_num();\n #ifdef PLASMA_GPU\n     if (object->device_num() != 0) {\n-      CudaIpcMemHandle::FromBuffer(message->handles()->Get(handle_pos)->handle()->data(),\n-                                   &plasma_objects[i].ipc_handle);\n+      const void* ipc_handle = message->handles()->Get(handle_pos)->handle()->data();\n+      RETURN_NOT_OK(\n+          CudaIpcMemHandle::FromBuffer(ipc_handle, &plasma_objects[i].ipc_handle));\n       handle_pos++;\n     }\n #endif\ndiff --git a/cpp/src/plasma/store.cc b/cpp/src/plasma/store.cc\nindex 999aa6a1b3..58ea7a488f 100644\n--- a/cpp/src/plasma/store.cc\n+++ b/cpp/src/plasma/store.cc\n@@ -114,7 +114,7 @@ PlasmaStore::PlasmaStore(EventLoop* loop, int64_t system_memory, std::string dir\n   store_info_.directory = directory;\n   store_info_.hugepages_enabled = hugepages_enabled;\n #ifdef PLASMA_GPU\n-  CudaDeviceManager::GetInstance(&manager_);\n+  DCHECK_OK(CudaDeviceManager::GetInstance(&manager_));\n #endif\n }\n \n@@ -156,12 +156,12 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n     return PlasmaError::ObjectExists;\n   }\n   // Try to evict objects until there is enough space.\n-  uint8_t* pointer;\n+  uint8_t* pointer = nullptr;\n #ifdef PLASMA_GPU\n   std::shared_ptr<CudaBuffer> gpu_handle;\n   std::shared_ptr<CudaContext> context_;\n   if (device_num != 0) {\n-    manager_->GetContext(device_num - 1, &context_);\n+    DCHECK_OK(manager_->GetContext(device_num - 1, &context_));\n   }\n #endif\n   while (true) {\n@@ -175,7 +175,7 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n     if (device_num == 0) {\n       pointer =\n           reinterpret_cast<uint8_t*>(dlmemalign(kBlockSize, data_size + metadata_size));\n-      if (pointer == NULL) {\n+      if (pointer == nullptr) {\n         // Tell the eviction policy how much space we need to create this object.\n         std::vector<ObjectID> objects_to_evict;\n         bool success =\n@@ -191,7 +191,7 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n       }\n     } else {\n #ifdef PLASMA_GPU\n-      context_->Allocate(data_size + metadata_size, &gpu_handle);\n+      DCHECK_OK(context_->Allocate(data_size + metadata_size, &gpu_handle));\n       break;\n #endif\n     }\n@@ -217,7 +217,7 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n   entry->device_num = device_num;\n #ifdef PLASMA_GPU\n   if (device_num != 0) {\n-    gpu_handle->ExportForIpc(&entry->ipc_handle);\n+    DCHECK_OK(gpu_handle->ExportForIpc(&entry->ipc_handle));\n     result->ipc_handle = entry->ipc_handle;\n   }\n #endif\n@@ -238,8 +238,8 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n }\n \n void PlasmaObject_init(PlasmaObject* object, ObjectTableEntry* entry) {\n-  DCHECK(object != NULL);\n-  DCHECK(entry != NULL);\n+  DCHECK(object != nullptr);\n+  DCHECK(entry != nullptr);\n   DCHECK(entry->state == ObjectState::PLASMA_SEALED);\n #ifdef PLASMA_GPU\n   if (entry->device_num != 0) {\n@@ -325,7 +325,7 @@ void PlasmaStore::UpdateObjectGetRequests(const ObjectID& object_id) {\n   for (size_t i = 0; i < num_requests; ++i) {\n     auto get_req = get_requests[index];\n     auto entry = GetObjectTableEntry(&store_info_, object_id);\n-    ARROW_CHECK(entry != NULL);\n+    ARROW_CHECK(entry != nullptr);\n \n     PlasmaObject_init(&get_req->objects[object_id], entry);\n     get_req->num_satisfied += 1;\n@@ -415,7 +415,7 @@ int PlasmaStore::RemoveFromClientObjectIds(ObjectTableEntry* entry, Client* clie\n \n void PlasmaStore::ReleaseObject(const ObjectID& object_id, Client* client) {\n   auto entry = GetObjectTableEntry(&store_info_, object_id);\n-  ARROW_CHECK(entry != NULL);\n+  ARROW_CHECK(entry != nullptr);\n   // Remove the client from the object's array of clients.\n   ARROW_CHECK(RemoveFromClientObjectIds(entry, client) == 1);\n }\n@@ -432,7 +432,7 @@ ObjectStatus PlasmaStore::ContainsObject(const ObjectID& object_id) {\n void PlasmaStore::SealObject(const ObjectID& object_id, unsigned char digest[]) {\n   ARROW_LOG(DEBUG) << \"sealing object \" << object_id.hex();\n   auto entry = GetObjectTableEntry(&store_info_, object_id);\n-  ARROW_CHECK(entry != NULL);\n+  ARROW_CHECK(entry != nullptr);\n   ARROW_CHECK(entry->state == ObjectState::PLASMA_CREATED);\n   // Set the state of object to SEALED.\n   entry->state = ObjectState::PLASMA_SEALED;\n@@ -447,7 +447,7 @@ void PlasmaStore::SealObject(const ObjectID& object_id, unsigned char digest[])\n \n int PlasmaStore::AbortObject(const ObjectID& object_id, Client* client) {\n   auto entry = GetObjectTableEntry(&store_info_, object_id);\n-  ARROW_CHECK(entry != NULL) << \"To abort an object it must be in the object table.\";\n+  ARROW_CHECK(entry != nullptr) << \"To abort an object it must be in the object table.\";\n   ARROW_CHECK(entry->state != ObjectState::PLASMA_SEALED)\n       << \"To abort an object it must not have been sealed.\";\n   auto it = client->object_ids.find(object_id);\n@@ -467,7 +467,7 @@ PlasmaError PlasmaStore::DeleteObject(ObjectID& object_id) {\n   // TODO(rkn): This should probably not fail, but should instead throw an\n   // error. Maybe we should also support deleting objects that have been\n   // created but not sealed.\n-  if (entry == NULL) {\n+  if (entry == nullptr) {\n     // To delete an object it must be in the object table.\n     return PlasmaError::ObjectNonexistent;\n   }\n@@ -501,7 +501,8 @@ void PlasmaStore::DeleteObjects(const std::vector<ObjectID>& object_ids) {\n     // TODO(rkn): This should probably not fail, but should instead throw an\n     // error. Maybe we should also support deleting objects that have been\n     // created but not sealed.\n-    ARROW_CHECK(entry != NULL) << \"To delete an object it must be in the object table.\";\n+    ARROW_CHECK(entry != nullptr)\n+        << \"To delete an object it must be in the object table.\";\n     ARROW_CHECK(entry->state == ObjectState::PLASMA_SEALED)\n         << \"To delete an object it must have been sealed.\";\n     ARROW_CHECK(entry->ref_count == 0)\n@@ -811,7 +812,7 @@ class PlasmaStoreRunner {\n     // that maximum allowed size up front.\n     if (use_one_memory_mapped_file) {\n       void* pointer = plasma::dlmemalign(kBlockSize, system_memory);\n-      ARROW_CHECK(pointer != NULL);\n+      ARROW_CHECK(pointer != nullptr);\n       plasma::dlfree(pointer);\n     }\n \n@@ -863,7 +864,7 @@ void StartServer(char* socket_name, int64_t system_memory, std::string plasma_di\n }  // namespace plasma\n \n int main(int argc, char* argv[]) {\n-  char* socket_name = NULL;\n+  char* socket_name = nullptr;\n   // Directory where plasma memory mapped files are stored.\n   std::string plasma_directory;\n   bool hugepages_enabled = false;\ndiff --git a/cpp/src/plasma/test/client_tests.cc b/cpp/src/plasma/test/client_tests.cc\nindex e40f6d9491..4d7544307f 100644\n--- a/cpp/src/plasma/test/client_tests.cc\n+++ b/cpp/src/plasma/test/client_tests.cc\n@@ -480,9 +480,9 @@ void AssertCudaRead(const std::shared_ptr<Buffer>& buffer,\n   ASSERT_EQ(gpu_buffer->size(), data_size);\n \n   CudaBufferReader reader(gpu_buffer);\n-  uint8_t read_data[data_size];\n+  std::vector<uint8_t> read_data(data_size);\n   int64_t read_data_size;\n-  ARROW_CHECK_OK(reader.Read(data_size, &read_data_size, read_data));\n+  ARROW_CHECK_OK(reader.Read(data_size, &read_data_size, read_data.data()));\n   ASSERT_EQ(read_data_size, data_size);\n \n   for (size_t i = 0; i < data_size; i++) {\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-21T15:08:28.319+0000",
                    "updated": "2018-07-21T15:08:28.319+0000",
                    "started": "2018-07-21T15:08:28.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125713",
                    "issueId": "13173201"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 2400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@70b6523d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c68aa24[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4855ce9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6dd5ffd7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65f25ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4632c15d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68feaf66[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2a97cee9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5598f61b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5f0eddc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18e8f79b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@c9c82e9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 2400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jul 21 15:08:19 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-21T15:08:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2883/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-07-19T14:09:15.000+0000",
        "updated": "2018-07-21T15:08:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Not sure that's recent, but I get the following warnings with clang 6.0.1:\r\n{code}\r\n[37/169] Building CXX object src/plasma/CMakeFiles/plasma_objlib.dir/client.cc.o\r\n../src/plasma/client.cc:283:3: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n  CudaDeviceManager::GetInstance(&manager_);\r\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~\r\n../src/plasma/client.cc:411:7: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n      writer.WriteAt(object.data_size, metadata, metadata_size);\r\n      ^~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n2 warnings generated.\r\n[53/169] Building CXX object src/plasma/CMakeFiles/plasma_objlib.dir/protocol.cc.o\r\n../src/plasma/protocol.cc:134:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n    object->ipc_handle->Serialize(arrow::default_memory_pool(), &handle);\r\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/plasma/protocol.cc:174:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n    CudaIpcMemHandle::FromBuffer(message->ipc_handle()->handle()->data(),\r\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/plasma/protocol.cc:506:7: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n      object.ipc_handle->Serialize(arrow::default_memory_pool(), &handle);\r\n      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/plasma/protocol.cc:541:7: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n      CudaIpcMemHandle::FromBuffer(message->handles()->Get(handle_pos)->handle()->data(),\r\n      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n4 warnings generated.\r\n[63/169] Building CXX object src/plasma/CMakeFiles/plasma_store.dir/store.cc.o\r\n../src/plasma/store.cc:117:3: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n  CudaDeviceManager::GetInstance(&manager_);\r\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~\r\n../src/plasma/store.cc:164:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n    manager_->GetContext(device_num - 1, &context_);\r\n    ^~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/plasma/store.cc:194:7: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n      context_->Allocate(data_size + metadata_size, &gpu_handle);\r\n      ^~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/plasma/store.cc:220:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\r\n    gpu_handle->ExportForIpc(&entry->ipc_handle);\r\n    ^~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~\r\n4 warnings generated.\r\n[125/169] Building CXX object src/plasma/CMakeFiles/client_tests.dir/test/client_tests.cc.o\r\n../src/plasma/test/client_tests.cc:462:35: warning: 'kDeprecatedPlasmaDefaultReleaseDelay' is deprecated: PLASMA_DEFAULT_RELEASE_DELAY is deprecated [-Wdeprecated-declarations]\r\n  int64_t default_delay = plasma::kDeprecatedPlasmaDefaultReleaseDelay;\r\n                                  ^\r\n../src/plasma/client.h:37:16: note: 'kDeprecatedPlasmaDefaultReleaseDelay' has been explicitly marked deprecated here\r\n__attribute__((deprecated(\"PLASMA_DEFAULT_RELEASE_DELAY is deprecated\")))\r\n               ^\r\n1 warning generated.\r\n{code}\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 2400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Compilation warnings",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/comment/16549320",
                    "id": "16549320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~pcmoritz]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-19T14:09:41.398+0000",
                    "updated": "2018-07-19T14:09:41.398+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/comment/16550057",
                    "id": "16550057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Marked for 0.10.0. This was missed in CI because we aren't building with GPU support enabled",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-20T00:20:19.921+0000",
                    "updated": "2018-07-20T00:20:19.921+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173201/comment/16551726",
                    "id": "16551726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2298\n[https://github.com/apache/arrow/pull/2298]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-21T15:08:19.679+0000",
                    "updated": "2018-07-21T15:08:19.679+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3w2jr:",
        "customfield_12314139": null
    }
}