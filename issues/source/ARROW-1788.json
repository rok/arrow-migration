{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13117409",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117409",
    "key": "ARROW-1788",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=swangster",
            "name": "swangster",
            "key": "swangster",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Stephanie Wang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=swangster",
            "name": "swangster",
            "key": "swangster",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Stephanie Wang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=swangster",
            "name": "swangster",
            "key": "swangster",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Stephanie Wang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1788/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@71f2a5bc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b0d1540[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a03ac00[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@39971f15[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f80a5dd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@30ce1cc8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27bad57d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@26540928[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ce0fe72[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7c889d7a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d68aeab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@b73fb67[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Nov 10 14:36:25 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-10T14:36:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1788/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-11-09T22:02:21.000+0000",
        "updated": "2017-11-15T15:52:51.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-1775 introduces the ability to abort objects in the Plasma store. When a client disconnects, the store iterates through all of the objects and either removes the client from the list of object users or aborts the object, depending on whether the object was sealed or not.\r\n\r\nBefore aborting the object, the store does not first check whether the client was the one who created the object. Right now, if a different client created the object, the store will crash when aborting it.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Plasma store crashes when trying to abort objects for disconnected client",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117409/comment/16246652",
                    "id": "16246652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "stephanie-wang opened a new pull request #1299: ARROW-1788 Fix Plasma store abort bug on client disconnection\nURL: https://github.com/apache/arrow/pull/1299\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-09T22:04:22.763+0000",
                    "updated": "2017-11-09T22:04:22.763+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117409/comment/16246721",
                    "id": "16246721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on a change in pull request #1299: ARROW-1788 Fix Plasma store abort bug on client disconnection\nURL: https://github.com/apache/arrow/pull/1299#discussion_r150112146\n \n \n\n ##########\n File path: cpp/src/plasma/store.cc\n ##########\n @@ -454,11 +454,15 @@ void PlasmaStore::disconnect_client(int client_fd) {\n   ARROW_LOG(INFO) << \"Disconnecting client on fd \" << client_fd;\n   // If this client was using any objects, remove it from the appropriate\n   // lists.\n+  auto client = it->second.get();\n   for (const auto& entry : store_info_.objects) {\n-    if (entry.second->state == PLASMA_SEALED) {\n-      remove_client_from_object_clients(entry.second.get(), it->second.get());\n-    } else {\n-      abort_object(entry.first);\n+    auto entry_it = entry.second->clients.find(client);\n+    if (entry_it != entry.second->clients.end()) {\n+      if (entry.second->state == PLASMA_SEALED) {\n+        remove_client_from_object_clients(entry.second.get(), client);\n \n Review comment:\n   As it is with this change, this check is a little asymetric, i.e. remove_client_from_object_clients already checks if the object is from the \"right\" client, but abort_object doesn't and then here we check in either case. Can you make it more symmetric and handle the checks in the same way? We could have the check in abort_object if we also pass the client and remove it from here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-09T22:57:19.066+0000",
                    "updated": "2017-11-09T22:57:19.066+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117409/comment/16247579",
                    "id": "16247579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1299: ARROW-1788 Fix Plasma store abort bug on client disconnection\nURL: https://github.com/apache/arrow/pull/1299\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/store.cc b/cpp/src/plasma/store.cc\nindex 5dbdebc23..31033ccbb 100644\n--- a/cpp/src/plasma/store.cc\n+++ b/cpp/src/plasma/store.cc\n@@ -393,16 +393,22 @@ void PlasmaStore::seal_object(const ObjectID& object_id, unsigned char digest[])\n   update_object_get_requests(object_id);\n }\n \n-void PlasmaStore::abort_object(const ObjectID& object_id) {\n+int PlasmaStore::abort_object(const ObjectID& object_id, Client* client) {\n   auto entry = get_object_table_entry(&store_info_, object_id);\n   ARROW_CHECK(entry != NULL) << \"To abort an object it must be in the object table.\";\n   ARROW_CHECK(entry->state != PLASMA_SEALED)\n       << \"To abort an object it must not have been sealed.\";\n-  ARROW_CHECK(entry->clients.size() == 1)\n-      << \"To abort an object, the only client currently using it is the creator.\";\n-\n-  dlfree(entry->pointer);\n-  store_info_.objects.erase(object_id);\n+  auto it = entry->clients.find(client);\n+  if (it == entry->clients.end()) {\n+    // If the client requesting the abort is not the creator, do not\n+    // perform the abort.\n+    return 0;\n+  } else {\n+    // The client requesting the abort is the creator. Free the object.\n+    dlfree(entry->pointer);\n+    store_info_.objects.erase(object_id);\n+    return 1;\n+  }\n }\n \n void PlasmaStore::delete_objects(const std::vector<ObjectID>& object_ids) {\n@@ -454,11 +460,12 @@ void PlasmaStore::disconnect_client(int client_fd) {\n   ARROW_LOG(INFO) << \"Disconnecting client on fd \" << client_fd;\n   // If this client was using any objects, remove it from the appropriate\n   // lists.\n+  auto client = it->second.get();\n   for (const auto& entry : store_info_.objects) {\n     if (entry.second->state == PLASMA_SEALED) {\n-      remove_client_from_object_clients(entry.second.get(), it->second.get());\n+      remove_client_from_object_clients(entry.second.get(), client);\n     } else {\n-      abort_object(entry.first);\n+      abort_object(entry.first, client);\n     }\n   }\n \n@@ -600,7 +607,9 @@ Status PlasmaStore::process_message(Client* client) {\n     } break;\n     case MessageType_PlasmaAbortRequest: {\n       RETURN_NOT_OK(ReadAbortRequest(input, input_size, &object_id));\n-      abort_object(object_id);\n+      ARROW_CHECK(abort_object(object_id, client) == 1) << \"To abort an object, the only \"\n+                                                           \"client currently using it \"\n+                                                           \"must be the creator.\";\n       HANDLE_SIGPIPE(SendAbortReply(client->fd, object_id), client->fd);\n     } break;\n     case MessageType_PlasmaGetRequest: {\ndiff --git a/cpp/src/plasma/store.h b/cpp/src/plasma/store.h\nindex 0d08d8a67..a72c6259a 100644\n--- a/cpp/src/plasma/store.h\n+++ b/cpp/src/plasma/store.h\n@@ -74,7 +74,14 @@ class PlasmaStore {\n   int create_object(const ObjectID& object_id, int64_t data_size, int64_t metadata_size,\n                     Client* client, PlasmaObject* result);\n \n-  void abort_object(const ObjectID& object_id);\n+  /// Abort a created but unsealed object. If the client is not the\n+  /// creator, then the abort will fail.\n+  ///\n+  /// @param object_id Object ID of the object to be aborted.\n+  /// @param client The client who created the object. If this does not\n+  ///   match the creator of the object, then the abort will fail.\n+  /// @return 1 if the abort succeeds, else 0.\n+  int abort_object(const ObjectID& object_id, Client* client);\n \n   /// Delete objects that have been created in the hash table. This should only\n   /// be called on objects that are returned by the eviction policy to evict.\ndiff --git a/cpp/src/plasma/test/client_tests.cc b/cpp/src/plasma/test/client_tests.cc\nindex 5c0cee4c0..d4285f898 100644\n--- a/cpp/src/plasma/test/client_tests.cc\n+++ b/cpp/src/plasma/test/client_tests.cc\n@@ -45,14 +45,17 @@ class TestPlasmaStore : public ::testing::Test {\n         \"/plasma_store -m 1000000000 -s /tmp/store 1> /dev/null 2> /dev/null &\";\n     system(plasma_command.c_str());\n     ARROW_CHECK_OK(client_.Connect(\"/tmp/store\", \"\", PLASMA_DEFAULT_RELEASE_DELAY));\n+    ARROW_CHECK_OK(client2_.Connect(\"/tmp/store\", \"\", PLASMA_DEFAULT_RELEASE_DELAY));\n   }\n   virtual void Finish() {\n     ARROW_CHECK_OK(client_.Disconnect());\n+    ARROW_CHECK_OK(client2_.Disconnect());\n     system(\"killall plasma_store &\");\n   }\n \n  protected:\n   PlasmaClient client_;\n+  PlasmaClient client2_;\n };\n \n TEST_F(TestPlasmaStore, ContainsTest) {\n@@ -171,6 +174,41 @@ TEST_F(TestPlasmaStore, AbortTest) {\n   }\n }\n \n+TEST_F(TestPlasmaStore, MultipleClientTest) {\n+  ObjectID object_id = ObjectID::from_random();\n+\n+  // Test for object non-existence on the first client.\n+  bool has_object;\n+  ARROW_CHECK_OK(client_.Contains(object_id, &has_object));\n+  ASSERT_EQ(has_object, false);\n+\n+  // Test for the object being in local Plasma store.\n+  // First create and seal object on the second client.\n+  int64_t data_size = 100;\n+  uint8_t metadata[] = {5};\n+  int64_t metadata_size = sizeof(metadata);\n+  uint8_t* data;\n+  ARROW_CHECK_OK(client2_.Create(object_id, data_size, metadata, metadata_size, &data));\n+  ARROW_CHECK_OK(client2_.Seal(object_id));\n+  // Test that the first client can get the object.\n+  ObjectBuffer object_buffer;\n+  ARROW_CHECK_OK(client_.Get(&object_id, 1, -1, &object_buffer));\n+  ARROW_CHECK_OK(client_.Contains(object_id, &has_object));\n+  ASSERT_EQ(has_object, true);\n+\n+  // Test that one client disconnecting does not interfere with the other.\n+  // First create object on the second client.\n+  object_id = ObjectID::from_random();\n+  ARROW_CHECK_OK(client2_.Create(object_id, data_size, metadata, metadata_size, &data));\n+  // Disconnect the first client.\n+  ARROW_CHECK_OK(client_.Disconnect());\n+  // Test that the second client can seal and get the created object.\n+  ARROW_CHECK_OK(client2_.Seal(object_id));\n+  ARROW_CHECK_OK(client2_.Get(&object_id, 1, -1, &object_buffer));\n+  ARROW_CHECK_OK(client2_.Contains(object_id, &has_object));\n+  ASSERT_EQ(has_object, true);\n+}\n+\n }  // namespace plasma\n \n int main(int argc, char** argv) {\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-10T14:36:24.079+0000",
                    "updated": "2017-11-10T14:36:24.079+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117409/comment/16247580",
                    "id": "16247580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1299\n[https://github.com/apache/arrow/pull/1299]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-10T14:36:25.750+0000",
                    "updated": "2017-11-10T14:36:25.750+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mm7r:",
        "customfield_12314139": null
    }
}