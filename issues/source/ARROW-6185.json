{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13249826",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826",
    "key": "ARROW-6185",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567369",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567369",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13243335",
                    "key": "ARROW-5862",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335",
                    "fields": {
                        "summary": "[Java] Provide dictionary builder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6185/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/292521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054\n \n \n   This is related ARROW-5862. We provide another type of dictionary builder based on hash table. Compared with a search based dictionary encoder, a hash table based encoder process each new element in O(1) time, but require extra memory space.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T13:48:03.903+0000",
                    "updated": "2019-08-10T13:48:03.903+0000",
                    "started": "2019-08-10T13:48:03.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292521",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/292526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#issuecomment-520155521\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=h1) Report\n   > Merging [#5054](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/167cea0a6247475e3bfda044cc2278e06a7efbb9?src=pr&el=desc) will **increase** coverage by `17.36%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5054/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master   #5054       +/-   ##\n   ==========================================\n   + Coverage   72.34%   89.7%   +17.36%     \n   ==========================================\n     Files         831     670      -161     \n     Lines      110383   99383    -11000     \n     Branches     1418       0     -1418     \n   ==========================================\n   + Hits        79853   89150     +9297     \n   + Misses      30168   10233    -19935     \n   + Partials      362       0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/testing/gtest\\_util.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0aW5nL2d0ZXN0X3V0aWwuaA==) | `97.36% <0%> (-2.64%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernel.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbC5o) | `61.16% <0%> (-1.53%)` | :arrow_down: |\n   | [cpp/src/arrow/result.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZXN1bHQuaA==) | `91.3% <0%> (-0.37%)` | :arrow_down: |\n   | [cpp/src/arrow/table.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/server.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/column-builder.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table\\_builder.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZV9idWlsZGVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/configuration.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2NvbmZpZ3VyYXRpb24uaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/kernels/cast.h](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvY2FzdC5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [759 more](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=footer). Last update [167cea0...f5edce3](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T15:01:12.688+0000",
                    "updated": "2019-08-10T15:01:12.688+0000",
                    "started": "2019-08-10T15:01:12.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292526",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/293622",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#discussion_r313222701\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/HashTableBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,218 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.HashMap;\n+\n+import org.apache.arrow.memory.util.ArrowBufPointer;\n+import org.apache.arrow.memory.util.hash.ArrowBufHasher;\n+import org.apache.arrow.memory.util.hash.SimpleHasher;\n+import org.apache.arrow.vector.ElementAddressableVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ * This class builds the dictionary based on a hash table.\n+ * Each add operation can be finished in O(1) time,\n+ * where n is the current dictionary size.\n+ * </p>\n+ * <p>\n+ * The dictionary builder is intended to build a single dictionary.\n+ * So it cannot be used for different dictionaries.\n+ * </p>\n+ * <p>Below gives the sample code for using the dictionary builder\n+ * <pre>{@code\n+ * ArrowBufHasherDictionaryBuilder dictionaryBuilder = ...\n+ * dictionaryBuilder.startBuild();\n+ * ...\n+ * dictionaryBuild.addValue(newValue);\n+ * ...\n+ * dictionaryBuilder.endBuild();\n+ * }</pre>\n+ * </p>\n+ * <p>\n+ *   With the above code, the dictionary vector will be populated,\n+ *   and it can be retrieved by the {@link HashTableBasedDictionaryBuilder#getDictionary()} method.\n+ *   After that, dictionary encoding can proceed with the populated dictionary encoder.\n+ * </p>\n+ *\n+ * @param <V> the dictionary vector type.\n+ */\n+public class HashTableBasedDictionaryBuilder<V extends ElementAddressableVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  private final V dictionary;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  private int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  private int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  private final boolean encodeNull;\n+\n+  /**\n+   * The hash map for distinct dictionary entries.\n+   * The key is the pointer to the dictionary element, whereas the value is the index in the dictionary.\n+   */\n+  private HashMap<ArrowBufPointer, Integer> hashMap = new HashMap<>();\n+\n+  /**\n+   * A flag indicating if dictionary building is finished.\n+   */\n+  private boolean buildFinished = false;\n+\n+  /**\n+   * The hasher used for calculating the hash code.\n+   */\n+  private final ArrowBufHasher hasher;\n+\n+  /**\n+   * Next pointer to try to add to the hash table.\n+   */\n+  private ArrowBufPointer nextPointer;\n+\n+  /**\n+   * Constructs a hash table based dictionary builder.\n+   *\n+   * @param dictionary the dictionary to populate.\n+   */\n+  public HashTableBasedDictionaryBuilder(V dictionary) {\n+    this(dictionary, false);\n+  }\n+\n+  /**\n+   * Constructs a hash table based dictionary builder.\n+   *\n+   * @param dictionary the dictionary to populate.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public HashTableBasedDictionaryBuilder(V dictionary, boolean encodeNull) {\n+    this(dictionary, encodeNull, SimpleHasher.INSTANCE);\n+  }\n+\n+  /**\n+   * Constructs a hash table based dictionary builder.\n+   *\n+   * @param dictionary the dictionary to populate.\n+   * @param encodeNull if null should be encoded.\n+   * @param hasher     the hasher used to compute the hash code.\n+   */\n+  public HashTableBasedDictionaryBuilder(V dictionary, boolean encodeNull, ArrowBufHasher hasher) {\n+    this.dictionary = dictionary;\n+    this.encodeNull = encodeNull;\n+    this.hasher = hasher;\n+    this.nextPointer = new ArrowBufPointer(hasher);\n+  }\n+\n+  /**\n \n Review comment:\n   is it important to keep the state of startBuild and endBuild.  Is seems like we can set ValueCount  whenever getDictionary is called if users want an incremental dictionary?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:17:50.138+0000",
                    "updated": "2019-08-13T05:17:50.138+0000",
                    "started": "2019-08-13T05:17:50.137+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293622",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/293809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#discussion_r313331424\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/HashTableBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,218 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.HashMap;\n+\n+import org.apache.arrow.memory.util.ArrowBufPointer;\n+import org.apache.arrow.memory.util.hash.ArrowBufHasher;\n+import org.apache.arrow.memory.util.hash.SimpleHasher;\n+import org.apache.arrow.vector.ElementAddressableVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ * This class builds the dictionary based on a hash table.\n+ * Each add operation can be finished in O(1) time,\n+ * where n is the current dictionary size.\n+ * </p>\n+ * <p>\n+ * The dictionary builder is intended to build a single dictionary.\n+ * So it cannot be used for different dictionaries.\n+ * </p>\n+ * <p>Below gives the sample code for using the dictionary builder\n+ * <pre>{@code\n+ * ArrowBufHasherDictionaryBuilder dictionaryBuilder = ...\n+ * dictionaryBuilder.startBuild();\n+ * ...\n+ * dictionaryBuild.addValue(newValue);\n+ * ...\n+ * dictionaryBuilder.endBuild();\n+ * }</pre>\n+ * </p>\n+ * <p>\n+ *   With the above code, the dictionary vector will be populated,\n+ *   and it can be retrieved by the {@link HashTableBasedDictionaryBuilder#getDictionary()} method.\n+ *   After that, dictionary encoding can proceed with the populated dictionary encoder.\n+ * </p>\n+ *\n+ * @param <V> the dictionary vector type.\n+ */\n+public class HashTableBasedDictionaryBuilder<V extends ElementAddressableVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  private final V dictionary;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  private int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  private int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  private final boolean encodeNull;\n+\n+  /**\n+   * The hash map for distinct dictionary entries.\n+   * The key is the pointer to the dictionary element, whereas the value is the index in the dictionary.\n+   */\n+  private HashMap<ArrowBufPointer, Integer> hashMap = new HashMap<>();\n+\n+  /**\n+   * A flag indicating if dictionary building is finished.\n+   */\n+  private boolean buildFinished = false;\n+\n+  /**\n+   * The hasher used for calculating the hash code.\n+   */\n+  private final ArrowBufHasher hasher;\n+\n+  /**\n+   * Next pointer to try to add to the hash table.\n+   */\n+  private ArrowBufPointer nextPointer;\n+\n+  /**\n+   * Constructs a hash table based dictionary builder.\n+   *\n+   * @param dictionary the dictionary to populate.\n+   */\n+  public HashTableBasedDictionaryBuilder(V dictionary) {\n+    this(dictionary, false);\n+  }\n+\n+  /**\n+   * Constructs a hash table based dictionary builder.\n+   *\n+   * @param dictionary the dictionary to populate.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public HashTableBasedDictionaryBuilder(V dictionary, boolean encodeNull) {\n+    this(dictionary, encodeNull, SimpleHasher.INSTANCE);\n+  }\n+\n+  /**\n+   * Constructs a hash table based dictionary builder.\n+   *\n+   * @param dictionary the dictionary to populate.\n+   * @param encodeNull if null should be encoded.\n+   * @param hasher     the hasher used to compute the hash code.\n+   */\n+  public HashTableBasedDictionaryBuilder(V dictionary, boolean encodeNull, ArrowBufHasher hasher) {\n+    this.dictionary = dictionary;\n+    this.encodeNull = encodeNull;\n+    this.hasher = hasher;\n+    this.nextPointer = new ArrowBufPointer(hasher);\n+  }\n+\n+  /**\n \n Review comment:\n   Revised. Thanks for your suggestion.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T10:47:10.377+0000",
                    "updated": "2019-08-13T10:47:10.377+0000",
                    "started": "2019-08-13T10:47:10.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293809",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/294497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#discussion_r313718028\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/dictionary/TestHashTableBasedDictionaryEncoder.java\n ##########\n @@ -0,0 +1,166 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.VarCharVector;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+/**\n+ * Test cases for {@link HashTableBasedDictionaryBuilder}.\n+ */\n+@RunWith(Parameterized.class)\n+public class TestHashTableBasedDictionaryEncoder {\n+\n+  private boolean encodeNull;\n+\n+  private BufferAllocator allocator;\n+\n+  public TestHashTableBasedDictionaryEncoder(boolean encodeNull) {\n+    this.encodeNull = encodeNull;\n+  }\n+\n+  @Before\n+  public void prepare() {\n+    allocator = new RootAllocator(1024 * 1024);\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testBuildVariableWidthDictionary() {\n+    try (VarCharVector vec = new VarCharVector(\"\", allocator);\n+         VarCharVector dictionary = new VarCharVector(\"\", allocator)) {\n+\n+      vec.allocateNew(100, 10);\n+      vec.setValueCount(10);\n+\n+      dictionary.allocateNew();\n+\n+      // fill data\n+      vec.set(0, \"hello\".getBytes());\n+      vec.set(1, \"abc\".getBytes());\n+      vec.setNull(2);\n+      vec.set(3, \"world\".getBytes());\n+      vec.set(4, \"12\".getBytes());\n+      vec.set(5, \"dictionary\".getBytes());\n+      vec.setNull(6);\n+      vec.set(7, \"hello\".getBytes());\n+      vec.set(8, \"good\".getBytes());\n+      vec.set(9, \"abc\".getBytes());\n+\n+      HashTableBasedDictionaryBuilder<VarCharVector> dictionaryBuilder =\n+              new HashTableBasedDictionaryBuilder<>(dictionary, encodeNull);\n+\n+      int result = dictionaryBuilder.addValues(vec);\n+\n+      if (encodeNull) {\n+        assertEquals(7, result);\n+        assertEquals(7, dictionary.getValueCount());\n+\n+        assertEquals(\"hello\", new String(dictionary.get(0)));\n+        assertEquals(\"abc\", new String(dictionary.get(1)));\n+        assertNull(dictionary.get(2));\n+        assertEquals(\"world\", new String(dictionary.get(3)));\n+        assertEquals(\"12\", new String(dictionary.get(4)));\n+        assertEquals(\"dictionary\", new String(dictionary.get(5)));\n+        assertEquals(\"good\", new String(dictionary.get(6)));\n+      } else {\n+        assertEquals(6, result);\n+        assertEquals(6, dictionary.getValueCount());\n+\n+        assertEquals(\"hello\", new String(dictionary.get(0)));\n+        assertEquals(\"abc\", new String(dictionary.get(1)));\n+        assertEquals(\"world\", new String(dictionary.get(2)));\n+        assertEquals(\"12\", new String(dictionary.get(3)));\n+        assertEquals(\"dictionary\", new String(dictionary.get(4)));\n+        assertEquals(\"good\", new String(dictionary.get(5)));\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testBuildFixedWidthDictionary() {\n+    try (IntVector vec = new IntVector(\"\", allocator);\n+         IntVector dictionary = new IntVector(\"\", allocator)) {\n+      vec.allocateNew(10);\n+      vec.setValueCount(10);\n+\n+      dictionary.allocateNew();\n+\n+      // fill data\n+      vec.set(0, 4);\n+      vec.set(1, 8);\n+      vec.set(2, 32);\n+      vec.set(3, 8);\n+      vec.set(4, 16);\n+      vec.set(5, 32);\n+      vec.setNull(6);\n+      vec.set(7, 4);\n+      vec.set(8, 4);\n+      vec.setNull(9);\n+\n+      HashTableBasedDictionaryBuilder<IntVector> dictionaryBuilder =\n+              new HashTableBasedDictionaryBuilder<>(dictionary, encodeNull);\n+\n+      int result = dictionaryBuilder.addValues(vec);\n+\n+      if (encodeNull) {\n+        assertEquals(5, result);\n+        assertEquals(5, dictionary.getValueCount());\n+\n+\n+        assertEquals(4, dictionary.get(0));\n+        assertEquals(8, dictionary.get(1));\n+        assertEquals(32, dictionary.get(2));\n+        assertEquals(16, dictionary.get(3));\n+        assertTrue(dictionary.isNull(4));\n+      } else {\n \n Review comment:\n   see comment on other CL, we should either split up the test or parameterize expected values as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T06:17:26.070+0000",
                    "updated": "2019-08-14T06:17:26.070+0000",
                    "started": "2019-08-14T06:17:26.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294497",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/294586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T07:53:13.883+0000",
                    "updated": "2019-08-14T07:53:13.883+0000",
                    "started": "2019-08-14T07:53:13.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294586",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/294587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054\n \n \n   This is related ARROW-5862. We provide another type of dictionary builder based on hash table. Compared with a search based dictionary encoder, a hash table based encoder process each new element in O(1) time, but require extra memory space.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T07:54:35.712+0000",
                    "updated": "2019-08-14T07:54:35.712+0000",
                    "started": "2019-08-14T07:54:35.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294587",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/294589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#discussion_r313747566\n \n \n\n ##########\n File path: java/algorithm/src/test/java/org/apache/arrow/algorithm/dictionary/TestHashTableBasedDictionaryEncoder.java\n ##########\n @@ -0,0 +1,166 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.VarCharVector;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+/**\n+ * Test cases for {@link HashTableBasedDictionaryBuilder}.\n+ */\n+@RunWith(Parameterized.class)\n+public class TestHashTableBasedDictionaryEncoder {\n+\n+  private boolean encodeNull;\n+\n+  private BufferAllocator allocator;\n+\n+  public TestHashTableBasedDictionaryEncoder(boolean encodeNull) {\n+    this.encodeNull = encodeNull;\n+  }\n+\n+  @Before\n+  public void prepare() {\n+    allocator = new RootAllocator(1024 * 1024);\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testBuildVariableWidthDictionary() {\n+    try (VarCharVector vec = new VarCharVector(\"\", allocator);\n+         VarCharVector dictionary = new VarCharVector(\"\", allocator)) {\n+\n+      vec.allocateNew(100, 10);\n+      vec.setValueCount(10);\n+\n+      dictionary.allocateNew();\n+\n+      // fill data\n+      vec.set(0, \"hello\".getBytes());\n+      vec.set(1, \"abc\".getBytes());\n+      vec.setNull(2);\n+      vec.set(3, \"world\".getBytes());\n+      vec.set(4, \"12\".getBytes());\n+      vec.set(5, \"dictionary\".getBytes());\n+      vec.setNull(6);\n+      vec.set(7, \"hello\".getBytes());\n+      vec.set(8, \"good\".getBytes());\n+      vec.set(9, \"abc\".getBytes());\n+\n+      HashTableBasedDictionaryBuilder<VarCharVector> dictionaryBuilder =\n+              new HashTableBasedDictionaryBuilder<>(dictionary, encodeNull);\n+\n+      int result = dictionaryBuilder.addValues(vec);\n+\n+      if (encodeNull) {\n+        assertEquals(7, result);\n+        assertEquals(7, dictionary.getValueCount());\n+\n+        assertEquals(\"hello\", new String(dictionary.get(0)));\n+        assertEquals(\"abc\", new String(dictionary.get(1)));\n+        assertNull(dictionary.get(2));\n+        assertEquals(\"world\", new String(dictionary.get(3)));\n+        assertEquals(\"12\", new String(dictionary.get(4)));\n+        assertEquals(\"dictionary\", new String(dictionary.get(5)));\n+        assertEquals(\"good\", new String(dictionary.get(6)));\n+      } else {\n+        assertEquals(6, result);\n+        assertEquals(6, dictionary.getValueCount());\n+\n+        assertEquals(\"hello\", new String(dictionary.get(0)));\n+        assertEquals(\"abc\", new String(dictionary.get(1)));\n+        assertEquals(\"world\", new String(dictionary.get(2)));\n+        assertEquals(\"12\", new String(dictionary.get(3)));\n+        assertEquals(\"dictionary\", new String(dictionary.get(4)));\n+        assertEquals(\"good\", new String(dictionary.get(5)));\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testBuildFixedWidthDictionary() {\n+    try (IntVector vec = new IntVector(\"\", allocator);\n+         IntVector dictionary = new IntVector(\"\", allocator)) {\n+      vec.allocateNew(10);\n+      vec.setValueCount(10);\n+\n+      dictionary.allocateNew();\n+\n+      // fill data\n+      vec.set(0, 4);\n+      vec.set(1, 8);\n+      vec.set(2, 32);\n+      vec.set(3, 8);\n+      vec.set(4, 16);\n+      vec.set(5, 32);\n+      vec.setNull(6);\n+      vec.set(7, 4);\n+      vec.set(8, 4);\n+      vec.setNull(9);\n+\n+      HashTableBasedDictionaryBuilder<IntVector> dictionaryBuilder =\n+              new HashTableBasedDictionaryBuilder<>(dictionary, encodeNull);\n+\n+      int result = dictionaryBuilder.addValues(vec);\n+\n+      if (encodeNull) {\n+        assertEquals(5, result);\n+        assertEquals(5, dictionary.getValueCount());\n+\n+\n+        assertEquals(4, dictionary.get(0));\n+        assertEquals(8, dictionary.get(1));\n+        assertEquals(32, dictionary.get(2));\n+        assertEquals(16, dictionary.get(3));\n+        assertTrue(dictionary.isNull(4));\n+      } else {\n \n Review comment:\n   sure. tests split and javadoc updated.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T07:55:27.457+0000",
                    "updated": "2019-08-14T07:55:27.457+0000",
                    "started": "2019-08-14T07:55:27.457+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294589",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/294698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#issuecomment-520155521\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=h1) Report\n   > Merging [#5054](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cafb00fef833b38666d5c9ac74aeb0d87606df6e?src=pr&el=desc) will **increase** coverage by `1.67%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5054/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5054      +/-   ##\n   ==========================================\n   + Coverage   88.06%   89.73%   +1.67%     \n   ==========================================\n     Files         921      672     -249     \n     Lines      136032   100352   -35680     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       119799    90054   -29745     \n   + Misses      16223    10298    -5925     \n   + Partials       10        0      -10\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [js/src/builder/index.ts](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-anMvc3JjL2J1aWxkZXIvaW5kZXgudHM=) | | |\n   | ... and [241 more](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=footer). Last update [cafb00f...3752187](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T11:25:44.240+0000",
                    "updated": "2019-08-14T11:25:44.240+0000",
                    "started": "2019-08-14T11:25:44.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294698",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/295404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#issuecomment-520155521\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=h1) Report\n   > Merging [#5054](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3cc12abdbac324cb2e6a93fd2da0ff41929b6cac?src=pr&el=desc) will **increase** coverage by `2.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5054/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5054      +/-   ##\n   ==========================================\n   + Coverage   87.63%   89.74%    +2.1%     \n   ==========================================\n     Files        1014      674     -340     \n     Lines      144947   100382   -44565     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       127030    90086   -36944     \n   + Misses      17555    10296    -7259     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | ... and [334 more](https://codecov.io/gh/apache/arrow/pull/5054/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=footer). Last update [3cc12ab...77e2453](https://codecov.io/gh/apache/arrow/pull/5054?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T11:54:28.931+0000",
                    "updated": "2019-08-15T11:54:28.931+0000",
                    "started": "2019-08-15T11:54:28.931+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295404",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/296024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054#issuecomment-521869896\n \n \n   +1 thank you.  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T03:19:34.500+0000",
                    "updated": "2019-08-16T03:19:34.500+0000",
                    "started": "2019-08-16T03:19:34.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296024",
                    "issueId": "13249826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/worklog/296027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5054: ARROW-6185: [Java] Provide hash table based dictionary builder\nURL: https://github.com/apache/arrow/pull/5054\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T03:20:10.273+0000",
                    "updated": "2019-08-16T03:20:10.273+0000",
                    "started": "2019-08-16T03:20:10.272+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296027",
                    "issueId": "13249826"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1f1ba96b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ad48bd6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1658fc19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@68ac5f3f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40c800b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2786517[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5391f975[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@594e119f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39a2ce65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@78b3549b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24b540a9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@d5e7f49[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 16 03:20:46 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-16T03:20:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6185/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-09T06:41:58.000+0000",
        "updated": "2019-08-16T03:20:46.000+0000",
        "timeoriginalestimate": null,
        "description": "This is related ARROW-5862. We provide another type of dictionary builder based on hash table. Compared with a search based dictionary encoder, a hash table based encoder process each new element in O(1) time,\u00a0but require extra memory space.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Provide hash table based dictionary builder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826/comment/16908673",
                    "id": "16908673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5054\n[https://github.com/apache/arrow/pull/5054]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-16T03:20:46.559+0000",
                    "updated": "2019-08-16T03:20:46.559+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05hv4:",
        "customfield_12314139": null
    }
}