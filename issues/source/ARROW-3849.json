{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13200003",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003",
    "key": "ARROW-3849",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yqGu",
            "name": "yqGu",
            "key": "yqgu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yqgu&avatarId=45453",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yqgu&avatarId=45453",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yqgu&avatarId=45453",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yqgu&avatarId=45453"
            },
            "displayName": "Yuqi Gu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yqGu",
            "name": "yqGu",
            "key": "yqgu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yqgu&avatarId=45453",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yqgu&avatarId=45453",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yqgu&avatarId=45453",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yqgu&avatarId=45453"
            },
            "displayName": "Yuqi Gu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10430",
                "value": "Patch",
                "id": "10430",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3849/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi opened a new pull request #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010\n \n \n   The 'Hash utility' leverages SSE4 to accelerate the Crc32 data hash computation for x86.\r\n   Correspondingly, we will leverage the Arm crc32 extension instructions\r\n   to accelerate the hash computation for Arm64.\r\n   \r\n   1. Add Arm hardware Crc32 support.\r\n   \r\n   2. Add the hash computing mode respectively:\r\n   - USE_DEFAULT: Murmur2-64\r\n   - USE_SSE42\r\n   - USE_ARMCRC\r\n   \r\n   2. Modify the cmake configuration to detect whether the Arm architecture is supported or not on compiling phase.  The code will also do a Crc32 run time check(only available for Linux). \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T09:23:30.833+0000",
                    "updated": "2018-11-22T09:23:30.833+0000",
                    "started": "2018-11-22T09:23:30.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168717",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-440966999\n \n \n   Unit Tests on x86(Xeon E5-2650):\r\n   `Test project /home/builder/arrow/cpp/bld\r\n         Start  1: allocator-test\r\n    1/40 Test  #1: allocator-test ...................   Passed    0.16 sec\r\n         Start  2: array-test\r\n    2/40 Test  #2: array-test .......................   Passed    2.06 sec\r\n         Start  3: buffer-test\r\n    3/40 Test  #3: buffer-test ......................   Passed    0.14 sec\r\n         Start  4: memory_pool-test\r\n    4/40 Test  #4: memory_pool-test .................   Passed    0.13 sec\r\n         Start  5: pretty_print-test\r\n    5/40 Test  #5: pretty_print-test ................   Passed    0.15 sec\r\n         Start  6: public-api-test\r\n    6/40 Test  #6: public-api-test ..................   Passed    0.17 sec\r\n         Start  7: status-test\r\n    7/40 Test  #7: status-test ......................   Passed    0.15 sec\r\n         Start  8: stl-test\r\n    8/40 Test  #8: stl-test .........................   Passed    0.17 sec\r\n         Start  9: type-test\r\n    9/40 Test  #9: type-test ........................   Passed    0.16 sec\r\n         Start 10: table-test\r\n   10/40 Test #10: table-test .......................   Passed    0.16 sec\r\n         Start 11: table_builder-test\r\n   11/40 Test #11: table_builder-test ...............   Passed    0.17 sec\r\n         Start 12: tensor-test\r\n   12/40 Test #12: tensor-test ......................   Passed    0.16 sec\r\n         Start 13: compute-test\r\n   13/40 Test #13: compute-test .....................   Passed    0.46 sec\r\n         Start 14: feather-test\r\n   14/40 Test #14: feather-test .....................   Passed    0.29 sec\r\n         Start 15: ipc-read-write-test\r\n   15/40 Test #15: ipc-read-write-test ..............   Passed    1.45 sec\r\n         Start 16: ipc-json-test\r\n   16/40 Test #16: ipc-json-test ....................   Passed    0.21 sec\r\n         Start 17: json-integration-test\r\n   17/40 Test #17: json-integration-test ............   Passed    0.15 sec\r\n         Start 18: csv-chunker-test\r\n   18/40 Test #18: csv-chunker-test .................   Passed    0.16 sec\r\n         Start 19: csv-column-builder-test\r\n   19/40 Test #19: csv-column-builder-test ..........   Passed    0.16 sec\r\n         Start 20: csv-converter-test\r\n   20/40 Test #20: csv-converter-test ...............   Passed    0.17 sec\r\n         Start 21: csv-parser-test\r\n   21/40 Test #21: csv-parser-test ..................   Passed    0.15 sec\r\n         Start 22: io-buffered-test\r\n   22/40 Test #22: io-buffered-test .................   Passed    0.19 sec\r\n         Start 23: io-compressed-test\r\n   23/40 Test #23: io-compressed-test ...............   Passed    4.22 sec\r\n         Start 24: io-file-test\r\n   24/40 Test #24: io-file-test .....................   Passed    0.45 sec\r\n         Start 25: io-hdfs-test\r\n   25/40 Test #25: io-hdfs-test .....................   Passed    0.15 sec\r\n         Start 26: io-memory-test\r\n   26/40 Test #26: io-memory-test ...................   Passed    1.23 sec\r\n         Start 27: io-readahead-test\r\n   27/40 Test #27: io-readahead-test ................   Passed    0.31 sec\r\n         Start 28: bit-util-test\r\n   28/40 Test #28: bit-util-test ....................   Passed    0.34 sec\r\n         Start 29: checked-cast-test\r\n   29/40 Test #29: checked-cast-test ................   Passed    0.16 sec\r\n         Start 30: compression-test\r\n   30/40 Test #30: compression-test .................   Passed    0.39 sec\r\n         Start 31: decimal-test\r\n   31/40 Test #31: decimal-test .....................   Passed    0.17 sec\r\n         Start 32: key-value-metadata-test\r\n   32/40 Test #32: key-value-metadata-test ..........   Passed    0.14 sec\r\n         Start 33: lazy-test\r\n   33/40 Test #33: lazy-test ........................   Passed    0.15 sec\r\n         Start 34: logging-test\r\n   34/40 Test #34: logging-test .....................   Passed    0.27 sec\r\n         Start 35: parsing-util-test\r\n   35/40 Test #35: parsing-util-test ................   Passed    0.15 sec\r\n         Start 36: rle-encoding-test\r\n   36/40 Test #36: rle-encoding-test ................   Passed    0.28 sec\r\n         Start 37: stl-util-test\r\n   37/40 Test #37: stl-util-test ....................   Passed    0.17 sec\r\n         Start 38: task-group-test\r\n   38/40 Test #38: task-group-test ..................   Passed    0.40 sec\r\n         Start 39: thread-pool-test\r\n   39/40 Test #39: thread-pool-test .................   Passed    0.84 sec\r\n         Start 40: utf8-util-test\r\n   40/40 Test #40: utf8-util-test ...................   Passed    0.18 sec\r\n   \r\n   100% tests passed, 0 tests failed out of 40\r\n   `\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T09:28:33.219+0000",
                    "updated": "2018-11-22T09:28:33.219+0000",
                    "started": "2018-11-22T09:28:33.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168718",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi edited a comment on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-440966999\n \n \n   Unit Tests on x86(Xeon E5-2650):\r\n   \r\n   ```\r\n   Test project /home/builder/arrow/cpp/bld\r\n         Start  1: allocator-test\r\n    1/40 Test  #1: allocator-test ...................   Passed    0.16 sec\r\n         Start  2: array-test\r\n    2/40 Test  #2: array-test .......................   Passed    2.06 sec\r\n         Start  3: buffer-test\r\n    3/40 Test  #3: buffer-test ......................   Passed    0.14 sec\r\n         Start  4: memory_pool-test\r\n    4/40 Test  #4: memory_pool-test .................   Passed    0.13 sec\r\n         Start  5: pretty_print-test\r\n    5/40 Test  #5: pretty_print-test ................   Passed    0.15 sec\r\n         Start  6: public-api-test\r\n    6/40 Test  #6: public-api-test ..................   Passed    0.17 sec\r\n         Start  7: status-test\r\n    7/40 Test  #7: status-test ......................   Passed    0.15 sec\r\n         Start  8: stl-test\r\n    8/40 Test  #8: stl-test .........................   Passed    0.17 sec\r\n         Start  9: type-test\r\n    9/40 Test  #9: type-test ........................   Passed    0.16 sec\r\n         Start 10: table-test\r\n   10/40 Test #10: table-test .......................   Passed    0.16 sec\r\n         Start 11: table_builder-test\r\n   11/40 Test #11: table_builder-test ...............   Passed    0.17 sec\r\n         Start 12: tensor-test\r\n   12/40 Test #12: tensor-test ......................   Passed    0.16 sec\r\n         Start 13: compute-test\r\n   13/40 Test #13: compute-test .....................   Passed    0.46 sec\r\n         Start 14: feather-test\r\n   14/40 Test #14: feather-test .....................   Passed    0.29 sec\r\n         Start 15: ipc-read-write-test\r\n   15/40 Test #15: ipc-read-write-test ..............   Passed    1.45 sec\r\n         Start 16: ipc-json-test\r\n   16/40 Test #16: ipc-json-test ....................   Passed    0.21 sec\r\n         Start 17: json-integration-test\r\n   17/40 Test #17: json-integration-test ............   Passed    0.15 sec\r\n         Start 18: csv-chunker-test\r\n   18/40 Test #18: csv-chunker-test .................   Passed    0.16 sec\r\n         Start 19: csv-column-builder-test\r\n   19/40 Test #19: csv-column-builder-test ..........   Passed    0.16 sec\r\n         Start 20: csv-converter-test\r\n   20/40 Test #20: csv-converter-test ...............   Passed    0.17 sec\r\n         Start 21: csv-parser-test\r\n   21/40 Test #21: csv-parser-test ..................   Passed    0.15 sec\r\n         Start 22: io-buffered-test\r\n   22/40 Test #22: io-buffered-test .................   Passed    0.19 sec\r\n         Start 23: io-compressed-test\r\n   23/40 Test #23: io-compressed-test ...............   Passed    4.22 sec\r\n         Start 24: io-file-test\r\n   24/40 Test #24: io-file-test .....................   Passed    0.45 sec\r\n         Start 25: io-hdfs-test\r\n   25/40 Test #25: io-hdfs-test .....................   Passed    0.15 sec\r\n         Start 26: io-memory-test\r\n   26/40 Test #26: io-memory-test ...................   Passed    1.23 sec\r\n         Start 27: io-readahead-test\r\n   27/40 Test #27: io-readahead-test ................   Passed    0.31 sec\r\n         Start 28: bit-util-test\r\n   28/40 Test #28: bit-util-test ....................   Passed    0.34 sec\r\n         Start 29: checked-cast-test\r\n   29/40 Test #29: checked-cast-test ................   Passed    0.16 sec\r\n         Start 30: compression-test\r\n   30/40 Test #30: compression-test .................   Passed    0.39 sec\r\n         Start 31: decimal-test\r\n   31/40 Test #31: decimal-test .....................   Passed    0.17 sec\r\n         Start 32: key-value-metadata-test\r\n   32/40 Test #32: key-value-metadata-test ..........   Passed    0.14 sec\r\n         Start 33: lazy-test\r\n   33/40 Test #33: lazy-test ........................   Passed    0.15 sec\r\n         Start 34: logging-test\r\n   34/40 Test #34: logging-test .....................   Passed    0.27 sec\r\n         Start 35: parsing-util-test\r\n   35/40 Test #35: parsing-util-test ................   Passed    0.15 sec\r\n         Start 36: rle-encoding-test\r\n   36/40 Test #36: rle-encoding-test ................   Passed    0.28 sec\r\n         Start 37: stl-util-test\r\n   37/40 Test #37: stl-util-test ....................   Passed    0.17 sec\r\n         Start 38: task-group-test\r\n   38/40 Test #38: task-group-test ..................   Passed    0.40 sec\r\n         Start 39: thread-pool-test\r\n   39/40 Test #39: thread-pool-test .................   Passed    0.84 sec\r\n         Start 40: utf8-util-test\r\n   40/40 Test #40: utf8-util-test ...................   Passed    0.18 sec\r\n   \r\n   100% tests passed, 0 tests failed out of 40\r\n   \r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T09:31:37.548+0000",
                    "updated": "2018-11-22T09:31:37.548+0000",
                    "started": "2018-11-22T09:31:37.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168720",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi edited a comment on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-440966999\n \n \n   Unit Tests are passed on Arm64 and x86(Xeon E5-2650):\r\n   \r\n   Arm64:\r\n   \r\n   ```\r\n   Test project /home/linux/arrow/cpp/bld\r\n         Start  1: allocator-test\r\n    1/39 Test  #1: allocator-test ...................   Passed    0.15 sec\r\n         Start  2: array-test\r\n    2/39 Test  #2: array-test .......................   Passed    5.06 sec\r\n         Start  3: buffer-test\r\n    3/39 Test  #3: buffer-test ......................   Passed    0.14 sec\r\n         Start  4: memory_pool-test\r\n    4/39 Test  #4: memory_pool-test .................   Passed    0.15 sec\r\n         Start  5: pretty_print-test\r\n    5/39 Test  #5: pretty_print-test ................   Passed    0.14 sec\r\n         Start  6: public-api-test\r\n    6/39 Test  #6: public-api-test ..................   Passed    0.15 sec\r\n         Start  7: status-test\r\n    7/39 Test  #7: status-test ......................   Passed    0.14 sec\r\n         Start  8: stl-test\r\n    8/39 Test  #8: stl-test .........................   Passed    0.14 sec\r\n         Start  9: type-test\r\n    9/39 Test  #9: type-test ........................   Passed    0.15 sec\r\n         Start 10: table-test\r\n   10/39 Test #10: table-test .......................   Passed    0.14 sec\r\n         Start 11: table_builder-test\r\n   11/39 Test #11: table_builder-test ...............   Passed    0.14 sec\r\n         Start 12: tensor-test\r\n   12/39 Test #12: tensor-test ......................   Passed    0.14 sec\r\n         Start 13: compute-test\r\n   13/39 Test #13: compute-test .....................   Passed    0.79 sec\r\n         Start 14: feather-test\r\n   14/39 Test #14: feather-test .....................   Passed    0.35 sec\r\n         Start 15: ipc-read-write-test\r\n   15/39 Test #15: ipc-read-write-test ..............   Passed    5.96 sec\r\n         Start 16: ipc-json-test\r\n   16/39 Test #16: ipc-json-test ....................   Passed    0.23 sec\r\n         Start 17: json-integration-test\r\n   17/39 Test #17: json-integration-test ............   Passed    0.14 sec\r\n         Start 18: csv-chunker-test\r\n   18/39 Test #18: csv-chunker-test .................   Passed    0.14 sec\r\n         Start 19: csv-column-builder-test\r\n   19/39 Test #19: csv-column-builder-test ..........   Passed    0.15 sec\r\n         Start 20: csv-converter-test\r\n   20/39 Test #20: csv-converter-test ...............   Passed    0.14 sec\r\n         Start 21: csv-parser-test\r\n   21/39 Test #21: csv-parser-test ..................   Passed    0.14 sec\r\n         Start 22: io-buffered-test\r\n   22/39 Test #22: io-buffered-test .................   Passed    0.20 sec\r\n         Start 23: io-compressed-test\r\n   23/39 Test #23: io-compressed-test ...............   Passed   13.25 sec\r\n         Start 24: io-file-test\r\n   24/39 Test #24: io-file-test .....................   Passed    0.62 sec\r\n         Start 25: io-hdfs-test\r\n   25/39 Test #25: io-hdfs-test .....................   Passed    0.15 sec\r\n         Start 26: io-memory-test\r\n   26/39 Test #26: io-memory-test ...................   Passed    2.43 sec\r\n         Start 27: io-readahead-test\r\n   27/39 Test #27: io-readahead-test ................   Passed    0.68 sec\r\n         Start 28: bit-util-test\r\n   28/39 Test #28: bit-util-test ....................   Passed    0.59 sec\r\n         Start 29: checked-cast-test\r\n   29/39 Test #29: checked-cast-test ................   Passed    0.14 sec\r\n         Start 30: compression-test\r\n   30/39 Test #30: compression-test .................   Passed    0.67 sec\r\n         Start 31: decimal-test\r\n   31/39 Test #31: decimal-test .....................   Passed    0.15 sec\r\n         Start 32: key-value-metadata-test\r\n   32/39 Test #32: key-value-metadata-test ..........   Passed    0.14 sec\r\n         Start 33: rle-encoding-test\r\n   33/39 Test #33: rle-encoding-test ................   Passed    0.42 sec\r\n         Start 34: parsing-util-test\r\n   34/39 Test #34: parsing-util-test ................   Passed    0.14 sec\r\n         Start 35: stl-util-test\r\n   35/39 Test #35: stl-util-test ....................   Passed    0.14 sec\r\n         Start 36: thread-pool-test\r\n   36/39 Test #36: thread-pool-test .................   Passed    0.55 sec\r\n         Start 37: task-group-test\r\n   37/39 Test #37: task-group-test ..................   Passed    0.32 sec\r\n         Start 38: lazy-test\r\n   38/39 Test #38: lazy-test ........................   Passed    0.14 sec\r\n         Start 39: logging-test\r\n   39/39 Test #39: logging-test .....................   Passed    0.56 sec\r\n   \r\n   100% tests passed, 0 tests failed out of 39\r\n   ```\r\n   \r\n   \r\n   \r\n   \r\n   x86:\r\n   ```\r\n   Test project /home/builder/arrow/cpp/bld\r\n         Start  1: allocator-test\r\n    1/40 Test  #1: allocator-test ...................   Passed    0.16 sec\r\n         Start  2: array-test\r\n    2/40 Test  #2: array-test .......................   Passed    2.06 sec\r\n         Start  3: buffer-test\r\n    3/40 Test  #3: buffer-test ......................   Passed    0.14 sec\r\n         Start  4: memory_pool-test\r\n    4/40 Test  #4: memory_pool-test .................   Passed    0.13 sec\r\n         Start  5: pretty_print-test\r\n    5/40 Test  #5: pretty_print-test ................   Passed    0.15 sec\r\n         Start  6: public-api-test\r\n    6/40 Test  #6: public-api-test ..................   Passed    0.17 sec\r\n         Start  7: status-test\r\n    7/40 Test  #7: status-test ......................   Passed    0.15 sec\r\n         Start  8: stl-test\r\n    8/40 Test  #8: stl-test .........................   Passed    0.17 sec\r\n         Start  9: type-test\r\n    9/40 Test  #9: type-test ........................   Passed    0.16 sec\r\n         Start 10: table-test\r\n   10/40 Test #10: table-test .......................   Passed    0.16 sec\r\n         Start 11: table_builder-test\r\n   11/40 Test #11: table_builder-test ...............   Passed    0.17 sec\r\n         Start 12: tensor-test\r\n   12/40 Test #12: tensor-test ......................   Passed    0.16 sec\r\n         Start 13: compute-test\r\n   13/40 Test #13: compute-test .....................   Passed    0.46 sec\r\n         Start 14: feather-test\r\n   14/40 Test #14: feather-test .....................   Passed    0.29 sec\r\n         Start 15: ipc-read-write-test\r\n   15/40 Test #15: ipc-read-write-test ..............   Passed    1.45 sec\r\n         Start 16: ipc-json-test\r\n   16/40 Test #16: ipc-json-test ....................   Passed    0.21 sec\r\n         Start 17: json-integration-test\r\n   17/40 Test #17: json-integration-test ............   Passed    0.15 sec\r\n         Start 18: csv-chunker-test\r\n   18/40 Test #18: csv-chunker-test .................   Passed    0.16 sec\r\n         Start 19: csv-column-builder-test\r\n   19/40 Test #19: csv-column-builder-test ..........   Passed    0.16 sec\r\n         Start 20: csv-converter-test\r\n   20/40 Test #20: csv-converter-test ...............   Passed    0.17 sec\r\n         Start 21: csv-parser-test\r\n   21/40 Test #21: csv-parser-test ..................   Passed    0.15 sec\r\n         Start 22: io-buffered-test\r\n   22/40 Test #22: io-buffered-test .................   Passed    0.19 sec\r\n         Start 23: io-compressed-test\r\n   23/40 Test #23: io-compressed-test ...............   Passed    4.22 sec\r\n         Start 24: io-file-test\r\n   24/40 Test #24: io-file-test .....................   Passed    0.45 sec\r\n         Start 25: io-hdfs-test\r\n   25/40 Test #25: io-hdfs-test .....................   Passed    0.15 sec\r\n         Start 26: io-memory-test\r\n   26/40 Test #26: io-memory-test ...................   Passed    1.23 sec\r\n         Start 27: io-readahead-test\r\n   27/40 Test #27: io-readahead-test ................   Passed    0.31 sec\r\n         Start 28: bit-util-test\r\n   28/40 Test #28: bit-util-test ....................   Passed    0.34 sec\r\n         Start 29: checked-cast-test\r\n   29/40 Test #29: checked-cast-test ................   Passed    0.16 sec\r\n         Start 30: compression-test\r\n   30/40 Test #30: compression-test .................   Passed    0.39 sec\r\n         Start 31: decimal-test\r\n   31/40 Test #31: decimal-test .....................   Passed    0.17 sec\r\n         Start 32: key-value-metadata-test\r\n   32/40 Test #32: key-value-metadata-test ..........   Passed    0.14 sec\r\n         Start 33: lazy-test\r\n   33/40 Test #33: lazy-test ........................   Passed    0.15 sec\r\n         Start 34: logging-test\r\n   34/40 Test #34: logging-test .....................   Passed    0.27 sec\r\n         Start 35: parsing-util-test\r\n   35/40 Test #35: parsing-util-test ................   Passed    0.15 sec\r\n         Start 36: rle-encoding-test\r\n   36/40 Test #36: rle-encoding-test ................   Passed    0.28 sec\r\n         Start 37: stl-util-test\r\n   37/40 Test #37: stl-util-test ....................   Passed    0.17 sec\r\n         Start 38: task-group-test\r\n   38/40 Test #38: task-group-test ..................   Passed    0.40 sec\r\n         Start 39: thread-pool-test\r\n   39/40 Test #39: thread-pool-test .................   Passed    0.84 sec\r\n         Start 40: utf8-util-test\r\n   40/40 Test #40: utf8-util-test ...................   Passed    0.18 sec\r\n   \r\n   100% tests passed, 0 tests failed out of 40\r\n   \r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T09:34:00.537+0000",
                    "updated": "2018-11-22T09:34:00.537+0000",
                    "started": "2018-11-22T09:34:00.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168722",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-440979416\n \n \n   Hi @guyuqi,\r\n   \r\n   Thanks a lot for doing this. Could I ask you to base your work on PR #3005? It refactors most of the hashing machinery and also adds some hashing benchmarks that you may be interested to run (and hopefully report results here).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T10:10:01.557+0000",
                    "updated": "2018-11-22T10:10:01.557+0000",
                    "started": "2018-11-22T10:10:01.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168734",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-441054887\n \n \n   +1 re basing on #3005. I will work on reviewing that today so we can merge soon\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T14:58:26.484+0000",
                    "updated": "2018-11-22T14:58:26.484+0000",
                    "started": "2018-11-22T14:58:26.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168814",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-441091047\n \n \n   @guyuqi what arm64 platform / system are you running this one? I wonder if there are public CI services available that we could use for testing on ARM\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T17:30:04.165+0000",
                    "updated": "2018-11-22T17:30:04.165+0000",
                    "started": "2018-11-22T17:30:04.164+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168873",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-441142299\n \n \n   \r\n   \r\n   \r\n   > +1 re basing on #3005. I will work on reviewing that today so we can merge soon\r\n   \r\n   OK, I'll rebase this PR on #3005.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T01:47:08.746+0000",
                    "updated": "2018-11-23T01:47:08.746+0000",
                    "started": "2018-11-23T01:47:08.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168950",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/168953",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3010: ARROW-3849: Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#issuecomment-441146909\n \n \n   This was merged to master so you can rebase on master now \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T02:53:14.182+0000",
                    "updated": "2018-11-23T02:53:14.182+0000",
                    "started": "2018-11-23T02:53:14.181+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168953",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r235900427\n \n \n\n ##########\n File path: cpp/cmake_modules/SetupCxxFlags.cmake\n ##########\n @@ -231,6 +231,26 @@ if (APPLE)\n   set(CXX_COMMON_FLAGS \"${CXX_COMMON_FLAGS} -stdlib=libc++\")\n endif()\n \n+if (CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|AARCH64\")\n+  CHECK_CXX_SOURCE_COMPILES(\"\n \n Review comment:\n   Is this required?\r\n   \r\n   By the way there are CRC intrinsics for ARM64 and an accompanying preprocessor macro. See example at https://stackoverflow.com/questions/37066261/why-is-arm-feature-crc32-not-being-defined-by-the-compiler\r\n   \r\n   (more doc at https://gcc.gnu.org/onlinedocs/gcc/ARM-C-Language-Extensions-_0028ACLE_0029.html#ARM-C-Language-Extensions-_0028ACLE_0029 apparently)\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T10:33:21.006+0000",
                    "updated": "2018-11-23T10:33:21.006+0000",
                    "started": "2018-11-23T10:33:21.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169014",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r235903938\n \n \n\n ##########\n File path: cpp/src/arrow/util/config.in.cmake\n ##########\n @@ -0,0 +1,32 @@\n+/*  Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+\n+ This module sets the following variables in your project::\n+\n+   arrow_FOUND - true if arrow found on the system   */\n+\n+/* my_config.h file expanded by Cmake for build */\n+\n+\n+#ifndef MY_CONFIG_H\n+#define MY_CONFIG_H\n+\n+/* Support Armv8 CRC instructions  */\n+#cmakedefine ARROW_USE_ARMCE 1\n \n Review comment:\n   This file shouldn't be required. Instead you can add preprocessor definitions directly in the cmake files, using e.g. the [add_definitions](https://cmake.org/cmake/help/v3.13/command/add_definitions.html?highlight=add_definition) command.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T10:46:43.967+0000",
                    "updated": "2018-11-23T10:46:43.967+0000",
                    "started": "2018-11-23T10:46:43.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169017",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236078601\n \n \n\n ##########\n File path: cpp/src/arrow/util/config.in.cmake\n ##########\n @@ -0,0 +1,32 @@\n+/*  Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+\n+ This module sets the following variables in your project::\n+\n+   arrow_FOUND - true if arrow found on the system   */\n+\n+/* my_config.h file expanded by Cmake for build */\n+\n+\n+#ifndef MY_CONFIG_H\n+#define MY_CONFIG_H\n+\n+/* Support Armv8 CRC instructions  */\n+#cmakedefine ARROW_USE_ARMCE 1\n \n Review comment:\n   Really thanks for comments.\r\n   'add_definitions' looks like a switch to enable/disable the macro by the command like \r\n   \"cmake \u3000-Dxxx\uff1don/off\".\r\n   In my opinion, it's better to detect whether the macro is supported or not on cmake phase and dynamically  to define or not define the Macro related.  And it is also convenient and explicit to manage the macro definition.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T15:51:00.713+0000",
                    "updated": "2018-11-25T15:51:00.713+0000",
                    "started": "2018-11-25T15:51:00.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169204",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236079550\n \n \n\n ##########\n File path: cpp/cmake_modules/SetupCxxFlags.cmake\n ##########\n @@ -231,6 +231,26 @@ if (APPLE)\n   set(CXX_COMMON_FLAGS \"${CXX_COMMON_FLAGS} -stdlib=libc++\")\n endif()\n \n+if (CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|AARCH64\")\n+  CHECK_CXX_SOURCE_COMPILES(\"\n \n Review comment:\n   Thanks for your comments.\r\n   First I request crc extension capabilities from the assembler and detect the flags \"-march=armv8-a+crc\" for Arm64 crc intrinsics. I think it's also a reliable solution.  :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T16:14:47.284+0000",
                    "updated": "2018-11-25T16:14:47.284+0000",
                    "started": "2018-11-25T16:14:47.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169206",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236079550\n \n \n\n ##########\n File path: cpp/cmake_modules/SetupCxxFlags.cmake\n ##########\n @@ -231,6 +231,26 @@ if (APPLE)\n   set(CXX_COMMON_FLAGS \"${CXX_COMMON_FLAGS} -stdlib=libc++\")\n endif()\n \n+if (CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|AARCH64\")\n+  CHECK_CXX_SOURCE_COMPILES(\"\n \n Review comment:\n   Thanks for your comments.\r\n   First I request crc extension capabilities from the assembler , and then detect the flags \"-march=armv8-a+crc\" for Arm64 crc intrinsics. I think it's also a reliable solution.  :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T16:15:16.025+0000",
                    "updated": "2018-11-25T16:15:16.025+0000",
                    "started": "2018-11-25T16:15:16.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169207",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236244897\n \n \n\n ##########\n File path: cpp/src/arrow/util/config.in.cmake\n ##########\n @@ -0,0 +1,32 @@\n+/*  Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+\n+ This module sets the following variables in your project::\n+\n+   arrow_FOUND - true if arrow found on the system   */\n+\n+/* my_config.h file expanded by Cmake for build */\n+\n+\n+#ifndef MY_CONFIG_H\n+#define MY_CONFIG_H\n+\n+/* Support Armv8 CRC instructions  */\n+#cmakedefine ARROW_USE_ARMCE 1\n \n Review comment:\n   As the doc says, it \"Adds definitions to the **compiler command line**\" (emphasis mine). So you can use it to define a preprocessor symbol.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T13:02:57.887+0000",
                    "updated": "2018-11-26T13:02:57.887+0000",
                    "started": "2018-11-26T13:02:57.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169327",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236245362\n \n \n\n ##########\n File path: cpp/cmake_modules/SetupCxxFlags.cmake\n ##########\n @@ -231,6 +231,26 @@ if (APPLE)\n   set(CXX_COMMON_FLAGS \"${CXX_COMMON_FLAGS} -stdlib=libc++\")\n endif()\n \n+if (CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|AARCH64\")\n+  CHECK_CXX_SOURCE_COMPILES(\"\n \n Review comment:\n   But the point is, it adds gratuitous complication. Testing for `-march=armv8-a+crc` should be sufficient.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T13:04:37.030+0000",
                    "updated": "2018-11-26T13:04:37.030+0000",
                    "started": "2018-11-26T13:04:37.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169328",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236245712\n \n \n\n ##########\n File path: cpp/src/arrow/util/armce-util.h\n ##########\n @@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef ARROW_UTIL_ARMCE_UTIL_H\n+#define ARROW_UTIL_ARMCE_UTIL_H\n+\n+#include \"my_config.h\"\n+\n+namespace arrow {\n+\n+#if defined(__GNUC__) && defined(__linux__) && defined(ARROW_HAVE_ARMCE)\n+\n+#include <sys/auxv.h>\n+#include <asm/hwcap.h>\n+#ifndef HWCAP_CRC32\n+#define HWCAP_CRC32 (1 << 7)\n+#endif\n+static inline uint32_t crc32c_runtime_check(void)\n+{\n+        unsigned long auxv = getauxval(AT_HWCAP);\n+        return (auxv & HWCAP_CRC32) != 0;\n+}\n+\n+#ifdef HAVE_ARMV8_CRC_INTRINSICS\n+// compiler intrinsics.\n+#include <arm_acle.h>\n+#include <arm_neon.h>\n+\n+#define ARMCE_crc32_u8   __crc32cb\n+#define ARMCE_crc32_u16  __crc32ch\n+#define ARMCE_crc32_u32  __crc32cw\n+#define ARMCE_crc32_u64  __crc32cd\n+\n+#else\n+// Request crc extension capabilities from the assembler\n+asm(\".arch_extension crc\");\n+\n+// define our own implementations of the intrinsics instead.\n+static inline uint32_t ARMCE_crc32_u8(uint32_t crc, uint8_t value) {\n+  __asm__(\"crc32cb %w[c], %w[c], %w[v]\":[c]\"+r\"(crc):[v]\"r\"(value));\n \n Review comment:\n   I'd rather use the official intrinsics if possible. Inline assembler adds a maintenance burden.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T13:05:51.858+0000",
                    "updated": "2018-11-26T13:05:51.858+0000",
                    "started": "2018-11-26T13:05:51.858+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169329",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236245712\n \n \n\n ##########\n File path: cpp/src/arrow/util/armce-util.h\n ##########\n @@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef ARROW_UTIL_ARMCE_UTIL_H\n+#define ARROW_UTIL_ARMCE_UTIL_H\n+\n+#include \"my_config.h\"\n+\n+namespace arrow {\n+\n+#if defined(__GNUC__) && defined(__linux__) && defined(ARROW_HAVE_ARMCE)\n+\n+#include <sys/auxv.h>\n+#include <asm/hwcap.h>\n+#ifndef HWCAP_CRC32\n+#define HWCAP_CRC32 (1 << 7)\n+#endif\n+static inline uint32_t crc32c_runtime_check(void)\n+{\n+        unsigned long auxv = getauxval(AT_HWCAP);\n+        return (auxv & HWCAP_CRC32) != 0;\n+}\n+\n+#ifdef HAVE_ARMV8_CRC_INTRINSICS\n+// compiler intrinsics.\n+#include <arm_acle.h>\n+#include <arm_neon.h>\n+\n+#define ARMCE_crc32_u8   __crc32cb\n+#define ARMCE_crc32_u16  __crc32ch\n+#define ARMCE_crc32_u32  __crc32cw\n+#define ARMCE_crc32_u64  __crc32cd\n+\n+#else\n+// Request crc extension capabilities from the assembler\n+asm(\".arch_extension crc\");\n+\n+// define our own implementations of the intrinsics instead.\n+static inline uint32_t ARMCE_crc32_u8(uint32_t crc, uint8_t value) {\n+  __asm__(\"crc32cb %w[c], %w[c], %w[v]\":[c]\"+r\"(crc):[v]\"r\"(value));\n \n Review comment:\n   I'd rather only use the official intrinsics if possible. Inline assembler adds a maintenance burden.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T13:08:31.778+0000",
                    "updated": "2018-11-26T13:08:31.778+0000",
                    "started": "2018-11-26T13:08:31.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169330",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236247353\n \n \n\n ##########\n File path: cpp/src/arrow/util/hash-util.h\n ##########\n @@ -288,18 +365,49 @@ class HashUtil {\n   }\n };\n \n-// With sse4.2\n+// Hash specialized for Arm Crc32\n+template <>\n+inline int HashUtil::Hash<USE_ARMCRC>(const void* data, int32_t bytes, uint32_t seed) {\n+  // Need run time check\n+  if (crc32c_runtime_check())\n+    return static_cast<int>(HashUtil::CrcHashARMCE(data, bytes, seed));\n+  else\n+  // Fall back to Murmur\n+    return static_cast<int>(HashUtil::MurmurHash2_64(data, bytes, seed));\n+}\n+\n+\n+// Hash specialized for sse4.2\n template <>\n-inline int HashUtil::Hash<true>(const void* data, int32_t bytes, uint32_t seed) {\n-  return static_cast<int>(HashUtil::CrcHash(data, bytes, seed));\n+inline int HashUtil::Hash<USE_SSE42>(const void* data, int32_t bytes, uint32_t seed) {\n+  return static_cast<int>(HashUtil::CrcHashSSE(data, bytes, seed));\n }\n \n-// Non-sse4 hash\n+// Hash specialized for default murmur hash\n template <>\n-inline int HashUtil::Hash<false>(const void* data, int32_t bytes, uint32_t seed) {\n+inline int HashUtil::Hash<USE_DEFAULT>(const void* data, int32_t bytes, uint32_t seed) {\n   return static_cast<int>(HashUtil::MurmurHash2_64(data, bytes, seed));\n }\n \n+// DoubleHash specialized for Arm Crc32\n+template <>\n+inline int HashUtil::DoubleHash<USE_ARMCRC>(const void* data, int32_t bytes, uint32_t seed) {\n+  // Need run time check\n+  if (crc32c_runtime_check())\n \n Review comment:\n   Just for the record, is the runtime check cheap? The hash function will often be called for smallish strings, e.g. 20 to 40 bytes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T13:12:09.265+0000",
                    "updated": "2018-11-26T13:12:09.265+0000",
                    "started": "2018-11-26T13:12:09.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169331",
                    "issueId": "13200003"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/worklog/169332",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3010: ARROW-3849: [C++] Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64\nURL: https://github.com/apache/arrow/pull/3010#discussion_r236247529\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -155,16 +155,21 @@ hash_t ComputeStringHash(const void* data, int64_t length) {\n     return n ^ hx ^ hy;\n   }\n \n-  if (HashUtil::have_hardware_crc32) {\n-    // DoubleCrcHash is faster that Murmur2.\n-    auto h = HashUtil::DoubleCrcHash(data, static_cast<int32_t>(length), AlgNum);\n+  // DoubleCrcHash is faster that Murmur2.\n+  if (HashUtil::have_hardware_crc32 == USE_SSE42) {\n+    // SSE4.\n+    auto h = HashUtil::DoubleHash<USE_SSE42>(data, static_cast<int32_t>(length), AlgNum);\n+    return ScalarHelper<uint64_t, AlgNum>::ComputeHash(h);\n+  } else if (HashUtil::have_hardware_crc32 == USE_ARMCRC) {\n+    // Armce.\n+    auto h = HashUtil::DoubleHash<USE_ARMCRC>(data, static_cast<int32_t>(length), AlgNum);\n     return ScalarHelper<uint64_t, AlgNum>::ComputeHash(h);\n   } else {\n     // Fall back on 64-bit Murmur2 for longer strings.\n     // It has decent speed for medium-sized strings.  There may be faster\n     // hashes on long strings such as xxHash, but that may not matter much\n     // for the typical length distribution of hash keys.\n-    return HashUtil::MurmurHash2_64(data, static_cast<int>(length), AlgNum);\n+    return HashUtil::Hash<USE_DEFAULT>(data, static_cast<int>(length), AlgNum);\n \n Review comment:\n   I'd rather keep the explicit fallback to MurmurHash here, rather than `Hash<USE_DEFAULT>`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T13:12:09.485+0000",
                    "updated": "2018-11-26T13:12:09.485+0000",
                    "started": "2018-11-26T13:12:09.485+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169332",
                    "issueId": "13200003"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@483ffba1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66e50eb4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32e95de2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7cb775a5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d02c4f5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1a397326[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62c73bce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@251a606e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ed42d54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1fa5d7eb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4467869a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@32889768[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 29 16:01:09 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-29T16:01:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3849/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-11-22T06:32:50.000+0000",
        "updated": "2018-11-29T16:16:26.000+0000",
        "timeoriginalestimate": null,
        "description": "The Hash utility leverages SSE4 to accelerate the Crc32 data hash computation for x86.\r\nCorrespondingly, we will leverage the Arm crc32 extension instructions to accelerate the hash computation for AArch64.\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Leverage Armv8 crc32 extension instructions to accelerate the hash computation for Arm64.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200003/comment/16703403",
                    "id": "16703403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 3010\n[https://github.com/apache/arrow/pull/3010]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-11-29T16:01:09.042+0000",
                    "updated": "2018-11-29T16:01:09.042+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00rko:",
        "customfield_12314139": null
    }
}