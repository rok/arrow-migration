{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13386335",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335",
    "key": "ARROW-13201",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12619560",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12619560",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13390774",
                    "key": "ARROW-13389",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390774",
                    "fields": {
                        "summary": "[C++] Add option to coalesce kernel to treat NaN as null",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12618271",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12618271",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13384941",
                    "key": "ARROW-13136",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13384941",
                    "fields": {
                        "summary": "[C++] Add a \"coalesce\" variadic scalar kernel",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13201/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook opened a new pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T20:43:41.014+0000",
                    "updated": "2021-07-19T20:43:41.014+0000",
                    "started": "2021-07-19T20:43:41.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624636",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#issuecomment-882846488\n\n\n   https://issues.apache.org/jira/browse/ARROW-13201\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T20:44:04.948+0000",
                    "updated": "2021-07-19T20:44:04.948+0000",
                    "started": "2021-07-19T20:44:04.948+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624637",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672619775\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       This approach is flawed because it replaces `NaN` with `NA` in the result when all the values are `NaN`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T20:47:10.369+0000",
                    "updated": "2021-07-19T20:47:10.369+0000",
                    "started": "2021-07-19T20:47:10.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624638",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624644",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672627932\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Oh, I think the solution is to skip the last iteration of the `lapply`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T21:00:24.415+0000",
                    "updated": "2021-07-19T21:00:24.415+0000",
                    "started": "2021-07-19T21:00:24.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624644",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672654005\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed in 3a91ee9\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T21:46:36.006+0000",
                    "updated": "2021-07-19T21:46:36.006+0000",
                    "started": "2021-07-19T21:46:36.006+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624673",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672654005\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed in 3a91ee9. I used an attribute named `last` to keep track of which iteration is the final one.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T22:07:45.253+0000",
                    "updated": "2021-07-19T22:07:45.253+0000",
                    "started": "2021-07-19T22:07:45.253+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624682",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672654005\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed now. I used an attribute named `last` to keep track of which iteration is the final one.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T22:08:08.508+0000",
                    "updated": "2021-07-19T22:08:08.508+0000",
                    "started": "2021-07-19T22:08:08.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624683",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672687632\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       FYI, when all values in the row are `NA` or `NaN`, `dplyr::coalesce()` returns the _last_ one, which is why this solution works:\r\n   ```\r\n   > dplyr::coalesce(NA, NaN)\r\n   [1] NaN\r\n   > dplyr::coalesce(NaN, NA)\r\n   [1] NA\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T23:01:32.241+0000",
                    "updated": "2021-07-19T23:01:32.241+0000",
                    "started": "2021-07-19T23:01:32.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624699",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672687632\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       FYI, when all values in the row are `NA` or `NaN`, `dplyr::coalesce()` returns the _last_ one, which is why this solution works:\r\n   ```\r\n   > dplyr::coalesce(NA_real_, NaN)\r\n   [1] NaN\r\n   > dplyr::coalesce(NaN, NA_real_)\r\n   [1] NA\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-19T23:02:37.376+0000",
                    "updated": "2021-07-19T23:02:37.376+0000",
                    "started": "2021-07-19T23:02:37.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624700",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/624760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672829190\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -26,7 +26,7 @@\n   * String operations: `strsplit()` and `str_split()`; `strptime()`; `paste()`, `paste0()`, and `str_c()`; `substr()` and `str_sub()`; `str_like()`; `str_pad()`; `stri_reverse()`\n   * Date/time operations: `lubridate` methods such as `year()`, `month()`, `wday()`, and so on\n   * Math: logarithms (`log()` et al.); trigonometry (`sin()`, `cos()`, et al.); `abs()`; `sign()`; `pmin()` and `pmax()`; `ceiling()`, `floor()`, and `trunc()`\n-  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs)\n+  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs do not work and factors/dictionaries are converted to character strings)\n\nReview comment:\n       Super-pedantic, but when I read \"do not work\" it makes me wonder whether I can input these types and the results will be wrong, or if they'll return an error.\r\n   \r\n   ```suggestion\r\n     * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers not yet implemented and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs not yet implemented and factors/dictionaries are converted to character strings)\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T06:02:21.389+0000",
                    "updated": "2021-07-20T06:02:21.389+0000",
                    "started": "2021-07-20T06:02:21.388+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "624760",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672829190\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -26,7 +26,7 @@\n   * String operations: `strsplit()` and `str_split()`; `strptime()`; `paste()`, `paste0()`, and `str_c()`; `substr()` and `str_sub()`; `str_like()`; `str_pad()`; `stri_reverse()`\n   * Date/time operations: `lubridate` methods such as `year()`, `month()`, `wday()`, and so on\n   * Math: logarithms (`log()` et al.); trigonometry (`sin()`, `cos()`, et al.); `abs()`; `sign()`; `pmin()` and `pmax()`; `ceiling()`, `floor()`, and `trunc()`\n-  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs)\n+  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs do not work and factors/dictionaries are converted to character strings)\n\nReview comment:\n       Super-pedantic, but when I read \"do not work\" it makes me wonder whether I can input these types and the results will be wrong, or if they'll return an error.\r\n   \r\n   ```suggestion\r\n     * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers not yet implemented and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs not yet implemented and factors/dictionaries are converted to character strings)\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T09:53:07.803+0000",
                    "updated": "2021-07-20T09:53:07.803+0000",
                    "started": "2021-07-20T09:53:07.803+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625008",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook opened a new pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T09:56:43.887+0000",
                    "updated": "2021-07-20T09:56:43.887+0000",
                    "started": "2021-07-20T09:56:43.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625037",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672619775\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       This approach is flawed because it replaces `NaN` with `NA` in the result when all the values are `NaN`\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Oh, I think the solution is to skip the last iteration of the `lapply`\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed in 3a91ee9\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed in 3a91ee9. I used an attribute named `last` to keep track of which iteration is the final one.\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed now. I used an attribute named `last` to keep track of which iteration is the final one.\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       FYI, when all values in the row are `NA` or `NaN`, `dplyr::coalesce()` returns the _last_ one, which is why this solution works:\r\n   ```\r\n   > dplyr::coalesce(NA, NaN)\r\n   [1] NaN\r\n   > dplyr::coalesce(NaN, NA)\r\n   [1] NA\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       FYI, when all values in the row are `NA` or `NaN`, `dplyr::coalesce()` returns the _last_ one, which is why this solution works:\r\n   ```\r\n   > dplyr::coalesce(NA_real_, NaN)\r\n   [1] NaN\r\n   > dplyr::coalesce(NaN, NA_real_)\r\n   [1] NA\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T09:56:54.730+0000",
                    "updated": "2021-07-20T09:56:54.730+0000",
                    "started": "2021-07-20T09:56:54.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625038",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#issuecomment-882846488\n\n\n   https://issues.apache.org/jira/browse/ARROW-13201\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T10:09:59.347+0000",
                    "updated": "2021-07-20T10:09:59.347+0000",
                    "started": "2021-07-20T10:09:59.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625131",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#issuecomment-882846488\n\n\n   https://issues.apache.org/jira/browse/ARROW-13201\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T11:54:18.618+0000",
                    "updated": "2021-07-20T11:54:18.618+0000",
                    "started": "2021-07-20T11:54:18.618+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625323",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672829190\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -26,7 +26,7 @@\n   * String operations: `strsplit()` and `str_split()`; `strptime()`; `paste()`, `paste0()`, and `str_c()`; `substr()` and `str_sub()`; `str_like()`; `str_pad()`; `stri_reverse()`\n   * Date/time operations: `lubridate` methods such as `year()`, `month()`, `wday()`, and so on\n   * Math: logarithms (`log()` et al.); trigonometry (`sin()`, `cos()`, et al.); `abs()`; `sign()`; `pmin()` and `pmax()`; `ceiling()`, `floor()`, and `trunc()`\n-  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs)\n+  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs do not work and factors/dictionaries are converted to character strings)\n\nReview comment:\n       Super-pedantic, but when I read \"do not work\" it makes me wonder whether I can input these types and the results will be wrong, or if they'll return an error.\r\n   \r\n   ```suggestion\r\n     * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers not yet implemented and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs not yet implemented and factors/dictionaries are converted to character strings)\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T12:04:26.428+0000",
                    "updated": "2021-07-20T12:04:26.428+0000",
                    "started": "2021-07-20T12:04:26.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625392",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook opened a new pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T12:07:50.859+0000",
                    "updated": "2021-07-20T12:07:50.859+0000",
                    "started": "2021-07-20T12:07:50.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625424",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r672619775\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       This approach is flawed because it replaces `NaN` with `NA` in the result when all the values are `NaN`\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Oh, I think the solution is to skip the last iteration of the `lapply`\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed in 3a91ee9\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed in 3a91ee9. I used an attribute named `last` to keep track of which iteration is the final one.\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       Fixed now. I used an attribute named `last` to keep track of which iteration is the final one.\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       FYI, when all values in the row are `NA` or `NaN`, `dplyr::coalesce()` returns the _last_ one, which is why this solution works:\r\n   ```\r\n   > dplyr::coalesce(NA, NaN)\r\n   [1] NaN\r\n   > dplyr::coalesce(NaN, NA)\r\n   [1] NA\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,30 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- lapply(list2(...), function(arg) {\n+    if (!inherits(arg, \"Expression\")) {\n+      arg <- Expression$scalar(arg)\n+    }\n+    if (arg$type_id() %in% TYPES_WITH_NAN) {\n+      # replace NaN with NA, using Arrow's smallest float type to avoid casting\n+      # smaller float types to larger float types\n\nReview comment:\n       FYI, when all values in the row are `NA` or `NaN`, `dplyr::coalesce()` returns the _last_ one, which is why this solution works:\r\n   ```\r\n   > dplyr::coalesce(NA_real_, NaN)\r\n   [1] NaN\r\n   > dplyr::coalesce(NaN, NA_real_)\r\n   [1] NA\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T12:08:00.905+0000",
                    "updated": "2021-07-20T12:08:00.905+0000",
                    "started": "2021-07-20T12:08:00.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625425",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r673471398\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -26,7 +26,7 @@\n   * String operations: `strsplit()` and `str_split()`; `strptime()`; `paste()`, `paste0()`, and `str_c()`; `substr()` and `str_sub()`; `str_like()`; `str_pad()`; `stri_reverse()`\n   * Date/time operations: `lubridate` methods such as `year()`, `month()`, `wday()`, and so on\n   * Math: logarithms (`log()` et al.); trigonometry (`sin()`, `cos()`, et al.); `abs()`; `sign()`; `pmin()` and `pmax()`; `ceiling()`, `floor()`, and `trunc()`\n-  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers do not yet work and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs do not work and factors/dictionaries are converted to character strings)\n+  * Conditional: `ifelse()` and `if_else()` (fixed-precision decimal numbers not yet implemented and factors/dictionaries are converted to character strings); `case_when()` (currently works with numeric data types but not character strings, factors/dictionaries, or lists/structs); `coalesce()` (lists/structs not yet implemented and factors/dictionaries are converted to character strings)\n\nReview comment:\n       Slightly more concise/less repetitive about not implemented:\r\n   \r\n   ```suggestion\r\n     * Conditional functions, with some limitations on input type in this release: `ifelse()` and `if_else()` for all but `Decimal` types; `case_when()` for only numeric types; `coalesce()` for all but lists/structs. Note also that in this release, factors/dictionaries are converted to strings in these functions.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T20:31:51.906+0000",
                    "updated": "2021-07-20T20:31:51.906+0000",
                    "started": "2021-07-20T20:31:51.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625789",
                    "issueId": "13386335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/worklog/625790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10751:\nURL: https://github.com/apache/arrow/pull/10751#discussion_r673472694\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -57,6 +57,46 @@ nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n   Expression$create(\"cast\", x, options = opts)\n }\n \n+nse_funcs$coalesce <- function(...) {\n+  if (missing(..1)) {\n+    abort(\"At least one argument must be supplied to coalesce()\")\n+  }\n+\n+  # treat NaN like NA for consistency with dplyr::coalesce()\n+  # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\n+  # use that to simplify the code here (ARROW-13389)\n+  args <- list2(...)\n+  # if *all* the values are NaN, we should return NaN, not NA, so don't replace\n+  # NaN with NA in the final (or only) argument\n\nReview comment:\n       Slight reorganization for readability\r\n   \r\n   ```suggestion\r\n     args <- list2(...)\r\n     if (length(args) == 0) {\r\n       abort(\"At least one argument must be supplied to coalesce()\")\r\n     }\r\n   \r\n     # Treat NaN like NA for consistency with dplyr::coalesce():\r\n     # if *all* the values are NaN, we should return NaN, not NA, so don't replace\r\n     # NaN with NA in the final (or only) argument\r\n     # TODO: if an option is added to the coalesce kernel to treat NaN as NA,\r\n     # use that to simplify the code here (ARROW-13389)\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-20T20:34:19.978+0000",
                    "updated": "2021-07-20T20:34:19.978+0000",
                    "started": "2021-07-20T20:34:19.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "625790",
                    "issueId": "13386335"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 18600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1ae37081[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31808b8f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ab34baa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6fda7f80[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20b3b3bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@516e0c83[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11c0e31f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2d5aa8d8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1049e8a3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@31e2f43d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27ac2105[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5f485140[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 20 22:22:58 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-20T22:22:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13201/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-06-28T20:17:41.000+0000",
        "updated": "2021-07-20T22:23:08.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-13136 adds a {{coalesce}} kernel. Use this to implement a binding for the {{dplyr}} function {{coalesce()}}.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Add binding for coalesce()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386335/comment/17384504",
                    "id": "17384504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10751\n[https://github.com/apache/arrow/pull/10751]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-20T22:22:58.526+0000",
                    "updated": "2021-07-20T22:22:58.526+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0sdrc:",
        "customfield_12314139": null
    }
}