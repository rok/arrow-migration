{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13096177",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13096177",
    "key": "ARROW-1374",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/8",
            "id": "8",
            "description": "The described issue is not actually a problem - it is as designed.",
            "name": "Not A Problem"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=santon",
            "name": "santon",
            "key": "santon",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Steven Anton",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=santon",
            "name": "santon",
            "key": "santon",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Steven Anton",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1374/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@63a2dd34[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bb7d834[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@403d3698[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@151e30d3[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f32a0d5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@32af9d4c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b8fe477[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7ff3c77d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75cdf45e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3bc64256[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f8eb505[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3ea749a6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 23 05:12:43 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-08-19T13:10:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1374/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-08-19T00:38:19.000+0000",
        "updated": "2017-08-23T05:12:43.000+0000",
        "timeoriginalestimate": null,
        "description": "Traditionally I work with CSV's and really suffer with slow read/write times. Parquet and the Arrow project obviously give us huge speedups.\n\nOne thing I've noticed, however, is that there is a serious bottleneck when converting a DataFrame read in through pyarrow to a DMatrix used by xgboost. For example, I'm building a model with about 180k rows and 6k float64 columns. Reading into a pandas DataFrame takes about 20 seconds on my machine. However, converting that DataFrame to a DMatrix takes well over 10 minutes.\n\nInterestingly, it takes about 10 minutes to read that same data from a CSV into a pandas DataFrame. Then, it takes less than a minute to convert to a DMatrix.\n\nI'm sure there's a good technical explanation for why this happens (e.g. row vs column storage). Still, I imagine this use case may occur to many and it would be great to improve these times, if possible.\n\n\n{code:none}\nimport pandas as pd\nimport pyarrow as pa\nimport pyarrow.parquet as pq\nimport xgboost as xgb\n\n# Reading from parquet:\ntable = pq.read_table('/path/to/parquet/files')  # 20 seconds\nvariables = table.to_pandas()  # 1 second\ndtrain = xgb.DMatrix(variables.drop(['tag'], axis=1), label=variables['tag'])  # takes 10-15 minutes\n\n# Reading from CSV:\nvariables = pd.read_csv('/path/to/file.csv', ...)  # takes about 10 minutes\ndtrain = xgb.DMatrix(variables.drop(['tag'], axis=1), label=variables['tag'])  # less than 1 minute\n{code}\n",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Compatibility with xgboost",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13096177/comment/16133842",
                    "id": "16133842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Can you provide any profile output from cProfile to give some insight? I note that you are using the {{drop}} method -- this is very inefficient because it produces a copy of the data. You could make this much faster by dropping the column from the Arrow table before calling {{to_pandas}}. The API for this is not very convenient at the moment but it could be made so cc [~jreback] [~cpcloud]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-08-19T00:44:06.869+0000",
                    "updated": "2017-08-19T00:44:06.869+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13096177/comment/16133860",
                    "id": "16133860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=santon",
                        "name": "santon",
                        "key": "santon",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steven Anton",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Thanks! Ok, I got the conversion time down to 52 seconds by following your suggestions. It sounds like there aren't really any changes needed. I had just misunderstood what was going on under the hood. Maybe some documentation or a \"gotchas\" section?\n\nHere's what I did differently:\n\n{code:none}\nschema = pq.read_schema('/path/to/file.parq')\ncolumns = [x for x in schema.names if x not in ['tag', ...]]\nvariables = pq.read_table(str(parquet_path), columns=columns).to_pandas()\n# It looks like I could have used the .remove_column method instead of the above\ntag = pq.read_table(str(parquet_path), columns=['is_fraud']).to_pandas()\ncProfile.run('xgb.DMatrix(variables, label=tag)')\n{code}\n\nAnd the output of cProfile is below, just for reference.\n\n{noformat}\n         145353 function calls (145344 primitive calls) in 51.970 seconds\n\n   Ordered by: standard name\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:996(_handle_fromlist)\n        1    0.030    0.030   51.970   51.970 <string>:1(<module>)\n        4    0.000    0.000    0.002    0.000 __init__.py:357(__getattr__)\n        4    0.002    0.000    0.002    0.000 __init__.py:364(__getitem__)\n        1    0.000    0.000    0.000    0.000 __init__.py:483(cast)\n        1    0.000    0.000    0.000    0.000 _internal.py:225(__init__)\n        1    0.000    0.000    0.000    0.000 _internal.py:237(data_as)\n        1    0.000    0.000    0.000    0.000 _methods.py:37(_any)\n        2    0.000    0.000    0.000    0.000 algorithms.py:1342(_get_take_nd_function)\n        2    0.000    0.000    0.001    0.000 algorithms.py:1375(take_nd)\n        2    0.000    0.000    0.000    0.000 base.py:1578(is_all_dates)\n        1    0.000    0.000    0.114    0.114 base.py:1884(format)\n        1    0.000    0.000    0.114    0.114 base.py:1899(_format_with_header)\n        1    0.010    0.010    0.113    0.113 base.py:1910(<listcomp>)\n        2    0.000    0.000    0.000    0.000 base.py:3999(_ensure_index)\n        7    0.000    0.000    0.000    0.000 base.py:528(__len__)\n        3    0.000    0.000    0.000    0.000 base.py:559(values)\n        2    0.000    0.000    0.000    0.000 cast.py:759(maybe_castable)\n        2    0.000    0.000    0.000    0.000 cast.py:868(maybe_cast_to_datetime)\n        2    0.000    0.000    0.000    0.000 common.py:117(is_sparse)\n        1    0.000    0.000    0.000    0.000 common.py:1419(is_string_like_dtype)\n        2    0.000    0.000    0.000    0.000 common.py:1456(is_float_dtype)\n        2    0.000    0.000    0.000    0.000 common.py:1549(is_extension_type)\n        2    0.000    0.000    0.000    0.000 common.py:1673(_get_dtype)\n       16    0.000    0.000    0.000    0.000 common.py:1722(_get_dtype_type)\n        4    0.000    0.000    0.000    0.000 common.py:1852(pandas_dtype)\n        6    0.000    0.000    0.000    0.000 common.py:190(is_categorical)\n        9    0.000    0.000    0.000    0.000 common.py:222(is_datetimetz)\n        7    0.000    0.000    0.000    0.000 common.py:296(is_datetime64_dtype)\n       14    0.000    0.000    0.000    0.000 common.py:333(is_datetime64tz_dtype)\n        5    0.000    0.000    0.000    0.000 common.py:371(is_timedelta64_dtype)\n        1    0.000    0.000    0.000    0.000 common.py:406(is_period_dtype)\n        3    0.000    0.000    0.000    0.000 common.py:439(is_interval_dtype)\n        8    0.000    0.000    0.000    0.000 common.py:475(is_categorical_dtype)\n        1    0.000    0.000    0.000    0.000 common.py:508(is_string_dtype)\n        3    0.000    0.000    0.000    0.000 common.py:609(is_datetimelike)\n        4    0.000    0.000    0.000    0.000 common.py:84(is_object_dtype)\n        5    0.000    0.000    0.000    0.000 core.py:115(_check_call)\n        1    0.000    0.000    0.000    0.000 core.py:152(c_str)\n        1    0.150    0.150    0.150    0.150 core.py:157(c_array)\n        1    0.000    0.000    6.442    6.442 core.py:168(_maybe_pandas_data)\n     6026    0.008    0.000    0.008    0.000 core.py:175(<genexpr>)\n        1    0.003    0.003    0.003    0.003 core.py:187(<listcomp>)\n        1    0.000    0.000    0.001    0.001 core.py:194(_maybe_pandas_label)\n        2    0.000    0.000    0.000    0.000 core.py:202(<genexpr>)\n        1    0.000    0.000   51.890   51.890 core.py:222(__init__)\n        1   27.752   27.752   45.272   45.272 core.py:309(_init_from_npy2d)\n        1    0.049    0.049    0.050    0.050 core.py:323(__del__)\n        1    0.001    0.001    0.152    0.152 core.py:368(set_float_info)\n        1    0.000    0.000    0.152    0.152 core.py:414(set_label)\n        2    0.000    0.000    0.001    0.000 core.py:501(num_col)\n        1    0.004    0.004    0.021    0.021 core.py:557(feature_names)\n     6026    0.007    0.000    0.015    0.000 core.py:576(<genexpr>)\n    24100    0.004    0.000    0.004    0.000 core.py:577(<genexpr>)\n        1    0.000    0.000    0.003    0.003 core.py:585(feature_types)\n     6026    0.002    0.000    0.002    0.000 core.py:614(<genexpr>)\n        1    0.000    0.000    0.000    0.000 dtypes.py:367(is_dtype)\n        3    0.000    0.000    0.000    0.000 dtypes.py:489(is_dtype)\n       26    0.000    0.000    0.000    0.000 dtypes.py:84(is_dtype)\n        2    0.000    0.000    0.000    0.000 generic.py:117(__init__)\n        2    0.000    0.000    0.000    0.000 generic.py:145(_validate_dtype)\n        2    0.000    0.000    0.000    0.000 generic.py:3067(__getattr__)\n        4    0.000    0.000    0.000    0.000 generic.py:3083(__setattr__)\n        2    0.000    0.000    0.000    0.000 generic.py:3122(_protect_consolidate)\n        2    0.000    0.000    0.000    0.000 generic.py:3132(_consolidate_inplace)\n        2    0.000    0.000    0.000    0.000 generic.py:3135(f)\n        2    0.000    0.000    0.000    0.000 generic.py:3214(as_matrix)\n        2    0.000    0.000    0.000    0.000 generic.py:3256(values)\n        2    0.000    0.000    0.002    0.001 generic.py:3298(dtypes)\n        2    0.000    0.000    0.000    0.000 generic.py:416(_info_axis)\n       25    0.000    0.000    0.000    0.000 generic.py:7(_check)\n     6025    0.009    0.000    0.014    0.000 inference.py:396(is_sequence)\n        2    0.000    0.000    0.000    0.000 internals.py:102(__init__)\n        3    0.000    0.000    0.000    0.000 internals.py:154(internal_values)\n        2    0.000    0.000    0.000    0.000 internals.py:160(get_values)\n        2    0.000    0.000    0.000    0.000 internals.py:1838(__init__)\n        6    0.000    0.000    0.000    0.000 internals.py:185(mgr_locs)\n        2    0.000    0.000    0.000    0.000 internals.py:222(mgr_locs)\n        2    0.000    0.000    0.000    0.000 internals.py:2683(make_block)\n        2    0.000    0.000    0.000    0.000 internals.py:2824(ndim)\n        2    0.000    0.000    0.000    0.000 internals.py:2864(_is_single_block)\n        2    0.000    0.000    0.000    0.000 internals.py:2897(_get_items)\n        2    0.000    0.000    0.001    0.000 internals.py:2917(get_dtypes)\n        2    0.000    0.000    0.000    0.000 internals.py:2918(<listcomp>)\n        2    0.000    0.000    0.000    0.000 internals.py:2986(__len__)\n       20    0.000    0.000    0.000    0.000 internals.py:303(dtype)\n        2    0.000    0.000    0.000    0.000 internals.py:3296(is_consolidated)\n        2    0.000    0.000    0.000    0.000 internals.py:3438(as_matrix)\n        2    0.000    0.000    0.000    0.000 internals.py:3560(consolidate)\n        2    0.000    0.000    0.000    0.000 internals.py:4078(__init__)\n       21    0.000    0.000    0.000    0.000 internals.py:4124(_block)\n       18    0.000    0.000    0.000    0.000 internals.py:4194(dtype)\n        3    0.000    0.000    0.000    0.000 internals.py:4221(internal_values)\n        1    0.000    0.000    0.000    0.000 missing.py:119(_isnull_ndarraylike)\n        1    0.000    0.000    0.000    0.000 missing.py:26(isnull)\n        1    0.000    0.000    0.000    0.000 missing.py:47(_isnull_new)\n     6025    0.029    0.000    0.104    0.000 printing.py:157(pprint_thing)\n     6025    0.027    0.000    0.038    0.000 printing.py:186(as_escaped_unicode)\n        3    0.000    0.000    0.000    0.000 series.py:1049(__iter__)\n        2    0.000    0.000    0.001    0.000 series.py:139(__init__)\n        2    0.000    0.000    0.000    0.000 series.py:284(_set_axis)\n        2    0.000    0.000    0.000    0.000 series.py:2894(_sanitize_array)\n        2    0.000    0.000    0.000    0.000 series.py:2911(_try_cast)\n        2    0.000    0.000    0.000    0.000 series.py:310(_set_subtyp)\n        2    0.000    0.000    0.000    0.000 series.py:320(name)\n        2    0.000    0.000    0.000    0.000 series.py:324(name)\n       18    0.000    0.000    0.000    0.000 series.py:331(dtype)\n        3    0.000    0.000    0.000    0.000 series.py:384(_values)\n        1    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}\n        3    0.000    0.000    0.000    0.000 {built-in method _ctypes.byref}\n        4    0.003    0.001    0.028    0.007 {built-in method builtins.all}\n     6025    0.003    0.000    0.008    0.000 {built-in method builtins.any}\n        1    0.000    0.000   51.970   51.970 {built-in method builtins.exec}\n       30    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}\n    12085    0.018    0.000    0.018    0.000 {built-in method builtins.hasattr}\n    36332    0.010    0.000    0.010    0.000 {built-in method builtins.isinstance}\n       30    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}\n     6028    0.002    0.000    0.002    0.000 {built-in method builtins.iter}\n6066/6057    0.001    0.000    0.001    0.000 {built-in method builtins.len}\n        4    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}\n        7    2.229    0.318    2.229    0.318 {built-in method numpy.core.multiarray.array}\n        3    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}\n        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.algos.ensure_int64}\n        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.algos.ensure_object}\n        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}\n        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.isscalar}\n        1    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}\n        2    6.314    3.157    6.314    3.157 {method 'astype' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}\n        2    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\n        1    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}\n    18075    0.009    0.000    0.009    0.000 {method 'replace' of 'str' objects}\n        2   15.291    7.645   15.291    7.645 {method 'reshape' of 'numpy.ndarray' objects}\n        4    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}\n        3    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}\n        2    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}\n        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.isnullobj}\n        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.maybe_convert_objects}\n{noformat}\n\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=santon",
                        "name": "santon",
                        "key": "santon",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steven Anton",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-08-19T01:31:41.232+0000",
                    "updated": "2017-08-19T01:31:41.232+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13096177/comment/16134612",
                    "id": "16134612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I opened ARROW-1388 about adding a drop convenience method so you don't have to call read_table twice. Documentation about this kind of stuff would be helpful for new users because Arrow's semantics re: copying (as in, you have to be quite explicit about when you copy data or allocate memory)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-08-21T00:23:21.395+0000",
                    "updated": "2017-08-21T00:23:21.395+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13096177/comment/16135890",
                    "id": "16135890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=santon",
                        "name": "santon",
                        "key": "santon",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steven Anton",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Thanks Wes -- really appreciate your support on this awesome project.\n\nRegarding the latter, I wonder if a quick feature to add could be a log message whenever a copy is made (kind of like how pandas warns when trying to assign values to a slice).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=santon",
                        "name": "santon",
                        "key": "santon",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steven Anton",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-08-21T21:43:00.747+0000",
                    "updated": "2017-08-21T21:43:00.747+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13096177/comment/16137905",
                    "id": "16137905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Maybe the closest thing we've discussed to this would be logging output when memory is allocated to give better transparency, I opened ARROW-1405. I recall discussing this in the past but I couldn't find an older JIRA about it so I opened a new one",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-08-23T05:12:43.407+0000",
                    "updated": "2017-08-23T05:12:43.407+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3j1q7:",
        "customfield_12314139": null
    }
}