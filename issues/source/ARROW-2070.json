{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13135150",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150",
    "key": "ARROW-2070",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2070/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@f088a33[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bf9deb6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d96dc7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@781fa117[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@919c68f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1b03aec1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@503dfce8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@55afe8e1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12457165[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@14b6b04a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b53d488[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@191d9e3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 31 21:34:28 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-01-31T21:34:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2070/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-01-31T17:34:19.000+0000",
        "updated": "2018-01-31T21:34:28.000+0000",
        "timeoriginalestimate": null,
        "description": "In some conditions, {{setup.py}} may change the current directory and omit restoring the previous one, which can fail some operations.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] chdir logic in setup.py buggy",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347442",
                    "id": "16347442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1540: ARROW-2070: [Python] Fix chdir logic in setup.py\nURL: https://github.com/apache/arrow/pull/1540\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T19:26:46.100+0000",
                    "updated": "2018-01-31T19:26:46.100+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347446",
                    "id": "16347446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1540: ARROW-2070: [Python] Fix chdir logic in setup.py\nURL: https://github.com/apache/arrow/pull/1540#discussion_r165161090\n \n \n\n ##########\n File path: python/setup.py\n ##########\n @@ -129,162 +141,160 @@ def _run_cmake(self):\n         # The staging directory for the module being built\n         build_temp = pjoin(os.getcwd(), self.build_temp)\n         build_lib = os.path.join(os.getcwd(), self.build_lib)\n-\n-        # Change to the build directory\n         saved_cwd = os.getcwd()\n+\n         if not os.path.isdir(self.build_temp):\n             self.mkpath(self.build_temp)\n-        os.chdir(self.build_temp)\n \n Review comment:\n   Note these lines are merely reindented under a `with changed_dir(self.build_temp)` block.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T19:28:01.849+0000",
                    "updated": "2018-01-31T19:28:01.849+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347453",
                    "id": "16347453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1540: ARROW-2070: [Python] Fix chdir logic in setup.py\nURL: https://github.com/apache/arrow/pull/1540#issuecomment-362043449\n \n \n   AppVeyor build at https://ci.appveyor.com/project/pitrou/arrow/build/1.0.10\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T19:28:52.875+0000",
                    "updated": "2018-01-31T19:28:52.875+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347468",
                    "id": "16347468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1540: ARROW-2070: [Python] Fix chdir logic in setup.py\nURL: https://github.com/apache/arrow/pull/1540#issuecomment-362045080\n \n \n   As usual, some `apt-get` failures on Travis-CI.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T19:34:21.220+0000",
                    "updated": "2018-01-31T19:34:21.220+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347640",
                    "id": "16347640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1540: ARROW-2070: [Python] Fix chdir logic in setup.py\nURL: https://github.com/apache/arrow/pull/1540#issuecomment-362076200\n \n \n   Restarted them. I also opened https://issues.apache.org/jira/browse/ARROW-2071 about reducing the runtime of builds\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T21:27:28.543+0000",
                    "updated": "2018-01-31T21:27:28.543+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347649",
                    "id": "16347649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1540\n[https://github.com/apache/arrow/pull/1540]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-31T21:34:22.296+0000",
                    "updated": "2018-01-31T21:34:22.296+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135150/comment/16347650",
                    "id": "16347650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1540: ARROW-2070: [Python] Fix chdir logic in setup.py\nURL: https://github.com/apache/arrow/pull/1540\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/setup.py b/python/setup.py\nindex 076d7e489..cfc771fe8 100644\n--- a/python/setup.py\n+++ b/python/setup.py\n@@ -17,6 +17,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+import contextlib\n import glob\n import os\n import os.path as osp\n@@ -47,6 +48,16 @@\n setup_dir = os.path.abspath(os.path.dirname(__file__))\n \n \n+@contextlib.contextmanager\n+def changed_dir(dirname):\n+    oldcwd = os.getcwd()\n+    os.chdir(dirname)\n+    try:\n+        yield\n+    finally:\n+        os.chdir(oldcwd)\n+\n+\n class clean(_clean):\n \n     def run(self):\n@@ -59,6 +70,7 @@ def run(self):\n \n \n class build_ext(_build_ext):\n+    _found_names = ()\n \n     def build_extensions(self):\n         numpy_incl = pkg_resources.resource_filename('numpy', 'core/include')\n@@ -129,162 +141,160 @@ def _run_cmake(self):\n         # The staging directory for the module being built\n         build_temp = pjoin(os.getcwd(), self.build_temp)\n         build_lib = os.path.join(os.getcwd(), self.build_lib)\n-\n-        # Change to the build directory\n         saved_cwd = os.getcwd()\n+\n         if not os.path.isdir(self.build_temp):\n             self.mkpath(self.build_temp)\n-        os.chdir(self.build_temp)\n-\n-        # Detect if we built elsewhere\n-        if os.path.isfile('CMakeCache.txt'):\n-            cachefile = open('CMakeCache.txt', 'r')\n-            cachedir = re.search('CMAKE_CACHEFILE_DIR:INTERNAL=(.*)',\n-                                 cachefile.read()).group(1)\n-            cachefile.close()\n-            if (cachedir != build_temp):\n-                return\n-\n-        static_lib_option = ''\n-\n-        cmake_options = [\n-            '-DPYTHON_EXECUTABLE=%s' % sys.executable,\n-            static_lib_option,\n-        ]\n \n-        if self.with_parquet:\n-            cmake_options.append('-DPYARROW_BUILD_PARQUET=on')\n-        if self.with_static_parquet:\n-            cmake_options.append('-DPYARROW_PARQUET_USE_SHARED=off')\n-        if not self.with_static_boost:\n-            cmake_options.append('-DPYARROW_BOOST_USE_SHARED=on')\n-\n-        if self.with_plasma:\n-            cmake_options.append('-DPYARROW_BUILD_PLASMA=on')\n-\n-        if self.with_orc:\n-            cmake_options.append('-DPYARROW_BUILD_ORC=on')\n-\n-        if len(self.cmake_cxxflags) > 0:\n-            cmake_options.append('-DPYARROW_CXXFLAGS=\"{0}\"'\n-                                 .format(self.cmake_cxxflags))\n-\n-        if self.bundle_arrow_cpp:\n-            cmake_options.append('-DPYARROW_BUNDLE_ARROW_CPP=ON')\n-            # ARROW-1090: work around CMake rough edges\n-            if 'ARROW_HOME' in os.environ and sys.platform != 'win32':\n-                pkg_config = pjoin(os.environ['ARROW_HOME'], 'lib',\n-                                   'pkgconfig')\n-                os.environ['PKG_CONFIG_PATH'] = pkg_config\n-                del os.environ['ARROW_HOME']\n-\n-        cmake_options.append('-DCMAKE_BUILD_TYPE={0}'\n-                             .format(self.build_type.lower()))\n-\n-        extra_cmake_args = shlex.split(self.extra_cmake_args)\n-        if sys.platform != 'win32':\n-            cmake_command = (['cmake'] + extra_cmake_args +\n-                             cmake_options + [source])\n-\n-            print(\"-- Runnning cmake for pyarrow\")\n-            self.spawn(cmake_command)\n-            print(\"-- Finished cmake for pyarrow\")\n-            args = ['make']\n-            if os.environ.get('PYARROW_BUILD_VERBOSE', '0') == '1':\n-                args.append('VERBOSE=1')\n-\n-            if 'PYARROW_PARALLEL' in os.environ:\n-                args.append('-j{0}'.format(os.environ['PYARROW_PARALLEL']))\n-            print(\"-- Running cmake --build for pyarrow\")\n-            self.spawn(args)\n-            print(\"-- Finished cmake --build for pyarrow\")\n-        else:\n-            cmake_generator = 'Visual Studio 14 2015 Win64'\n-            if not is_64_bit:\n-                raise RuntimeError('Not supported on 32-bit Windows')\n-\n-            # Generate the build files\n-            cmake_command = (['cmake'] + extra_cmake_args +\n-                             cmake_options +\n-                             [source, '-G', cmake_generator])\n-            if \"-G\" in self.extra_cmake_args:\n-                cmake_command = cmake_command[:-2]\n-\n-            print(\"-- Runnning cmake for pyarrow\")\n-            self.spawn(cmake_command)\n-            print(\"-- Finished cmake for pyarrow\")\n-            # Do the build\n-            print(\"-- Running cmake --build for pyarrow\")\n-            self.spawn(['cmake', '--build', '.', '--config', self.build_type])\n-            print(\"-- Finished cmake --build for pyarrow\")\n-\n-        if self.inplace:\n-            # a bit hacky\n-            build_lib = saved_cwd\n-\n-        # Move the libraries to the place expected by the Python\n-        # build\n-\n-        try:\n-            os.makedirs(pjoin(build_lib, 'pyarrow'))\n-        except OSError:\n-            pass\n+        # Change to the build directory\n+        with changed_dir(self.build_temp):\n+            # Detect if we built elsewhere\n+            if os.path.isfile('CMakeCache.txt'):\n+                cachefile = open('CMakeCache.txt', 'r')\n+                cachedir = re.search('CMAKE_CACHEFILE_DIR:INTERNAL=(.*)',\n+                                     cachefile.read()).group(1)\n+                cachefile.close()\n+                if (cachedir != build_temp):\n+                    return\n+\n+            static_lib_option = ''\n+\n+            cmake_options = [\n+                '-DPYTHON_EXECUTABLE=%s' % sys.executable,\n+                static_lib_option,\n+            ]\n+\n+            if self.with_parquet:\n+                cmake_options.append('-DPYARROW_BUILD_PARQUET=on')\n+            if self.with_static_parquet:\n+                cmake_options.append('-DPYARROW_PARQUET_USE_SHARED=off')\n+            if not self.with_static_boost:\n+                cmake_options.append('-DPYARROW_BOOST_USE_SHARED=on')\n \n-        if sys.platform == 'win32':\n-            build_prefix = ''\n-        else:\n-            build_prefix = self.build_type\n+            if self.with_plasma:\n+                cmake_options.append('-DPYARROW_BUILD_PLASMA=on')\n+\n+            if self.with_orc:\n+                cmake_options.append('-DPYARROW_BUILD_ORC=on')\n+\n+            if len(self.cmake_cxxflags) > 0:\n+                cmake_options.append('-DPYARROW_CXXFLAGS=\"{0}\"'\n+                                     .format(self.cmake_cxxflags))\n+\n+            if self.bundle_arrow_cpp:\n+                cmake_options.append('-DPYARROW_BUNDLE_ARROW_CPP=ON')\n+                # ARROW-1090: work around CMake rough edges\n+                if 'ARROW_HOME' in os.environ and sys.platform != 'win32':\n+                    pkg_config = pjoin(os.environ['ARROW_HOME'], 'lib',\n+                                       'pkgconfig')\n+                    os.environ['PKG_CONFIG_PATH'] = pkg_config\n+                    del os.environ['ARROW_HOME']\n+\n+            cmake_options.append('-DCMAKE_BUILD_TYPE={0}'\n+                                 .format(self.build_type.lower()))\n+\n+            extra_cmake_args = shlex.split(self.extra_cmake_args)\n+            if sys.platform != 'win32':\n+                cmake_command = (['cmake'] + extra_cmake_args +\n+                                 cmake_options + [source])\n+\n+                print(\"-- Runnning cmake for pyarrow\")\n+                self.spawn(cmake_command)\n+                print(\"-- Finished cmake for pyarrow\")\n+                args = ['make']\n+                if os.environ.get('PYARROW_BUILD_VERBOSE', '0') == '1':\n+                    args.append('VERBOSE=1')\n+\n+                if 'PYARROW_PARALLEL' in os.environ:\n+                    args.append('-j{0}'.format(os.environ['PYARROW_PARALLEL']))\n+                print(\"-- Running cmake --build for pyarrow\")\n+                self.spawn(args)\n+                print(\"-- Finished cmake --build for pyarrow\")\n+            else:\n+                cmake_generator = 'Visual Studio 14 2015 Win64'\n+                if not is_64_bit:\n+                    raise RuntimeError('Not supported on 32-bit Windows')\n+\n+                # Generate the build files\n+                cmake_command = (['cmake'] + extra_cmake_args +\n+                                 cmake_options +\n+                                 [source, '-G', cmake_generator])\n+                if \"-G\" in self.extra_cmake_args:\n+                    cmake_command = cmake_command[:-2]\n+\n+                print(\"-- Runnning cmake for pyarrow\")\n+                self.spawn(cmake_command)\n+                print(\"-- Finished cmake for pyarrow\")\n+                # Do the build\n+                print(\"-- Running cmake --build for pyarrow\")\n+                self.spawn(['cmake', '--build', '.', '--config', self.build_type])\n+                print(\"-- Finished cmake --build for pyarrow\")\n+\n+            if self.inplace:\n+                # a bit hacky\n+                build_lib = saved_cwd\n+\n+            # Move the libraries to the place expected by the Python\n+            # build\n+\n+            try:\n+                os.makedirs(pjoin(build_lib, 'pyarrow'))\n+            except OSError:\n+                pass\n \n-        if self.bundle_arrow_cpp:\n-            print(pjoin(build_lib, 'pyarrow'))\n-            move_shared_libs(build_prefix, build_lib, \"arrow\")\n-            move_shared_libs(build_prefix, build_lib, \"arrow_python\")\n+            if sys.platform == 'win32':\n+                build_prefix = ''\n+            else:\n+                build_prefix = self.build_type\n+\n+            if self.bundle_arrow_cpp:\n+                print(pjoin(build_lib, 'pyarrow'))\n+                move_shared_libs(build_prefix, build_lib, \"arrow\")\n+                move_shared_libs(build_prefix, build_lib, \"arrow_python\")\n+                if self.with_plasma:\n+                    move_shared_libs(build_prefix, build_lib, \"plasma\")\n+                if self.with_parquet and not self.with_static_parquet:\n+                    move_shared_libs(build_prefix, build_lib, \"parquet\")\n+\n+            print('Bundling includes: ' + pjoin(build_prefix, 'include'))\n+            if os.path.exists(pjoin(build_lib, 'pyarrow', 'include')):\n+                shutil.rmtree(pjoin(build_lib, 'pyarrow', 'include'))\n+            shutil.move(pjoin(build_prefix, 'include'),\n+                        pjoin(build_lib, 'pyarrow'))\n+\n+            # Move the built C-extension to the place expected by the Python build\n+            self._found_names = []\n+            for name in self.CYTHON_MODULE_NAMES:\n+                built_path = self.get_ext_built(name)\n+                if not os.path.exists(built_path):\n+                    print(built_path)\n+                    if self._failure_permitted(name):\n+                        print('Cython module {0} failure permitted'.format(name))\n+                        continue\n+                    raise RuntimeError('pyarrow C-extension failed to build:',\n+                                       os.path.abspath(built_path))\n+\n+                ext_path = pjoin(build_lib, self._get_cmake_ext_path(name))\n+                if os.path.exists(ext_path):\n+                    os.remove(ext_path)\n+                self.mkpath(os.path.dirname(ext_path))\n+                print('Moving built C-extension', built_path,\n+                      'to build path', ext_path)\n+                shutil.move(self.get_ext_built(name), ext_path)\n+                self._found_names.append(name)\n+\n+                if os.path.exists(self.get_ext_built_api_header(name)):\n+                    shutil.move(self.get_ext_built_api_header(name),\n+                                pjoin(os.path.dirname(ext_path), name + '_api.h'))\n+\n+            # Move the plasma store\n             if self.with_plasma:\n-                move_shared_libs(build_prefix, build_lib, \"plasma\")\n-            if self.with_parquet and not self.with_static_parquet:\n-                move_shared_libs(build_prefix, build_lib, \"parquet\")\n-\n-        print('Bundling includes: ' + pjoin(build_prefix, 'include'))\n-        if os.path.exists(pjoin(build_lib, 'pyarrow', 'include')):\n-            shutil.rmtree(pjoin(build_lib, 'pyarrow', 'include'))\n-        shutil.move(pjoin(build_prefix, 'include'),\n-                    pjoin(build_lib, 'pyarrow'))\n-\n-        # Move the built C-extension to the place expected by the Python build\n-        self._found_names = []\n-        for name in self.CYTHON_MODULE_NAMES:\n-            built_path = self.get_ext_built(name)\n-            if not os.path.exists(built_path):\n-                print(built_path)\n-                if self._failure_permitted(name):\n-                    print('Cython module {0} failure permitted'.format(name))\n-                    continue\n-                raise RuntimeError('pyarrow C-extension failed to build:',\n-                                   os.path.abspath(built_path))\n-\n-            ext_path = pjoin(build_lib, self._get_cmake_ext_path(name))\n-            if os.path.exists(ext_path):\n-                os.remove(ext_path)\n-            self.mkpath(os.path.dirname(ext_path))\n-            print('Moving built C-extension', built_path,\n-                  'to build path', ext_path)\n-            shutil.move(self.get_ext_built(name), ext_path)\n-            self._found_names.append(name)\n-\n-            if os.path.exists(self.get_ext_built_api_header(name)):\n-                shutil.move(self.get_ext_built_api_header(name),\n-                            pjoin(os.path.dirname(ext_path), name + '_api.h'))\n-\n-        # Move the plasma store\n-        if self.with_plasma:\n-            build_py = self.get_finalized_command('build_py')\n-            source = os.path.join(self.build_type, \"plasma_store\")\n-            target = os.path.join(build_lib,\n-                                  build_py.get_package_dir('pyarrow'),\n-                                  \"plasma_store\")\n-            shutil.move(source, target)\n-\n-        os.chdir(saved_cwd)\n+                build_py = self.get_finalized_command('build_py')\n+                source = os.path.join(self.build_type, \"plasma_store\")\n+                target = os.path.join(build_lib,\n+                                      build_py.get_package_dir('pyarrow'),\n+                                      \"plasma_store\")\n+                shutil.move(source, target)\n \n     def _failure_permitted(self, name):\n         if name == '_parquet' and not self.with_parquet:\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T21:34:28.103+0000",
                    "updated": "2018-01-31T21:34:28.103+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|i3plv3:",
        "customfield_12314139": null
    }
}