{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13237583",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583",
    "key": "ARROW-5510",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12581848",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12581848",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "outwardIssue": {
                    "id": "13256117",
                    "key": "ARROW-6529",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13256117",
                    "fields": {
                        "summary": "[C++] Feather: slow writing of NullArray",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12580857",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12580857",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13123774",
                    "key": "ARROW-1907",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123774",
                    "fields": {
                        "summary": "[C++/Python] Feather format cannot accommodate string columns containing more than a total of 2GB of data",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5510/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/408338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694\n \n \n   This is based on top of ARROW-7979, so I will need to rebase once that is merged.\r\n   \r\n   Excluding the changes from ARROW-7979, this patch is a substantial code reduction in Feather-related code. I removed a lot of cruft from the V1 implementation and made things a lot simpler without altering the user-facing functionality:\r\n   \r\n   ```\r\n   $ git diff f9a810717 --stat\r\n    cpp/src/arrow/ipc/feather.cc         | 1030 +++++++++++++++++++++++--------------------------\r\n    cpp/src/arrow/ipc/feather.fbs        |    8 +-\r\n    cpp/src/arrow/ipc/feather.h          |  118 ++----\r\n    cpp/src/arrow/ipc/feather_internal.h |  233 -----------\r\n    cpp/src/arrow/ipc/feather_test.cc    |  539 ++++++--------------------\r\n    cpp/src/arrow/table.cc               |    4 +-\r\n    python/pyarrow/feather.pxi           |   93 ++---\r\n    python/pyarrow/feather.py            |  162 ++++----\r\n    python/pyarrow/includes/libarrow.pxd |   35 +-\r\n    python/pyarrow/tests/test_feather.py |  819 +++++++++++++++++++--------------------\r\n    r/NAMESPACE                          |    3 +-\r\n    r/R/arrowExports.R                   |   64 +--\r\n    r/R/feather.R                        |   84 +---\r\n    r/_pkgdown.yml                       |    3 +-\r\n    r/src/arrowExports.cpp               |  252 ++----------\r\n    r/src/feather.cpp                    |  115 +-----\r\n    16 files changed, 1248 insertions(+), 2314 deletions(-)\r\n   ```\r\n   \r\n   To summarize:\r\n   \r\n   * V2 is exactly the Arrow IPC file format, with the option for the experimental \"trivial\" body buffer compression implemented in ARROW-7979. `read_feather` functions distinguish the files based on the magic bytes at the beginning of the file (\"FEA1\" versus \"ARROW1\")\r\n   * A `ipc::feather::WriteProperties` struct has been introduced to allow setting the file version, as well as chunksize (since large tables are broken up into smaller chunks when writing), compression type, and compression level (compressor-specific)\r\n   * Unit tests in Python now test both versions\r\n   * R tests are only running the V2 version. I'll need some help adding options to set the version as well as the compression type and compression level\r\n   \r\n   Open questions / notes:\r\n   \r\n   * If we are unable to formalize \"trivial\" buffer compression in IPC message bodies in 0.17.0, what should happen? One option is to disable compression in the release. I don't like this because it diminishes the value of the new version of the format, and I would be hesitant to even promote it publicly until compression is available. Another option is to use the current \"metadata backdoor\" in ARROW-7979 and then maintain compatibility code in future releases once/if compression is formalized in the format. \r\n   * Column decompression is currently serial. I'll work on making this parallel ASAP as it will impact benchmarks significantly. \r\n   * Write performance could be improved by compressing chunks and writing them to disk concurrently. It's done serially at the moment, so will open a follow up JIRA about this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T21:34:27.966+0000",
                    "updated": "2020-03-23T21:34:27.966+0000",
                    "started": "2020-03-23T21:34:27.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408338",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/408343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-602871239\n \n \n   I'll work on some rough compression benchmarks with LZ4 and ZSTD using the datasets in https://ursalabs.org/blog/2019-10-columnar-perf/ to see how things are looking as far as file size and load times. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T21:40:20.650+0000",
                    "updated": "2020-03-23T21:40:20.650+0000",
                    "started": "2020-03-23T21:40:20.650+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408343",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/408347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-602873704\n \n \n   https://issues.apache.org/jira/browse/ARROW-5510\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T21:46:33.711+0000",
                    "updated": "2020-03-23T21:46:33.711+0000",
                    "started": "2020-03-23T21:46:33.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408347",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/408356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-602886710\n \n \n   The R build would be fixed by running `cd r && make doc` (or, not to beat a dead horse, by merging #6411)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T22:18:40.966+0000",
                    "updated": "2020-03-23T22:18:40.966+0000",
                    "started": "2020-03-23T22:18:40.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408356",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/408418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-602906476\n \n \n   OK, I ran some simple benchmarks on my laptop (8-core i9 processor -- note that BOTH compression and decompression are SINGLE-THREADED currently) with the Fannie Mae and NYC Taxi datasets. The cases are:\r\n   \r\n   * Uncompressed IPC file\r\n   * ZSTD with level 1 and 10\r\n   * LZ4 (no configurable compression level)\r\n   \r\n   See file sizes:\r\n   \r\n   ```\r\n   -rw------- 1 wesm wesm  638796850 Mar 23 17:49 2016Q4_lz4_None.feather\r\n   -rw-r--r-- 1 wesm wesm 1942965715 Dec  9 21:04 2016Q4.txt\r\n   -rw------- 1 wesm wesm 5045771154 Mar 23 17:49 2016Q4_uncompressed_None.feather\r\n   -rw------- 1 wesm wesm  395365770 Mar 23 17:49 2016Q4_zstd_10.feather\r\n   -rw------- 1 wesm wesm  524043698 Mar 23 17:49 2016Q4_zstd_1.feather\r\n   -rw-r--r-- 1 wesm wesm 2728058790 Mar 23 16:46 yellow_tripdata_2010-01.csv\r\n   -rw------- 1 wesm wesm 1175453106 Mar 23 17:51 yellow_tripdata_2010-01_lz4_None.feather\r\n   -rw------- 1 wesm wesm 2505808570 Mar 23 17:50 yellow_tripdata_2010-01_uncompressed_None.feather\r\n   -rw------- 1 wesm wesm  651796626 Mar 23 17:51 yellow_tripdata_2010-01_zstd_10.feather\r\n   -rw------- 1 wesm wesm  821963122 Mar 23 17:50 yellow_tripdata_2010-01_zstd_1.feather\r\n   ```\r\n   \r\n   * ZSTD achieves 90+% compression ratio on Fannie Mae and 60-75% on NYC Taxi \r\n   * LZ4 has lower compression ratio, 87% on Fannie Mae and 54% on NYC Taxi\r\n   \r\n   Here are the load times (note again that decompression is single-threaded):\r\n   \r\n   ```\r\n   # Load to Arrow Table\r\n   \r\n   ('fanniemae', None, None, 0.016037464141845703)  # MEMORY MAP\r\n   ('fanniemae', 'zstd', 1, 2.873652696609497)\r\n   ('fanniemae', 'zstd', 10, 1.4272994995117188)\r\n   ('fanniemae', 'lz4', None, 0.8573403358459473)\r\n   ('nyctaxi', None, None, 0.004047393798828125)  # MEMORY MAP\r\n   ('nyctaxi', 'zstd', 1, 2.758413553237915)\r\n   ('nyctaxi', 'zstd', 10, 2.0100138187408447)\r\n   ('nyctaxi', 'lz4', None, 0.8240318298339844)\r\n   \r\n   # Load to Arrow Table, convert to pandas\r\n   \r\n   ('fanniemae', None, None, 2.4117162227630615)\r\n   ('fanniemae', 'zstd', 1, 5.116245985031128)\r\n   ('fanniemae', 'zstd', 10, 3.9139928817749023)\r\n   ('fanniemae', 'lz4', None, 3.5294902324676514)\r\n   ('nyctaxi', None, None, 7.1993725299835205)\r\n   ('nyctaxi', 'zstd', 1, 10.147839069366455)\r\n   ('nyctaxi', 'zstd', 10, 8.913217782974243)\r\n   ('nyctaxi', 'lz4', None, 8.480979204177856)\r\n   ```\r\n   \r\n   This looks pretty excellent to me, a huge benefit to users with less than 2x slowdown when considering conversion to `pandas.DataFrame`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T23:10:17.040+0000",
                    "updated": "2020-03-23T23:10:17.040+0000",
                    "started": "2020-03-23T23:10:17.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408418",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/408419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-602906476\n \n \n   OK, I ran some simple benchmarks on my laptop (8-core i9 processor -- note that BOTH compression and decompression are SINGLE-THREADED currently) with the Fannie Mae and NYC Taxi datasets. The cases are:\r\n   \r\n   * Uncompressed IPC file\r\n   * ZSTD with level 1 and 10\r\n   * LZ4 (no configurable compression level)\r\n   \r\n   Note that these \".feather\" files are exactly Arrow IPC files\r\n   \r\n   See file sizes:\r\n   \r\n   ```\r\n   -rw------- 1 wesm wesm  638796850 Mar 23 17:49 2016Q4_lz4_None.feather\r\n   -rw-r--r-- 1 wesm wesm 1942965715 Dec  9 21:04 2016Q4.txt\r\n   -rw------- 1 wesm wesm 5045771154 Mar 23 17:49 2016Q4_uncompressed_None.feather\r\n   -rw------- 1 wesm wesm  395365770 Mar 23 17:49 2016Q4_zstd_10.feather\r\n   -rw------- 1 wesm wesm  524043698 Mar 23 17:49 2016Q4_zstd_1.feather\r\n   -rw-r--r-- 1 wesm wesm 2728058790 Mar 23 16:46 yellow_tripdata_2010-01.csv\r\n   -rw------- 1 wesm wesm 1175453106 Mar 23 17:51 yellow_tripdata_2010-01_lz4_None.feather\r\n   -rw------- 1 wesm wesm 2505808570 Mar 23 17:50 yellow_tripdata_2010-01_uncompressed_None.feather\r\n   -rw------- 1 wesm wesm  651796626 Mar 23 17:51 yellow_tripdata_2010-01_zstd_10.feather\r\n   -rw------- 1 wesm wesm  821963122 Mar 23 17:50 yellow_tripdata_2010-01_zstd_1.feather\r\n   ```\r\n   \r\n   * ZSTD achieves 90+% compression ratio on Fannie Mae and 60-75% on NYC Taxi \r\n   * LZ4 has lower compression ratio, 87% on Fannie Mae and 54% on NYC Taxi\r\n   \r\n   Here are the load times (note again that decompression is single-threaded):\r\n   \r\n   ```\r\n   # Load to Arrow Table\r\n   \r\n   ('fanniemae', None, None, 0.016037464141845703)  # MEMORY MAP\r\n   ('fanniemae', 'zstd', 1, 2.873652696609497)\r\n   ('fanniemae', 'zstd', 10, 1.4272994995117188)\r\n   ('fanniemae', 'lz4', None, 0.8573403358459473)\r\n   ('nyctaxi', None, None, 0.004047393798828125)  # MEMORY MAP\r\n   ('nyctaxi', 'zstd', 1, 2.758413553237915)\r\n   ('nyctaxi', 'zstd', 10, 2.0100138187408447)\r\n   ('nyctaxi', 'lz4', None, 0.8240318298339844)\r\n   \r\n   # Load to Arrow Table, convert to pandas\r\n   \r\n   ('fanniemae', None, None, 2.4117162227630615)\r\n   ('fanniemae', 'zstd', 1, 5.116245985031128)\r\n   ('fanniemae', 'zstd', 10, 3.9139928817749023)\r\n   ('fanniemae', 'lz4', None, 3.5294902324676514)\r\n   ('nyctaxi', None, None, 7.1993725299835205)\r\n   ('nyctaxi', 'zstd', 1, 10.147839069366455)\r\n   ('nyctaxi', 'zstd', 10, 8.913217782974243)\r\n   ('nyctaxi', 'lz4', None, 8.480979204177856)\r\n   ```\r\n   \r\n   This looks pretty excellent to me, a huge benefit to users with less than 2x slowdown when considering conversion to `pandas.DataFrame`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T23:11:30.534+0000",
                    "updated": "2020-03-23T23:11:30.534+0000",
                    "started": "2020-03-23T23:11:30.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408419",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-604004611\n \n \n   This is rebased and should be easier to review now\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T18:19:01.920+0000",
                    "updated": "2020-03-25T18:19:01.920+0000",
                    "started": "2020-03-25T18:19:01.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409688",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r398141024\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -29,74 +29,6 @@ def _check_pandas_version():\n         raise ImportError(\"feather requires pandas >= 0.17.0\")\n \n \n-class FeatherReader(ext.FeatherReader):\n \n Review comment:\n   Any idea if there would be people using those classes?\r\n   \r\n   (I have no problem with removing them directly, though, but we could also deprecate first)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:21:07.775+0000",
                    "updated": "2020-03-25T20:21:07.775+0000",
                    "started": "2020-03-25T20:21:07.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409793",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r398140248\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -175,15 +123,38 @@ def write_feather(df, dest):\n         Dataframe to write out as feather format.\n \n Review comment:\n   update there that it also accepts a table? \r\n   \r\n   (actually, in the parquet module, it uses a different naming scheme, i.e. `write_table`)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:21:07.778+0000",
                    "updated": "2020-03-25T20:21:07.778+0000",
                    "started": "2020-03-25T20:21:07.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409794",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r398142242\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -203,15 +174,37 @@ def read_feather(source, columns=None, use_threads=True):\n     columns : sequence, optional\n         Only read a specific set of columns. If not provided, all columns are\n         read.\n+    as_pandas : bool, default True\n+        Convert result to pandas.DataFrame\n \n Review comment:\n   Personally, I would not add this, as this seems inconsistent with the rest of pyarrow (or do we have this keyword elsewhere?), and the alternative is just a `.to_pandas()` call afterwards (so not even less typing). \r\n   (and also, for pandas users, they should probably rather use `pandas.read_feather`)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:21:07.855+0000",
                    "updated": "2020-03-25T20:21:07.855+0000",
                    "started": "2020-03-25T20:21:07.855+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409795",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409797",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r398145255\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -203,15 +174,37 @@ def read_feather(source, columns=None, use_threads=True):\n     columns : sequence, optional\n         Only read a specific set of columns. If not provided, all columns are\n         read.\n+    as_pandas : bool, default True\n+        Convert result to pandas.DataFrame\n \n Review comment:\n   Whoops, sorry, I missed that this method actually already returns a pandas DataFrame :) (default of True).\r\n   \r\n   In that case, I would propose to put the bulk of the function in `read_table` (since in principle you should be able to read a feather file into a arrow table without having pandas installed), and have `read_feather` as a small function calling `read_table(...).to_pandas(use_threads=use_threads)`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:23:54.022+0000",
                    "updated": "2020-03-25T20:23:54.022+0000",
                    "started": "2020-03-25T20:23:54.022+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409797",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r398156565\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -29,74 +29,6 @@ def _check_pandas_version():\n         raise ImportError(\"feather requires pandas >= 0.17.0\")\n \n \n-class FeatherReader(ext.FeatherReader):\n \n Review comment:\n   I don't think anyone should be using them. Some of the features that they used have been removed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:43:42.453+0000",
                    "updated": "2020-03-25T20:43:42.453+0000",
                    "started": "2020-03-25T20:43:42.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409812",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/409814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r398156739\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -203,15 +174,37 @@ def read_feather(source, columns=None, use_threads=True):\n     columns : sequence, optional\n         Only read a specific set of columns. If not provided, all columns are\n         read.\n+    as_pandas : bool, default True\n+        Convert result to pandas.DataFrame\n \n Review comment:\n   Makes sense, will do\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:44:02.706+0000",
                    "updated": "2020-03-25T20:44:02.706+0000",
                    "started": "2020-03-25T20:44:02.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409814",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411189",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-605116020\n \n \n   I'll work on fixing the CI issues today. @nealrichardson if you could help me with exposing the version and compression options in R that is the last thing that's needed for R I think\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T17:05:07.489+0000",
                    "updated": "2020-03-27T17:05:07.489+0000",
                    "started": "2020-03-27T17:05:07.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411189",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r399414485\n \n \n\n ##########\n File path: python/pyarrow/feather.py\n ##########\n @@ -165,25 +97,68 @@ def read_pandas(self, columns=None, use_threads=True):\n             use_threads=use_threads)\n \n \n-def write_feather(df, dest):\n+def check_chunked_overflow(name, col):\n+    if col.num_chunks == 1:\n+        return\n+\n+    if col.type in (ext.binary(), ext.string()):\n+        raise ValueError(\"Column '{}' exceeds 2GB maximum capacity of \"\n+                         \"a Feather binary column. This restriction may be \"\n+                         \"lifted in the future\".format(name))\n+    else:\n+        # TODO(wesm): Not sure when else this might be reached\n+        raise ValueError(\"Column '{}' of type {} was chunked on conversion \"\n+                         \"to Arrow and cannot be currently written to \"\n+                         \"Feather format\".format(name, str(col.type)))\n+\n+\n+def write_feather(df, dest, compression=None, compression_level=None,\n+                  chunksize=None, version=2):\n     \"\"\"\n     Write a pandas.DataFrame to Feather format.\n \n     Parameters\n     ----------\n-    df : pandas.DataFrame\n-        Dataframe to write out as feather format.\n+    df : pandas.DataFrame or pyarrow.Table\n+        Data to write out as Feather format.\n     dest : str\n         Local destination path.\n+    compression : string, default None\n+        {\"zstd\", \"lz4\", None}\n+    compression_level : int, default None\n+        Use a compression level particular to the chosen compressor. If None\n+        use the default compression level\n+    chunksize : int, default None\n+        For V2 files, the size of chunks to split the data into. None means use\n+        the default, which is currently 64K\n+    version : int, default 2\n+        Feather file version. Version 2 is the current. Version 1 is the more\n+        limited legacy format\n \n Review comment:\n   @nealrichardson these are the new options that need to be exposed in R. It shouldn't be necessary to wrap any new C++ classes, only adding options to `write_feather`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T17:07:01.053+0000",
                    "updated": "2020-03-27T17:07:01.053+0000",
                    "started": "2020-03-27T17:07:01.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411191",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r399519691\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.h\n ##########\n @@ -116,55 +93,42 @@ class ARROW_EXPORT TableReader {\n   /// \\return Status\n   ///\n   /// This function is zero-copy if the file source supports zero-copy reads\n-  Status Read(const std::vector<std::string>& names, std::shared_ptr<Table>* out);\n-\n- private:\n-  class ARROW_NO_EXPORT TableReaderImpl;\n-  std::unique_ptr<TableReaderImpl> impl_;\n+  virtual Status Read(const std::vector<std::string>& names,\n+                      std::shared_ptr<Table>* out) = 0;\n };\n \n-/// \\class TableWriter\n-/// \\brief Interface for writing Feather files\n-class ARROW_EXPORT TableWriter {\n- public:\n-  ~TableWriter();\n-\n-  /// \\brief Create a new TableWriter that writes to an OutputStream\n-  /// \\param[in] stream an output stream\n-  /// \\param[out] out the returned table writer\n-  /// \\return Status\n-  static Status Open(const std::shared_ptr<io::OutputStream>& stream,\n-                     std::unique_ptr<TableWriter>* out);\n+struct ARROW_EXPORT WriteProperties {\n+  static WriteProperties Defaults() { return WriteProperties(); }\n \n-  /// \\brief Set the description field in the file metadata\n-  void SetDescription(const std::string& desc);\n+  static WriteProperties DefaultsV1() {\n+    WriteProperties props;\n+    props.version = kFeatherV1Version;\n+    return props;\n+  }\n \n-  /// \\brief Set the number of rows in the file\n-  void SetNumRows(int64_t num_rows);\n-\n-  /// \\brief Append a column to the file\n+  /// Feather file version number\n   ///\n-  /// \\param[in] name the column name\n-  /// \\param[in] values the column values as a contiguous arrow::Array\n-  /// \\return Status\n-  Status Append(const std::string& name, const Array& values);\n+  /// version 2: \"Feather V1\" Apache Arrow <= 0.16.0\n+  /// version 3: \"Feather V2\" Apache Arrow > 0.16.0\n+  int version = kFeatherV2Version;\n \n-  /// \\brief Write a table to the file\n-  ///\n-  /// \\param[in] table the table to be written\n-  /// \\return Status\n-  Status Write(const Table& table);\n+  // Parameters for Feather V2 only\n \n-  /// \\brief Finalize the file by writing the file metadata and footer\n-  /// \\return Status\n-  Status Finalize();\n+  /// Number of rows per intra-file chunk. Use smaller chunksize when you need\n+  /// faster random row access\n+  int64_t chunksize = 1LL << 16;\n \n- private:\n-  TableWriter();\n-  class ARROW_NO_EXPORT TableWriterImpl;\n-  std::unique_ptr<TableWriterImpl> impl_;\n+  /// Compression type to use\n+  Compression::type compression = Compression::ZSTD;\n \n Review comment:\n   Is this correct: zstd compressed by default? Since `ARROW_IPC` does not require `ARROW_WITH_ZSTD`, the default may very well fail (as it turns out from what I'm seeing locally).\r\n   \r\n   Note that the python bindings (docstring at least) say uncompressed is default.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T20:24:48.210+0000",
                    "updated": "2020-03-27T20:24:48.210+0000",
                    "started": "2020-03-27T20:24:48.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411350",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r399521359\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.h\n ##########\n @@ -116,55 +93,42 @@ class ARROW_EXPORT TableReader {\n   /// \\return Status\n   ///\n   /// This function is zero-copy if the file source supports zero-copy reads\n-  Status Read(const std::vector<std::string>& names, std::shared_ptr<Table>* out);\n-\n- private:\n-  class ARROW_NO_EXPORT TableReaderImpl;\n-  std::unique_ptr<TableReaderImpl> impl_;\n+  virtual Status Read(const std::vector<std::string>& names,\n+                      std::shared_ptr<Table>* out) = 0;\n };\n \n-/// \\class TableWriter\n-/// \\brief Interface for writing Feather files\n-class ARROW_EXPORT TableWriter {\n- public:\n-  ~TableWriter();\n-\n-  /// \\brief Create a new TableWriter that writes to an OutputStream\n-  /// \\param[in] stream an output stream\n-  /// \\param[out] out the returned table writer\n-  /// \\return Status\n-  static Status Open(const std::shared_ptr<io::OutputStream>& stream,\n-                     std::unique_ptr<TableWriter>* out);\n+struct ARROW_EXPORT WriteProperties {\n+  static WriteProperties Defaults() { return WriteProperties(); }\n \n-  /// \\brief Set the description field in the file metadata\n-  void SetDescription(const std::string& desc);\n+  static WriteProperties DefaultsV1() {\n+    WriteProperties props;\n+    props.version = kFeatherV1Version;\n+    return props;\n+  }\n \n-  /// \\brief Set the number of rows in the file\n-  void SetNumRows(int64_t num_rows);\n-\n-  /// \\brief Append a column to the file\n+  /// Feather file version number\n   ///\n-  /// \\param[in] name the column name\n-  /// \\param[in] values the column values as a contiguous arrow::Array\n-  /// \\return Status\n-  Status Append(const std::string& name, const Array& values);\n+  /// version 2: \"Feather V1\" Apache Arrow <= 0.16.0\n+  /// version 3: \"Feather V2\" Apache Arrow > 0.16.0\n+  int version = kFeatherV2Version;\n \n-  /// \\brief Write a table to the file\n-  ///\n-  /// \\param[in] table the table to be written\n-  /// \\return Status\n-  Status Write(const Table& table);\n+  // Parameters for Feather V2 only\n \n-  /// \\brief Finalize the file by writing the file metadata and footer\n-  /// \\return Status\n-  Status Finalize();\n+  /// Number of rows per intra-file chunk. Use smaller chunksize when you need\n+  /// faster random row access\n+  int64_t chunksize = 1LL << 16;\n \n- private:\n-  TableWriter();\n-  class ARROW_NO_EXPORT TableWriterImpl;\n-  std::unique_ptr<TableWriterImpl> impl_;\n+  /// Compression type to use\n+  Compression::type compression = Compression::ZSTD;\n \n Review comment:\n   Ah I'll fix that. If anything LZ4 should probably be the default since based on benchmarks it has little effect on read/write times.\r\n   \r\n   I'll change the implementation to set LZ4 as the default if it's available otherwise uncompressed is the default. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T20:28:37.546+0000",
                    "updated": "2020-03-27T20:28:37.546+0000",
                    "started": "2020-03-27T20:28:37.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411353",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r399521359\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.h\n ##########\n @@ -116,55 +93,42 @@ class ARROW_EXPORT TableReader {\n   /// \\return Status\n   ///\n   /// This function is zero-copy if the file source supports zero-copy reads\n-  Status Read(const std::vector<std::string>& names, std::shared_ptr<Table>* out);\n-\n- private:\n-  class ARROW_NO_EXPORT TableReaderImpl;\n-  std::unique_ptr<TableReaderImpl> impl_;\n+  virtual Status Read(const std::vector<std::string>& names,\n+                      std::shared_ptr<Table>* out) = 0;\n };\n \n-/// \\class TableWriter\n-/// \\brief Interface for writing Feather files\n-class ARROW_EXPORT TableWriter {\n- public:\n-  ~TableWriter();\n-\n-  /// \\brief Create a new TableWriter that writes to an OutputStream\n-  /// \\param[in] stream an output stream\n-  /// \\param[out] out the returned table writer\n-  /// \\return Status\n-  static Status Open(const std::shared_ptr<io::OutputStream>& stream,\n-                     std::unique_ptr<TableWriter>* out);\n+struct ARROW_EXPORT WriteProperties {\n+  static WriteProperties Defaults() { return WriteProperties(); }\n \n-  /// \\brief Set the description field in the file metadata\n-  void SetDescription(const std::string& desc);\n+  static WriteProperties DefaultsV1() {\n+    WriteProperties props;\n+    props.version = kFeatherV1Version;\n+    return props;\n+  }\n \n-  /// \\brief Set the number of rows in the file\n-  void SetNumRows(int64_t num_rows);\n-\n-  /// \\brief Append a column to the file\n+  /// Feather file version number\n   ///\n-  /// \\param[in] name the column name\n-  /// \\param[in] values the column values as a contiguous arrow::Array\n-  /// \\return Status\n-  Status Append(const std::string& name, const Array& values);\n+  /// version 2: \"Feather V1\" Apache Arrow <= 0.16.0\n+  /// version 3: \"Feather V2\" Apache Arrow > 0.16.0\n+  int version = kFeatherV2Version;\n \n-  /// \\brief Write a table to the file\n-  ///\n-  /// \\param[in] table the table to be written\n-  /// \\return Status\n-  Status Write(const Table& table);\n+  // Parameters for Feather V2 only\n \n-  /// \\brief Finalize the file by writing the file metadata and footer\n-  /// \\return Status\n-  Status Finalize();\n+  /// Number of rows per intra-file chunk. Use smaller chunksize when you need\n+  /// faster random row access\n+  int64_t chunksize = 1LL << 16;\n \n- private:\n-  TableWriter();\n-  class ARROW_NO_EXPORT TableWriterImpl;\n-  std::unique_ptr<TableWriterImpl> impl_;\n+  /// Compression type to use\n+  Compression::type compression = Compression::ZSTD;\n \n Review comment:\n   Ah I'll fix that. If anything LZ4 should probably be the default since based on benchmarks it has little effect on read/write times and yields much smaller files. So that's a better out of the box experience on average\r\n   \r\n   I'll change the implementation to set LZ4 as the default if it's available otherwise uncompressed is the default. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T20:29:01.053+0000",
                    "updated": "2020-03-27T20:29:01.053+0000",
                    "started": "2020-03-27T20:29:01.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411354",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#discussion_r399546047\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.h\n ##########\n @@ -116,55 +93,42 @@ class ARROW_EXPORT TableReader {\n   /// \\return Status\n   ///\n   /// This function is zero-copy if the file source supports zero-copy reads\n-  Status Read(const std::vector<std::string>& names, std::shared_ptr<Table>* out);\n-\n- private:\n-  class ARROW_NO_EXPORT TableReaderImpl;\n-  std::unique_ptr<TableReaderImpl> impl_;\n+  virtual Status Read(const std::vector<std::string>& names,\n+                      std::shared_ptr<Table>* out) = 0;\n };\n \n-/// \\class TableWriter\n-/// \\brief Interface for writing Feather files\n-class ARROW_EXPORT TableWriter {\n- public:\n-  ~TableWriter();\n-\n-  /// \\brief Create a new TableWriter that writes to an OutputStream\n-  /// \\param[in] stream an output stream\n-  /// \\param[out] out the returned table writer\n-  /// \\return Status\n-  static Status Open(const std::shared_ptr<io::OutputStream>& stream,\n-                     std::unique_ptr<TableWriter>* out);\n+struct ARROW_EXPORT WriteProperties {\n+  static WriteProperties Defaults() { return WriteProperties(); }\n \n-  /// \\brief Set the description field in the file metadata\n-  void SetDescription(const std::string& desc);\n+  static WriteProperties DefaultsV1() {\n+    WriteProperties props;\n+    props.version = kFeatherV1Version;\n+    return props;\n+  }\n \n-  /// \\brief Set the number of rows in the file\n-  void SetNumRows(int64_t num_rows);\n-\n-  /// \\brief Append a column to the file\n+  /// Feather file version number\n   ///\n-  /// \\param[in] name the column name\n-  /// \\param[in] values the column values as a contiguous arrow::Array\n-  /// \\return Status\n-  Status Append(const std::string& name, const Array& values);\n+  /// version 2: \"Feather V1\" Apache Arrow <= 0.16.0\n+  /// version 3: \"Feather V2\" Apache Arrow > 0.16.0\n+  int version = kFeatherV2Version;\n \n-  /// \\brief Write a table to the file\n-  ///\n-  /// \\param[in] table the table to be written\n-  /// \\return Status\n-  Status Write(const Table& table);\n+  // Parameters for Feather V2 only\n \n-  /// \\brief Finalize the file by writing the file metadata and footer\n-  /// \\return Status\n-  Status Finalize();\n+  /// Number of rows per intra-file chunk. Use smaller chunksize when you need\n+  /// faster random row access\n+  int64_t chunksize = 1LL << 16;\n \n- private:\n-  TableWriter();\n-  class ARROW_NO_EXPORT TableWriterImpl;\n-  std::unique_ptr<TableWriterImpl> impl_;\n+  /// Compression type to use\n+  Compression::type compression = Compression::ZSTD;\n \n Review comment:\n   Done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T21:27:07.915+0000",
                    "updated": "2020-03-27T21:27:07.915+0000",
                    "started": "2020-03-27T21:27:07.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411394",
                    "issueId": "13237583"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/worklog/411395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6694: ARROW-5510: [C++][Python][R] Implement Feather \"V2\" using Arrow IPC file format\nURL: https://github.com/apache/arrow/pull/6694#issuecomment-605322453\n \n \n   Some refactoring is required in GLib (I forgot that GLib had Feather bindings). I'll try to do it myself. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T21:27:28.874+0000",
                    "updated": "2020-03-27T21:27:28.874+0000",
                    "started": "2020-03-27T21:27:28.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411395",
                    "issueId": "13237583"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2e63ed63[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b45645e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40ad82f8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@a7927[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a5868ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@681460a8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44828510[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@17921fe6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ef618a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@25ac24f4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75d68f54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@723cd327[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 30 00:05:45 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-30T00:05:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5510/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2019-06-04T21:27:24.000+0000",
        "updated": "2020-03-30T00:05:46.000+0000",
        "timeoriginalestimate": null,
        "description": "The initial Feather file format is\u00a0a minimal subset of\u00a0the Arrow IPC format. It has a number of limitations (see\u00a0[https://wesmckinney.com/blog/feather-arrow-future/]).\u00a0\r\n\r\nWe want to retain \"feather\" as the name of the on-disk representation of Arrow memory, so in order to support everything that Arrow supports, we need a \"feather 2.0\" format.\r\n\r\nIIUC, defining the file format is \"done\" (dump the memory to disk). Remaining issues include upgrading \"feather\" readers and writers in all languages to support both feather 1.0 and feather 2.0. (e.g.\u00a0https://issues.apache.org/jira/browse/ARROW-5501)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format] Feather V2 based on Arrow IPC file format, with compression support",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/comment/17038397",
                    "id": "17038397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I started looking at this. As preliminaries I'm thinking about how to compress individual buffers in RecordBatch message bodies in the least invasive way",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-02-17T14:27:17.509+0000",
                    "updated": "2020-02-17T14:27:17.509+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237583/comment/17070607",
                    "id": "17070607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6694\n[https://github.com/apache/arrow/pull/6694]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-30T00:05:45.242+0000",
                    "updated": "2020-03-30T00:05:45.242+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z03f0o:",
        "customfield_12314139": null
    }
}