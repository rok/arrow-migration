{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13418874",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874",
    "key": "ARROW-15178",
    "fields": {
        "parent": {
            "id": "13418565",
            "key": "ARROW-15156",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13418565",
            "fields": {
                "summary": "[Doc] Implement Tutorials for the Java Documentation",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dsusanibara",
            "name": "dsusanibara",
            "key": "dsusanibara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Dali Susanibar Arce",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "aggregateprogress": {
            "progress": 30600,
            "total": 30600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30600,
            "total": 30600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15178/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 51,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#issuecomment-1056900553\n\n\n   https://issues.apache.org/jira/browse/ARROW-15178\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T12:56:51.295+0000",
                    "updated": "2022-03-02T12:56:51.295+0000",
                    "started": "2022-03-02T12:56:51.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735275",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818259405\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        $GITHUB_WORKSPACE/java/c\n+    $ cmake --build . --target install\n+    $ ls -latr $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        $GITHUB_WORKSPACE/cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Build Java Modules That Consume C / C++ Libs\n+++++++++++++++++++++++++++++++++++++++++++++\n+\n+Build Java C Data Interface\n+###########################\n+\n+Java arrow-c-data maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Build Java C++ Interface\n+########################\n+\n+Java arrow-jni maven profile (build ORC / Gandiva / Dataset):\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+Go to open java project and select java folder.\n\nReview comment:\n       Added\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        $GITHUB_WORKSPACE/java/c\n+    $ cmake --build . --target install\n+    $ ls -latr $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        $GITHUB_WORKSPACE/cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Build Java Modules That Consume C / C++ Libs\n+++++++++++++++++++++++++++++++++++++++++++++\n+\n+Build Java C Data Interface\n+###########################\n+\n+Java arrow-c-data maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Build Java C++ Interface\n+########################\n+\n+Java arrow-jni maven profile (build ORC / Gandiva / Dataset):\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+\n+Let's define our JRE runner:\n+\n+.. image:: img/java_jre_runner.png\n+\n+Let's configure additional environment properties:\n+\n+.. image:: img/java_jre_env_properties.png\n+\n+Let's run our java-dataset maven configuration:\n+\n+.. image:: img/java_run_mvn_configuration.png\n+\n+.. image:: img/java_run_mvn_configuration_result.png\n+\n+Common Errors\n+=============\n+\n+1.- Errors related to:\n+    - Could NOT find Boost (missing: Boost_INCLUDE_DIR system filesystem)\n+    - Could NOT find Lz4 (missing: LZ4_LIB)\n+    - Could NOT find zstd (missing: ZSTD_LIB)\n+\n+    Consider to configure parameters that download software at the build time with:\n+\n+.. code-block::\n+\n+    -Dre2_SOURCE=BUNDLED \\\n+    -DBoost_SOURCE=BUNDLED \\\n+    -Dutf8proc_SOURCE=BUNDLED \\\n+    -DSnappy_SOURCE=BUNDLED \\\n+    -DORC_SOURCE=BUNDLED \\\n+    -DZLIB_SOURCE=BUNDLED \\\n+\n\nReview comment:\n       Added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:19:23.901+0000",
                    "updated": "2022-03-03T02:19:23.901+0000",
                    "started": "2022-03-03T02:19:23.901+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735730",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818259789\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n\nReview comment:\n       Changed\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n\nReview comment:\n       Changed to: headings \"Building C++ JNI Libraries on Linux\", \"Building C++ JNI Libraries on MacOS\", and \"Building Arrow JNI Libraries\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:20:18.151+0000",
                    "updated": "2022-03-03T02:20:18.151+0000",
                    "started": "2022-03-03T02:20:18.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735731",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818259910\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n\nReview comment:\n       Updated\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:20:30.696+0000",
                    "updated": "2022-03-03T02:20:30.696+0000",
                    "started": "2022-03-03T02:20:30.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735732",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818260036\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        $GITHUB_WORKSPACE/java/c\n+    $ cmake --build . --target install\n+    $ ls -latr $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        $GITHUB_WORKSPACE/cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Build Java Modules That Consume C / C++ Libs\n+++++++++++++++++++++++++++++++++++++++++++++\n+\n+Build Java C Data Interface\n+###########################\n+\n+Java arrow-c-data maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Build Java C++ Interface\n+########################\n+\n+Java arrow-jni maven profile (build ORC / Gandiva / Dataset):\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+\n+Let's define our JRE runner:\n+\n+.. image:: img/java_jre_runner.png\n+\n+Let's configure additional environment properties:\n+\n+.. image:: img/java_jre_env_properties.png\n+\n+Let's run our java-dataset maven configuration:\n+\n+.. image:: img/java_run_mvn_configuration.png\n+\n+.. image:: img/java_run_mvn_configuration_result.png\n+\n+Common Errors\n+=============\n+\n+1.- Errors related to:\n+    - Could NOT find Boost (missing: Boost_INCLUDE_DIR system filesystem)\n+    - Could NOT find Lz4 (missing: LZ4_LIB)\n+    - Could NOT find zstd (missing: ZSTD_LIB)\n+\n+    Consider to configure parameters that download software at the build time with:\n+\n+.. code-block::\n\nReview comment:\n       Updated\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        $GITHUB_WORKSPACE/java/c\n+    $ cmake --build . --target install\n+    $ ls -latr $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        $GITHUB_WORKSPACE/cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Build Java Modules That Consume C / C++ Libs\n+++++++++++++++++++++++++++++++++++++++++++++\n+\n+Build Java C Data Interface\n+###########################\n+\n+Java arrow-c-data maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Build Java C++ Interface\n+########################\n+\n+Java arrow-jni maven profile (build ORC / Gandiva / Dataset):\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+\n+Let's define our JRE runner:\n+\n+.. image:: img/java_jre_runner.png\n+\n+Let's configure additional environment properties:\n+\n+.. image:: img/java_jre_env_properties.png\n+\n+Let's run our java-dataset maven configuration:\n+\n+.. image:: img/java_run_mvn_configuration.png\n+\n+.. image:: img/java_run_mvn_configuration_result.png\n+\n+Common Errors\n+=============\n+\n+1.- Errors related to:\n+    - Could NOT find Boost (missing: Boost_INCLUDE_DIR system filesystem)\n+    - Could NOT find Lz4 (missing: LZ4_LIB)\n+    - Could NOT find zstd (missing: ZSTD_LIB)\n+\n+    Consider to configure parameters that download software at the build time with:\n+\n+.. code-block::\n+\n+    -Dre2_SOURCE=BUNDLED \\\n+    -DBoost_SOURCE=BUNDLED \\\n+    -Dutf8proc_SOURCE=BUNDLED \\\n+    -DSnappy_SOURCE=BUNDLED \\\n+    -DORC_SOURCE=BUNDLED \\\n+    -DZLIB_SOURCE=BUNDLED \\\n+\n+2.- Errors related to:\n+    - Caused by: java.lang.NoSuchFieldException: reservedMemory.\n+\n+    We could move from classBits.getDeclaredField(\"reservedMemory\") to classBits.getDeclaredField(\"RESERVED_MEMORY\")\n\nReview comment:\n       Deleted\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:21:03.498+0000",
                    "updated": "2022-03-03T02:21:03.498+0000",
                    "started": "2022-03-03T02:21:03.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735733",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818260166\n\n\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,170 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+Java module that contains performance tests is: `performance`\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:21:17.901+0000",
                    "updated": "2022-03-03T02:21:17.901+0000",
                    "started": "2022-03-03T02:21:17.900+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735734",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818260260\n\n\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,170 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+Java module that contains performance tests is: `performance`\n+\n+Let's configure our performance environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+- Install `conbench`_\n\nReview comment:\n       Added as an optional\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,170 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+Java module that contains performance tests is: `performance`\n+\n+Let's configure our performance environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+- Install `conbench`_\n+\n+Lets execute benchmark tests:\n+\n+.. code-block::\n+\n+    $ cd benchmarks\n+    $ conbench java-micro --help\n+    $ conbench java-micro\n+        --iterations=1\n+        --commit=e90472e35b40f58b17d408438bb8de1641bfe6ef\n+        --java-home=<absolute path to your java home>\n+        --src=<absolute path to your arrow project>\n+        --benchmark-filter=org.apache.arrow.adapter.AvroAdapterBenchmarks.testAvroToArrow\n+    Benchmark                              Mode  Cnt       Score   Error  Units\n+    AvroAdapterBenchmarks.testAvroToArrow  avgt       725545.783          ns/op\n+    Time to POST http://localhost:5000/api/login/ 0.14911699295043945\n+    Time to POST http://localhost:5000/api/benchmarks/ 0.06116318702697754\n+\n+Then go to: http://127.0.0.1:5000/ to see reports:\n+\n+UI Home:\n+\n+.. image:: img/conbench_ui.png\n+\n+UI Runs:\n+\n+.. image:: img/conbench_runs.png\n+\n+UI Benchmark:\n+\n+.. image:: img/conbench_benchmark.png\n+\n+Code Style\n+==========\n+\n+Code style are configured at `java/dev/checkstyle`\n+\n+.. code-block::\n+\n+    <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <version>3.1.0</version>\n+        <executions>\n+            <execution>\n+                <id>validate</id>\n+                <phase>validate</phase>\n+                <goals>\n+                    <goal>check</goal>\n+                </goals>\n+            </execution>\n+        </executions>\n+        <configuration>\n+            <configLocation>dev/checkstyle/checkstyle.xml</configLocation>\n+            <headerLocation>dev/checkstyle/checkstyle.license</headerLocation>\n+            <suppressionsLocation>dev/checkstyle/suppressions.xml</suppressionsLocation>\n+            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n+            ...\n+        </configuration>\n+    </plugin>\n\nReview comment:\n       Deleted\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:21:34.102+0000",
                    "updated": "2022-03-03T02:21:34.102+0000",
                    "started": "2022-03-03T02:21:34.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735735",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818260339\n\n\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,170 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+Java module that contains performance tests is: `performance`\n+\n+Let's configure our performance environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+- Install `conbench`_\n+\n+Lets execute benchmark tests:\n+\n+.. code-block::\n+\n+    $ cd benchmarks\n+    $ conbench java-micro --help\n+    $ conbench java-micro\n+        --iterations=1\n+        --commit=e90472e35b40f58b17d408438bb8de1641bfe6ef\n+        --java-home=<absolute path to your java home>\n+        --src=<absolute path to your arrow project>\n+        --benchmark-filter=org.apache.arrow.adapter.AvroAdapterBenchmarks.testAvroToArrow\n+    Benchmark                              Mode  Cnt       Score   Error  Units\n+    AvroAdapterBenchmarks.testAvroToArrow  avgt       725545.783          ns/op\n+    Time to POST http://localhost:5000/api/login/ 0.14911699295043945\n+    Time to POST http://localhost:5000/api/benchmarks/ 0.06116318702697754\n+\n+Then go to: http://127.0.0.1:5000/ to see reports:\n+\n+UI Home:\n+\n+.. image:: img/conbench_ui.png\n+\n+UI Runs:\n+\n+.. image:: img/conbench_runs.png\n+\n+UI Benchmark:\n+\n+.. image:: img/conbench_benchmark.png\n+\n+Code Style\n+==========\n+\n+Code style are configured at `java/dev/checkstyle`\n\nReview comment:\n       Updated\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,170 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+Java module that contains performance tests is: `performance`\n+\n+Let's configure our performance environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+- Install `conbench`_\n+\n+Lets execute benchmark tests:\n+\n+.. code-block::\n+\n+    $ cd benchmarks\n+    $ conbench java-micro --help\n+    $ conbench java-micro\n+        --iterations=1\n+        --commit=e90472e35b40f58b17d408438bb8de1641bfe6ef\n+        --java-home=<absolute path to your java home>\n+        --src=<absolute path to your arrow project>\n+        --benchmark-filter=org.apache.arrow.adapter.AvroAdapterBenchmarks.testAvroToArrow\n+    Benchmark                              Mode  Cnt       Score   Error  Units\n+    AvroAdapterBenchmarks.testAvroToArrow  avgt       725545.783          ns/op\n+    Time to POST http://localhost:5000/api/login/ 0.14911699295043945\n+    Time to POST http://localhost:5000/api/benchmarks/ 0.06116318702697754\n+\n+Then go to: http://127.0.0.1:5000/ to see reports:\n+\n+UI Home:\n+\n+.. image:: img/conbench_ui.png\n+\n+UI Runs:\n+\n+.. image:: img/conbench_runs.png\n+\n+UI Benchmark:\n+\n+.. image:: img/conbench_benchmark.png\n+\n+Code Style\n+==========\n+\n+Code style are configured at `java/dev/checkstyle`\n+\n+.. code-block::\n+\n+    <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <version>3.1.0</version>\n+        <executions>\n+            <execution>\n+                <id>validate</id>\n+                <phase>validate</phase>\n+                <goals>\n+                    <goal>check</goal>\n+                </goals>\n+            </execution>\n+        </executions>\n+        <configuration>\n+            <configLocation>dev/checkstyle/checkstyle.xml</configLocation>\n+            <headerLocation>dev/checkstyle/checkstyle.license</headerLocation>\n+            <suppressionsLocation>dev/checkstyle/suppressions.xml</suppressionsLocation>\n+            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n+            ...\n+        </configuration>\n+    </plugin>\n+\n+Validate check style configuration:\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T02:21:57.256+0000",
                    "updated": "2022-03-03T02:21:57.256+0000",
                    "started": "2022-03-03T02:21:57.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735736",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818280101\n\n\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,170 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data \\\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T03:15:20.266+0000",
                    "updated": "2022-03-03T03:15:20.266+0000",
                    "started": "2022-03-03T03:15:20.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735750",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818280257\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T03:15:43.004+0000",
                    "updated": "2022-03-03T03:15:43.004+0000",
                    "started": "2022-03-03T03:15:43.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735751",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818633133\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n+---------------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n+----------------------------\n+\n+Java arrow-c-data maven profile:\n\nReview comment:\n       ```\"To compile the JNI bindings, use the ``arrow-c-data`` Maven profile:\"```\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        $GITHUB_WORKSPACE/java/c\n+    $ cmake --build . --target install\n+    $ ls -latr $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        $GITHUB_WORKSPACE/cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Build Java Modules That Consume C / C++ Libs\n+++++++++++++++++++++++++++++++++++++++++++++\n+\n+Build Java C Data Interface\n+###########################\n+\n+Java arrow-c-data maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Build Java C++ Interface\n+########################\n+\n+Java arrow-jni maven profile (build ORC / Gandiva / Dataset):\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+\n+Let's define our JRE runner:\n+\n+.. image:: img/java_jre_runner.png\n+\n+Let's configure additional environment properties:\n+\n+.. image:: img/java_jre_env_properties.png\n+\n+Let's run our java-dataset maven configuration:\n+\n+.. image:: img/java_run_mvn_configuration.png\n+\n+.. image:: img/java_run_mvn_configuration_result.png\n+\n+Common Errors\n+=============\n+\n+1.- Errors related to:\n+    - Could NOT find Boost (missing: Boost_INCLUDE_DIR system filesystem)\n+    - Could NOT find Lz4 (missing: LZ4_LIB)\n+    - Could NOT find zstd (missing: ZSTD_LIB)\n+\n+    Consider to configure parameters that download software at the build time with:\n+\n+.. code-block::\n+\n+    -Dre2_SOURCE=BUNDLED \\\n+    -DBoost_SOURCE=BUNDLED \\\n+    -Dutf8proc_SOURCE=BUNDLED \\\n+    -DSnappy_SOURCE=BUNDLED \\\n+    -DORC_SOURCE=BUNDLED \\\n+    -DZLIB_SOURCE=BUNDLED \\\n+\n+2.- Errors related to:\n+    - Caused by: java.lang.NoSuchFieldException: reservedMemory.\n+\n+    We could move from classBits.getDeclaredField(\"reservedMemory\") to classBits.getDeclaredField(\"RESERVED_MEMORY\")\n\nReview comment:\n       What was the JIRA?\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n\nReview comment:\n       nit, but let's just call it JNI Libraries. \"C & C++\" is misleading at best here.\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n+---------------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+For Build C Data Interface lib:\n\nReview comment:\n       \"To build only the C Data Interface library:\"\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n+---------------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n\nReview comment:\n       \"To build other JNI libraries:\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T13:04:38.315+0000",
                    "updated": "2022-03-03T13:04:38.315+0000",
                    "started": "2022-03-03T13:04:38.315+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735935",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818665873\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,308 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-cpp:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java use Maven as a project management.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+You can also build java project for default modules configured.\n+Go to parent project and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Advanced Installation\n+---------------------\n+\n+Build C / C++ Libs\n+++++++++++++++++++\n+\n+Build C / C++ Libs Ubuntu\n+#########################\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker & Docker Compose.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ source dev/conbench_envs/hooks.sh install_archery\n+    Successfully installed archery\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Build C / C++ Libs MacOS\n+########################\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        $GITHUB_WORKSPACE/java/c\n+    $ cmake --build . --target install\n+    $ ls -latr $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export GITHUB_WORKSPACE=<absolute path to your arrow project>\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        $GITHUB_WORKSPACE/cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  $GITHUB_WORKSPACE/java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Build Java Modules That Consume C / C++ Libs\n+++++++++++++++++++++++++++++++++++++++++++++\n+\n+Build Java C Data Interface\n+###########################\n+\n+Java arrow-c-data maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Build Java C++ Interface\n+########################\n+\n+Java arrow-jni maven profile (build ORC / Gandiva / Dataset):\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=$GITHUB_WORKSPACE/java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+\n+Let's define our JRE runner:\n+\n+.. image:: img/java_jre_runner.png\n+\n+Let's configure additional environment properties:\n+\n+.. image:: img/java_jre_env_properties.png\n+\n+Let's run our java-dataset maven configuration:\n+\n+.. image:: img/java_run_mvn_configuration.png\n+\n+.. image:: img/java_run_mvn_configuration_result.png\n+\n+Common Errors\n+=============\n+\n+1.- Errors related to:\n+    - Could NOT find Boost (missing: Boost_INCLUDE_DIR system filesystem)\n+    - Could NOT find Lz4 (missing: LZ4_LIB)\n+    - Could NOT find zstd (missing: ZSTD_LIB)\n+\n+    Consider to configure parameters that download software at the build time with:\n+\n+.. code-block::\n+\n+    -Dre2_SOURCE=BUNDLED \\\n+    -DBoost_SOURCE=BUNDLED \\\n+    -Dutf8proc_SOURCE=BUNDLED \\\n+    -DSnappy_SOURCE=BUNDLED \\\n+    -DORC_SOURCE=BUNDLED \\\n+    -DZLIB_SOURCE=BUNDLED \\\n+\n+2.- Errors related to:\n+    - Caused by: java.lang.NoSuchFieldException: reservedMemory.\n+\n+    We could move from classBits.getDeclaredField(\"reservedMemory\") to classBits.getDeclaredField(\"RESERVED_MEMORY\")\n\nReview comment:\n       https://issues.apache.org/jira/browse/ARROW-15834\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T13:41:43.064+0000",
                    "updated": "2022-03-03T13:41:43.064+0000",
                    "started": "2022-03-03T13:41:43.064+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735964",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818688088\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T14:05:52.421+0000",
                    "updated": "2022-03-03T14:05:52.421+0000",
                    "started": "2022-03-03T14:05:52.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735979",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818688329\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n+---------------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n\nReview comment:\n       Changed\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n+---------------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+For Build C Data Interface lib:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+For Build C++ Interface libs:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n+----------------------------\n+\n+Java arrow-c-data maven profile:\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T14:06:14.972+0000",
                    "updated": "2022-03-03T14:06:14.972+0000",
                    "started": "2022-03-03T14:06:14.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735980",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/735982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r818688695\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building C & C++ JNI Libraries on Linux\n+---------------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+For Build C Data Interface lib:\n\nReview comment:\n       Changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T14:06:40.143+0000",
                    "updated": "2022-03-03T14:06:40.143+0000",
                    "started": "2022-03-03T14:06:40.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735982",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/736324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r819047933\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n\nReview comment:\n       \"Building JNI Libraries on Linux\"?\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,123 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+Unit tests are run by Maven during the build.\n+\n+To speed up the build, you can skip them by passing -DskipTests.\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+The ``arrow-performance`` module contains benchmarks.\n+\n+Let's configure our environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+\n+In case you need to see your performance tests on the UI, then, configure (optional):\n+\n+- Install `conbench`_\n+\n+Lets execute benchmark tests:\n+\n+.. code-block::\n+\n+    $ cd benchmarks\n+    $ conbench java-micro --help\n+    $ conbench java-micro\n+        --iterations=1\n+        --commit=e90472e35b40f58b17d408438bb8de1641bfe6ef\n+        --java-home=<absolute path to your java home>\n+        --src=<absolute path to your arrow project>\n+        --benchmark-filter=org.apache.arrow.adapter.AvroAdapterBenchmarks.testAvroToArrow\n+    Benchmark                              Mode  Cnt       Score   Error  Units\n+    AvroAdapterBenchmarks.testAvroToArrow  avgt       725545.783          ns/op\n+    Time to POST http://localhost:5000/api/login/ 0.14911699295043945\n+    Time to POST http://localhost:5000/api/benchmarks/ 0.06116318702697754\n+\n+Then go to: http://127.0.0.1:5000/ to see reports:\n+\n+UI Home:\n+\n+.. image:: img/conbench_ui.png\n+\n+UI Runs:\n+\n+.. image:: img/conbench_runs.png\n+\n+UI Benchmark:\n+\n+.. image:: img/conbench_benchmark.png\n+\n+Code Style\n+==========\n+\n+Code style are configured at ``java/dev/checkstyle`` (More detail at `checkstyle`_)\n\nReview comment:\n       ```suggestion\r\n   Code style is enforced with Checkstyle. The configuration is located at `checkstyle`_.\r\n   ```\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+To build only the C Data Interface library:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+To build other JNI libraries:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n\nReview comment:\n       \"Building Arrow JNI Modules\"?\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+To build only the C Data Interface library:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+To build other JNI libraries:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n+----------------------------\n+\n+To compile the JNI bindings, use the ``arrow-c-data`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+To compile the JNI bindings for ORC / Gandiva / Dataset, use the ``arrow-jni`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+IntelliJ IDE\n+------------\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n\nReview comment:\n       Each of these images needs text to describe what exactly the user should be changing.\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+To build only the C Data Interface library:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+To build other JNI libraries:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n+----------------------------\n+\n+To compile the JNI bindings, use the ``arrow-c-data`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+To compile the JNI bindings for ORC / Gandiva / Dataset, use the ``arrow-jni`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+IntelliJ IDE\n+------------\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+\n+Let's define our JRE runner:\n+\n+.. image:: img/java_jre_runner.png\n+\n+Let's configure additional environment properties:\n\nReview comment:\n       ```suggestion\r\n   Let's configure additional environment variables:\r\n   ```\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n\nReview comment:\n       \"Building JNI Libraries on MacOS\"?\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,123 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+Unit tests are run by Maven during the build.\n+\n+To speed up the build, you can skip them by passing -DskipTests.\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+The ``arrow-performance`` module contains benchmarks.\n+\n+Let's configure our environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+\n+In case you need to see your performance tests on the UI, then, configure (optional):\n+\n+- Install `conbench`_\n+\n+Lets execute benchmark tests:\n+\n+.. code-block::\n+\n+    $ cd benchmarks\n+    $ conbench java-micro --help\n+    $ conbench java-micro\n+        --iterations=1\n+        --commit=e90472e35b40f58b17d408438bb8de1641bfe6ef\n+        --java-home=<absolute path to your java home>\n+        --src=<absolute path to your arrow project>\n+        --benchmark-filter=org.apache.arrow.adapter.AvroAdapterBenchmarks.testAvroToArrow\n+    Benchmark                              Mode  Cnt       Score   Error  Units\n+    AvroAdapterBenchmarks.testAvroToArrow  avgt       725545.783          ns/op\n+    Time to POST http://localhost:5000/api/login/ 0.14911699295043945\n+    Time to POST http://localhost:5000/api/benchmarks/ 0.06116318702697754\n+\n+Then go to: http://127.0.0.1:5000/ to see reports:\n+\n+UI Home:\n+\n+.. image:: img/conbench_ui.png\n+\n+UI Runs:\n+\n+.. image:: img/conbench_runs.png\n+\n+UI Benchmark:\n+\n+.. image:: img/conbench_benchmark.png\n+\n+Code Style\n+==========\n+\n+Code style are configured at ``java/dev/checkstyle`` (More detail at `checkstyle`_)\n+\n+The Maven build will validate code against the Checkstyle configuration.\n+You can also just check the style without building the project.\n\nReview comment:\n       How?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T20:47:27.672+0000",
                    "updated": "2022-03-03T20:47:27.672+0000",
                    "started": "2022-03-03T20:47:27.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736324",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/736368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r819087363\n\n\n\n##########\nFile path: docs/source/developers/java/development.rst\n##########\n@@ -0,0 +1,123 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+======================\n+Development Guidelines\n+======================\n+\n+.. contents::\n+\n+Unit Testing\n+============\n+Unit tests are run by Maven during the build.\n+\n+To speed up the build, you can skip them by passing -DskipTests.\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn \\\n+        -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni \\\n+        -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data \\\n+        clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.308 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.899 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  2.065 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.417 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  8.132 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [ 10.211 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:48 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  7.282 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 12.612 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 15.558 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  6.303 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.326 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 50.632 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  9.932 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 22.559 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  9.649 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 17.145 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 44.571 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  9.202 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [ 15.794 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [ 14.205 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [02:06 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 15.261 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+Performance Testing\n+===================\n+\n+The ``arrow-performance`` module contains benchmarks.\n+\n+Let's configure our environment to run performance tests:\n+\n+- Install `benchmark`_\n+- Install `archery`_\n+\n+In case you need to see your performance tests on the UI, then, configure (optional):\n+\n+- Install `conbench`_\n+\n+Lets execute benchmark tests:\n+\n+.. code-block::\n+\n+    $ cd benchmarks\n+    $ conbench java-micro --help\n+    $ conbench java-micro\n+        --iterations=1\n+        --commit=e90472e35b40f58b17d408438bb8de1641bfe6ef\n+        --java-home=<absolute path to your java home>\n+        --src=<absolute path to your arrow project>\n+        --benchmark-filter=org.apache.arrow.adapter.AvroAdapterBenchmarks.testAvroToArrow\n+    Benchmark                              Mode  Cnt       Score   Error  Units\n+    AvroAdapterBenchmarks.testAvroToArrow  avgt       725545.783          ns/op\n+    Time to POST http://localhost:5000/api/login/ 0.14911699295043945\n+    Time to POST http://localhost:5000/api/benchmarks/ 0.06116318702697754\n+\n+Then go to: http://127.0.0.1:5000/ to see reports:\n+\n+UI Home:\n+\n+.. image:: img/conbench_ui.png\n+\n+UI Runs:\n+\n+.. image:: img/conbench_runs.png\n+\n+UI Benchmark:\n+\n+.. image:: img/conbench_benchmark.png\n+\n+Code Style\n+==========\n+\n+Code style are configured at ``java/dev/checkstyle`` (More detail at `checkstyle`_)\n+\n+The Maven build will validate code against the Checkstyle configuration.\n+You can also just check the style without building the project.\n\nReview comment:\n       Added mvn command\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T21:46:17.451+0000",
                    "updated": "2022-03-03T21:46:17.451+0000",
                    "started": "2022-03-03T21:46:17.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736368",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/736370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r819087454\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n\nReview comment:\n       Updated\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n\nReview comment:\n       Updated\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+To build only the C Data Interface library:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+To build other JNI libraries:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n\nReview comment:\n       Updated\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T21:46:41.691+0000",
                    "updated": "2022-03-03T21:46:41.691+0000",
                    "started": "2022-03-03T21:46:41.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736370",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/736372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "davisusanibar commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r819087810\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,292 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+JNI Libraries\n+-------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building C & C++ JNI Libraries on MacOS\n+---------------------------------------\n+\n+To build only the C Data Interface library:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+To build other JNI libraries:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Libraries\n+----------------------------\n+\n+To compile the JNI bindings, use the ``arrow-c-data`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+To compile the JNI bindings for ORC / Gandiva / Dataset, use the ``arrow-jni`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+IntelliJ IDE\n+------------\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n\nReview comment:\n       Added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T21:47:05.242+0000",
                    "updated": "2022-03-03T21:47:05.242+0000",
                    "started": "2022-03-03T21:47:05.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736372",
                    "issueId": "13418874"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/worklog/736429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #12534:\nURL: https://github.com/apache/arrow/pull/12534#discussion_r819187786\n\n\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,298 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n\nReview comment:\n       not sure you need to include Reactor Summary as it might change in the future\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,298 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building JNI Libraries on Linux\n+-------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n\nReview comment:\n       Build -> building? Actually, I'm a little confused by this line, are you trying to say to build the C/C++, it requires Docker etc?\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,298 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n\nReview comment:\n       JDK 8 or above?  Might be worth to mention versions above what is currently in tests aren't guaranteed to work.\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,298 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building JNI Libraries on Linux\n+-------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n\nReview comment:\n       can you link to archery setup doc?\n\n##########\nFile path: docs/source/developers/java/building.rst\n##########\n@@ -0,0 +1,298 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. highlight:: console\n+\n+.. _building-arrow-java:\n+\n+===================\n+Building Arrow Java\n+===================\n+\n+.. contents::\n+\n+System setup\n+============\n+\n+Arrow Java uses the `Maven <https://maven.apache.org/>`_ build system.\n+\n+Building requires:\n+\n+* JRE 8, 9, 10, 11\n+* Maven 3+\n+\n+Building\n+========\n+\n+All the instructions below assume that you have cloned the Arrow git\n+repository:\n+\n+.. code-block::\n+\n+    $ git clone https://github.com/apache/arrow.git\n+    $ cd arrow\n+    $ git submodule update --init --recursive\n+\n+Basic Installation\n+------------------\n+\n+To build the default modules, go to the project root and execute:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ java --version\n+    $ mvn clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 8.0.0-SNAPSHOT:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.922 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.395 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  0.938 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 11.491 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  5.449 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  8.754 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:37 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  5.907 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 11.015 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.751 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  3.934 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.649 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.331 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.894 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 21.862 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.638 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 14.447 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 35.105 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.323 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\\\n+\n+Building JNI Libraries on Linux\n+-------------------------------\n+\n+For Build C Data Interface lib & Build C++ Libs. Consider: Next step requires: Docker, Docker Compose, `archery`_.\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ archery docker run java-jni-manylinux-2014\n+    $ ls -latr java-dist/\n+    |__ libarrow_cdata_jni.so\n+    |__ libarrow_dataset_jni.so\n+    |__ libarrow_orc_jni.so\n+    |__ libgandiva_jni.so\n+\n+Building JNI Libraries on MacOS\n+-------------------------------\n+\n+To build only the C Data Interface library:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-c\n+    $ cd java-native-c\n+    $ cmake \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        ../java/c\n+    $ cmake --build . --target install\n+    $ ls -latr ../java-dist/lib\n+    |__ libarrow_cdata_jni.dylib\n+\n+To build other JNI libraries:\n+\n+.. code-block::\n+\n+    $ cd arrow\n+    $ brew bundle --file=cpp/Brewfile\n+    Homebrew Bundle complete! 25 Brewfile dependencies now installed.\n+    $ export JAVA_HOME=<absolute path to your java home>\n+    $ mkdir -p java-dist java-native-cpp\n+    $ cd java-native-cpp\n+    $ cmake \\\n+        -DARROW_BOOST_USE_SHARED=OFF \\\n+        -DARROW_BROTLI_USE_SHARED=OFF \\\n+        -DARROW_BZ2_USE_SHARED=OFF \\\n+        -DARROW_GFLAGS_USE_SHARED=OFF \\\n+        -DARROW_GRPC_USE_SHARED=OFF \\\n+        -DARROW_LZ4_USE_SHARED=OFF \\\n+        -DARROW_OPENSSL_USE_SHARED=OFF \\\n+        -DARROW_PROTOBUF_USE_SHARED=OFF \\\n+        -DARROW_SNAPPY_USE_SHARED=OFF \\\n+        -DARROW_THRIFT_USE_SHARED=OFF \\\n+        -DARROW_UTF8PROC_USE_SHARED=OFF \\\n+        -DARROW_ZSTD_USE_SHARED=OFF \\\n+        -DARROW_JNI=ON \\\n+        -DARROW_PARQUET=ON \\\n+        -DARROW_FILESYSTEM=ON \\\n+        -DARROW_DATASET=ON \\\n+        -DARROW_GANDIVA_JAVA=ON \\\n+        -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n+        -DARROW_GANDIVA=ON \\\n+        -DARROW_ORC=ON \\\n+        -DARROW_PLASMA_JAVA_CLIENT=ON \\\n+        -DARROW_PLASMA=ON \\\n+        -DCMAKE_BUILD_TYPE=Release \\\n+        -DCMAKE_INSTALL_LIBDIR=lib \\\n+        -DCMAKE_INSTALL_PREFIX=../java-dist \\\n+        -DCMAKE_UNITY_BUILD=ON \\\n+        -Dre2_SOURCE=BUNDLED \\\n+        -DBoost_SOURCE=BUNDLED \\\n+        -Dutf8proc_SOURCE=BUNDLED \\\n+        -DSnappy_SOURCE=BUNDLED \\\n+        -DORC_SOURCE=BUNDLED \\\n+        -DZLIB_SOURCE=BUNDLED \\\n+        ../cpp\n+    $ cmake --build . --target install\n+    $ ls -latr  ../java-dist/lib\n+    |__ libarrow_dataset_jni.dylib\n+    |__ libarrow_orc_jni.dylib\n+    |__ libgandiva_jni.dylib\n+\n+Building Arrow JNI Modules\n+--------------------------\n+\n+To compile the JNI bindings, use the ``arrow-c-data`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.c.jni.dist.dir=../java-dist/lib -Parrow-c-data clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  4.385 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  4.832 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.862 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [ 12.162 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  6.768 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  6.897 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [01:43 min]\n+    [INFO] Arrow Compression .................................. SUCCESS [  6.510 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [ 13.280 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [ 13.726 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  5.237 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  0.809 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 47.461 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  6.864 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 20.334 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  7.542 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [ 13.826 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 32.442 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  5.418 s]\n+    [INFO] Arrow Java C Data Interface ........................ SUCCESS [  7.907 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+To compile the JNI bindings for ORC / Gandiva / Dataset, use the ``arrow-jni`` Maven profile:\n+\n+.. code-block::\n+\n+    $ cd arrow/java\n+    $ mvn -Darrow.cpp.build.dir=../java-dist/lib -Parrow-jni clean install\n+    [INFO] Reactor Summary for Apache Arrow Java Root POM 7.0.0:\n+    [INFO]\n+    [INFO] Apache Arrow Java Root POM ......................... SUCCESS [  7.342 s]\n+    [INFO] Arrow Format ....................................... SUCCESS [  2.417 s]\n+    [INFO] Arrow Memory ....................................... SUCCESS [  1.967 s]\n+    [INFO] Arrow Memory - Core ................................ SUCCESS [  4.714 s]\n+    [INFO] Arrow Memory - Unsafe .............................. SUCCESS [  3.157 s]\n+    [INFO] Arrow Memory - Netty ............................... SUCCESS [  3.334 s]\n+    [INFO] Arrow Vectors ...................................... SUCCESS [ 21.791 s]\n+    [INFO] Arrow Compression .................................. SUCCESS [  3.854 s]\n+    [INFO] Arrow Tools ........................................ SUCCESS [  8.359 s]\n+    [INFO] Arrow JDBC Adapter ................................. SUCCESS [  8.847 s]\n+    [INFO] Arrow Plasma Client ................................ SUCCESS [  2.459 s]\n+    [INFO] Arrow Flight ....................................... SUCCESS [  2.357 s]\n+    [INFO] Arrow Flight Core .................................. SUCCESS [ 38.837 s]\n+    [INFO] Arrow Flight GRPC .................................. SUCCESS [  5.955 s]\n+    [INFO] Arrow Flight SQL ................................... SUCCESS [ 17.390 s]\n+    [INFO] Arrow Flight Integration Tests ..................... SUCCESS [  6.148 s]\n+    [INFO] Arrow AVRO Adapter ................................. SUCCESS [  9.635 s]\n+    [INFO] Arrow Algorithms ................................... SUCCESS [ 26.949 s]\n+    [INFO] Arrow Performance Benchmarks ....................... SUCCESS [  4.211 s]\n+    [INFO] Arrow Orc Adapter .................................. SUCCESS [  6.522 s]\n+    [INFO] Arrow Gandiva ...................................... SUCCESS [01:20 min]\n+    [INFO] Arrow Java Dataset ................................. SUCCESS [ 12.949 s]\n+    [INFO] ------------------------------------------------------------------------\n+    [INFO] BUILD SUCCESS\n+    [INFO] ------------------------------------------------------------------------\n+\n+IDE Configuration\n+=================\n+\n+IntelliJ IDE\n+------------\n+\n+Go to open java project and select java folder.\n+\n+This is the initial view for java project loaded with default profiles:\n+\n+.. image:: img/java_welcome.png\n+   :alt: An example image for opening java project\n+\n+Let's create our maven configuration: java-dataset\n+\n+.. image:: img/java_mvn_configuration.png\n+   :alt: An example image for create new maven configurations and parameters needed\n\nReview comment:\n       image for -> image to\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-04T01:11:38.333+0000",
                    "updated": "2022-03-04T01:11:38.333+0000",
                    "started": "2022-03-04T01:11:38.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736429",
                    "issueId": "13418874"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 30600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6513c3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bb5594e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@649281d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@37877eb3[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68d3393f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1059abce[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f1f7018[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@53e1ffae[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@220a2e2c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7f50e678[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bebd63a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7ab5e66[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 09 20:28:52 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-09T20:28:52.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15178/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-12-21T17:14:02.000+0000",
        "updated": "2022-03-10T04:41:35.000+0000",
        "timeoriginalestimate": null,
        "description": "Inspired by [https://arrow.apache.org/docs/developers/python.html] and [https://arrow.apache.org/docs/developers/cpp/index.html] we should have a similar doc for Java",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java][Docs] Add developer docs for Java",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/comment/17499776",
                    "id": "17499776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dsusanibara",
                        "name": "dsusanibara",
                        "key": "dsusanibara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Dali Susanibar Arce",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "PR related: [https://github.com/apache/arrow/pull/12534]\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dsusanibara",
                        "name": "dsusanibara",
                        "key": "dsusanibara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Dali Susanibar Arce",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-03-01T21:46:43.632+0000",
                    "updated": "2022-03-01T21:46:43.632+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418874/comment/17503828",
                    "id": "17503828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 12534\n[https://github.com/apache/arrow/pull/12534]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-03-09T20:28:52.798+0000",
                    "updated": "2022-03-09T20:28:52.798+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xxqw:",
        "customfield_12314139": null
    }
}