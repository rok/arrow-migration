{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13367977",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977",
    "key": "ARROW-12099",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
            "name": "malthe",
            "key": "malthe",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
            },
            "displayName": "Malthe Borch",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
            "name": "malthe",
            "key": "malthe",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
            },
            "displayName": "Malthe Borch",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12099/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3ac65bd5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@309bc0f4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34a42fb4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ad6c5b4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@390b8c71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@23bdd427[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36f1866b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5ae60e64[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f6b694d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@72ba8e6b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48429c89[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@22bd2ecb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jun 17 00:12:03 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12099/watchers",
            "watchCount": 9,
            "isWatching": false
        },
        "created": "2021-03-26T16:54:24.000+0000",
        "updated": "2022-06-17T00:13:33.000+0000",
        "timeoriginalestimate": null,
        "description": "In Apache Spark, [explode|https://spark.apache.org/docs/latest/api/sql/index.html#explode] separates the elements of an array column (or expression) into multiple row.\r\n\r\nNote that each explode works at the top-level only (not recursively).\r\n\r\nThis would also work with the existing [flatten|https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table.flatten] method to allow fully unnesting a [pyarrow.StructArray|https://arrow.apache.org/docs/python/generated/pyarrow.StructArray.html#pyarrow-structarray].",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Explode array column",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17309732",
                    "id": "17309732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Note there is a flatten o[n list array|https://arrow.apache.org/docs/python/generated/pyarrow.ListArray.html#pyarrow.ListArray.flatten]\u00a0which sounds very similar to explode?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-26T21:06:36.944+0000",
                    "updated": "2021-03-26T21:06:36.944+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17309744",
                    "id": "17309744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~emkornfield] that looks helpful but what's very useful about Spark's explode is that it works directly on the table level. I'm not sure how easy it would be to join this flattened list array back with the original table?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-26T21:32:02.430+0000",
                    "updated": "2021-03-26T21:32:02.430+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17309766",
                    "id": "17309766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "OK, does explode do so recursively or only for top-level types.\u00a0 It would be good to formally specify this.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-26T22:03:13.844+0000",
                    "updated": "2021-03-26T22:03:13.844+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17309767",
                    "id": "17309767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~emkornfield] added; there is no support for recursively exploding a structure. I think that is a reasonable position to take here as well.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-26T22:10:11.452+0000",
                    "updated": "2021-03-26T22:10:11.452+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17310717",
                    "id": "17310717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "In the {{pyarrow.compute}} module, we also have {{list_parent_indices}} which can be used to join the flattened list column with repeated rows of the original table.\r\n\r\nSo it's already possible to write an explode function with this functionality in python:\r\n\r\n{code:python}\r\nimport pyarrow.compute as pc\r\n\r\ndef explode_table(table, column):\r\n    other_columns = list(table.schema.names)\r\n    other_columns.remove(column)\r\n    indices = pc.list_parent_indices(table[column])\r\n    result = table.select(other_columns).take(indices)\r\n    result = result.append_column(pa.field(column, table.schema.field(column).type.value_type), pc.list_flatten(table[column]))\r\n    return result\r\n{code}\r\n\r\n{code}\r\nIn [80]: table = pa.table({'a': range(3), 'b': [[1, 2], None, [3, 4, 5]]})\r\n\r\nIn [81]: explode_table(table, 'b')\r\nOut[81]: \r\npyarrow.Table\r\na: int64\r\nb: int64\r\n\r\nIn [82]: explode_table(table, 'b').to_pandas()\r\nOut[82]: \r\n   a  b\r\n0  0  1\r\n1  0  2\r\n2  2  3\r\n3  2  4\r\n4  2  5\r\n{code}\r\n\r\nThat said, I think it could be nice to provide this functionality in pyarrow itself.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-03-29T15:12:28.879+0000",
                    "updated": "2021-03-29T15:12:28.879+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17310753",
                    "id": "17310753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~jorisvandenbossche] in Spark, explode does not \"zip\" arrays in different columns actually \u2013 it just copies the entire row for each value in the exploded column (which is originally an array) such that if the array had N values, there would now be N rows in place of the original row. Rinse and repeat for all rows in the original dataframe.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-29T16:01:20.969+0000",
                    "updated": "2021-03-29T16:01:20.969+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17310772",
                    "id": "17310772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Your description to me sounds more or less what I showed. Can you eg show an example of input / expected result? (as you would expect it from spark)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-03-29T16:32:20.856+0000",
                    "updated": "2021-03-29T16:32:20.856+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17310781",
                    "id": "17310781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "\u00a0\r\n\r\nSo Spark cannot actually explode (or \"generate\") more than one expression per select statement (that is simply not allowed), but I suppose sometimes you want to \"zip\" the arrays (like you have shown) and other times you would want to form the cartesian product from them:\r\n{code:java}\r\nspark-sql> SELECT a, explode(b) FROM (SELECT explode(sequence(0, 2)) a, sequence(4, 6) b);\r\n0\t4\r\n0\t5\r\n0\t6\r\n1\t4\r\n1\t5\r\n1\t6\r\n2\t4\r\n2\t5\r\n2\t6\r\nTime taken: 0.187 seconds, Fetched 9 row(s)\r\n{code}\r\nIn your {{explode_table}} function, what role does the {{column}} parameter have exactly? Why does it touch the {{'a'}} column if you mention {{'b' - ?}}\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-29T16:47:16.339+0000",
                    "updated": "2021-03-29T16:47:16.339+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17310784",
                    "id": "17310784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Thanks. Could you also post what the FROM clause looks like? ({{SELECT explode(sequence(0, 2)) a, sequence(4, 6) b}}) (to be sure how the input data looks like)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-03-29T16:50:39.870+0000",
                    "updated": "2021-03-29T16:50:39.870+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17310789",
                    "id": "17310789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "What I can perhaps add is that I imagine an API such as:\r\n{code:python}\r\ntable.explode(\"a\")      # This would unroll the \"a\" array, but leave any other array as it is.\r\ntable.explode(\"a, \"b\")  # This would unroll the provided columns, \"zipping\" them.\r\n{code}\r\nThat is, the interface would work strictly with already existing array columns.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=malthe",
                        "name": "malthe",
                        "key": "malthe",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Malthe Borch",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-29T16:58:29.437+0000",
                    "updated": "2021-03-29T16:59:09.929+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17312346",
                    "id": "17312346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~malthe] can you show small example input/output of what you imagine? (as has been clear above, describing it in words doesn't seem sufficient to be sure we understand it the same way ;))",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-03-31T12:50:58.035+0000",
                    "updated": "2021-03-31T12:50:58.035+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17312363",
                    "id": "17312363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I _assume_ your example starts with a table like the following?\r\n\r\n{code}\r\nIn [100]: table = pa.table({'a': [0, 1, 2], 'b': [[4, 5, 6]]*3})\r\n\r\nIn [101]: table.to_pandas()\r\nOut[101]: \r\n   a          b\r\n0  0  [4, 5, 6]\r\n1  1  [4, 5, 6]\r\n2  2  [4, 5, 6]\r\n{code}\r\n\r\nThe function I wrote above to explode a list column in such a table gives:\r\n\r\n{code}\r\nIn [102]: explode_table(table, 'b').to_pandas()\r\nOut[102]: \r\n   a  b\r\n0  0  4\r\n1  0  5\r\n2  0  6\r\n3  1  4\r\n4  1  5\r\n5  1  6\r\n6  2  4\r\n7  2  5\r\n8  2  6\r\n{code}\r\n\r\nwhich seems the same output as you showed above?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-03-31T12:57:59.927+0000",
                    "updated": "2021-03-31T12:57:59.927+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17405371",
                    "id": "17405371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "+1 Hive also has an [{{explode}}|https://cwiki.apache.org/confluence/display/hive/languagemanual+udf#LanguageManualUDF-explode]\u00a0function that works like this, but it is very difficult to use at a table level\u2014you need to use something called a [lateral view|https://cwiki.apache.org/confluence/display/hive/languagemanual+lateralview] to do that, and the API is very unintuitive.\r\n\r\n[~jorisvandenbossche]\u00a0I think your example\u00a0in the previous comment is exactly correct. It would be very nice to have an {{explode_table}} kernel like that in the Arrow C++ library, exposed to Python and R through bindings.\r\n\r\nIn addition to working on ListArrays like in this example, this\u00a0should also work on MapArrays. When called on a MapArray, it should return two exploded columns\u2014one with the keys, one with the values.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-08-26T17:05:27.148+0000",
                    "updated": "2021-08-26T17:05:59.766+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17405379",
                    "id": "17405379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think for the initial implementation, we should limit this to explode only a single ListArray or MapArray column, like:\r\n{code}explode_table(table, 'b'){code}\r\nThe case of exploding multiple columns, like\r\n{code}explode_table(table, 'b', 'c'){code}\r\nseems quite complicated and is probably best to consider separately.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-08-26T17:12:42.611+0000",
                    "updated": "2021-08-26T17:12:42.611+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17447341",
                    "id": "17447341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eitsupi",
                        "name": "eitsupi",
                        "key": "JIRAUSER280211",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "SHIMA Tatsuya",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "It seems related to ARROW-8813.\r\ntidyr::unnest in R works very well, and it would be great to have this feature available in Arrow.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eitsupi",
                        "name": "eitsupi",
                        "key": "JIRAUSER280211",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "SHIMA Tatsuya",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-11-22T11:21:59.011+0000",
                    "updated": "2021-11-22T11:21:59.011+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17541192",
                    "id": "17541192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=muscionig",
                        "name": "muscionig",
                        "key": "muscionig",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Guido Muscioni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "(sorry for continuing this old thread, I can open a new issue if necessary)\r\n\r\nI was working on [~jorisvandenbossche]\u00a0implementation and noticed that it skips the null values. I slightly modified the code to handle missing values in a list:\r\n{code:python}\r\ndef explode_table_include_null(table, column):\r\n    other_columns = list(table.schema.names)\r\n    other_columns.remove(column)\r\n    indices = pc.list_parent_indices(pc.fill_null(table[column], [None]))\r\n    result = table.select(other_columns).take(indices)\r\n    result = result.append_column(\r\n        pa.field(column, table.schema.field(column).type.value_type),\r\n        pc.list_flatten(pc.fill_null(table[column], [None])),\r\n    )\r\n    return result\r\n{code}\r\nFor example, given this table:\r\n{code:python}\r\ntable = pa.table({'a': range(3), 'b': [[1,2], None, [1,2,3]]})\r\n{code}\r\npandas in this case will leave the line with the None value:\r\n{code:python}\r\nIn [14]: table.to_pandas().explode('b')\r\nOut[14]: \r\n   a     b\r\n0  0     1\r\n0  0     2\r\n1  1  None\r\n2  2     1\r\n2  2     2\r\n2  2     3\r\n{code}\r\n[~jorisvandenbossche] implementation will not return the None row:\r\n{code:python}\r\nIn [16]: explode_table(table, 'b').to_pandas()\r\nOut[16]: \r\n   a  b\r\n0  0  1\r\n1  0  2\r\n2  2  1\r\n3  2  2\r\n4  2  3\r\n{code}\r\nUsing the function above:\r\n{code:python}\r\nIn [18]: explode_table_include_null(table, 'b').to_pandas()\r\nOut[18]: \r\n   a    b\r\n0  0  1.0\r\n1  0  2.0\r\n2  1  NaN\r\n3  2  1.0\r\n4  2  2.0\r\n5  2  3.0\r\n{code}\r\nI am not sure if filling the value with a blind empty list is correct, it seems to work well given multiple examples (I am referring to the requirements of the pc.fill_null function about typing):\r\n{code:python}\r\nIn [19]: table = pa.table({'a': range(3), 'b': [['1','2'],None, ['1','2','3']]})\r\n\r\nIn [20]: explode_table_include_null(table, 'b').to_pandas()\r\nOut[20]: \r\n   a     b\r\n0  0     1\r\n1  0     2\r\n2  1  None\r\n3  2     1\r\n4  2     2\r\n5  2     3\r\n\r\nIn [22]: table = pa.table({'a': range(3), 'b': [[{'a':1}],None, [{'a':1}]]})\r\n\r\nIn [23]: explode_table_include_null(table, 'b').to_pandas()\r\nOut[23]: \r\n   a           b\r\n0  0  {'a': 1.0}\r\n1  1        None\r\n2  2  {'a': 1.0}\r\n{code}\r\nI did a very small benchmarking of this function against pandas and the speedup is remarkable:\r\n{code:java}\r\ndf = pd.DataFrame({'a':list(range(10000)),'b':[['a','b','c'] for i in range(10000)]})\r\ntable = pa.Table.from_pandas(df)\r\n\r\nIn [25]: %timeit explode_table_include_null(table, 'b')\r\n131 \u00b5s \u00b1 1.9 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10,000 loops each)\r\nIn [26]: %timeit df.explode('b')\r\n3.78 ms \u00b1 69.1 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each){code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=muscionig",
                        "name": "muscionig",
                        "key": "muscionig",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Guido Muscioni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-23T22:20:01.826+0000",
                    "updated": "2022-05-23T22:22:59.739+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367977/comment/17555329",
                    "id": "17555329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=NickCrews",
                        "name": "NickCrews",
                        "key": "JIRAUSER291113",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Nick Crews",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Small tweak to Guido's implementation (thank you for this!): If the table only has the one ListArray or MapArray column, then it crashes.\r\n\r\nThis handles that case:\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.compute as pc\r\ndef explode_table(table, column):\r\n    null_filled = pc.fill_null(table[column], [None])\r\n    flattened = pc.list_flatten(null_filled)\r\n    other_columns = list(table.schema.names)\r\n    other_columns.remove(column)\r\n    if len(other_columns) == 0:\r\n        return pa.table({column: flattened})\r\n    else:\r\n        indices = pc.list_parent_indices(null_filled)\r\n        result = table.select(other_columns).take(indices)\r\n        result = result.append_column(\r\n            pa.field(column, table.schema.field(column).type.value_type),\r\n            flattened,\r\n        )\r\n        return result {code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=NickCrews",
                        "name": "NickCrews",
                        "key": "JIRAUSER291113",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34047",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34047",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34047",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34047"
                        },
                        "displayName": "Nick Crews",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2022-06-17T00:12:03.483+0000",
                    "updated": "2022-06-17T00:13:33.707+0000"
                }
            ],
            "maxResults": 17,
            "total": 17,
            "startAt": 0
        },
        "customfield_12311820": "0|z0p9c0:",
        "customfield_12314139": null
    }
}