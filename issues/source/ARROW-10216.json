{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13334214",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214",
    "key": "ARROW-10216",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jhorstmann",
            "name": "jhorstmann",
            "key": "jhorstmann",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "J\u00f6rn Horstmann",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jhorstmann",
            "name": "jhorstmann",
            "key": "jhorstmann",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "J\u00f6rn Horstmann",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jhorstmann",
            "name": "jhorstmann",
            "key": "jhorstmann",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "J\u00f6rn Horstmann",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10216/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann opened a new pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685\n\n\n   This refactors the simd aggregation to a reusable trait and adds implementations for min and max.\r\n   \r\n   Some tests were failing with the simd feature active because the different order of additions rounded to a slightly different result. I reused the comparison function that @vertexclique implemented in his recent PR.\r\n   \r\n   Microbenchmarks show a 9x-12x improvement:\r\n   \r\n   ```\r\n   $ cargo bench --features simd --bench aggregate_kernels\r\n      Compiling arrow v3.0.0-SNAPSHOT (/home/joernhorstmann/Source/github/apache/arrow/rust/arrow)\r\n       Finished bench [optimized] target(s) in 47.73s\r\n        Running /home/joernhorstmann/Source/github/apache/arrow/rust/target/release/deps/aggregate_kernels-717937ec43706892\r\n   Gnuplot not found, using plotters backend\r\n   sum 512                 time:   [75.840 ns 75.870 ns 75.903 ns]                    \r\n                           change: [+0.3060% +0.3962% +0.4914%] (p = 0.00 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 18 outliers among 100 measurements (18.00%)\r\n     3 (3.00%) low severe\r\n     2 (2.00%) low mild\r\n     7 (7.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   min 512                 time:   [79.360 ns 79.422 ns 79.498 ns]                    \r\n                           change: [-89.496% -89.483% -89.468%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 16 outliers among 100 measurements (16.00%)\r\n     4 (4.00%) high mild\r\n     12 (12.00%) high severe\r\n   \r\n   sum nulls 512           time:   [136.84 ns 136.93 ns 137.04 ns]                          \r\n                           change: [+1.5542% +2.1189% +2.7055%] (p = 0.00 < 0.05)\r\n                           Performance has regressed.\r\n   Found 15 outliers among 100 measurements (15.00%)\r\n     1 (1.00%) low severe\r\n     1 (1.00%) low mild\r\n     3 (3.00%) high mild\r\n     10 (10.00%) high severe\r\n   \r\n   min nulls 512           time:   [177.30 ns 177.38 ns 177.47 ns]                          \r\n                           change: [-92.219% -92.206% -92.194%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 17 outliers among 100 measurements (17.00%)\r\n     1 (1.00%) low mild\r\n     5 (5.00%) high mild\r\n     11 (11.00%) high severe\r\n   ```\r\n   \r\n   A datafusion benchmark using a global aggregation `SELECT MIN(f64), MAX(f64) FROM t` also shows a 2x improvement between running with and without feature.\r\n   \r\n   ```\r\n        Running /home/joernhorstmann/Source/github/apache/arrow/rust/target/release/deps/aggregate_query_sql-034b2ab6143485ec\r\n   Gnuplot not found, using plotters backend\r\n   aggregate_query_no_group_by_min_max_f64                                                                            \r\n                           time:   [373.77 us 383.51 us 395.09 us]\r\n                           change: [-59.420% -56.845% -53.563%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 18 outliers among 100 measurements (18.00%)\r\n     2 (2.00%) low mild\r\n     1 (1.00%) high mild\r\n     15 (15.00%) high severe\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-16T19:41:27.082+0000",
                    "updated": "2020-11-16T19:41:27.082+0000",
                    "started": "2020-11-16T19:41:27.082+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512552",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-728284606\n\n\n   https://issues.apache.org/jira/browse/ARROW-10216\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-16T19:47:02.054+0000",
                    "updated": "2020-11-16T19:47:02.054+0000",
                    "started": "2020-11-16T19:47:02.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512556",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-728367158\n\n\n   This looks nice, I will check this out tomorrow!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-16T22:26:00.494+0000",
                    "updated": "2020-11-16T22:26:00.494+0000",
                    "started": "2020-11-16T22:26:00.494+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512633",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r525009848\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -587,7 +600,7 @@ where\n pub trait ArrowNumericType: ArrowPrimitiveType {}\n \n macro_rules! make_numeric_type {\n-    ($impl_ty:ty, $native_ty:ty, $simd_ty:ident, $simd_mask_ty:ident) => {\n+    ($impl_ty:ty, $native_ty:ty, $simd_ty:ident, $simd_mask_ty:ident, $min_value:expr, $max_value:expr) => {\n\nReview comment:\n       Macro doesn't need to take min and max value. It can stay as it is except `mask_and`.\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -771,6 +784,21 @@ macro_rules! make_numeric_type {\n             fn write(simd_result: Self::Simd, slice: &mut [Self::Native]) {\n                 unsafe { simd_result.write_to_slice_unaligned_unchecked(slice) };\n             }\n+\n+            #[inline]\n+            fn mask_and(left: Self::SimdMask, right: Self::SimdMask) -> Self::SimdMask {\n+                left & right\n+            }\n+\n+            #[inline]\n+            fn identity_for_min_op() -> Self::Native {\n+                $max_value\n+            }\n+\n+            #[inline]\n+            fn identity_for_max_op() -> Self::Native {\n+                $min_value\n+            }\n\nReview comment:\n       These can be removed.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -179,87 +181,258 @@ where\n     }\n }\n \n-/// Returns the sum of values in the array.\n-///\n-/// Returns `None` if the array is empty or only contains null values.\n #[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\"), feature = \"simd\"))]\n-pub fn sum<T: ArrowNumericType>(array: &PrimitiveArray<T>) -> Option<T::Native>\n-where\n-    T::Native: Add<Output = T::Native>,\n-{\n-    let null_count = array.null_count();\n+mod simd {\n+    use crate::array::{Array, PrimitiveArray};\n+    use crate::datatypes::ArrowNumericType;\n+    use std::marker::PhantomData;\n+    use std::ops::Add;\n+\n+    pub(super) trait SimdAggregate<T: ArrowNumericType> {\n+        /// Returns the identity value for this aggregation function\n+        fn init_accumulator_scalar() -> T::Native;\n+\n+        /// Returns a vector filled with the identity value for this aggregation function\n+        #[inline]\n+        fn init_accumulator_chunk() -> T::Simd {\n+            T::init(Self::init_accumulator_scalar())\n+        }\n \n-    if null_count == array.len() {\n-        return None;\n+        /// Updates the accumulator with the values of one chunk\n+        fn accumulate_chunk_non_null(accumulator: &mut T::Simd, chunk: T::Simd);\n+\n+        /// Updates the accumulator with the values of one chunk according to the given vector mask\n+        fn accumulate_chunk_nullable(\n+            accumulator: &mut T::Simd,\n+            chunk: T::Simd,\n+            mask: T::SimdMask,\n+        );\n+\n+        /// Updates the accumulator with one value\n+        fn accumulate_scalar(accumulator: &mut T::Native, value: T::Native);\n+\n+        /// Reduces the vector lanes of the accumulator to a single value\n+        #[inline]\n+        fn reduce(accumulator: T::Simd) -> T::Native {\n+            // reduce by first writing to a temporary and then use scalar operations\n+            // this should be about the same performance as extracting individual lanes\n+            // but allows us to reuse the scalar reduction logic\n+            let tmp = &mut [T::default_value(); 64];\n+            T::write(accumulator, &mut tmp[0..T::lanes()]);\n+\n+            let mut reduced = Self::init_accumulator_scalar();\n+            tmp[0..T::lanes()]\n+                .iter()\n+                .for_each(|value| Self::accumulate_scalar(&mut reduced, *value));\n+\n+            reduced\n+        }\n     }\n \n-    let data: &[T::Native] = array.value_slice(0, array.len());\n+    pub(super) struct SumAggregate<T: ArrowNumericType> {\n+        phantom: PhantomData<T>,\n+    }\n \n-    let mut vector_sum = T::init(T::default_value());\n-    let mut remainder_sum = T::default_value();\n+    impl<T: ArrowNumericType> SimdAggregate<T> for SumAggregate<T>\n+    where\n+        T::Native: Add<Output = T::Native>,\n+    {\n+        fn init_accumulator_scalar() -> T::Native {\n+            T::default_value()\n+        }\n \n-    match array.data().null_buffer() {\n-        None => {\n-            let data_chunks = data.chunks_exact(64);\n-            let remainder = data_chunks.remainder();\n+        fn accumulate_chunk_non_null(accumulator: &mut T::Simd, chunk: T::Simd) {\n+            *accumulator = *accumulator + chunk;\n+        }\n \n-            data_chunks.for_each(|chunk| {\n-                chunk.chunks_exact(T::lanes()).for_each(|chunk| {\n-                    let chunk = T::load(&chunk);\n-                    vector_sum = vector_sum + chunk;\n-                });\n-            });\n+        fn accumulate_chunk_nullable(\n+            accumulator: &mut T::Simd,\n+            chunk: T::Simd,\n+            vecmask: T::SimdMask,\n+        ) {\n+            let zero = T::init(T::default_value());\n+            let blended = T::mask_select(vecmask, chunk, zero);\n \n-            remainder.iter().for_each(|value| {\n-                remainder_sum = remainder_sum + *value;\n-            });\n+            *accumulator = *accumulator + blended;\n         }\n-        Some(buffer) => {\n-            // process data in chunks of 64 elements since we also get 64 bits of validity information at a time\n-            let data_chunks = data.chunks_exact(64);\n-            let remainder = data_chunks.remainder();\n \n-            let bit_chunks = buffer.bit_chunks(array.offset(), array.len());\n-            let remainder_bits = bit_chunks.remainder_bits();\n+        fn accumulate_scalar(accumulator: &mut T::Native, value: T::Native) {\n+            *accumulator = *accumulator + value\n+        }\n+    }\n+\n+    pub(super) struct MinAggregate<T: ArrowNumericType> {\n+        phantom: PhantomData<T>,\n+    }\n+\n+    impl<T: ArrowNumericType> SimdAggregate<T> for MinAggregate<T>\n+    where\n+        T::Native: PartialOrd,\n+    {\n+        fn init_accumulator_scalar() -> T::Native {\n+            T::identity_for_min_op()\n+        }\n+\n+        fn accumulate_chunk_non_null(accumulator: &mut T::Simd, chunk: T::Simd) {\n+            let cmp_mask = T::lt(chunk, *accumulator);\n+\n+            *accumulator = T::mask_select(cmp_mask, chunk, *accumulator);\n+        }\n+\n+        fn accumulate_chunk_nullable(\n+            accumulator: &mut T::Simd,\n+            chunk: T::Simd,\n+            vecmask: T::SimdMask,\n+        ) {\n+            let cmp_mask = T::lt(chunk, *accumulator);\n+            let blend_mask = T::mask_and(vecmask, cmp_mask);\n+\n+            *accumulator = T::mask_select(blend_mask, chunk, *accumulator);\n+        }\n+\n+        fn accumulate_scalar(accumulator: &mut T::Native, value: T::Native) {\n+            if value < *accumulator {\n+                *accumulator = value\n+            }\n+        }\n+    }\n+\n+    pub(super) struct MaxAggregate<T: ArrowNumericType> {\n+        phantom: PhantomData<T>,\n+    }\n+\n+    impl<T: ArrowNumericType> SimdAggregate<T> for MaxAggregate<T>\n+    where\n+        T::Native: PartialOrd,\n+    {\n+        fn init_accumulator_scalar() -> T::Native {\n+            T::identity_for_max_op()\n+        }\n+\n+        fn accumulate_chunk_non_null(accumulator: &mut T::Simd, chunk: T::Simd) {\n+            let cmp_mask = T::gt(chunk, *accumulator);\n+\n+            *accumulator = T::mask_select(cmp_mask, chunk, *accumulator);\n+        }\n+\n+        fn accumulate_chunk_nullable(\n+            accumulator: &mut T::Simd,\n+            chunk: T::Simd,\n+            vecmask: T::SimdMask,\n+        ) {\n+            let cmp_mask = T::gt(chunk, *accumulator);\n+            let blend_mask = T::mask_and(vecmask, cmp_mask);\n+\n+            *accumulator = T::mask_select(blend_mask, chunk, *accumulator);\n+        }\n+\n+        fn accumulate_scalar(accumulator: &mut T::Native, value: T::Native) {\n+            if value > *accumulator {\n+                *accumulator = value\n+            }\n+        }\n+    }\n+\n+    pub(super) fn simd_aggregation<T: ArrowNumericType, A: SimdAggregate<T>>(\n+        array: &PrimitiveArray<T>,\n+    ) -> Option<T::Native> {\n+        let null_count = array.null_count();\n+\n+        if null_count == array.len() {\n+            return None;\n+        }\n+\n+        let data: &[T::Native] = array.value_slice(0, array.len());\n+\n+        let mut chunk_acc = A::init_accumulator_chunk();\n+        let mut rem_acc = A::init_accumulator_scalar();\n \n-            data_chunks.zip(bit_chunks).for_each(|(chunk, mut mask)| {\n-                // split chunks further into slices corresponding to the vector length\n-                // the compiler is able to unroll this inner loop and remove bounds checks\n-                // since the outer chunk size (64) is always a multiple of the number of lanes\n-                chunk.chunks_exact(T::lanes()).for_each(|chunk| {\n-                    let zero = T::init(T::default_value());\n-                    let vecmask = T::mask_from_u64(mask);\n-                    let chunk = T::load(&chunk);\n-                    let blended = T::mask_select(vecmask, chunk, zero);\n+        match array.data().null_buffer() {\n+            None => {\n+                let data_chunks = data.chunks_exact(64);\n+                let remainder = data_chunks.remainder();\n \n-                    vector_sum = vector_sum + blended;\n+                data_chunks.for_each(|chunk| {\n+                    chunk.chunks_exact(T::lanes()).for_each(|chunk| {\n+                        let chunk = T::load(&chunk);\n+                        A::accumulate_chunk_non_null(&mut chunk_acc, chunk);\n+                    });\n+                });\n \n-                    mask = mask >> T::lanes();\n+                remainder.iter().for_each(|value| {\n+                    A::accumulate_scalar(&mut rem_acc, *value);\n                 });\n-            });\n+            }\n+            Some(buffer) => {\n+                // process data in chunks of 64 elements since we also get 64 bits of validity information at a time\n+                let data_chunks = data.chunks_exact(64);\n+                let remainder = data_chunks.remainder();\n \n-            remainder.iter().enumerate().for_each(|(i, value)| {\n-                if remainder_bits & (1 << i) != 0 {\n-                    remainder_sum = remainder_sum + *value;\n-                }\n-            });\n+                let bit_chunks = buffer.bit_chunks(array.offset(), array.len());\n+                let remainder_bits = bit_chunks.remainder_bits();\n+\n+                data_chunks.zip(bit_chunks).for_each(|(chunk, mut mask)| {\n+                    // split chunks further into slices corresponding to the vector length\n+                    // the compiler is able to unroll this inner loop and remove bounds checks\n+                    // since the outer chunk size (64) is always a multiple of the number of lanes\n+                    chunk.chunks_exact(T::lanes()).for_each(|chunk| {\n+                        let vecmask = T::mask_from_u64(mask);\n+                        let chunk = T::load(&chunk);\n+\n+                        A::accumulate_chunk_nullable(&mut chunk_acc, chunk, vecmask);\n+\n+                        mask = mask >> T::lanes();\n+                    });\n+                });\n+\n+                remainder.iter().enumerate().for_each(|(i, value)| {\n+                    if remainder_bits & (1 << i) != 0 {\n+                        A::accumulate_scalar(&mut rem_acc, *value)\n+                    }\n+                });\n+            }\n         }\n+\n+        let mut total = A::reduce(chunk_acc);\n+        A::accumulate_scalar(&mut total, rem_acc);\n+\n+        Some(total)\n     }\n+}\n+\n+/// Returns the sum of values in the array.\n+///\n+/// Returns `None` if the array is empty or only contains null values.\n+#[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\"), feature = \"simd\"))]\n+pub fn sum<T: ArrowNumericType>(array: &PrimitiveArray<T>) -> Option<T::Native>\n+where\n+    T::Native: Add<Output = T::Native>,\n+{\n+    use simd::*;\n \n-    // calculate horizontal sum of accumulator by writing to a temporary\n-    // this is probably faster than extracting individual lanes\n-    // the compiler is free to optimize this to something faster\n-    let tmp = &mut [T::default_value(); 64];\n-    T::write(vector_sum, &mut tmp[0..T::lanes()]);\n+    simd::simd_aggregation::<T, SumAggregate<T>>(&array)\n+}\n \n-    let mut total_sum = T::default_value();\n-    tmp[0..T::lanes()]\n-        .iter()\n-        .for_each(|lane| total_sum = total_sum + *lane);\n+#[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\"), feature = \"simd\"))]\n+/// Returns the minimum value in the array, according to the natural order.\n+pub fn min<T: ArrowNumericType>(array: &PrimitiveArray<T>) -> Option<T::Native>\n+where\n+    T::Native: PartialOrd,\n+{\n+    use simd::*;\n \n-    total_sum = total_sum + remainder_sum;\n+    simd::simd_aggregation::<T, MinAggregate<T>>(&array)\n+}\n+\n+#[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\"), feature = \"simd\"))]\n+/// Returns the maximum value in the array, according to the natural order.\n+pub fn max<T: ArrowNumericType>(array: &PrimitiveArray<T>) -> Option<T::Native>\n+where\n+    T::Native: PartialOrd,\n\nReview comment:\n       ```suggestion\r\n       T::Native: num::Num + PartialOrd,\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-17T10:17:23.626+0000",
                    "updated": "2020-11-17T10:17:23.626+0000",
                    "started": "2020-11-17T10:17:23.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512807",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r525065747\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -771,6 +784,21 @@ macro_rules! make_numeric_type {\n             fn write(simd_result: Self::Simd, slice: &mut [Self::Native]) {\n                 unsafe { simd_result.write_to_slice_unaligned_unchecked(slice) };\n             }\n+\n+            #[inline]\n+            fn mask_and(left: Self::SimdMask, right: Self::SimdMask) -> Self::SimdMask {\n+                left & right\n+            }\n+\n+            #[inline]\n+            fn identity_for_min_op() -> Self::Native {\n+                $max_value\n+            }\n+\n+            #[inline]\n+            fn identity_for_max_op() -> Self::Native {\n+                $min_value\n+            }\n\nReview comment:\n       I'm using those in https://github.com/apache/arrow/pull/8685/files#diff-45705886920f322ea90b662e46ed728e11c40402cedbe42d5718fe73d63c69abR273\r\n   \r\n   Or do you mean there is an existing trait function in num::num that provides those constants for all numeric types?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-17T10:59:18.574+0000",
                    "updated": "2020-11-17T10:59:18.574+0000",
                    "started": "2020-11-17T10:59:18.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512821",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r525066900\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -771,6 +784,21 @@ macro_rules! make_numeric_type {\n             fn write(simd_result: Self::Simd, slice: &mut [Self::Native]) {\n                 unsafe { simd_result.write_to_slice_unaligned_unchecked(slice) };\n             }\n+\n+            #[inline]\n+            fn mask_and(left: Self::SimdMask, right: Self::SimdMask) -> Self::SimdMask {\n+                left & right\n+            }\n+\n+            #[inline]\n+            fn identity_for_min_op() -> Self::Native {\n+                $max_value\n+            }\n+\n+            #[inline]\n+            fn identity_for_max_op() -> Self::Native {\n+                $min_value\n+            }\n\nReview comment:\n       > Or do you mean there is an existing trait function in num::num that provides those constants for all numeric types?\r\n   \r\n   yes: https://docs.rs/num/0.3.1/num/trait.Bounded.html\r\n   That will be useful in many places where we manually figuring out bounds.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-17T11:01:19.505+0000",
                    "updated": "2020-11-17T11:01:19.505+0000",
                    "started": "2020-11-17T11:01:19.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512824",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/512913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r525196649\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -771,6 +784,21 @@ macro_rules! make_numeric_type {\n             fn write(simd_result: Self::Simd, slice: &mut [Self::Native]) {\n                 unsafe { simd_result.write_to_slice_unaligned_unchecked(slice) };\n             }\n+\n+            #[inline]\n+            fn mask_and(left: Self::SimdMask, right: Self::SimdMask) -> Self::SimdMask {\n+                left & right\n+            }\n+\n+            #[inline]\n+            fn identity_for_min_op() -> Self::Native {\n+                $max_value\n+            }\n+\n+            #[inline]\n+            fn identity_for_max_op() -> Self::Native {\n+                $min_value\n+            }\n\nReview comment:\n       \"smallest **finite** number this type can represent\" -> I have to think about or write some tests to see whether that works for floats.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-17T14:29:03.705+0000",
                    "updated": "2020-11-17T14:29:03.705+0000",
                    "started": "2020-11-17T14:29:03.705+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512913",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/513759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r526388987\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -618,7 +628,7 @@ macro_rules! make_numeric_type {\n             fn mask_from_u64(mask: u64) -> Self::SimdMask {\n                 match Self::lanes() {\n                     8 => {\n-                        let vecidx = i64x8::new(128, 64, 32, 16, 8, 4, 2, 1);\n+                        let vecidx = i64x8::new(1, 2, 4, 8, 16, 32, 64, 128);\n\nReview comment:\n       Tests for min/max exposed that these constants were actually in the wrong order. This didn't turn up in the sum tests because there all invalid elements were already set to 0. I think when I initially implemented this, I copied the initialization from code that used intel avx intrinsics which take the parameters in the opposite order :facepalm: \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-18T20:12:56.662+0000",
                    "updated": "2020-11-18T20:12:56.662+0000",
                    "started": "2020-11-18T20:12:56.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "513759",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/513826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r526469339\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -618,7 +628,7 @@ macro_rules! make_numeric_type {\n             fn mask_from_u64(mask: u64) -> Self::SimdMask {\n                 match Self::lanes() {\n                     8 => {\n-                        let vecidx = i64x8::new(128, 64, 32, 16, 8, 4, 2, 1);\n+                        let vecidx = i64x8::new(1, 2, 4, 8, 16, 32, 64, 128);\n\nReview comment:\n       And the tests for mask generation were apparently also incorrect.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-18T22:36:12.550+0000",
                    "updated": "2020-11-18T22:36:12.550+0000",
                    "started": "2020-11-18T22:36:12.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "513826",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/513834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-730012542\n\n\n   I still need to add a few more tests involving infinities and NaNs\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-18T23:05:29.348+0000",
                    "updated": "2020-11-18T23:05:29.348+0000",
                    "started": "2020-11-18T23:05:29.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "513834",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/514768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-731343546\n\n\n   Both scalar and simd implementations have issues involving null values, I added `ignore` tests with comments. The handling of NaN is also not consistent with the sort kernel, which follows the postgres model of sorting NaN as larger than any other number (including infinity). Solving those issues could be quite tricky and degrade the performance again.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-20T18:42:15.718+0000",
                    "updated": "2020-11-20T18:42:15.718+0000",
                    "started": "2020-11-20T18:42:15.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "514768",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/520652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-739465567\n\n\n   Hi @jhorstmann , just to double check: are you blocked and need help, or can we review it?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-06T07:09:28.795+0000",
                    "updated": "2020-12-06T07:09:28.795+0000",
                    "started": "2020-12-06T07:09:28.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "520652",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/520774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r537062626\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -771,6 +784,21 @@ macro_rules! make_numeric_type {\n             fn write(simd_result: Self::Simd, slice: &mut [Self::Native]) {\n                 unsafe { simd_result.write_to_slice_unaligned_unchecked(slice) };\n             }\n+\n+            #[inline]\n+            fn mask_and(left: Self::SimdMask, right: Self::SimdMask) -> Self::SimdMask {\n+                left & right\n+            }\n+\n+            #[inline]\n+            fn identity_for_min_op() -> Self::Native {\n+                $max_value\n+            }\n+\n+            #[inline]\n+            fn identity_for_max_op() -> Self::Native {\n+                $min_value\n+            }\n\nReview comment:\n       Refactored so the implementation no longer needs those bounds\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-06T15:33:29.530+0000",
                    "updated": "2020-12-06T15:33:29.530+0000",
                    "started": "2020-12-06T15:33:29.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "520774",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/520783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-739527274\n\n\n   Hi @jorgecarleitao , I did not have much time to work on this the last two weeks, but have now found a solution for handling NaN values consistently. Benchmarks need to be updated still, but I think it is ready for review.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-06T16:32:59.036+0000",
                    "updated": "2020-12-06T16:32:59.036+0000",
                    "started": "2020-12-06T16:32:59.036+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "520783",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/520916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#discussion_r537246148\n\n\n\n##########\nFile path: rust/arrow/src/datatypes.rs\n##########\n@@ -618,7 +628,7 @@ macro_rules! make_numeric_type {\n             fn mask_from_u64(mask: u64) -> Self::SimdMask {\n                 match Self::lanes() {\n                     8 => {\n-                        let vecidx = i64x8::new(128, 64, 32, 16, 8, 4, 2, 1);\n+                        let vecidx = i64x8::new(1, 2, 4, 8, 16, 32, 64, 128);\n\nReview comment:\n       Maybe a line comment before this assignment could help others in understanding these numbers?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-07T05:48:16.982+0000",
                    "updated": "2020-12-07T05:48:16.982+0000",
                    "started": "2020-12-07T05:48:16.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "520916",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/521443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-740237607\n\n\n   I am checking it out\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-07T23:13:25.920+0000",
                    "updated": "2020-12-07T23:13:25.920+0000",
                    "started": "2020-12-07T23:13:25.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "521443",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/521550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-08T06:02:57.999+0000",
                    "updated": "2020-12-08T06:02:57.999+0000",
                    "started": "2020-12-08T06:02:57.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "521550",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/521867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-740997894\n\n\n   @jhorstmann \r\n   I wonder if we should support a standardized ordering like  IEEE 754 instead?\r\n   \r\n   There is a (unstable) implementation in rust std for it.\r\n   https://doc.rust-lang.org/beta/std/primitive.f64.html#method.total_cmp\r\n   \r\n   Sounds something we could have in the source for now (it is only a few lines), I think it might also simplify some code like the current sort kernels? What do you think?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-08T20:42:03.250+0000",
                    "updated": "2020-12-08T20:42:03.250+0000",
                    "started": "2020-12-08T20:42:03.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "521867",
                    "issueId": "13334214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/worklog/522105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #8685:\nURL: https://github.com/apache/arrow/pull/8685#issuecomment-741606137\n\n\n   @Dandandan that sounds like good idea as it is a bit more standardized. The current ordering was choosen initially for the sort kernels, as it is the same ordering that Postgres implements. The main difference seems to be the handling of negative NaN. If we decide on a different ordering we should keep sort and min/max consistent.\r\n   \r\n   One nice thing about the current impl for min/max is that all numeric types are handled the same, with the compiler optimizing away the `is_nan` function for integer types.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-09T08:07:08.135+0000",
                    "updated": "2020-12-09T08:07:08.135+0000",
                    "started": "2020-12-09T08:07:08.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "522105",
                    "issueId": "13334214"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53403ee7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38208992[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9c5a936[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3595cd85[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41f8cad[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5f79ba86[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b512446[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@60b3274c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1831a513[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@a0e8119[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@780ff70a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1ff2600[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Dec 08 06:02:57 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-12-08T06:02:57.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10216/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-10-07T14:55:01.000+0000",
        "updated": "2020-12-09T08:07:09.000+0000",
        "timeoriginalestimate": null,
        "description": "Using a similar approach as the sum kernel (ARROW-10015). Instead of initializing the accumulator with 0 we'd need the largest/smallest possible value for each ArrowNumericType (i.e. u64::MAX or +-Inf)\r\n\r\nPseudo code for min aggregation\u00a0\r\n{code}\r\n// initialize accumulator\r\nmin_acc = +Inf\r\n// aggregate each chunk\r\nmin_acc = min(min_acc, select(valid, value, +Inf))\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Simd implementation of min/max aggregation kernels for primitive types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334214/comment/17245684",
                    "id": "17245684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 8685\n[https://github.com/apache/arrow/pull/8685]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-12-08T06:02:57.966+0000",
                    "updated": "2020-12-08T06:02:57.966+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jhrc:",
        "customfield_12314139": null
    }
}