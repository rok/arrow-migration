{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13470342",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13470342",
    "key": "ARROW-16986",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "substrait"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12643504",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12643504",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13426721",
                    "key": "ARROW-15584",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13426721",
                    "fields": {
                        "summary": "[C++] Add support for Substrait's RelCommon::Emit",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jvanstraten",
            "name": "jvanstraten",
            "key": "JIRAUSER282962",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER282962&avatarId=48950",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER282962&avatarId=48950",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER282962&avatarId=48950",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER282962&avatarId=48950"
            },
            "displayName": "Jeroen van Straten",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jvanstraten",
            "name": "jvanstraten",
            "key": "JIRAUSER282962",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER282962&avatarId=48950",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER282962&avatarId=48950",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER282962&avatarId=48950",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER282962&avatarId=48950"
            },
            "displayName": "Jeroen van Straten",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16986/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4b72707d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a2610ea[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72520078[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@28a9ef98[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32ef1b52[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@43037c31[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21b0f5e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46020b68[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cfdbd71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@54c7ba2b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@727e12e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@24711e8b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 12 17:51:26 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16986/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-07-06T12:42:25.000+0000",
        "updated": "2022-10-12T17:51:26.000+0000",
        "timeoriginalestimate": null,
        "description": "Naively converting everything projection-like in Substrait (ProjectRel, emit clauses, and complex expressions in non-project and non-filter relations) to individual project nodes would lead to conversion of optimal(-ish) Substrait plans to suboptimal Acero plans. Let's use this (more-or-less optimal) Substrait plan as an example (column indices are as Substrait would see them, column names between parens to make it a little easier to see what's going on):\r\n * Read column 2 (=A), 3 (=B), and 4 (=C) from a Parquet file (emit: [2 (=A), 3 (=B), 4 (=C)])\r\n * Project column 1 (B) + column 2 (=C) to get column 3 (=B+C), then drop column 1 (=B) (emit: [0 (=A), 2 (=C), 3 (=B+C)])\r\n * Order by column 0 (=A) - column 2 (=B+C), so effectively by A-B-C, then drop column 0 (=A) (emit: [1 (=C), 2 (=B+C)])\r\n\r\nConverting this naively, without exceptions to collapse the emit clause of ReadRel and ProjectRel, would probably yield:\r\n * For the ReadRel:\r\n ** Scanner that reads all columns\r\n ** Project [field(2), field(3), field(4)] for the emit clause\r\n * For the ProjectRel:\r\n ** Project [field(0), field(1), field(2), add(field(1), field(2))] for the body\r\n ** Project [field(0), field(2), field(3)] for the emit clause\r\n * For the SortRel:\r\n ** Project [field(0), field(1), field(2), sub(field(0), field(2))] to get the sort key\r\n ** Order by field(3)\r\n ** Project [field(0), field(1), field(2)] to revert adding the temporary column\r\n ** Project [field(1), field(2)] for the emit clause\r\n\r\nThat's a lot of project nodes, when the user would probably expect something like this:\r\n * Scanner\r\n * Project [field(2) (=A), field(4) (=C), add(field(3), field(4)) (=B+C)] to drop unneeded columns and compute B+C\r\n * Project [field(0) (=A), field(1) (=C), field(2) (=B+C), sub(field(0), field(2)) (=A-B-C)] to compute the sort key (not collapsed with previous because that would repeat the B+C subexpression)\r\n * Sort on field(3)\r\n * Project [field(1) (=C), field(2) (=B+C)] to drop the temporary field and column A\r\n\r\nI suggest the following for future me (or someone else, but feel free to do what you think is best in that case). For relation ToProtos, rather than returning a Declaration, return a new class that tracks:\r\n * declaration: the compute::Declaration up to this point;\r\n * pending_projection: a vector of Substrait expressions that represent the schema Substrait expects based on the schema returned by the compute::Declaration, using empty expressions to signal that no change is needed;\r\n * temporaries: a vector of Substrait expressions that will be needed as temporaries to express the next relation, such as complex expressions encountered in a join condition.\r\n\r\nThe class would need functions to:\r\n * construct from a scanner declaration and number of columns.\r\n ** post-condition: declaration is set to the given declaration.\r\n ** post-condition: pending_declarations.size() equals the number of columns.\r\n ** post-condition: all expressions in pending_declarations are simply field references to their own column index.\r\n ** post-condition: temporaries is empty.\r\n * update the state based on an emit clause.\r\n ** pre-condition: temporaries is empty (otherwise column indices will desync).\r\n ** if the emit clause is no-op, do nothing.\r\n ** swizzle/remove elements in pending_declaration based on the emit clause.\r\n * update the state based on the body of a ProjectRel.\r\n ** pre-condition: temporaries is empty (otherwise column indices will desync).\r\n ** some heuristic to determine whether to commit pending expressions into a Project node before appending the incoming expressions or not [?]; being too lazy may result in duplicated subexpressions, while being too eager may yield unnecessary project relations. It probably pays to be eager here, unless all pending expressions are any combination of only literals or field references.\r\n ** append the incoming expressions to the pending expression vector.\r\n * force a commit of the pending expressions to a Project node (if any are pending).\r\n ** post-condition: all expressions in pending_declarations are simply field references to their own column index.\r\n ** post-condition: temporaries is empty.\r\n * append a temporary expression, yielding a FieldRef for the next relation to make use of; to be used whenever Substrait allows an arbitrary expression in a place where Acero only supports FieldRefs.\r\n ** expression is appended to the back of temporaries.\r\n ** FieldRef returned simply references the index of the added temporary + pending_projection.size().\r\n * update the declaration by means of a (Declaration) -> Result<Declaration> closure, which may make use of the FieldRefs returned by previous add_temporary() calls.\r\n ** commit pending expressions to a Project node (if necessary).\r\n ** clear the list of temporaries.\r\n ** update declaration using the closure.\r\n ** post-condition: all expressions in pending_declarations are simply field references to their own column index.\r\n ** post-condition: temporaries is empty.\r\n * yield the final declaration.\r\n ** pre-condition: temporaries is empty (caller is doing something weird if it's not).\r\n ** commit pending expressions to a Project node (if necessary).\r\n ** return move(declaration).",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Infer project nodes lazily to avoid unnecessary chains when consuming Substrait",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z16ng0:",
        "customfield_12314139": null
    }
}