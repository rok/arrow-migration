{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13187753",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753",
    "key": "ARROW-3336",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342901",
                "id": "12342901",
                "description": "",
                "name": "JS-0.4.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-02-11"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342821",
                "id": "12342821",
                "description": "",
                "name": "JS-0.3.1",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-16"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3336/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt opened a new pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638\n \n \n   Fixes https://issues.apache.org/jira/browse/ARROW-3336. Realized too late I branched from the https://github.com/apache/arrow/pull/2616, so that's why there's some extra commits at the front.\r\n   \r\n   Check out the relevant tests here: https://github.com/trxcllnt/arrow/blob/860f61046fca0081dbe0ce986a97408ed5934e22/js/test/unit/writer-tests.ts#L26. This test covers the primitive, nested, and dictionary vectors, but it'd be worth adding more (for example, Unions).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-26T23:20:34.374+0000",
                    "updated": "2018-09-26T23:20:34.374+0000",
                    "started": "2018-09-26T23:20:34.373+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148520",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-424909205\n \n \n   looks like JS is passing, but the R build has failed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T00:03:25.867+0000",
                    "updated": "2018-09-27T00:03:25.867+0000",
                    "started": "2018-09-27T00:03:25.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148533",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-424915817\n \n \n   @TheNeuralBit also this commit here makes the Table constructor arg handling significantly less confusing: https://github.com/apache/arrow/pull/2638/commits/49c601c03b46bd7821cf1fa600b38b32bad62cf0\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T00:34:15.188+0000",
                    "updated": "2018-09-27T00:34:15.188+0000",
                    "started": "2018-09-27T00:34:15.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148539",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt edited a comment on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-424915817\n \n \n   @TheNeuralBit also commit https://github.com/apache/arrow/pull/2638/commits/49c601c03b46bd7821cf1fa600b38b32bad62cf0 makes the Table constructor arg handling significantly less confusing\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T00:34:42.339+0000",
                    "updated": "2018-09-27T00:34:42.339+0000",
                    "started": "2018-09-27T00:34:42.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148540",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-425029878\n \n \n   Just rebased this after merging #2616, #2635 \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T09:49:37.853+0000",
                    "updated": "2018-09-27T09:49:37.853+0000",
                    "started": "2018-09-27T09:49:37.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148671",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220875325\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\n \n Review comment:\n   What went wrong here, exactly? Is the offset being handled elsewhere?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T10:43:01.950+0000",
                    "updated": "2018-09-27T10:43:01.950+0000",
                    "started": "2018-09-27T10:43:01.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148676",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148762",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220939742\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n \n Review comment:\n   It looks like `getZeroBasedValueOffsets` is always called with a hard-coded 0 now, which makes it a no-op. Should we just get rid of it?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T14:23:07.074+0000",
                    "updated": "2018-09-27T14:23:07.074+0000",
                    "started": "2018-09-27T14:23:07.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148762",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220934662\n \n \n\n ##########\n File path: js/test/unit/writer-tests.ts\n ##########\n @@ -0,0 +1,62 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import '../jest-extensions';\n+\n+import Arrow from '../Arrow';\n+import { getSingleRecordBatchTable } from './table-tests';\n+const { Table, RecordBatch } = Arrow;\n+\n+describe('Table.serialize()', () => {\n+    test(`Serializes sliced RecordBatches`, () => {\n+\n+        const table = getSingleRecordBatchTable();\n+        const batch = table.batches[0], half = batch.length / 2 | 0;\n+\n+        // First compare what happens when slicing from the batch level\n+        let [batch1, batch2] = [batch.slice(0, half), batch.slice(half)];\n+\n+        compareBatchAndTable(table,    0, batch1, Table.from(new Table(batch1).serialize()));\n+        compareBatchAndTable(table, half, batch2, Table.from(new Table(batch2).serialize()));\n+\n+        // Then compare what happens when creating a RecordBatch by slicing each child individually\n+        batch1 = new RecordBatch(batch1.schema, batch1.length, batch1.schema.fields.map((_, i) => {\n+            return batch.getChildAt(i)!.slice(0, half);\n+        }));\n+\n+        batch2 = new RecordBatch(batch2.schema, batch2.length, batch2.schema.fields.map((_, i) => {\n+            return batch.getChildAt(i)!.slice(half);\n+        }));\n+\n+        compareBatchAndTable(table,    0, batch1, Table.from(new Table(batch1).serialize()));\n+        compareBatchAndTable(table, half, batch2, Table.from(new Table(batch2).serialize()));\n+    });\n+});\n+\n+function compareBatchAndTable(source: Table, offset: number, batch: RecordBatch, table: Table) {\n+    expect(batch.length).toEqual(table.length);\n+    expect(table.numCols).toEqual(source.numCols);\n+    expect(batch.numCols).toEqual(source.numCols);\n+    for (let i = -1, n = source.numCols; ++i < n;) {\n+        const v0 = source.getColumnAt(i)!.slice(offset, offset + batch.length);\n+        const v1 = batch.getChildAt(i);\n+        const v2 = table.getColumnAt(i);\n+        const name = source.schema.fields[i].name;\n+        (expect([v1, `batch`, name]) as any).toEqualVector([v0, `source`]);\n+        (expect([v2, `table`, name]) as any).toEqualVector([v0, `source`]);\n+    }\n+}\n \n Review comment:\n   What do you think about pulling some of this logic out into a `toEqualTable` function? I think that would be generally useful, especially if we want to start doing some round-trip tests now that we have a writer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T14:23:07.075+0000",
                    "updated": "2018-09-27T14:23:07.075+0000",
                    "started": "2018-09-27T14:23:07.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148763",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220941727\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\n \n Review comment:\n   I think this offset was intended to handle the buffers for vectors that had been [sliced](https://github.com/apache/arrow/blob/master/js/src/vector.ts#L100), but that function is already slicing all of the vector's child buffers [here](https://github.com/apache/arrow/blob/master/js/src/data.ts#L97), so this is redundant. Note that [`subarray`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) is zero-copy, it's effectively managing the offset for us.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T14:23:07.078+0000",
                    "updated": "2018-09-27T14:23:07.078+0000",
                    "started": "2018-09-27T14:23:07.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148764",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220992042\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n \n Review comment:\n   @TheNeuralBit you're right that we `subarray` the valueOffsets buffer when we slice, but we still need to call `getZeroBasedValueOffsets()` in all these places because it also does work in the case that [`valueOffsets[0] != 0`](https://github.com/apache/arrow/blob/bcd58caa59d26f6c15d4eb9f7ded758d4227f10f/js/src/ipc/writer/binary.ts#L324). \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T16:28:38.076+0000",
                    "updated": "2018-09-27T16:28:38.076+0000",
                    "started": "2018-09-27T16:28:38.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148804",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220994801\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\n \n Review comment:\n   @wesm Brian is right, _most_ of the internal buffers are zero-copy sliced up front in the ArrayData internals. This is mostly a performance optimization/complexity reduction, since it allows us to index into those TypedArrays starting from zero in most cases. Notable exceptions are when the indexing is dependent on other buffers (e.g. we _do_ slice the valueOffsets buffer of a Utf8Vector, but not the data buffer), or when multiple values are packed into < 1 byte like the validity bitmap or BoolVector's data buffer. So we still need to track the logical `offset` internally, but only use it in those special cases.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T16:36:49.325+0000",
                    "updated": "2018-09-27T16:36:49.325+0000",
                    "started": "2018-09-27T16:36:49.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148807",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220992042\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n \n Review comment:\n   @TheNeuralBit you're right that we `subarray` the valueOffsets buffer when we slice, but we still need to call `getZeroBasedValueOffsets()` in all these places because it also does work in the case that [`valueOffsets[0] != 0`](https://github.com/apache/arrow/blob/bcd58caa59d26f6c15d4eb9f7ded758d4227f10f/js/src/ipc/writer/binary.ts#L324). That will be true if we performed any meaningful `valueOffsets.subarray()` slice in the data's `sliceInternal()` method, in which case we need to adjust all the values in the valueOffsets Array on the way out.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T16:40:42.317+0000",
                    "updated": "2018-09-27T16:40:42.317+0000",
                    "started": "2018-09-27T16:40:42.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148808",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220997583\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\n \n Review comment:\n   @wesm if you want to see a simplified version of the internal buffer management/slicing that's going on here, I have one here in my unfinished [`js-data-refactor`](https://github.com/trxcllnt/arrow/blob/js-data-refactor/js/src/data.ts#L90) branch that I'm reeeally looking forward to getting time to finish soon.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T16:45:43.493+0000",
                    "updated": "2018-09-27T16:45:43.493+0000",
                    "started": "2018-09-27T16:45:43.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148813",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r220998975\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\n \n Review comment:\n   Sounds good, looking forward to getting that in :) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T16:50:25.854+0000",
                    "updated": "2018-09-27T16:50:25.854+0000",
                    "started": "2018-09-27T16:50:25.854+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148816",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-425164480\n \n \n   No more comments from me, let me know if you want me to merge this or anything else\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T16:50:42.098+0000",
                    "updated": "2018-09-27T16:50:42.098+0000",
                    "started": "2018-09-27T16:50:42.098+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148817",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r221003503\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\n \n Review comment:\n   Yeah, especially since it lets us take full advantage of TypeScript 3's more advanced type inference:\r\n   \r\n   ![arrow-inference](https://user-images.githubusercontent.com/178183/46162323-bd9fe880-c23c-11e8-9448-d0fbf3301c02.gif)\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T17:04:56.755+0000",
                    "updated": "2018-09-27T17:04:56.755+0000",
                    "started": "2018-09-27T17:04:56.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148822",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#discussion_r221005538\n \n \n\n ##########\n File path: js/test/unit/writer-tests.ts\n ##########\n @@ -0,0 +1,62 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import '../jest-extensions';\n+\n+import Arrow from '../Arrow';\n+import { getSingleRecordBatchTable } from './table-tests';\n+const { Table, RecordBatch } = Arrow;\n+\n+describe('Table.serialize()', () => {\n+    test(`Serializes sliced RecordBatches`, () => {\n+\n+        const table = getSingleRecordBatchTable();\n+        const batch = table.batches[0], half = batch.length / 2 | 0;\n+\n+        // First compare what happens when slicing from the batch level\n+        let [batch1, batch2] = [batch.slice(0, half), batch.slice(half)];\n+\n+        compareBatchAndTable(table,    0, batch1, Table.from(new Table(batch1).serialize()));\n+        compareBatchAndTable(table, half, batch2, Table.from(new Table(batch2).serialize()));\n+\n+        // Then compare what happens when creating a RecordBatch by slicing each child individually\n+        batch1 = new RecordBatch(batch1.schema, batch1.length, batch1.schema.fields.map((_, i) => {\n+            return batch.getChildAt(i)!.slice(0, half);\n+        }));\n+\n+        batch2 = new RecordBatch(batch2.schema, batch2.length, batch2.schema.fields.map((_, i) => {\n+            return batch.getChildAt(i)!.slice(half);\n+        }));\n+\n+        compareBatchAndTable(table,    0, batch1, Table.from(new Table(batch1).serialize()));\n+        compareBatchAndTable(table, half, batch2, Table.from(new Table(batch2).serialize()));\n+    });\n+});\n+\n+function compareBatchAndTable(source: Table, offset: number, batch: RecordBatch, table: Table) {\n+    expect(batch.length).toEqual(table.length);\n+    expect(table.numCols).toEqual(source.numCols);\n+    expect(batch.numCols).toEqual(source.numCols);\n+    for (let i = -1, n = source.numCols; ++i < n;) {\n+        const v0 = source.getColumnAt(i)!.slice(offset, offset + batch.length);\n+        const v1 = batch.getChildAt(i);\n+        const v2 = table.getColumnAt(i);\n+        const name = source.schema.fields[i].name;\n+        (expect([v1, `batch`, name]) as any).toEqualVector([v0, `source`]);\n+        (expect([v2, `table`, name]) as any).toEqualVector([v0, `source`]);\n+    }\n+}\n \n Review comment:\n   Yeah totally, we should add more helpers to the `jest-extensions` file. We can also clean up the tests to take advantage of TS's new `type X = import('some-module').X` feature, to import just type definitions and not the full implementation. I think that would simplify the dynamic import logic in `test/Arrow.ts` and hopefully make it impossible to [accidentally do this](https://github.com/apache/arrow/pull/2638/commits/bcd58caa59d26f6c15d4eb9f7ded758d4227f10f).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T17:12:05.340+0000",
                    "updated": "2018-09-27T17:12:05.340+0000",
                    "started": "2018-09-27T17:12:05.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148824",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-425172650\n \n \n   @wesm I'm happy to do the merge also, if for no other reason than to get my PR merge stats up :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T17:16:40.639+0000",
                    "updated": "2018-09-27T17:16:40.639+0000",
                    "started": "2018-09-27T17:16:40.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148825",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638#issuecomment-425174208\n \n \n   OK, I'll leave it to you both\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T17:21:36.068+0000",
                    "updated": "2018-09-27T17:21:36.068+0000",
                    "started": "2018-09-27T17:21:36.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148828",
                    "issueId": "13187753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/worklog/148841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt closed pull request #2638: ARROW-3336: [JS] Fix IPC writer serializing sliced arrays\nURL: https://github.com/apache/arrow/pull/2638\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/js/src/ipc/writer/binary.ts b/js/src/ipc/writer/binary.ts\nindex 4be3dc7c1d..015e7473c7 100644\n--- a/js/src/ipc/writer/binary.ts\n+++ b/js/src/ipc/writer/binary.ts\n@@ -215,7 +215,7 @@ export class RecordBatchSerializer extends VectorVisitor {\n                 // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n                 const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n                 const shiftedOffsets = new Int32Array(length);\n-                const unshiftedOffsets = this.getZeroBasedValueOffsets(sliceOffset, length, valueOffsets);\n+                const unshiftedOffsets = this.getZeroBasedValueOffsets(0, length, valueOffsets);\n                 for (let typeId, shift, index = -1; ++index < length;) {\n                     typeId = typeIds[index];\n                     // ~(-1) used to be faster than x === -1, so maybe worth benchmarking the difference of these two impls for large dense unions:\n@@ -257,9 +257,9 @@ export class RecordBatchSerializer extends VectorVisitor {\n     }\n     protected visitFlatVector<T extends FlatType>(vector: Vector<T>) {\n         const { view, data } = vector;\n-        const { offset, length, values } = data;\n+        const { length, values } = data;\n         const scaledLength = length * ((view as any).size || 1);\n-        return this.addBuffer(values.subarray(offset, scaledLength));\n+        return this.addBuffer(values.subarray(0, scaledLength));\n     }\n     protected visitFlatListVector<T extends FlatListType>(vector: Vector<T>) {\n         const { data, length } = vector;\n@@ -269,17 +269,17 @@ export class RecordBatchSerializer extends VectorVisitor {\n         const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n         // Push in the order FlatList types read their buffers\n         // valueOffsets buffer first\n-        this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+        this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         // sliced values buffer second\n         this.addBuffer(values.subarray(firstOffset + offset, firstOffset + offset + byteLength));\n         return this;\n     }\n     protected visitListVector<T extends SingleNestedType>(vector: Vector<T>) {\n         const { data, length } = vector;\n-        const { offset, valueOffsets } = <any> data;\n+        const { valueOffsets } = <any> data;\n         // If we have valueOffsets (ListVector), push that buffer first\n         if (valueOffsets) {\n-            this.addBuffer(this.getZeroBasedValueOffsets(offset, length, valueOffsets));\n+            this.addBuffer(this.getZeroBasedValueOffsets(0, length, valueOffsets));\n         }\n         // Then insert the List's values child\n         return this.visit((vector as any as ListVector<T>).getChildAt(0)!);\ndiff --git a/js/src/table.ts b/js/src/table.ts\nindex e3be9bb3e0..e09e2068fa 100644\n--- a/js/src/table.ts\n+++ b/js/src/table.ts\n@@ -93,16 +93,21 @@ export class Table implements DataFrame {\n     constructor(schema: Schema, batches: RecordBatch[]);\n     constructor(schema: Schema, ...batches: RecordBatch[]);\n     constructor(...args: any[]) {\n-        let schema: Schema;\n-        let batches: RecordBatch[];\n+\n+        let schema: Schema = null!;\n+\n         if (args[0] instanceof Schema) {\n-            schema = args[0];\n-            batches = Array.isArray(args[1][0]) ? args[1][0] : args[1];\n-        } else if (args[0] instanceof RecordBatch) {\n-            schema = (batches = args)[0].schema;\n-        } else {\n-            schema = (batches = args[0])[0].schema;\n+            schema = args.shift();\n+        }\n+\n+        let batches = args.reduce(function flatten(xs: any[], x: any): any[] {\n+            return Array.isArray(x) ? x.reduce(flatten, xs) : [...xs, x];\n+        }, []).filter((x: any): x is RecordBatch => x instanceof RecordBatch);\n+\n+        if (!schema && !(schema = batches[0] && batches[0].schema)) {\n+            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch with a Schema');\n         }\n+\n         this.schema = schema;\n         this.batches = batches;\n         this.batchesUnion = batches.length == 0 ?\ndiff --git a/js/src/vector/nested.ts b/js/src/vector/nested.ts\nindex 6d1bd4ab45..31bbee4916 100644\n--- a/js/src/vector/nested.ts\n+++ b/js/src/vector/nested.ts\n@@ -33,7 +33,7 @@ export abstract class NestedView<T extends NestedType> implements View<T> {\n         this._children = children || new Array(this.numChildren);\n     }\n     public clone(data: Data<T>): this {\n-        return new (<any> this.constructor)(data, this._children) as this;\n+        return new (<any> this.constructor)(data, new Array(this.numChildren)) as this;\n     }\n     public isValid(): boolean {\n         return true;\ndiff --git a/js/test/integration/validate-tests.ts b/js/test/integration/validate-tests.ts\nindex 5d0d3ff42b..0f1ebcc7a9 100644\n--- a/js/test/integration/validate-tests.ts\n+++ b/js/test/integration/validate-tests.ts\n@@ -15,6 +15,8 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+import '../jest-extensions';\n+\n import * as fs from 'fs';\n import * as path from 'path';\n \n@@ -59,62 +61,6 @@ const jsonAndArrowPaths = toArray(zip(\n ))\n .filter(([p1, p2]) => p1 !== undefined && p2 !== undefined) as [string, string][];\n \n-expect.extend({\n-    toEqualVector([v1, format1, columnName]: [any, string, string], [v2, format2]: [any, string]) {\n-\n-        const format = (x: any, y: any, msg= ' ') => `${\n-            this.utils.printExpected(x)}${\n-                msg}${\n-            this.utils.printReceived(y)\n-        }`;\n-\n-        let getFailures = new Array<string>();\n-        let propsFailures = new Array<string>();\n-        let iteratorFailures = new Array<string>();\n-        let allFailures = [\n-            { title: 'get', failures: getFailures },\n-            { title: 'props', failures: propsFailures },\n-            { title: 'iterator', failures: iteratorFailures }\n-        ];\n-\n-        let props = [\n-            // 'name', 'nullable', 'metadata',\n-            'type', 'length', 'nullCount'\n-        ];\n-\n-        for (let i = -1, n = props.length; ++i < n;) {\n-            const prop = props[i];\n-            if (`${v1[prop]}` !== `${v2[prop]}`) {\n-                propsFailures.push(`${prop}: ${format(v1[prop], v2[prop], ' !== ')}`);\n-            }\n-        }\n-\n-        for (let i = -1, n = v1.length; ++i < n;) {\n-            let x1 = v1.get(i), x2 = v2.get(i);\n-            if (this.utils.stringify(x1) !== this.utils.stringify(x2)) {\n-                getFailures.push(`${i}: ${format(x1, x2, ' !== ')}`);\n-            }\n-        }\n-\n-        let i = -1;\n-        for (let [x1, x2] of zip(v1, v2)) {\n-            ++i;\n-            if (this.utils.stringify(x1) !== this.utils.stringify(x2)) {\n-                iteratorFailures.push(`${i}: ${format(x1, x2, ' !== ')}`);\n-            }\n-        }\n-\n-        return {\n-            pass: allFailures.every(({ failures }) => failures.length === 0),\n-            message: () => [\n-                `${columnName}: (${format(format1, format2, ' !== ')})\\n`,\n-                ...allFailures.map(({ failures, title }) =>\n-                    !failures.length ? `` : [`${title}:`, ...failures].join(`\\n`))\n-            ].join('\\n')\n-        };\n-    }\n-});\n-\n describe(`Integration`, () => {\n     for (const [jsonFilePath, arrowFilePath] of jsonAndArrowPaths) {\n         let { name, dir } = path.parse(arrowFilePath);\ndiff --git a/js/test/jest-extensions.ts b/js/test/jest-extensions.ts\nnew file mode 100644\nindex 0000000000..f45b70c4dd\n--- /dev/null\n+++ b/js/test/jest-extensions.ts\n@@ -0,0 +1,74 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { zip } from 'ix/iterable/zip';\n+\n+expect.extend({\n+    toEqualVector([v1, format1, columnName]: [any, string, string], [v2, format2]: [any, string]) {\n+\n+        const format = (x: any, y: any, msg= ' ') => `${\n+            this.utils.printExpected(x)}${\n+                msg}${\n+            this.utils.printReceived(y)\n+        }`;\n+\n+        let getFailures = new Array<string>();\n+        let propsFailures = new Array<string>();\n+        let iteratorFailures = new Array<string>();\n+        let allFailures = [\n+            { title: 'get', failures: getFailures },\n+            { title: 'props', failures: propsFailures },\n+            { title: 'iterator', failures: iteratorFailures }\n+        ];\n+\n+        let props = [\n+            // 'name', 'nullable', 'metadata',\n+            'type', 'length', 'nullCount'\n+        ];\n+\n+        for (let i = -1, n = props.length; ++i < n;) {\n+            const prop = props[i];\n+            if (`${v1[prop]}` !== `${v2[prop]}`) {\n+                propsFailures.push(`${prop}: ${format(v1[prop], v2[prop], ' !== ')}`);\n+            }\n+        }\n+\n+        for (let i = -1, n = v1.length; ++i < n;) {\n+            let x1 = v1.get(i), x2 = v2.get(i);\n+            if (this.utils.stringify(x1) !== this.utils.stringify(x2)) {\n+                getFailures.push(`${i}: ${format(x1, x2, ' !== ')}`);\n+            }\n+        }\n+\n+        let i = -1;\n+        for (let [x1, x2] of zip(v1, v2)) {\n+            ++i;\n+            if (this.utils.stringify(x1) !== this.utils.stringify(x2)) {\n+                iteratorFailures.push(`${i}: ${format(x1, x2, ' !== ')}`);\n+            }\n+        }\n+\n+        return {\n+            pass: allFailures.every(({ failures }) => failures.length === 0),\n+            message: () => [\n+                `${columnName}: (${format(format1, format2, ' !== ')})\\n`,\n+                ...allFailures.map(({ failures, title }) =>\n+                    !failures.length ? `` : [`${title}:`, ...failures].join(`\\n`))\n+            ].join('\\n')\n+        };\n+    }\n+});\ndiff --git a/js/test/unit/table-tests.ts b/js/test/unit/table-tests.ts\nindex 98e3eb2351..6ec5b74883 100644\n--- a/js/test/unit/table-tests.ts\n+++ b/js/test/unit/table-tests.ts\n@@ -321,7 +321,7 @@ function leftPad(str: string, fill: string, n: number) {\n     return (new Array(n + 1).join(fill) + str).slice(-1 * n);\n }\n \n-function getSingleRecordBatchTable() {\n+export function getSingleRecordBatchTable() {\n     return Table.from({\n         'schema': {\n             'fields': [\ndiff --git a/js/test/unit/writer-tests.ts b/js/test/unit/writer-tests.ts\nnew file mode 100644\nindex 0000000000..7bd63fc947\n--- /dev/null\n+++ b/js/test/unit/writer-tests.ts\n@@ -0,0 +1,62 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import '../jest-extensions';\n+\n+import Arrow from '../Arrow';\n+import { getSingleRecordBatchTable } from './table-tests';\n+const { Table, RecordBatch } = Arrow;\n+\n+describe('Table.serialize()', () => {\n+    test(`Serializes sliced RecordBatches`, () => {\n+\n+        const table = getSingleRecordBatchTable();\n+        const batch = table.batches[0], half = batch.length / 2 | 0;\n+\n+        // First compare what happens when slicing from the batch level\n+        let [batch1, batch2] = [batch.slice(0, half), batch.slice(half)];\n+\n+        compareBatchAndTable(table,    0, batch1, Table.from(new Table(batch1).serialize()));\n+        compareBatchAndTable(table, half, batch2, Table.from(new Table(batch2).serialize()));\n+\n+        // Then compare what happens when creating a RecordBatch by slicing each child individually\n+        batch1 = new RecordBatch(batch1.schema, batch1.length, batch1.schema.fields.map((_, i) => {\n+            return batch.getChildAt(i)!.slice(0, half);\n+        }));\n+\n+        batch2 = new RecordBatch(batch2.schema, batch2.length, batch2.schema.fields.map((_, i) => {\n+            return batch.getChildAt(i)!.slice(half);\n+        }));\n+\n+        compareBatchAndTable(table,    0, batch1, Table.from(new Table(batch1).serialize()));\n+        compareBatchAndTable(table, half, batch2, Table.from(new Table(batch2).serialize()));\n+    });\n+});\n+\n+function compareBatchAndTable(source: Table, offset: number, batch: RecordBatch, table: Table) {\n+    expect(batch.length).toEqual(table.length);\n+    expect(table.numCols).toEqual(source.numCols);\n+    expect(batch.numCols).toEqual(source.numCols);\n+    for (let i = -1, n = source.numCols; ++i < n;) {\n+        const v0 = source.getColumnAt(i)!.slice(offset, offset + batch.length);\n+        const v1 = batch.getChildAt(i);\n+        const v2 = table.getColumnAt(i);\n+        const name = source.schema.fields[i].name;\n+        (expect([v1, `batch`, name]) as any).toEqualVector([v0, `source`]);\n+        (expect([v2, `table`, name]) as any).toEqualVector([v0, `source`]);\n+    }\n+}\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-27T18:09:09.023+0000",
                    "updated": "2018-09-27T18:09:09.023+0000",
                    "started": "2018-09-27T18:09:09.022+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "148841",
                    "issueId": "13187753"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@65bdb5df[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5990afa4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c866349[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@703704f2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ce10ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4f542ed2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50d7905a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@180f1e26[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ab6865d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@47a1767[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68c312f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@8ddcfe2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 27 18:09:31 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-27T18:09:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3336/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-26T23:15:01.000+0000",
        "updated": "2018-10-14T19:41:58.000+0000",
        "timeoriginalestimate": null,
        "description": "The JS IPC writer is slicing the data and valueOffset buffers by starting from the data's current logical offset. This is incorrect, since the slice function already does this for the data, type, and valueOffset TypedArrays internally. PR incoming.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "JS writer doesn't serialize sliced Vectors correctly",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13187753/comment/16630837",
                    "id": "16630837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 2638\n[https://github.com/apache/arrow/pull/2638]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2018-09-27T18:09:31.854+0000",
                    "updated": "2018-09-27T18:09:31.854+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3yjmv:",
        "customfield_12314139": null
    }
}