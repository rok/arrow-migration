{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13132453",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453",
    "key": "ARROW-2015",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12525665",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12525665",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13134814",
                    "key": "ARROW-2055",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13134814",
                    "fields": {
                        "summary": "[Java] Upgrade to Java 8",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dgunning",
            "name": "dgunning",
            "key": "dgunning",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dgunning&avatarId=34330",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dgunning&avatarId=34330",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dgunning&avatarId=34330",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dgunning&avatarId=34330"
            },
            "displayName": "Dwight Gunning",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dgunning",
            "name": "dgunning",
            "key": "dgunning",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dgunning&avatarId=34330",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dgunning&avatarId=34330",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dgunning&avatarId=34330",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dgunning&avatarId=34330"
            },
            "displayName": "Dwight Gunning",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "aggregateprogress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2015/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 50,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/116025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "abipc opened a new pull request #2171: ARROW-2015 - [Java] Use Java Time and Date APIs instead of JodaTime\nURL: https://github.com/apache/arrow/pull/2171\n \n \n   This is NOT COMPLETE. Creating this pull request to share the changes with another contributor.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-26T16:49:34.143+0000",
                    "updated": "2018-06-26T16:49:34.143+0000",
                    "started": "2018-06-26T16:49:34.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "116025",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/124722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2171: ARROW-2015: [Java] Use Java Time and Date APIs instead of JodaTime\nURL: https://github.com/apache/arrow/pull/2171#issuecomment-406119043\n \n \n   @siddharthteotia I reckon it's too late to get this into 0.10.0. Can you advise per the mailing list discussion about this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T00:52:23.503+0000",
                    "updated": "2018-07-19T00:52:23.503+0000",
                    "started": "2018-07-19T00:52:23.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124722",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/164234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2171: ARROW-2015: [Java] Use Java Time and Date APIs instead of JodaTime\nURL: https://github.com/apache/arrow/pull/2171#issuecomment-437254474\n \n \n   @abipc I'm not sure if the switch to Java 8 was blocking this before, but are you able to pick this up again?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-09T05:28:12.528+0000",
                    "updated": "2018-11-09T05:28:12.528+0000",
                    "started": "2018-11-09T05:28:12.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164234",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/164828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "abipc commented on issue #2171: ARROW-2015: [Java] Use Java Time and Date APIs instead of JodaTime\nURL: https://github.com/apache/arrow/pull/2171#issuecomment-437785822\n \n \n   > @abipc I'm not sure if the switch to Java 8 was blocking this before, but are you able to pick this up again?\r\n   \r\n   I will not be able to pick this up.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T07:45:00.813+0000",
                    "updated": "2018-11-12T07:45:00.813+0000",
                    "started": "2018-11-12T07:45:00.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164828",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/165631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2171: ARROW-2015: [Java] Use Java Time and Date APIs instead of JodaTime\nURL: https://github.com/apache/arrow/pull/2171#issuecomment-438426919\n \n \n   Thanks @abipc , and no problem. I can give it a shot. I'll go ahead and close this then.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T20:35:14.482+0000",
                    "updated": "2018-11-13T20:35:14.482+0000",
                    "started": "2018-11-13T20:35:14.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165631",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/165632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler closed pull request #2171: ARROW-2015: [Java] Use Java Time and Date APIs instead of JodaTime\nURL: https://github.com/apache/arrow/pull/2171\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/java/vector/src/main/codegen/includes/vv_imports.ftl b/java/vector/src/main/codegen/includes/vv_imports.ftl\nindex fb733fbb74..99521d5fd4 100644\n--- a/java/vector/src/main/codegen/includes/vv_imports.ftl\n+++ b/java/vector/src/main/codegen/includes/vv_imports.ftl\n@@ -54,9 +54,9 @@ import java.sql.Timestamp;\n import java.math.BigDecimal;\n import java.math.BigInteger;\n \n-import org.joda.time.DateTime;\n-import org.joda.time.LocalDateTime;\n-import org.joda.time.Period;\n+import java.time.ZonedDateTime;\n+import java.time.LocalDateTime;\n+import java.time.Period;\n \n \n \ndiff --git a/java/vector/src/main/codegen/templates/HolderReaderImpl.java b/java/vector/src/main/codegen/templates/HolderReaderImpl.java\nindex f1c10d1021..f40ec9c4d9 100644\n--- a/java/vector/src/main/codegen/templates/HolderReaderImpl.java\n+++ b/java/vector/src/main/codegen/templates/HolderReaderImpl.java\n@@ -40,8 +40,8 @@\n \n import java.math.BigDecimal;\n import java.math.BigInteger;\n-\n-import org.joda.time.Period;\n+import java.time.LocalDateTime;\n+import java.time.Period;\n \n // Source code generated using FreeMarker template ${.template_name}\n \n@@ -132,6 +132,9 @@ public void read(Nullable${name}Holder h) {\n     byte[] value = new byte [holder.byteWidth];\n     holder.buffer.getBytes(0, value, 0, holder.byteWidth);\n     return value;\n+  <#elseif minor.class == \"LocalDateTime\">\n+    ${friendlyType} value = LocalDateTime.ofEpochSecond(this.holder.value, 0, null);\n+    return value;\n   <#else>\n     ${friendlyType} value = new ${friendlyType}(this.holder.value);\n     return value;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/DateMilliVector.java b/java/vector/src/main/java/org/apache/arrow/vector/DateMilliVector.java\nindex 2e32646568..b26b7068d9 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/DateMilliVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/DateMilliVector.java\n@@ -18,7 +18,11 @@\n \n package org.apache.arrow.vector;\n \n-import io.netty.buffer.ArrowBuf;\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n+import java.time.ZoneOffset;\n+\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.vector.complex.impl.DateMilliReaderImpl;\n import org.apache.arrow.vector.complex.reader.FieldReader;\n@@ -27,7 +31,8 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+\n+import io.netty.buffer.ArrowBuf;\n \n /**\n  * DateMilliVector implements a fixed width vector (8 bytes) of\n@@ -127,8 +132,8 @@ public LocalDateTime getObject(int index) {\n       return null;\n     } else {\n       final long millis = valueBuffer.getLong(index * TYPE_WIDTH);\n-      final LocalDateTime localDateTime = new org.joda.time.LocalDateTime(millis,\n-              org.joda.time.DateTimeZone.UTC);\n+      final Instant inst = Instant.ofEpochMilli(millis);\n+      final LocalDateTime localDateTime = LocalDateTime.ofInstant(inst, ZoneId.of(\"UTC\"));\n       return localDateTime;\n     }\n   }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/IntervalDayVector.java b/java/vector/src/main/java/org/apache/arrow/vector/IntervalDayVector.java\nindex 0142dd54f9..58d77882de 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/IntervalDayVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/IntervalDayVector.java\n@@ -18,7 +18,10 @@\n \n package org.apache.arrow.vector;\n \n-import io.netty.buffer.ArrowBuf;\n+import java.time.Duration;\n+import java.time.Period;\n+import java.time.temporal.TemporalAmount;\n+\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.vector.complex.impl.IntervalDayReaderImpl;\n import org.apache.arrow.vector.complex.reader.FieldReader;\n@@ -27,7 +30,8 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.Period;\n+\n+import io.netty.buffer.ArrowBuf;\n \n /**\n  * IntervalDayVector implements a fixed width vector (8 bytes) of\n@@ -133,8 +137,9 @@ public Period getObject(int index) {\n       final int startIndex = index * TYPE_WIDTH;\n       final int days = valueBuffer.getInt(startIndex);\n       final int milliseconds = valueBuffer.getInt(startIndex + MILLISECOND_OFFSET);\n-      final Period p = new Period();\n-      return p.plusDays(days).plusMillis(milliseconds);\n+      TemporalAmount tempAmt = Duration.ofMillis(milliseconds);\n+      final Period p = Period.ofDays(days);\n+      return p.plus(tempAmt);\n     }\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/IntervalYearVector.java b/java/vector/src/main/java/org/apache/arrow/vector/IntervalYearVector.java\nindex ed627bbc72..b712a96a15 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/IntervalYearVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/IntervalYearVector.java\n@@ -26,7 +26,7 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.Period;\n+import java.time.Period;\n \n /**\n  * IntervalYearVector implements a fixed width (4 bytes) vector of\n@@ -128,8 +128,8 @@ public Period getObject(int index) {\n       final int interval = valueBuffer.getInt(index * TYPE_WIDTH);\n       final int years = (interval / org.apache.arrow.vector.util.DateUtility.yearsToMonths);\n       final int months = (interval % org.apache.arrow.vector.util.DateUtility.yearsToMonths);\n-      final Period p = new Period();\n-      return p.plusYears(years).plusMonths(months);\n+      final Period p = Period.ofYears(years);\n+      return p.plusMonths(months);\n     }\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/TimeMilliVector.java b/java/vector/src/main/java/org/apache/arrow/vector/TimeMilliVector.java\nindex bc61def6ba..77eca4114e 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/TimeMilliVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/TimeMilliVector.java\n@@ -27,7 +27,12 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n+import java.time.ZoneOffset;\n+\n import org.slf4j.Logger;\n \n /**\n@@ -126,8 +131,8 @@ public LocalDateTime getObject(int index) {\n     if (isSet(index) == 0) {\n       return null;\n     }\n-    org.joda.time.LocalDateTime ldt = new org.joda.time.LocalDateTime(get(index),\n-            org.joda.time.DateTimeZone.UTC);\n+    Instant inst = Instant.ofEpochMilli(get(index));\n+    LocalDateTime ldt = LocalDateTime.ofInstant(inst, ZoneId.of(\"UTC\"));\n     return ldt;\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMicroVector.java b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMicroVector.java\nindex e689627cfd..4ad924d336 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMicroVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMicroVector.java\n@@ -26,7 +26,10 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n \n /**\n  * TimeStampMicroVector implements a fixed width vector (8 bytes) of\n@@ -114,9 +117,9 @@ public LocalDateTime getObject(int index) {\n          /* value is truncated when converting microseconds to milliseconds in order to use DateTime type */\n       final long micros = valueBuffer.getLong(index * TYPE_WIDTH);\n       final long millis = java.util.concurrent.TimeUnit.MICROSECONDS.toMillis(micros);\n-      final org.joda.time.LocalDateTime localDateTime = new org.joda.time.LocalDateTime(millis,\n-              org.joda.time.DateTimeZone.UTC);\n-      return localDateTime;\n+      final Instant inst = Instant.ofEpochMilli(millis);\n+      final LocalDateTime ldt = LocalDateTime.ofInstant(inst, ZoneId.of(\"UTC\"));\n+      return ldt;\n     }\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMilliVector.java b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMilliVector.java\nindex 75493a942b..d02fad851b 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMilliVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampMilliVector.java\n@@ -26,7 +26,10 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n \n /**\n  * TimeStampMilliVector implements a fixed width vector (8 bytes) of\n@@ -112,9 +115,9 @@ public LocalDateTime getObject(int index) {\n       return null;\n     } else {\n       final long millis = valueBuffer.getLong(index * TYPE_WIDTH);\n-      final org.joda.time.LocalDateTime localDateTime = new org.joda.time.LocalDateTime(millis,\n-              org.joda.time.DateTimeZone.UTC);\n-      return localDateTime;\n+      final Instant inst = Instant.ofEpochMilli(millis);\n+      final LocalDateTime ldt = LocalDateTime.ofInstant(inst, ZoneId.of(\"UTC\"));\n+      return ldt;\n     }\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampNanoVector.java b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampNanoVector.java\nindex d13445213c..8b9d27f3e3 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampNanoVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampNanoVector.java\n@@ -26,7 +26,10 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n \n /**\n  * TimeStampNanoVector implements a fixed width vector (8 bytes) of\n@@ -113,9 +116,9 @@ public LocalDateTime getObject(int index) {\n     } else {\n       final long nanos = valueBuffer.getLong(index * TYPE_WIDTH);\n       final long millis = java.util.concurrent.TimeUnit.NANOSECONDS.toMillis(nanos);\n-      final org.joda.time.LocalDateTime localDateTime = new org.joda.time.LocalDateTime(millis,\n-              org.joda.time.DateTimeZone.UTC);\n-      return localDateTime;\n+      final Instant inst = Instant.ofEpochMilli(millis);\n+      final LocalDateTime ldt = LocalDateTime.ofInstant(inst, ZoneId.of(\"UTC\"));\n+      return ldt;\n     }\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampSecVector.java b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampSecVector.java\nindex 91733c707c..c833739e29 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/TimeStampSecVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/TimeStampSecVector.java\n@@ -26,7 +26,10 @@\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n \n /**\n  * TimeStampSecVector implements a fixed width vector (8 bytes) of\n@@ -113,9 +116,9 @@ public LocalDateTime getObject(int index) {\n     } else {\n       final long secs = valueBuffer.getLong(index * TYPE_WIDTH);\n       final long millis = java.util.concurrent.TimeUnit.SECONDS.toMillis(secs);\n-      final org.joda.time.LocalDateTime localDateTime = new org.joda.time.LocalDateTime(millis,\n-              org.joda.time.DateTimeZone.UTC);\n-      return localDateTime;\n+      final Instant inst = Instant.ofEpochMilli(millis);\n+      final LocalDateTime ldt = LocalDateTime.ofInstant(inst, ZoneId.of(\"UTC\"));\n+      return ldt;\n     }\n   }\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java b/java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java\nindex 3dd169b823..0f00f7ec8b 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java\n@@ -18,14 +18,13 @@\n \n package org.apache.arrow.vector.util;\n \n-import org.joda.time.DateTimeZone;\n-import org.joda.time.LocalDateTime;\n-import org.joda.time.LocalDateTimes;\n-import org.joda.time.Period;\n-import org.joda.time.format.DateTimeFormat;\n-import org.joda.time.format.DateTimeFormatter;\n-import org.joda.time.format.DateTimeFormatterBuilder;\n-import org.joda.time.format.DateTimeParser;\n+import java.time.ZoneId;\n+import java.time.LocalDateTime;\n+import java.time.Period;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.temporal.ChronoField;\n+import java.time.temporal.ChronoUnit;\n \n import com.carrotsearch.hppc.ObjectIntHashMap;\n \n@@ -621,10 +620,10 @@\n     }\n   }\n \n-  public static final DateTimeFormatter formatDate = DateTimeFormat.forPattern(\"yyyy-MM-dd\");\n-  public static final DateTimeFormatter formatTimeStampMilli = DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSS\");\n-  public static final DateTimeFormatter formatTimeStampTZ = DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSS ZZZ\");\n-  public static final DateTimeFormatter formatTime = DateTimeFormat.forPattern(\"HH:mm:ss.SSS\");\n+  public static final DateTimeFormatter formatDate = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n+  public static final DateTimeFormatter formatTimeStampMilli = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSS\");\n+  public static final DateTimeFormatter formatTimeStampTZ = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSS ZZZ\");\n+  public static final DateTimeFormatter formatTime = DateTimeFormatter.ofPattern(\"HH:mm:ss.SSS\");\n \n   public static DateTimeFormatter dateTimeTZFormat = null;\n   public static DateTimeFormatter timeFormat = null;\n@@ -650,10 +649,10 @@ public static String getTimeZone(int index) {\n   public static DateTimeFormatter getDateTimeFormatter() {\n \n     if (dateTimeTZFormat == null) {\n-      DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"yyyy-MM-dd\");\n-      DateTimeParser optionalTime = DateTimeFormat.forPattern(\" HH:mm:ss\").getParser();\n-      DateTimeParser optionalSec = DateTimeFormat.forPattern(\".SSS\").getParser();\n-      DateTimeParser optionalZone = DateTimeFormat.forPattern(\" ZZZ\").getParser();\n+      DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n+      DateTimeFormatter optionalTime = DateTimeFormatter.ofPattern(\" HH:mm:ss\");\n+      DateTimeFormatter optionalSec = DateTimeFormatter.ofPattern(\".SSS\");\n+      DateTimeFormatter optionalZone = DateTimeFormatter.ofPattern(\" ZZZ\");\n \n       dateTimeTZFormat = new DateTimeFormatterBuilder().append(dateFormatter).appendOptional(optionalTime).appendOptional(optionalSec).appendOptional(optionalZone).toFormatter();\n     }\n@@ -664,8 +663,8 @@ public static DateTimeFormatter getDateTimeFormatter() {\n   // Function returns time formatter used to parse time strings\n   public static DateTimeFormatter getTimeFormatter() {\n     if (timeFormat == null) {\n-      DateTimeFormatter timeFormatter = DateTimeFormat.forPattern(\"HH:mm:ss\");\n-      DateTimeParser optionalSec = DateTimeFormat.forPattern(\".SSS\").getParser();\n+      DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\");\n+      DateTimeFormatter optionalSec = DateTimeFormatter.ofPattern(\".SSS\");\n       timeFormat = new DateTimeFormatterBuilder().append(timeFormatter).appendOptional(optionalSec).toFormatter();\n     }\n     return timeFormat;\n@@ -676,17 +675,17 @@ public static int monthsFromPeriod(Period period) {\n   }\n \n   public static int millisFromPeriod(final Period period) {\n-    return (period.getHours() * hoursToMillis) +\n-        (period.getMinutes() * minutesToMillis) +\n-        (period.getSeconds() * secondsToMillis) +\n-        (period.getMillis());\n+    return (int) ((period.get(ChronoUnit.HOURS) * hoursToMillis) +\n+        (period.get(ChronoUnit.MINUTES) * minutesToMillis) +\n+        (period.get(ChronoUnit.SECONDS) * secondsToMillis) +\n+        (period.get(ChronoUnit.MILLIS)));\n   }\n \n   public static long toMillis(LocalDateTime localDateTime) {\n-    return LocalDateTimes.getLocalMillis(localDateTime);\n+    return localDateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();\n   }\n \n   public static int toMillisOfDay(final LocalDateTime localDateTime) {\n-    return localDateTime.toDateTime(DateTimeZone.UTC).millisOfDay().get();\n+    return localDateTime.atZone(ZoneId.of(\"UTC\")).get(ChronoField.MILLI_OF_DAY);\n   }\n }\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestCopyFrom.java b/java/vector/src/test/java/org/apache/arrow/vector/TestCopyFrom.java\nindex 7f3f548eb9..a89b8536c9 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestCopyFrom.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestCopyFrom.java\n@@ -21,7 +21,9 @@\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.memory.RootAllocator;\n import org.apache.arrow.vector.types.Types.MinorType;\n-import org.joda.time.Period;\n+import java.time.Period;\n+import java.time.temporal.ChronoUnit;\n+\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n@@ -548,7 +550,7 @@ public void testCopyFromWithNulls7() {\n         } else {\n           final Period p = vector1.getObject(i);\n           assertEquals(days + i, p.getDays());\n-          assertEquals(milliseconds + i, p.getMillis());\n+          assertEquals(milliseconds + i, p.get(ChronoUnit.MILLIS));\n         }\n       }\n \n@@ -576,7 +578,7 @@ public void testCopyFromWithNulls7() {\n         } else {\n           final Period p = vector2.getObject(i);\n           assertEquals(days + i, p.getDays());\n-          assertEquals(milliseconds + i, p.getMillis());\n+          assertEquals(milliseconds + i, p.get(ChronoUnit.MILLIS));\n         }\n       }\n     }\n@@ -598,10 +600,9 @@ public void testCopyFromWithNulls8() {\n           continue;\n         }\n         vector1.setSafe(i, interval + i);\n-        final Period p = new Period();\n         final int years = (interval + i) / org.apache.arrow.vector.util.DateUtility.yearsToMonths;\n         final int months = (interval + i) % org.apache.arrow.vector.util.DateUtility.yearsToMonths;\n-        periods[i] = p.plusYears(years).plusMonths(months);;\n+        periods[i] = Period.ofYears(years).plusMonths(months);;\n       }\n \n       vector1.setValueCount(4096);\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/complex/writer/TestComplexWriter.java b/java/vector/src/test/java/org/apache/arrow/vector/complex/writer/TestComplexWriter.java\nindex 59035b99bb..73905f8a01 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/complex/writer/TestComplexWriter.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/complex/writer/TestComplexWriter.java\n@@ -72,7 +72,7 @@\n import org.apache.arrow.vector.util.JsonStringHashMap;\n import org.apache.arrow.vector.util.Text;\n import org.apache.arrow.vector.util.TransferPair;\n-import org.joda.time.LocalDateTime;\n+import java.time.LocalDateTime;\n import org.junit.Assert;\n import org.junit.Test;\n \n@@ -653,7 +653,7 @@ public void structWriterMixedCaseFieldNames() {\n   public void timeStampSecWriter() throws Exception {\n     // test values\n     final long expectedSecs = 981173106L;\n-    final LocalDateTime expectedSecDateTime = new LocalDateTime(2001, 2, 3, 4, 5, 6, 0);\n+    final LocalDateTime expectedSecDateTime = LocalDateTime.of(2001, 2, 3, 4, 5, 6, 0);\n \n     // write\n     NonNullableStructVector parent = NonNullableStructVector.empty(\"parent\", allocator);\n@@ -697,7 +697,7 @@ public void timeStampSecWriter() throws Exception {\n   public void timeStampMilliWriters() throws Exception {\n     // test values\n     final long expectedMillis = 981173106123L;\n-    final LocalDateTime expectedMilliDateTime = new LocalDateTime(2001, 2, 3, 4, 5, 6, 123);\n+    final LocalDateTime expectedMilliDateTime = LocalDateTime.of(2001, 2, 3, 4, 5, 6, 123);\n \n     // write\n     NonNullableStructVector parent = NonNullableStructVector.empty(\"parent\", allocator);\n@@ -753,7 +753,7 @@ private void checkTimestampTZField(Field field, String name, String tz) {\n   public void timeStampMicroWriters() throws Exception {\n     // test values\n     final long expectedMicros = 981173106123456L;\n-    final LocalDateTime expectedMicroDateTime = new LocalDateTime(2001, 2, 3, 4, 5, 6, 123);\n+    final LocalDateTime expectedMicroDateTime = LocalDateTime.of(2001, 2, 3, 4, 5, 6, 123);\n \n     // write\n     NonNullableStructVector parent = NonNullableStructVector.empty(\"parent\", allocator);\n@@ -800,7 +800,7 @@ public void timeStampMicroWriters() throws Exception {\n   public void timeStampNanoWriters() throws Exception {\n     // test values\n     final long expectedNanos = 981173106123456789L;\n-    final LocalDateTime expectedNanoDateTime = new LocalDateTime(2001, 2, 3, 4, 5, 6, 123);\n+    final LocalDateTime expectedNanoDateTime = LocalDateTime.of(2001, 2, 3, 4, 5, 6, 123);\n \n     // write\n     NonNullableStructVector parent = NonNullableStructVector.empty(\"parent\", allocator);\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java b/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\nindex ef102fa506..1ff556ea97 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\n@@ -61,8 +61,10 @@\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.DateUtility;\n import org.apache.arrow.vector.util.Text;\n-import org.joda.time.DateTimeZone;\n-import org.joda.time.LocalDateTime;\n+import java.time.ZoneId;\n+import java.time.temporal.ChronoField;\n+import java.time.Duration;\n+import java.time.LocalDateTime;\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -83,7 +85,7 @@\n   protected static final int COUNT = 10;\n   protected BufferAllocator allocator;\n \n-  private DateTimeZone defaultTimezone = DateTimeZone.getDefault();\n+  private ZoneId defaultTimezone = ZoneId.systemDefault();\n \n   @Before\n   public void init() {\n@@ -189,7 +191,7 @@ protected void validateComplexContent(int count, VectorSchemaRoot root) {\n   }\n \n   private LocalDateTime makeDateTimeFromCount(int i) {\n-    return new LocalDateTime(2000 + i, 1 + i, 1 + i, i, i, i, i);\n+    return LocalDateTime.of(2000 + i, 1 + i, 1 + i, i, i, i, i);\n   }\n \n   protected void writeDateTimeData(int count, StructVector parent) {\n@@ -204,11 +206,12 @@ protected void writeDateTimeData(int count, StructVector parent) {\n       LocalDateTime dt = makeDateTimeFromCount(i);\n       // Number of days in milliseconds since epoch, stored as 64-bit integer, only date part is used\n       dateWriter.setPosition(i);\n-      long dateLong = DateUtility.toMillis(dt.minusMillis(dt.getMillisOfDay()));\n+      long dateLong = DateUtility.toMillis(dt.minus(\n+\t\t  Duration.ofMillis(dt.atZone(ZoneId.of(\"UTC\")).get(ChronoField.MILLI_OF_DAY))));\n       dateWriter.writeDateMilli(dateLong);\n       // Time is a value in milliseconds since midnight, stored as 32-bit integer\n       timeWriter.setPosition(i);\n-      timeWriter.writeTimeMilli(dt.getMillisOfDay());\n+      timeWriter.writeTimeMilli(dt.atZone(ZoneId.of(\"UTC\")).get(ChronoField.MILLI_OF_DAY));\n       // Timestamp is milliseconds since the epoch, stored as 64-bit integer\n       timeStampMilliWriter.setPosition(i);\n       timeStampMilliWriter.writeTimeStampMilli(DateUtility.toMillis(dt));\n@@ -224,10 +227,11 @@ protected void validateDateTimeContent(int count, VectorSchemaRoot root) {\n     for (int i = 0; i < count; i++) {\n       long dateVal = ((DateMilliVector) root.getVector(\"date\")).get(i);\n       LocalDateTime dt = makeDateTimeFromCount(i);\n-      LocalDateTime dateExpected = dt.minusMillis(dt.getMillisOfDay());\n+      LocalDateTime dateExpected = dt.minus(Duration.ofMillis(\n+\t\t  dt.atZone(ZoneId.of(\"UTC\")).get(ChronoField.MILLI_OF_DAY)));\n       Assert.assertEquals(DateUtility.toMillis(dateExpected), dateVal);\n       long timeVal = ((TimeMilliVector) root.getVector(\"time\")).get(i);\n-      Assert.assertEquals(dt.getMillisOfDay(), timeVal);\n+      Assert.assertEquals(dt.atZone(ZoneId.of(\"UTC\")).get(ChronoField.MILLI_OF_DAY), timeVal);\n       Object timestampMilliVal = root.getVector(\"timestamp-milli\").getObject(i);\n       Assert.assertEquals(dt, timestampMilliVal);\n       Object timestampMilliTZVal = root.getVector(\"timestamp-milliTZ\").getObject(i);\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T20:35:15.087+0000",
                    "updated": "2018-11-13T20:35:15.087+0000",
                    "started": "2018-11-13T20:35:15.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165632",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler opened a new pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966\n \n \n   This removes the use of the Joda time library in Arrow Java and replaces it with Java 8 java.time, as recommended by JSR-310. Most classes have an equivalent counterpart in java.time and usually required only a small change to use the new API. Some of the notable changes:\r\n   \r\n   * IntervalDayVector` previously used `Period` as a friendly-type, now uses java.time.Duration to give intervals in days and time. `InvervalYearVector` still uses `Period` for intervals in year, month, day.\r\n   \r\n   * `LocalDateTime` is similar but the constructor `LocalDateTime.of` accepts fraction of a second as nanoseconds, where with Joda time it could be in milliseconds.\r\n   \r\n   * `DateUtility` removed methods for Period conversions because they are done better in java.time.Period now. Also added methods to convert internal time vals to `LocalDateTime` in UTC that is used in vector and holder reader classes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:05:17.162+0000",
                    "updated": "2018-11-15T00:05:17.162+0000",
                    "started": "2018-11-15T00:05:17.161+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166199",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#issuecomment-438866056\n \n \n   @siddharthteotia @jacques-n please take a look and see how this might impact Dremio.  I think most of the changes in API just required slight modifications - like instead of `new LocalDateTime` use `LocalDateTime.of`. One issue was that the previous constructor of `LocalDateTime` could accept milliseconds, while in java.time.LocalDateTime and others, nanoseconds are used. That was the only real gotcha I noticed.  cc @icexelloss \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:09:03.008+0000",
                    "updated": "2018-11-15T00:09:03.008+0000",
                    "started": "2018-11-15T00:09:03.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166200",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233670144\n \n \n\n ##########\n File path: java/vector/src/main/codegen/data/ValueVectorTypes.tdd\n ##########\n @@ -106,7 +106,7 @@\n       javaType: \"ArrowBuf\",\n       boxedType: \"ArrowBuf\",\n       minor: [\n-        { class: \"IntervalDay\", millisecondsOffset: 4, friendlyType: \"Period\", fields: [ {name: \"days\", type:\"int\"}, {name: \"milliseconds\", type:\"int\"}] }\n+        { class: \"IntervalDay\", millisecondsOffset: 4, friendlyType: \"Duration\", fields: [ {name: \"days\", type:\"int\"}, {name: \"milliseconds\", type:\"int\"}] }\n \n Review comment:\n   `java.time.Duration` seems to be the corresponding class to use now. It can represent interval in days and time. Period can only do year, month, days.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:10:11.950+0000",
                    "updated": "2018-11-15T00:10:11.950+0000",
                    "started": "2018-11-15T00:10:11.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166201",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166202",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233670556\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/HolderReaderImpl.java\n ##########\n @@ -131,6 +127,15 @@ public void read(Nullable${name}Holder h) {\n     byte[] value = new byte [holder.byteWidth];\n     holder.buffer.getBytes(0, value, 0, holder.byteWidth);\n     return value;\n+  <#elseif minor.class == \"TimeStampSec\">\n+    final long millis = java.util.concurrent.TimeUnit.SECONDS.toMillis(holder.value);\n+    return DateUtility.getLocalDateTimeFromEpochMilli(millis);\n+  <#elseif minor.class == \"TimeStampMilli\" || minor.class == \"DateMilli\" || minor.class == \"TimeMilli\">\n+    return DateUtility.getLocalDateTimeFromEpochMilli(holder.value);\n+  <#elseif minor.class == \"TimeStampMicro\">\n+    return DateUtility.getLocalDateTimeFromEpochMicro(holder.value);\n+  <#elseif minor.class == \"TimeStampNano\">\n+    return DateUtility.getLocalDateTimeFromEpochNano(holder.value);\n \n Review comment:\n   I think this was not right before.  Each of these classes used the general constructor below which became `new LocalDateTime(holder.value)`. Using that constructor, the value is expected to be in milliseconds, but we were passing in nano and micros in without any conversion.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:12:31.119+0000",
                    "updated": "2018-11-15T00:12:31.119+0000",
                    "started": "2018-11-15T00:12:31.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166202",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233670852\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/IntervalYearVector.java\n ##########\n @@ -125,10 +126,8 @@ public Period getObject(int index) {\n       return null;\n     } else {\n       final int interval = valueBuffer.getInt(index * TYPE_WIDTH);\n-      final int years = (interval / org.apache.arrow.vector.util.DateUtility.yearsToMonths);\n-      final int months = (interval % org.apache.arrow.vector.util.DateUtility.yearsToMonths);\n-      final Period p = new Period();\n-      return p.plusYears(years).plusMonths(months);\n+      // TODO: verify interval is in months\n+      return Period.ofMonths(interval);\n \n Review comment:\n   I believe this is correct, but just need to check on it\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:14:02.445+0000",
                    "updated": "2018-11-15T00:14:02.445+0000",
                    "started": "2018-11-15T00:14:02.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166203",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233671071\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/TimeMilliVector.java\n ##########\n @@ -125,9 +127,9 @@ public LocalDateTime getObject(int index) {\n     if (isSet(index) == 0) {\n       return null;\n     }\n-    org.joda.time.LocalDateTime ldt = new org.joda.time.LocalDateTime(get(index),\n-            org.joda.time.DateTimeZone.UTC);\n-    return ldt;\n+    final int millis = valueBuffer.getInt(index * TYPE_WIDTH);\n+    // TODO: this doesn't seem right, time not from epoch\n+    return DateUtility.getLocalDateTimeFromEpochMilli(millis);\n \n Review comment:\n   This seems wrong, I think the friendly type should be `LocalTime` which gives the time of day without any date. Currently this leads to the epoch date\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:15:11.925+0000",
                    "updated": "2018-11-15T00:15:11.925+0000",
                    "started": "2018-11-15T00:15:11.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166206",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233671334\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java\n ##########\n @@ -664,29 +662,46 @@ public static DateTimeFormatter getDateTimeFormatter() {\n   // Function returns time formatter used to parse time strings\n   public static DateTimeFormatter getTimeFormatter() {\n     if (timeFormat == null) {\n-      DateTimeFormatter timeFormatter = DateTimeFormat.forPattern(\"HH:mm:ss\");\n-      DateTimeParser optionalSec = DateTimeFormat.forPattern(\".SSS\").getParser();\n+      DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\");\n+      DateTimeFormatter optionalSec = DateTimeFormatter.ofPattern(\".SSS\");\n       timeFormat = new DateTimeFormatterBuilder().append(timeFormatter).appendOptional(optionalSec).toFormatter();\n     }\n     return timeFormat;\n   }\n \n-  public static int monthsFromPeriod(Period period) {\n-    return (period.getYears() * yearsToMonths) + period.getMonths();\n-  }\n-\n-  public static int millisFromPeriod(final Period period) {\n-    return (period.getHours() * hoursToMillis) +\n-        (period.getMinutes() * minutesToMillis) +\n-        (period.getSeconds() * secondsToMillis) +\n-        (period.getMillis());\n \n Review comment:\n   I believe these can easily be gotten from the java.time Period and Duration classes, @siddharthteotia let me know if you have any trouble with these being removed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:16:29.129+0000",
                    "updated": "2018-11-15T00:16:29.129+0000",
                    "started": "2018-11-15T00:16:29.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166207",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233671496\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java\n ##########\n @@ -664,29 +662,46 @@ public static DateTimeFormatter getDateTimeFormatter() {\n   // Function returns time formatter used to parse time strings\n   public static DateTimeFormatter getTimeFormatter() {\n     if (timeFormat == null) {\n-      DateTimeFormatter timeFormatter = DateTimeFormat.forPattern(\"HH:mm:ss\");\n-      DateTimeParser optionalSec = DateTimeFormat.forPattern(\".SSS\").getParser();\n+      DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\");\n+      DateTimeFormatter optionalSec = DateTimeFormatter.ofPattern(\".SSS\");\n       timeFormat = new DateTimeFormatterBuilder().append(timeFormatter).appendOptional(optionalSec).toFormatter();\n     }\n     return timeFormat;\n   }\n \n-  public static int monthsFromPeriod(Period period) {\n-    return (period.getYears() * yearsToMonths) + period.getMonths();\n-  }\n-\n-  public static int millisFromPeriod(final Period period) {\n-    return (period.getHours() * hoursToMillis) +\n-        (period.getMinutes() * minutesToMillis) +\n-        (period.getSeconds() * secondsToMillis) +\n-        (period.getMillis());\n+  /**\n+   * Convert milliseconds from epoch to a LocalDateTime with UTC offset\n+   *\n+   * @param epochMillis milliseconds from epoch\n+   * @return LocalDateTime object with UTC offset\n+   */\n+  public static LocalDateTime getLocalDateTimeFromEpochMilli(long epochMillis) {\n \n Review comment:\n   rather than duplicate these lines in vector and holder reader classes, I just put them here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:17:14.726+0000",
                    "updated": "2018-11-15T00:17:14.726+0000",
                    "started": "2018-11-15T00:17:14.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166208",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233671714\n \n \n\n ##########\n File path: java/vector/src/main/java/org/joda/time/LocalDateTimes.java\n ##########\n @@ -1,29 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.joda.time;\n-\n-/**\n- * Workaround to access package protected fields in JODA\n- */\n-public class LocalDateTimes {\n-\n-  public static long getLocalMillis(LocalDateTime localDateTime) {\n-    return localDateTime.getLocalMillis();\n \n Review comment:\n   It's better now to use LocalDateTime `toInstant(UTC).toEpochMillis` now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:18:17.099+0000",
                    "updated": "2018-11-15T00:18:17.099+0000",
                    "started": "2018-11-15T00:18:17.095+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166211",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233671971\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/complex/writer/TestComplexWriter.java\n ##########\n @@ -801,7 +801,7 @@ public void timeStampMicroWriters() throws Exception {\n   public void timeStampNanoWriters() throws Exception {\n     // test values\n     final long expectedNanos = 981173106123456789L;\n-    final LocalDateTime expectedNanoDateTime = new LocalDateTime(2001, 2, 3, 4, 5, 6, 123);\n+    final LocalDateTime expectedNanoDateTime = LocalDateTime.of(2001, 2, 3, 4, 5, 6, 123456789);\n \n Review comment:\n   I don't think this was quite right before, there were missing nanoseconds in LocalDateTime. Maybe they were being truncated in the result?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:19:42.310+0000",
                    "updated": "2018-11-15T00:19:42.310+0000",
                    "started": "2018-11-15T00:19:42.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166212",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233672176\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\n ##########\n @@ -82,18 +84,14 @@\n   protected static final int COUNT = 10;\n   protected BufferAllocator allocator;\n \n-  private DateTimeZone defaultTimezone = DateTimeZone.getDefault();\n-\n   @Before\n   public void init() {\n-    DateTimeZone.setDefault(DateTimeZone.forOffsetHours(2));\n \n Review comment:\n   I don't think this is necessary, better to set the timezone when needed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:20:51.296+0000",
                    "updated": "2018-11-15T00:20:51.296+0000",
                    "started": "2018-11-15T00:20:51.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166213",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233672303\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\n ##########\n @@ -199,20 +197,27 @@ protected void writeDateTimeData(int count, StructVector parent) {\n     TimeMilliWriter timeWriter = rootWriter.timeMilli(\"time\");\n     TimeStampMilliWriter timeStampMilliWriter = rootWriter.timeStampMilli(\"timestamp-milli\");\n     TimeStampMilliTZWriter timeStampMilliTZWriter = rootWriter.timeStampMilliTZ(\"timestamp-milliTZ\", \"Europe/Paris\");\n+    TimeStampNanoWriter timeStampNanoWriter = rootWriter.timeStampNano(\"timestamp-nano\");\n     for (int i = 0; i < count; i++) {\n       LocalDateTime dt = makeDateTimeFromCount(i);\n       // Number of days in milliseconds since epoch, stored as 64-bit integer, only date part is used\n       dateWriter.setPosition(i);\n-      long dateLong = DateUtility.toMillis(dt.minusMillis(dt.getMillisOfDay()));\n+      long dateLong = dt.toLocalDate().atStartOfDay().toInstant(ZoneOffset.UTC).toEpochMilli();\n       dateWriter.writeDateMilli(dateLong);\n       // Time is a value in milliseconds since midnight, stored as 32-bit integer\n       timeWriter.setPosition(i);\n-      timeWriter.writeTimeMilli(dt.getMillisOfDay());\n-      // Timestamp is milliseconds since the epoch, stored as 64-bit integer\n+      int milliOfDay = (int) java.util.concurrent.TimeUnit.NANOSECONDS.toMillis(dt.toLocalTime().toNanoOfDay());\n+      timeWriter.writeTimeMilli(milliOfDay);\n+      // Timestamp as milliseconds since the epoch, stored as 64-bit integer\n       timeStampMilliWriter.setPosition(i);\n-      timeStampMilliWriter.writeTimeStampMilli(DateUtility.toMillis(dt));\n+      timeStampMilliWriter.writeTimeStampMilli(dt.toInstant(ZoneOffset.UTC).toEpochMilli());\n+      // Timestamp as milliseconds since epoch with timezone\n       timeStampMilliTZWriter.setPosition(i);\n-      timeStampMilliTZWriter.writeTimeStampMilliTZ(DateUtility.toMillis(dt));\n+      timeStampMilliTZWriter.writeTimeStampMilliTZ(dt.atZone(ZoneId.of(\"Europe/Paris\")).toInstant().toEpochMilli());\n+      // Timestamp as nanoseconds since epoch\n+      timeStampNanoWriter.setPosition(i);\n+      long tsNanos = dt.toInstant(ZoneOffset.UTC).toEpochMilli() * 1_000_000 + i;  // need to add back in nano val\n+      timeStampNanoWriter.writeTimeStampNano(tsNanos);\n \n Review comment:\n   Added a test for timestamp with nanos, since it can be used in LocalDateTime now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:21:35.648+0000",
                    "updated": "2018-11-15T00:21:35.648+0000",
                    "started": "2018-11-15T00:21:35.647+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166214",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#issuecomment-438875568\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=h1) Report\n   > Merging [#2966](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/df54da211448b5202aa08ed2b245eb78cfd1e50c?src=pr&el=desc) will **increase** coverage by `0.94%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2966/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #2966      +/-   ##\n   =========================================\n   + Coverage   86.45%   87.4%   +0.94%     \n   =========================================\n     Files         490     422      -68     \n     Lines       68911   63738    -5173     \n   =========================================\n   - Hits        59579   55708    -3871     \n   + Misses       9246    8030    -1216     \n   + Partials       86       0      -86\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | ... and [59 more](https://codecov.io/gh/apache/arrow/pull/2966/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=footer). Last update [df54da2...bd3c4c6](https://codecov.io/gh/apache/arrow/pull/2966?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T00:56:41.087+0000",
                    "updated": "2018-11-15T00:56:41.087+0000",
                    "started": "2018-11-15T00:56:41.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166226",
                    "issueId": "13132453"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/worklog/166455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "elahrvivaz commented on a change in pull request #2966: [WIP] ARROW-2015: [Java] Replace Joda time with Java 8 time\nURL: https://github.com/apache/arrow/pull/2966#discussion_r233879987\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/DateUtility.java\n ##########\n @@ -620,10 +618,10 @@\n     }\n   }\n \n-  public static final DateTimeFormatter formatDate = DateTimeFormat.forPattern(\"yyyy-MM-dd\");\n-  public static final DateTimeFormatter formatTimeStampMilli = DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSS\");\n-  public static final DateTimeFormatter formatTimeStampTZ = DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSS ZZZ\");\n-  public static final DateTimeFormatter formatTime = DateTimeFormat.forPattern(\"HH:mm:ss.SSS\");\n+  public static final DateTimeFormatter formatDate = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n \n Review comment:\n   Looks like it will probably not affect you here, but there are some subtle differences between joda time format patterns and java time format patterns. The main one that has caused me trouble is the meaning of `Y` is different between the two.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T15:09:04.160+0000",
                    "updated": "2018-11-15T15:09:04.160+0000",
                    "started": "2018-11-15T15:09:04.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166455",
                    "issueId": "13132453"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 30000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6399a72e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6570f11[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@169a1674[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@288bbc31[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2be65b92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@305d607f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76b2e9b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3adb965[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a8e4849[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@418b8dff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20952321[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4e9dc0c7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 08 22:30:49 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-08T22:30:49.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2015/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2018-01-20T18:12:45.000+0000",
        "updated": "2019-03-08T22:31:22.000+0000",
        "timeoriginalestimate": null,
        "description": "From Java SE 8 onwards, users are asked to migrate to {{java.time}} (JSR-310) - a core part of the JDK which replaces Joda time. \r\n\r\nArrow should move to use Java time APIs.\r\n\r\nOriginal issue created on github https://github.com/apache/arrow/issues/1132\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Use Java Time and Date APIs instead of JodaTime",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16335259",
                    "id": "16335259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dgunning",
                        "name": "dgunning",
                        "key": "dgunning",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dgunning&avatarId=34330",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dgunning&avatarId=34330",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dgunning&avatarId=34330",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dgunning&avatarId=34330"
                        },
                        "displayName": "Dwight Gunning",
                        "active": true,
                        "timeZone": "America/Toronto"
                    },
                    "body": "This requires Arrow Java to use compile against Java 8 - currently it compiles against Java 7",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dgunning",
                        "name": "dgunning",
                        "key": "dgunning",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dgunning&avatarId=34330",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dgunning&avatarId=34330",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dgunning&avatarId=34330",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dgunning&avatarId=34330"
                        },
                        "displayName": "Dwight Gunning",
                        "active": true,
                        "timeZone": "America/Toronto"
                    },
                    "created": "2018-01-23T01:26:31.158+0000",
                    "updated": "2018-01-23T01:26:31.158+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16335513",
                    "id": "16335513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Dropping Java 7 support is a good topic that we should discuss in the next Arrow hangout (tomorrow at 17:00 UTC) as it has some wider implications. Seeing that some other projects recently made the same step, we could also probably do this (but be aware that I'm not Java dev currently, I most care about the C++/Python parts of Arrow, so others will have a stronger opinion) . Feel free to join in tomorrow at 1700 UTC:\u00a0\u00a0https://meet.google.com/vtm-teks-phx",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-01-23T08:45:30.873+0000",
                    "updated": "2018-01-23T08:45:30.873+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16497699",
                    "id": "16497699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I would like to take this up if possible.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-01T08:04:01.444+0000",
                    "updated": "2018-06-01T08:04:01.444+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16497944",
                    "id": "16497944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "[~abipc] Cool! I assigned it to you. Feel free to reach out on the mailing list if you need help.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-06-01T12:49:14.082+0000",
                    "updated": "2018-06-01T12:49:14.082+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16497965",
                    "id": "16497965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~xhochy] Thanks will do!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-01T13:09:49.156+0000",
                    "updated": "2018-06-01T13:09:49.156+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16522997",
                    "id": "16522997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aravind.yarram",
                        "name": "aravind.yarram",
                        "key": "aravind.yarram",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aravind.yarram&avatarId=36030",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aravind.yarram&avatarId=36030",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aravind.yarram&avatarId=36030",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aravind.yarram&avatarId=36030"
                        },
                        "displayName": "Aravind R Yarram",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~xhochy]\u00a0I can work on this while i am setting up my python dev env",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aravind.yarram",
                        "name": "aravind.yarram",
                        "key": "aravind.yarram",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aravind.yarram&avatarId=36030",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aravind.yarram&avatarId=36030",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aravind.yarram&avatarId=36030",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aravind.yarram&avatarId=36030"
                        },
                        "displayName": "Aravind R Yarram",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-26T00:37:40.818+0000",
                    "updated": "2018-06-26T00:37:40.818+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16523047",
                    "id": "16523047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~aravind.yarram] have done 90% of the changes.\u00a0Stuck at a few places. Do you mind looking at the changes and helping/suggesting around the changes I am stuck with.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-26T01:40:38.554+0000",
                    "updated": "2018-06-26T01:40:38.554+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16523191",
                    "id": "16523191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This should probably be discussed some more as downstream consumers, e.g. Dremio, will be impacted",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-26T05:05:26.558+0000",
                    "updated": "2018-06-26T05:05:26.558+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16523858",
                    "id": "16523858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aravind.yarram",
                        "name": "aravind.yarram",
                        "key": "aravind.yarram",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aravind.yarram&avatarId=36030",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aravind.yarram&avatarId=36030",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aravind.yarram&avatarId=36030",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aravind.yarram&avatarId=36030"
                        },
                        "displayName": "Aravind R Yarram",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~abipc] I will try to help. Where are your changes?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aravind.yarram",
                        "name": "aravind.yarram",
                        "key": "aravind.yarram",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aravind.yarram&avatarId=36030",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aravind.yarram&avatarId=36030",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aravind.yarram&avatarId=36030",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aravind.yarram&avatarId=36030"
                        },
                        "displayName": "Aravind R Yarram",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-26T15:22:38.823+0000",
                    "updated": "2018-06-26T15:22:38.823+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16523974",
                    "id": "16523974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "These are my changes (Work In Progress) -\u00a0\r\n\r\nPull Request -\u00a0https://github.com/apache/arrow/pull/2171\r\n\r\nI am stuck\u00a0at a couple of places.\u00a0\r\n\r\n[~wesmckinn] Anything that I need to\u00a0take care of\u00a0specifically with your concern.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abipc",
                        "name": "abipc",
                        "key": "abipc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "abipc",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-26T16:54:15.943+0000",
                    "updated": "2018-06-26T16:54:33.119+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16761453",
                    "id": "16761453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Can we rekindle this discussion on the mailing list?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-02-06T04:19:50.013+0000",
                    "updated": "2019-02-06T04:19:50.013+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16787368",
                    "id": "16787368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Where do we stand on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-03-08T00:35:16.131+0000",
                    "updated": "2019-03-08T00:35:16.131+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16788232",
                    "id": "16788232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "The changes have been approved by the Dremio folks and I just rebased. I'll merge after the tests pass.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-03-08T19:31:07.539+0000",
                    "updated": "2019-03-08T19:31:07.539+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132453/comment/16788353",
                    "id": "16788353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 2966\n[https://github.com/apache/arrow/pull/2966]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-03-08T22:30:49.736+0000",
                    "updated": "2019-03-08T22:30:49.736+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|i3p59j:",
        "customfield_12314139": null
    }
}