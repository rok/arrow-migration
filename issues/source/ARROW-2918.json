{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13174777",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174777",
    "key": "ARROW-2918",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2918/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174777/worklog/127838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy opened a new pull request #2327: ARROW-2918: [C++]\u00a0Improve formatting of Struct pretty prints\nURL: https://github.com/apache/arrow/pull/2327\n \n \n   cc @kszucs \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-26T16:30:34.045+0000",
                    "updated": "2018-07-26T16:30:34.045+0000",
                    "started": "2018-07-26T16:30:34.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "127838",
                    "issueId": "13174777"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174777/worklog/127927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2327: ARROW-2918: [C++]\u00a0Improve formatting of Struct pretty prints\nURL: https://github.com/apache/arrow/pull/2327#issuecomment-408248046\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=h1) Report\n   > Merging [#2327](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/8e6af2948f45af4c65a1aea652cd9806c377d8e7?src=pr&el=desc) will **increase** coverage by `2.26%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2327/graphs/tree.svg?token=LpTCFbqVT1&src=pr&height=150&width=650)](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2327      +/-   ##\n   ==========================================\n   + Coverage   84.57%   86.83%   +2.26%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       45064    42337    -2727     \n   ==========================================\n   - Hits        38114    36765    -1349     \n   + Misses       6921     5572    -1349     \n   + Partials       29        0      -29\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/pretty\\_print.cc](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9wcmV0dHlfcHJpbnQuY2M=) | `90.34% <100%> (+0.03%)` | :arrow_up: |\n   | [cpp/src/arrow/pretty\\_print-test.cc](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9wcmV0dHlfcHJpbnQtdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <0%> (-0.55%)` | :arrow_down: |\n   | [go/arrow/type\\_traits\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfbnVtZXJpYy5nZW4uZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | [rust/src/builder.rs](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVpbGRlci5ycw==) | | |\n   | [go/arrow/array/boolean.go](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbi5nbw==) | | |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | | |\n   | [rust/src/list.rs](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdC5ycw==) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/2327/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=footer). Last update [8e6af29...22b9a31](https://codecov.io/gh/apache/arrow/pull/2327?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-26T21:59:25.776+0000",
                    "updated": "2018-07-26T21:59:25.776+0000",
                    "started": "2018-07-26T21:59:25.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "127927",
                    "issueId": "13174777"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174777/worklog/128031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2327: ARROW-2918: [C++]\u00a0Improve formatting of Struct pretty prints\nURL: https://github.com/apache/arrow/pull/2327\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/test/test-orc-file-reader.rb b/c_glib/test/test-orc-file-reader.rb\nindex 714ee5ac5c..5f65520eec 100644\n--- a/c_glib/test/test-orc-file-reader.rb\n+++ b/c_glib/test/test-orc-file-reader.rb\n@@ -79,29 +79,28 @@ def test_field_indexes\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-STRUCT.chomp\n-\n--- is_valid:\n-all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n-\n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+-- is_valid: all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>>\n+  [\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         1,\n         2\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"bye\",\n         \"sigh\"\n       ],\n-\n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         1,\n         2\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"bye\",\n         \"sigh\"\n       ]\n@@ -114,26 +113,26 @@ def test_field_indexes\n                        [\n                          <<-LIST.chomp\n [\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: int32 values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n       3,\n       4\n     ]\n-  -- child 1 type: string values:     [\n+  -- child 1 type: string\n+    [\n       \"good\",\n       \"bad\"\n     ],\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: int32 values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n       100000000,\n       -100000,\n       1234\n     ]\n-  -- child 1 type: string values:     [\n+  -- child 1 type: string\n+    [\n       \"cat\",\n       \"in\",\n       \"hat\"\n@@ -149,30 +148,30 @@ def test_field_indexes\n                        [\n                          <<-MAP.chomp\n [\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: string values:     []\n-  -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       []\n-    -- child 1 type: string values:       [],\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: string values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: string\n+    []\n+  -- child 1 type: struct<int1: int32, string1: string>\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      []\n+    -- child 1 type: string\n+      [],\n+  -- is_valid: all not null\n+  -- child 0 type: string\n+    [\n       \"chani\",\n       \"mauddib\"\n     ]\n-  -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+  -- child 1 type: struct<int1: int32, string1: string>\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         5,\n         1\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"chani\",\n         \"mauddib\"\n       ]\n@@ -231,29 +230,28 @@ def test_field_indexes\n                        \"struct<list: \" +\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        <<-STRUCT.chomp\n-\n--- is_valid:\n-all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n-\n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+-- is_valid: all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>>\n+  [\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         1,\n         2\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"bye\",\n         \"sigh\"\n       ],\n-\n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         1,\n         2\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"bye\",\n         \"sigh\"\n       ]\n@@ -264,26 +262,26 @@ def test_field_indexes\n                        \"list: list<item: struct<int1: int32, string1: string>>\",\n                        <<-LIST.chomp\n [\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: int32 values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n       3,\n       4\n     ]\n-  -- child 1 type: string values:     [\n+  -- child 1 type: string\n+    [\n       \"good\",\n       \"bad\"\n     ],\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: int32 values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n       100000000,\n       -100000,\n       1234\n     ]\n-  -- child 1 type: string values:     [\n+  -- child 1 type: string\n+    [\n       \"cat\",\n       \"in\",\n       \"hat\"\n@@ -297,30 +295,30 @@ def test_field_indexes\n                        \"struct<int1: int32, string1: string>>>\",\n                        <<-MAP.chomp\n [\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: string values:     []\n-  -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       []\n-    -- child 1 type: string values:       [],\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: string values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: string\n+    []\n+  -- child 1 type: struct<int1: int32, string1: string>\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      []\n+    -- child 1 type: string\n+      [],\n+  -- is_valid: all not null\n+  -- child 0 type: string\n+    [\n       \"chani\",\n       \"mauddib\"\n     ]\n-  -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+  -- child 1 type: struct<int1: int32, string1: string>\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         5,\n         1\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"chani\",\n         \"mauddib\"\n       ]\ndiff --git a/cpp/src/arrow/pretty_print-test.cc b/cpp/src/arrow/pretty_print-test.cc\nindex b7fef06c7d..9724b8e090 100644\n--- a/cpp/src/arrow/pretty_print-test.cc\n+++ b/cpp/src/arrow/pretty_print-test.cc\n@@ -85,32 +85,161 @@ TEST_F(TestPrettyPrint, PrimitiveType) {\n   std::vector<bool> is_valid = {true, true, false, true, false};\n \n   std::vector<int32_t> values = {0, 1, 2, 3, 4};\n-  static const char* expected = \"[\\n  0,\\n  1,\\n  null,\\n  3,\\n  null\\n]\";\n+  static const char* expected = R\"expected([\n+  0,\n+  1,\n+  null,\n+  3,\n+  null\n+])expected\";\n   CheckPrimitive<Int32Type, int32_t>({0, 10}, is_valid, values, expected);\n \n-  static const char* expected_na = \"[\\n  0,\\n  1,\\n  NA,\\n  3,\\n  NA\\n]\";\n+  static const char* expected_na = R\"expected([\n+  0,\n+  1,\n+  NA,\n+  3,\n+  NA\n+])expected\";\n   CheckPrimitive<Int32Type, int32_t>({0, 10, 2, \"NA\"}, is_valid, values, expected_na,\n                                      false);\n \n-  static const char* ex_in2 = \"  [\\n    0,\\n    1,\\n    null,\\n    3,\\n    null\\n  ]\";\n+  static const char* ex_in2 = R\"expected(  [\n+    0,\n+    1,\n+    null,\n+    3,\n+    null\n+  ])expected\";\n   CheckPrimitive<Int32Type, int32_t>({2, 10}, is_valid, values, ex_in2);\n-  static const char* ex_in2_w2 = \"  [\\n    0,\\n    1,\\n    ...\\n    3,\\n    null\\n  ]\";\n+  static const char* ex_in2_w2 = R\"expected(  [\n+    0,\n+    1,\n+    ...\n+    3,\n+    null\n+  ])expected\";\n   CheckPrimitive<Int32Type, int32_t>({2, 2}, is_valid, values, ex_in2_w2);\n \n   std::vector<double> values2 = {0., 1., 2., 3., 4.};\n-  static const char* ex2 = \"[\\n  0,\\n  1,\\n  null,\\n  3,\\n  null\\n]\";\n+  static const char* ex2 = R\"expected([\n+  0,\n+  1,\n+  null,\n+  3,\n+  null\n+])expected\";\n   CheckPrimitive<DoubleType, double>({0, 10}, is_valid, values2, ex2);\n-  static const char* ex2_in2 = \"  [\\n    0,\\n    1,\\n    null,\\n    3,\\n    null\\n  ]\";\n+  static const char* ex2_in2 = R\"expected(  [\n+    0,\n+    1,\n+    null,\n+    3,\n+    null\n+  ])expected\";\n   CheckPrimitive<DoubleType, double>({2, 10}, is_valid, values2, ex2_in2);\n \n   std::vector<std::string> values3 = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n-  static const char* ex3 = \"[\\n  \\\"foo\\\",\\n  \\\"bar\\\",\\n  null,\\n  \\\"baz\\\",\\n  null\\n]\";\n+  static const char* ex3 = R\"expected([\n+  \"foo\",\n+  \"bar\",\n+  null,\n+  \"baz\",\n+  null\n+])expected\";\n   CheckPrimitive<StringType, std::string>({0, 10}, is_valid, values3, ex3);\n-  static const char* ex3_in2 =\n-      \"  [\\n    \\\"foo\\\",\\n    \\\"bar\\\",\\n    null,\\n    \\\"baz\\\",\\n    null\\n  ]\";\n+  static const char* ex3_in2 = R\"expected(  [\n+    \"foo\",\n+    \"bar\",\n+    null,\n+    \"baz\",\n+    null\n+  ])expected\";\n   CheckPrimitive<StringType, std::string>({2, 10}, is_valid, values3, ex3_in2);\n }\n \n+TEST_F(TestPrettyPrint, StructTypeBasic) {\n+  auto simple_1 = field(\"one\", int32());\n+  auto simple_2 = field(\"two\", int32());\n+  auto simple_struct = struct_({simple_1, simple_2});\n+\n+  auto int_builder_1 = std::make_shared<Int32Builder>();\n+  auto int_builder_2 = std::make_shared<Int32Builder>();\n+  StructBuilder builder(simple_struct, default_memory_pool(),\n+                        {int_builder_1, int_builder_2});\n+  ASSERT_OK(builder.Append());\n+  ASSERT_OK(int_builder_1->Append(11));\n+  ASSERT_OK(int_builder_2->Append(22));\n+\n+  std::shared_ptr<Array> array;\n+  ASSERT_OK(builder.Finish(&array));\n+\n+  static const char* ex = R\"expected(-- is_valid: all not null\n+-- child 0 type: int32\n+  [\n+    11\n+  ]\n+-- child 1 type: int32\n+  [\n+    22\n+  ])expected\";\n+  CheckStream(*array, {0, 10}, ex);\n+\n+  static const char* ex_2 = R\"expected(  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n+      11\n+    ]\n+  -- child 1 type: int32\n+    [\n+      22\n+    ])expected\";\n+  CheckStream(*array, {2, 10}, ex_2);\n+}\n+\n+TEST_F(TestPrettyPrint, StructTypeAdvanced) {\n+  auto simple_1 = field(\"one\", int32());\n+  auto simple_2 = field(\"two\", int32());\n+  auto simple_struct = struct_({simple_1, simple_2});\n+\n+  auto int_builder_1 = std::make_shared<Int32Builder>();\n+  auto int_builder_2 = std::make_shared<Int32Builder>();\n+  StructBuilder builder(simple_struct, default_memory_pool(),\n+                        {int_builder_1, int_builder_2});\n+  ASSERT_OK(builder.Append());\n+  ASSERT_OK(int_builder_1->Append(11));\n+  ASSERT_OK(int_builder_2->Append(22));\n+  ASSERT_OK(builder.AppendNull());\n+  ASSERT_OK(int_builder_1->AppendNull());\n+  ASSERT_OK(int_builder_2->AppendNull());\n+  ASSERT_OK(builder.Append());\n+  ASSERT_OK(int_builder_1->AppendNull());\n+  ASSERT_OK(int_builder_2->Append(33));\n+\n+  std::shared_ptr<Array> array;\n+  ASSERT_OK(builder.Finish(&array));\n+\n+  static const char* ex = R\"expected(-- is_valid:\n+  [\n+    true,\n+    false,\n+    true\n+  ]\n+-- child 0 type: int32\n+  [\n+    11,\n+    null,\n+    null\n+  ]\n+-- child 1 type: int32\n+  [\n+    22,\n+    null,\n+    33\n+  ])expected\";\n+  CheckStream(*array, {0, 10}, ex);\n+}\n+\n TEST_F(TestPrettyPrint, BinaryType) {\n   std::vector<bool> is_valid = {true, true, false, true, false};\n   std::vector<std::string> values = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n@@ -140,17 +269,50 @@ TEST_F(TestPrettyPrint, ListType) {\n \n   std::shared_ptr<Array> array;\n   ASSERT_OK(list_builder.Finish(&array));\n-  static const char* ex =\n-      \"[\\n  [\\n    null\\n  ],\\n  [],\\n  null,\\n  [\\n    4,\\n    6,\\n    7\\n  ],\\n  [\\n   \"\n-      \" \"\n-      \"2,\\n    3\\n  ]\\n]\";\n+  static const char* ex = R\"expected([\n+  [\n+    null\n+  ],\n+  [],\n+  null,\n+  [\n+    4,\n+    6,\n+    7\n+  ],\n+  [\n+    2,\n+    3\n+  ]\n+])expected\";\n   CheckArray(*array, {0, 10}, ex);\n-  static const char* ex_2 =\n-      \"  [\\n    [\\n      null\\n    ],\\n    [],\\n    null,\\n    [\\n      4,\\n      6,\\n   \"\n-      \"   \"\n-      \"7\\n    ],\\n    [\\n      2,\\n      3\\n    ]\\n  ]\";\n+  static const char* ex_2 = R\"expected(  [\n+    [\n+      null\n+    ],\n+    [],\n+    null,\n+    [\n+      4,\n+      6,\n+      7\n+    ],\n+    [\n+      2,\n+      3\n+    ]\n+  ])expected\";\n   CheckArray(*array, {2, 10}, ex_2);\n-  static const char* ex_3 = \"[\\n  [\\n    null\\n  ],\\n  ...\\n  [\\n    2,\\n    3\\n  ]\\n]\";\n+  static const char* ex_3 = R\"expected([\n+  [\n+    null\n+  ],\n+  ...\n+  [\n+    2,\n+    3\n+  ]\n+])expected\";\n   CheckStream(*array, {0, 1}, ex_3);\n }\n \ndiff --git a/cpp/src/arrow/pretty_print.cc b/cpp/src/arrow/pretty_print.cc\nindex b8c3f7d359..141b0a447c 100644\n--- a/cpp/src/arrow/pretty_print.cc\n+++ b/cpp/src/arrow/pretty_print.cc\n@@ -251,7 +251,7 @@ class ArrayPrinter : public PrettyPrinter {\n     for (size_t i = 0; i < fields.size(); ++i) {\n       Newline();\n       std::stringstream ss;\n-      ss << \"-- child \" << i << \" type: \" << fields[i]->type()->ToString() << \" values: \";\n+      ss << \"-- child \" << i << \" type: \" << fields[i]->type()->ToString() << \"\\n\";\n       Write(ss.str());\n \n       std::shared_ptr<Array> field = fields[i];\n@@ -321,15 +321,16 @@ class ArrayPrinter : public PrettyPrinter {\n };\n \n Status ArrayPrinter::WriteValidityBitmap(const Array& array) {\n-  Newline();\n-  Write(\"-- is_valid:\\n\");\n+  Indent();\n+  Write(\"-- is_valid:\");\n \n   if (array.null_count() > 0) {\n+    Newline();\n     BooleanArray is_valid(array.length(), array.null_bitmap(), nullptr, 0,\n                           array.offset());\n     return PrettyPrint(is_valid, indent_ + indent_size_, sink_);\n   } else {\n-    Write(\"all not null\");\n+    Write(\" all not null\");\n     return Status::OK();\n   }\n }\ndiff --git a/ruby/red-arrow/test/test-orc.rb b/ruby/red-arrow/test/test-orc.rb\nindex 9f31449a62..e534e075c1 100644\n--- a/ruby/red-arrow/test/test-orc.rb\n+++ b/ruby/red-arrow/test/test-orc.rb\n@@ -55,29 +55,28 @@ def pp_values(values)\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-STRUCT.chomp\n-\n--- is_valid:\n-all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n-\n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+-- is_valid: all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>>\n+  [\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         1,\n         2\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"bye\",\n         \"sigh\"\n       ],\n-\n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         1,\n         2\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"bye\",\n         \"sigh\"\n       ]\n@@ -90,26 +89,26 @@ def pp_values(values)\n                        [\n                          <<-LIST.chomp\n [\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: int32 values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n       3,\n       4\n     ]\n-  -- child 1 type: string values:     [\n+  -- child 1 type: string\n+    [\n       \"good\",\n       \"bad\"\n     ],\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: int32 values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: int32\n+    [\n       100000000,\n       -100000,\n       1234\n     ]\n-  -- child 1 type: string values:     [\n+  -- child 1 type: string\n+    [\n       \"cat\",\n       \"in\",\n       \"hat\"\n@@ -125,30 +124,30 @@ def pp_values(values)\n                        [\n                          <<-MAP.chomp\n [\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: string values:     []\n-  -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       []\n-    -- child 1 type: string values:       [],\n-\n-  -- is_valid:\n-all not null\n-  -- child 0 type: string values:     [\n+  -- is_valid: all not null\n+  -- child 0 type: string\n+    []\n+  -- child 1 type: struct<int1: int32, string1: string>\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      []\n+    -- child 1 type: string\n+      [],\n+  -- is_valid: all not null\n+  -- child 0 type: string\n+    [\n       \"chani\",\n       \"mauddib\"\n     ]\n-  -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid:\n-all not null\n-    -- child 0 type: int32 values:       [\n+  -- child 1 type: struct<int1: int32, string1: string>\n+    -- is_valid: all not null\n+    -- child 0 type: int32\n+      [\n         5,\n         1\n       ]\n-    -- child 1 type: string values:       [\n+    -- child 1 type: string\n+      [\n         \"chani\",\n         \"mauddib\"\n       ]\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-27T04:26:48.481+0000",
                    "updated": "2018-07-27T04:26:48.481+0000",
                    "started": "2018-07-27T04:26:48.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "128031",
                    "issueId": "13174777"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@691914f7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3884a9c9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65c8735c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@781f54cd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@692d0c4d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@16499b64[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@303d4862[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3206db94[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33c8f6fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6980c95b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33a4e251[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@377a45ca[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 27 04:26:46 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-27T04:26:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2918/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-07-26T09:40:59.000+0000",
        "updated": "2018-07-27T04:26:48.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++]\u00a0Improve formatting of Struct pretty prints",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174777/comment/16559229",
                    "id": "16559229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2327\n[https://github.com/apache/arrow/pull/2327]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-27T04:26:46.944+0000",
                    "updated": "2018-07-27T04:26:46.944+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wc9j:",
        "customfield_12314139": null
    }
}