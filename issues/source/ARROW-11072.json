{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13348461",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461",
    "key": "ARROW-11072",
    "fields": {
        "parent": {
            "id": "13346162",
            "key": "ARROW-10926",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13346162",
            "fields": {
                "summary": "[Rust] Add parquet reader / writer for decimal types",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=florian.mueller",
            "name": "florian.mueller",
            "key": "florian.mueller",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Florian M\u00fcller",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=florian.mueller",
            "name": "florian.mueller",
            "key": "florian.mueller",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Florian M\u00fcller",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=florian.mueller",
            "name": "florian.mueller",
            "key": "florian.mueller",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Florian M\u00fcller",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 20400,
            "total": 20400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 20400,
            "total": 20400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11072/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 34,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#issuecomment-752645838\n\n\n   https://issues.apache.org/jira/browse/ARROW-11072\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T14:45:02.510+0000",
                    "updated": "2020-12-30T14:45:02.510+0000",
                    "started": "2020-12-30T14:45:02.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529520",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#issuecomment-752563024\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T15:50:24.095+0000",
                    "updated": "2020-12-30T15:50:24.095+0000",
                    "started": "2020-12-30T15:50:24.095+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529532",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529622",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550321322\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,22 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> Result<DataType> {\n+        let (precision, scale) = match self.schema {\n+            Type::PrimitiveType {\n+                ref precision,\n+                ref scale,\n+                ..\n+            } => (*precision, *scale),\n+            _ => {\n+                return Err(ArrowError(\n\nReview comment:\n       I think you can use assertion here since this is only supposed to be called on primitive types. And it's more concise to do something like this:\r\n   \r\n   ```rust\r\n           match self.schema {\r\n               Type::PrimitiveType {\r\n                   ref precision,\r\n                   ref scale,\r\n                   ..\r\n               } => Ok(DataType::Decimal(*precision as usize, *scale as usize)),\r\n               _ => Err(ArrowError(\r\n                   \"Expected a physical type, not a group type\".to_string(),\r\n               )),\r\n           }\r\n   ```\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -532,6 +533,7 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n         (Int64, Int32) => cast_numeric_arrays::<Int64Type, Int32Type>(array),\n         (Int64, Float32) => cast_numeric_arrays::<Int64Type, Float32Type>(array),\n         (Int64, Float64) => cast_numeric_arrays::<Int64Type, Float64Type>(array),\n+        (Int64, Decimal(p, s)) => int64_to_decimal_cast(array, *p, *s),\n\nReview comment:\n       hmm... is this related to the parquet-side change?\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -591,6 +591,7 @@ impl ParquetTypeConverter<'_> {\n             LogicalType::INT_32 => Ok(DataType::Int32),\n             LogicalType::DATE => Ok(DataType::Date32(DateUnit::Day)),\n             LogicalType::TIME_MILLIS => Ok(DataType::Time32(TimeUnit::Millisecond)),\n+            LogicalType::DECIMAL => self.to_decimal(),\n\nReview comment:\n       should this be handled somehow in the parquet/arrow reader? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T20:55:25.082+0000",
                    "updated": "2020-12-30T20:55:25.082+0000",
                    "started": "2020-12-30T20:55:25.082+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529622",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sweb commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550468948\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,22 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> Result<DataType> {\n+        let (precision, scale) = match self.schema {\n+            Type::PrimitiveType {\n+                ref precision,\n+                ref scale,\n+                ..\n+            } => (*precision, *scale),\n+            _ => {\n+                return Err(ArrowError(\n\nReview comment:\n       @sunchao thank you for your review comments! I changed this part as suggested. Do you have an example of an assertion checking for a type? The only thing I could come up with (still quite new to Rust) is something along the lines of\r\n   \r\n   ```\r\n   if let Type::PrimitiveType {ref precision, ref scale, .. } = self.schema {\r\n     DataType::Decimal(*precision as usize, *scale as usize)\r\n   } else {\r\n     panic!(\"Expected a physical type, not a group type\")\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T12:02:56.102+0000",
                    "updated": "2020-12-31T12:02:56.102+0000",
                    "started": "2020-12-31T12:02:56.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529778",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sweb commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550468985\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -532,6 +533,7 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n         (Int64, Int32) => cast_numeric_arrays::<Int64Type, Int32Type>(array),\n         (Int64, Float32) => cast_numeric_arrays::<Int64Type, Float32Type>(array),\n         (Int64, Float64) => cast_numeric_arrays::<Int64Type, Float64Type>(array),\n+        (Int64, Decimal(p, s)) => int64_to_decimal_cast(array, *p, *s),\n\nReview comment:\n       I think you stumbled upon the issue I tried to explain in the PR description - I am now sure that it was a bad idea to use casts in this way :) \r\n   \r\n   I removed the cast operations and replaced it with some logic in `PrimitiveArrayReader::next_batch`.\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -591,6 +591,7 @@ impl ParquetTypeConverter<'_> {\n             LogicalType::INT_32 => Ok(DataType::Int32),\n             LogicalType::DATE => Ok(DataType::Date32(DateUnit::Day)),\n             LogicalType::TIME_MILLIS => Ok(DataType::Time32(TimeUnit::Millisecond)),\n+            LogicalType::DECIMAL => self.to_decimal(),\n\nReview comment:\n       I am having a hard time finding the right place to construct the decimal type. My main concern with the changes I made is that Decimal is the only type that needs additional info from the schema in order to define precision and scale - all other types can be built directly from the logical type. However, if I put it in `PrimitiveArrayReader::new` I am only able to accomplish this by reimplementing parts of the ParquetTypeConverter specifically for Decimal. Do you have a suggestion how I can handle this in a better way?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T12:03:19.052+0000",
                    "updated": "2020-12-31T12:03:19.052+0000",
                    "started": "2020-12-31T12:03:19.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529779",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#issuecomment-752956304\n\n\n   The full set of Rust CI tests did not run on this PR :(\r\n   \r\n   Can you please rebase this PR against [apache/master](https://github.com/apache/arrow) to pick up the changes in https://github.com/apache/arrow/pull/9056 so that they do? \r\n   \r\n   I apologize for the inconvenience. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T13:17:41.079+0000",
                    "updated": "2020-12-31T13:17:41.079+0000",
                    "started": "2020-12-31T13:17:41.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529801",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550576451\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,22 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> Result<DataType> {\n+        let (precision, scale) = match self.schema {\n+            Type::PrimitiveType {\n+                ref precision,\n+                ref scale,\n+                ..\n+            } => (*precision, *scale),\n+            _ => {\n+                return Err(ArrowError(\n\nReview comment:\n       I'm thinking something like:\r\n   ```rust\r\n   assert!(self.schema.is_primitive());\r\n   if let ... {\r\n     ...\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T17:22:30.710+0000",
                    "updated": "2020-12-31T17:22:30.710+0000",
                    "started": "2020-12-31T17:22:30.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529866",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sweb commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550760559\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,22 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> Result<DataType> {\n+        let (precision, scale) = match self.schema {\n+            Type::PrimitiveType {\n+                ref precision,\n+                ref scale,\n+                ..\n+            } => (*precision, *scale),\n+            _ => {\n+                return Err(ArrowError(\n\nReview comment:\n       Thank you very much! I changed it to use an assertion. Let me know if you prefer this variant - there are other methods in `schema.rs` that follow a similar pattern and I could also change them accordingly while I am already here.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T11:45:17.206+0000",
                    "updated": "2021-01-01T11:45:17.206+0000",
                    "started": "2021-01-01T11:45:17.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529994",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/529998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#issuecomment-753307820\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=h1) Report\n   > Merging [#9047](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=desc) (6a45815) into [master](https://codecov.io/gh/apache/arrow/commit/cc0ee5efcf9f6a67bcc407a11e8553a0409275c1?el=desc) (cc0ee5e) will **increase** coverage by `0.00%`.\n   > The diff coverage is `94.44%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9047/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #9047   +/-   ##\n   =======================================\n     Coverage   82.55%   82.56%           \n   =======================================\n     Files         203      203           \n     Lines       50043    50058   +15     \n   =======================================\n   + Hits        41313    41330   +17     \n   + Misses       8730     8728    -2     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/parquet/src/arrow/array\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9047/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJheV9yZWFkZXIucnM=) | `75.46% <88.88%> (+0.12%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/schema.rs](https://codecov.io/gh/apache/arrow/pull/9047/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9zY2hlbWEucnM=) | `91.06% <88.88%> (+0.44%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9047/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `90.69% <100.00%> (+0.08%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/arrow\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9047/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJvd19yZWFkZXIucnM=) | `91.57% <100.00%> (+0.18%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=footer). Last update [cc0ee5e...6a45815](https://codecov.io/gh/apache/arrow/pull/9047?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T11:59:40.661+0000",
                    "updated": "2021-01-01T11:59:40.661+0000",
                    "started": "2021-01-01T11:59:40.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529998",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550798792\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -591,6 +591,7 @@ impl ParquetTypeConverter<'_> {\n             LogicalType::INT_32 => Ok(DataType::Int32),\n             LogicalType::DATE => Ok(DataType::Date32(DateUnit::Day)),\n             LogicalType::TIME_MILLIS => Ok(DataType::Time32(TimeUnit::Millisecond)),\n+            LogicalType::DECIMAL => self.to_decimal(),\n\nReview comment:\n       Hmm, should this be handled in `build_for_primitive_type_inner` inside `array_reader.rs`? where we construct a `ComplexObjectArrayReader` with the right converter for decimal types. I see we currently handle the case for `FIXED_LEN_BYTE_ARRAY` but not for `INT32`/`INT64`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T19:30:49.753+0000",
                    "updated": "2021-01-01T19:30:49.753+0000",
                    "started": "2021-01-01T19:30:49.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530058",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550798904\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -532,6 +533,7 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n         (Int64, Int32) => cast_numeric_arrays::<Int64Type, Int32Type>(array),\n         (Int64, Float32) => cast_numeric_arrays::<Int64Type, Float32Type>(array),\n         (Int64, Float64) => cast_numeric_arrays::<Int64Type, Float64Type>(array),\n+        (Int64, Decimal(p, s)) => int64_to_decimal_cast(array, *p, *s),\n\nReview comment:\n       Thanks. Looking good! the `else` branch of the `if let` block seems unnecessary?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T19:31:52.742+0000",
                    "updated": "2021-01-01T19:31:52.742+0000",
                    "started": "2021-01-01T19:31:52.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530059",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530060",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550798940\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,22 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> Result<DataType> {\n+        let (precision, scale) = match self.schema {\n+            Type::PrimitiveType {\n+                ref precision,\n+                ref scale,\n+                ..\n+            } => (*precision, *scale),\n+            _ => {\n+                return Err(ArrowError(\n\nReview comment:\n       Thanks. Looking good! the `else` branch in the `if let` block seems unnecessary?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T19:32:25.691+0000",
                    "updated": "2021-01-01T19:32:25.691+0000",
                    "started": "2021-01-01T19:32:25.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530060",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550799082\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -532,6 +533,7 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n         (Int64, Int32) => cast_numeric_arrays::<Int64Type, Int32Type>(array),\n         (Int64, Float32) => cast_numeric_arrays::<Int64Type, Float32Type>(array),\n         (Int64, Float64) => cast_numeric_arrays::<Int64Type, Float64Type>(array),\n+        (Int64, Decimal(p, s)) => int64_to_decimal_cast(array, *p, *s),\n\nReview comment:\n       yeah this looks a little weird - I'm thinking that instead of handling this in the compute kernel, the parquet/arrow reader should just understand the conversion from parquet's decimal type to that of arrow's and generate decimal arrow directly.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T19:34:18.661+0000",
                    "updated": "2021-01-01T19:34:18.661+0000",
                    "started": "2021-01-01T19:34:18.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530061",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550799082\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -532,6 +533,7 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n         (Int64, Int32) => cast_numeric_arrays::<Int64Type, Int32Type>(array),\n         (Int64, Float32) => cast_numeric_arrays::<Int64Type, Float32Type>(array),\n         (Int64, Float64) => cast_numeric_arrays::<Int64Type, Float64Type>(array),\n+        (Int64, Decimal(p, s)) => int64_to_decimal_cast(array, *p, *s),\n\nReview comment:\n       yeah this looks a little weird - I'm thinking that instead of handling this in the compute kernel, the parquet/arrow reader should just understand the conversion from parquet's decimal type to that of arrow's and generate decimal arrow arrays directly.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T19:34:31.603+0000",
                    "updated": "2021-01-01T19:34:31.603+0000",
                    "started": "2021-01-01T19:34:31.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530062",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550799126\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,18 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> DataType {\n+        assert!(self.schema.is_primitive());\n+        if let Type::PrimitiveType {\n+            precision, scale, ..\n+        } = self.schema\n+        {\n+            DataType::Decimal(*precision as usize, *scale as usize)\n+        } else {\n\nReview comment:\n       can we remove this branch?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T19:34:54.646+0000",
                    "updated": "2021-01-01T19:34:54.646+0000",
                    "started": "2021-01-01T19:34:54.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530063",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530078",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sweb commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550806533\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,18 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> DataType {\n+        assert!(self.schema.is_primitive());\n+        if let Type::PrimitiveType {\n+            precision, scale, ..\n+        } = self.schema\n+        {\n+            DataType::Decimal(*precision as usize, *scale as usize)\n+        } else {\n\nReview comment:\n       Sorry, I think I am not familiar enough with Rust yet. I was under the impression that I have to provide an implementation for all possible branches and I get a compiler error when I remove the else branch. Is it possible to unwrap the if part somehow?\r\n   \r\n   ```\r\n   error[E0317]: `if` may be missing an `else` clause\r\n      --> parquet/src/arrow/schema.rs:650:9\r\n       |\r\n   650 | /         if let Type::PrimitiveType {\r\n   651 | |             precision, scale, ..\r\n   652 | |         } = self.schema\r\n   653 | |         {\r\n   654 | |             DataType::Decimal(*precision as usize, *scale as usize)\r\n       | |             ------------------------------------------------------- found here\r\n   655 | |         } \r\n       | |_________^ expected `()`, found enum `arrow::datatypes::DataType`\r\n       |\r\n       = note: `if` expressions without `else` evaluate to `()`\r\n       = help: consider adding an `else` block that evaluates to the expected type\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T21:05:02.100+0000",
                    "updated": "2021-01-01T21:05:02.100+0000",
                    "started": "2021-01-01T21:05:02.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530078",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550821639\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,18 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> DataType {\n+        assert!(self.schema.is_primitive());\n+        if let Type::PrimitiveType {\n+            precision, scale, ..\n+        } = self.schema\n+        {\n+            DataType::Decimal(*precision as usize, *scale as usize)\n+        } else {\n\nReview comment:\n       oops my bad - this looks good then. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T23:55:53.219+0000",
                    "updated": "2021-01-01T23:55:53.219+0000",
                    "started": "2021-01-01T23:55:53.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530096",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530097",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550821867\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,18 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> DataType {\n+        assert!(self.schema.is_primitive());\n+        if let Type::PrimitiveType {\n+            precision, scale, ..\n+        } = self.schema\n+        {\n+            DataType::Decimal(*precision as usize, *scale as usize)\n+        } else {\n\nReview comment:\n       I think it may make sense to add `get_scale` and `get_precision` to `Type` as well, similar to other getters there, but it's just a good to have :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T23:57:56.255+0000",
                    "updated": "2021-01-01T23:57:56.255+0000",
                    "started": "2021-01-01T23:57:56.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530097",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sweb commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550877957\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -657,6 +645,18 @@ impl ParquetTypeConverter<'_> {\n         }\n     }\n \n+    fn to_decimal(&self) -> DataType {\n+        assert!(self.schema.is_primitive());\n+        if let Type::PrimitiveType {\n+            precision, scale, ..\n+        } = self.schema\n+        {\n+            DataType::Decimal(*precision as usize, *scale as usize)\n+        } else {\n\nReview comment:\n       Great point! I added both methods which cleans up `to_decimal` quite a bit.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T12:38:40.339+0000",
                    "updated": "2021-01-02T12:38:40.339+0000",
                    "started": "2021-01-02T12:38:40.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530190",
                    "issueId": "13348461"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/worklog/530191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9047:\nURL: https://github.com/apache/arrow/pull/9047#discussion_r550878051\n\n\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -103,6 +103,24 @@ impl Type {\n         }\n     }\n \n+    /// Gets precision of this primitive type.\n+    /// Note that this will panic if called on a non-primitive type.\n+    pub fn get_precision(&self) -> i32 {\n+        match *self {\n+            Type::PrimitiveType { precision, ..} => precision,\n+            _ => panic!(\"Cannot call get_precision() on non-primitive type\")\n+        }\n+    }\n+\n+    /// Gets scale of this primitive type.\n+    /// Note that this will panic if called on a non-primitive type.\n+    pub fn get_scale(&self) -> i32 {\n+        match *self {\n+            Type::PrimitiveType { scale, ..} => scale,\n+            _ => panic!(\"Cannot call get_scale() on non-primitive type\")\n\nReview comment:\n       this is much nicer (and it is now clearer what is expected) \ud83d\udc4d \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T12:40:35.458+0000",
                    "updated": "2021-01-02T12:40:35.458+0000",
                    "started": "2021-01-02T12:40:35.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530191",
                    "issueId": "13348461"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 20400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@68d16840[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a737487[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e33a961[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5f753b6c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@679ae579[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@50d14aa4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37a997e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@75a27c26[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45a3fec6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1ffd18bc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@481bd354[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2ebec53d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 20400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jan 04 20:54:02 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-04T20:54:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11072/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-12-30T11:30:21.000+0000",
        "updated": "2021-01-05T02:27:25.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 20400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Parquet] Support int32 and int64 physical types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348461/comment/17258487",
                    "id": "17258487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9047\n[https://github.com/apache/arrow/pull/9047]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-04T20:54:02.218+0000",
                    "updated": "2021-01-04T20:54:02.218+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0lxk8:",
        "customfield_12314139": null
    }
}