{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13199738",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199738",
    "key": "ARROW-3847",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3847/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199738/worklog/168150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 opened a new pull request #3007: ARROW-3847: [GLib] Remove unnecessary '\\'\nURL: https://github.com/apache/arrow/pull/3007\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T03:24:01.344+0000",
                    "updated": "2018-11-21T03:24:01.344+0000",
                    "started": "2018-11-21T03:24:01.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168150",
                    "issueId": "13199738"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199738/worklog/168156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3007: ARROW-3847: [GLib] Remove unnecessary '\\'\nURL: https://github.com/apache/arrow/pull/3007#issuecomment-440523643\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=h1) Report\n   > Merging [#3007](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7e6bf4118af3cbc78dca1b47cf8da0f14f5fb802?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3007/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3007      +/-   ##\n   ==========================================\n   - Coverage   86.65%   86.64%   -0.02%     \n   ==========================================\n     Files         491      491              \n     Lines       69513    69513              \n   ==========================================\n   - Hits        60239    60229      -10     \n   - Misses       9182     9188       +6     \n   - Partials       92       96       +4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2F2eDJfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hbWQ2NC5nbw==) | `28.57% <0%> (-14.29%)` | :arrow_down: |\n   | [go/arrow/math/math\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9tYXRoX2FtZDY0Lmdv) | `31.57% <0%> (-5.27%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `100% <0%> (+100%)` | :arrow_up: |\n   | ... and [3 more](https://codecov.io/gh/apache/arrow/pull/3007/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=footer). Last update [7e6bf41...9e07390](https://codecov.io/gh/apache/arrow/pull/3007?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T04:13:38.792+0000",
                    "updated": "2018-11-21T04:13:38.792+0000",
                    "started": "2018-11-21T04:13:38.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168156",
                    "issueId": "13199738"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199738/worklog/168174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #3007: ARROW-3847: [GLib] Remove unnecessary '\\'\nURL: https://github.com/apache/arrow/pull/3007\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/arrow-glib/basic-array.cpp b/c_glib/arrow-glib/basic-array.cpp\nindex 1fc83b52de..9a60c46b59 100644\n--- a/c_glib/arrow-glib/basic-array.cpp\n+++ b/c_glib/arrow-glib/basic-array.cpp\n@@ -639,8 +639,8 @@ garrow_array_dictionary_encode(GArrowArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowNullArray,               \\\n-              garrow_null_array,             \\\n+G_DEFINE_TYPE(GArrowNullArray,\n+              garrow_null_array,\n               GARROW_TYPE_ARRAY)\n \n static void\n@@ -669,8 +669,8 @@ garrow_null_array_new(gint64 length)\n }\n \n \n-G_DEFINE_TYPE(GArrowPrimitiveArray,             \\\n-              garrow_primitive_array,           \\\n+G_DEFINE_TYPE(GArrowPrimitiveArray,\n+              garrow_primitive_array,\n               GARROW_TYPE_ARRAY)\n \n static void\n@@ -700,8 +700,8 @@ garrow_primitive_array_get_buffer(GArrowPrimitiveArray *array)\n }\n \n \n-G_DEFINE_TYPE(GArrowBooleanArray,               \\\n-              garrow_boolean_array,             \\\n+G_DEFINE_TYPE(GArrowBooleanArray,\n+              garrow_boolean_array,\n               GARROW_TYPE_PRIMITIVE_ARRAY)\n \n static void\n@@ -782,8 +782,8 @@ garrow_boolean_array_get_values(GArrowBooleanArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowNumericArray,               \\\n-              garrow_numeric_array,             \\\n+G_DEFINE_TYPE(GArrowNumericArray,\n+              garrow_numeric_array,\n               GARROW_TYPE_PRIMITIVE_ARRAY)\n \n static void\n@@ -797,8 +797,8 @@ garrow_numeric_array_class_init(GArrowNumericArrayClass *klass)\n }\n \n \n-G_DEFINE_TYPE(GArrowInt8Array,               \\\n-              garrow_int8_array,             \\\n+G_DEFINE_TYPE(GArrowInt8Array,\n+              garrow_int8_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -870,8 +870,8 @@ garrow_int8_array_get_values(GArrowInt8Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt8Array,               \\\n-              garrow_uint8_array,             \\\n+G_DEFINE_TYPE(GArrowUInt8Array,\n+              garrow_uint8_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -943,8 +943,8 @@ garrow_uint8_array_get_values(GArrowUInt8Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowInt16Array,               \\\n-              garrow_int16_array,             \\\n+G_DEFINE_TYPE(GArrowInt16Array,\n+              garrow_int16_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1016,8 +1016,8 @@ garrow_int16_array_get_values(GArrowInt16Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt16Array,               \\\n-              garrow_uint16_array,             \\\n+G_DEFINE_TYPE(GArrowUInt16Array,\n+              garrow_uint16_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1089,8 +1089,8 @@ garrow_uint16_array_get_values(GArrowUInt16Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowInt32Array,               \\\n-              garrow_int32_array,             \\\n+G_DEFINE_TYPE(GArrowInt32Array,\n+              garrow_int32_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1162,8 +1162,8 @@ garrow_int32_array_get_values(GArrowInt32Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt32Array,               \\\n-              garrow_uint32_array,             \\\n+G_DEFINE_TYPE(GArrowUInt32Array,\n+              garrow_uint32_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1235,8 +1235,8 @@ garrow_uint32_array_get_values(GArrowUInt32Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowInt64Array,               \\\n-              garrow_int64_array,             \\\n+G_DEFINE_TYPE(GArrowInt64Array,\n+              garrow_int64_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1310,8 +1310,8 @@ garrow_int64_array_get_values(GArrowInt64Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt64Array,               \\\n-              garrow_uint64_array,             \\\n+G_DEFINE_TYPE(GArrowUInt64Array,\n+              garrow_uint64_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1385,8 +1385,8 @@ garrow_uint64_array_get_values(GArrowUInt64Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowFloatArray,               \\\n-              garrow_float_array,             \\\n+G_DEFINE_TYPE(GArrowFloatArray,\n+              garrow_float_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1458,8 +1458,8 @@ garrow_float_array_get_values(GArrowFloatArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowDoubleArray,               \\\n-              garrow_double_array,             \\\n+G_DEFINE_TYPE(GArrowDoubleArray,\n+              garrow_double_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1531,8 +1531,8 @@ garrow_double_array_get_values(GArrowDoubleArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowBinaryArray,               \\\n-              garrow_binary_array,             \\\n+G_DEFINE_TYPE(GArrowBinaryArray,\n+              garrow_binary_array,\n               GARROW_TYPE_ARRAY)\n \n static void\n@@ -1635,8 +1635,8 @@ garrow_binary_array_get_offsets_buffer(GArrowBinaryArray *array)\n }\n \n \n-G_DEFINE_TYPE(GArrowStringArray,               \\\n-              garrow_string_array,             \\\n+G_DEFINE_TYPE(GArrowStringArray,\n+              garrow_string_array,\n               GARROW_TYPE_BINARY_ARRAY)\n \n static void\n@@ -1707,8 +1707,8 @@ garrow_string_array_get_string(GArrowStringArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowDate32Array,               \\\n-              garrow_date32_array,             \\\n+G_DEFINE_TYPE(GArrowDate32Array,\n+              garrow_date32_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1784,8 +1784,8 @@ garrow_date32_array_get_values(GArrowDate32Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowDate64Array,               \\\n-              garrow_date64_array,             \\\n+G_DEFINE_TYPE(GArrowDate64Array,\n+              garrow_date64_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1863,8 +1863,8 @@ garrow_date64_array_get_values(GArrowDate64Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowTimestampArray,             \\\n-              garrow_timestamp_array,           \\\n+G_DEFINE_TYPE(GArrowTimestampArray,\n+              garrow_timestamp_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -1946,8 +1946,8 @@ garrow_timestamp_array_get_values(GArrowTimestampArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowTime32Array,               \\\n-              garrow_time32_array,             \\\n+G_DEFINE_TYPE(GArrowTime32Array,\n+              garrow_time32_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\n@@ -2027,8 +2027,8 @@ garrow_time32_array_get_values(GArrowTime32Array *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowTime64Array,               \\\n-              garrow_time64_array,             \\\n+G_DEFINE_TYPE(GArrowTime64Array,\n+              garrow_time64_array,\n               GARROW_TYPE_NUMERIC_ARRAY)\n \n static void\ndiff --git a/c_glib/arrow-glib/basic-data-type.cpp b/c_glib/arrow-glib/basic-data-type.cpp\nindex 8722499362..8099d78594 100644\n--- a/c_glib/arrow-glib/basic-data-type.cpp\n+++ b/c_glib/arrow-glib/basic-data-type.cpp\n@@ -222,8 +222,8 @@ garrow_data_type_get_id(GArrowDataType *data_type)\n }\n \n \n-G_DEFINE_ABSTRACT_TYPE(GArrowFixedWidthDataType,                 \\\n-                       garrow_fixed_width_data_type,             \\\n+G_DEFINE_ABSTRACT_TYPE(GArrowFixedWidthDataType,\n+                       garrow_fixed_width_data_type,\n                        GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -253,8 +253,8 @@ garrow_fixed_width_data_type_get_bit_width(GArrowFixedWidthDataType *data_type)\n }\n \n \n-G_DEFINE_TYPE(GArrowNullDataType,                \\\n-              garrow_null_data_type,             \\\n+G_DEFINE_TYPE(GArrowNullDataType,\n+              garrow_null_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -285,8 +285,8 @@ garrow_null_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowBooleanDataType,                \\\n-              garrow_boolean_data_type,             \\\n+G_DEFINE_TYPE(GArrowBooleanDataType,\n+              garrow_boolean_data_type,\n               GARROW_TYPE_FIXED_WIDTH_DATA_TYPE)\n \n static void\n@@ -317,8 +317,8 @@ garrow_boolean_data_type_new(void)\n }\n \n \n-G_DEFINE_ABSTRACT_TYPE(GArrowNumericDataType,                    \\\n-                       garrow_numeric_data_type,                 \\\n+G_DEFINE_ABSTRACT_TYPE(GArrowNumericDataType,\n+                       garrow_numeric_data_type,\n                        GARROW_TYPE_FIXED_WIDTH_DATA_TYPE)\n \n static void\n@@ -332,8 +332,8 @@ garrow_numeric_data_type_class_init(GArrowNumericDataTypeClass *klass)\n }\n \n \n-G_DEFINE_ABSTRACT_TYPE(GArrowIntegerDataType,                    \\\n-                       garrow_integer_data_type,                 \\\n+G_DEFINE_ABSTRACT_TYPE(GArrowIntegerDataType,\n+                       garrow_integer_data_type,\n                        GARROW_TYPE_NUMERIC_DATA_TYPE)\n \n static void\n@@ -347,8 +347,8 @@ garrow_integer_data_type_class_init(GArrowIntegerDataTypeClass *klass)\n }\n \n \n-G_DEFINE_TYPE(GArrowInt8DataType,                \\\n-              garrow_int8_data_type,             \\\n+G_DEFINE_TYPE(GArrowInt8DataType,\n+              garrow_int8_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -379,8 +379,8 @@ garrow_int8_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt8DataType,                \\\n-              garrow_uint8_data_type,             \\\n+G_DEFINE_TYPE(GArrowUInt8DataType,\n+              garrow_uint8_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -411,8 +411,8 @@ garrow_uint8_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowInt16DataType,                \\\n-              garrow_int16_data_type,             \\\n+G_DEFINE_TYPE(GArrowInt16DataType,\n+              garrow_int16_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -443,8 +443,8 @@ garrow_int16_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt16DataType,                \\\n-              garrow_uint16_data_type,             \\\n+G_DEFINE_TYPE(GArrowUInt16DataType,\n+              garrow_uint16_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -475,8 +475,8 @@ garrow_uint16_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowInt32DataType,                \\\n-              garrow_int32_data_type,             \\\n+G_DEFINE_TYPE(GArrowInt32DataType,\n+              garrow_int32_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -507,8 +507,8 @@ garrow_int32_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt32DataType,                \\\n-              garrow_uint32_data_type,             \\\n+G_DEFINE_TYPE(GArrowUInt32DataType,\n+              garrow_uint32_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -539,8 +539,8 @@ garrow_uint32_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowInt64DataType,                \\\n-              garrow_int64_data_type,             \\\n+G_DEFINE_TYPE(GArrowInt64DataType,\n+              garrow_int64_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -571,8 +571,8 @@ garrow_int64_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowUInt64DataType,                \\\n-              garrow_uint64_data_type,             \\\n+G_DEFINE_TYPE(GArrowUInt64DataType,\n+              garrow_uint64_data_type,\n               GARROW_TYPE_INTEGER_DATA_TYPE)\n \n static void\n@@ -603,8 +603,8 @@ garrow_uint64_data_type_new(void)\n }\n \n \n-G_DEFINE_ABSTRACT_TYPE(GArrowFloatingPointDataType,                    \\\n-                       garrow_floating_point_data_type,                \\\n+G_DEFINE_ABSTRACT_TYPE(GArrowFloatingPointDataType,\n+                       garrow_floating_point_data_type,\n                        GARROW_TYPE_NUMERIC_DATA_TYPE)\n \n static void\n@@ -618,8 +618,8 @@ garrow_floating_point_data_type_class_init(GArrowFloatingPointDataTypeClass *kla\n }\n \n \n-G_DEFINE_TYPE(GArrowFloatDataType,                \\\n-              garrow_float_data_type,             \\\n+G_DEFINE_TYPE(GArrowFloatDataType,\n+              garrow_float_data_type,\n               GARROW_TYPE_FLOATING_POINT_DATA_TYPE)\n \n static void\n@@ -650,8 +650,8 @@ garrow_float_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowDoubleDataType,                \\\n-              garrow_double_data_type,             \\\n+G_DEFINE_TYPE(GArrowDoubleDataType,\n+              garrow_double_data_type,\n               GARROW_TYPE_FLOATING_POINT_DATA_TYPE)\n \n static void\n@@ -682,8 +682,8 @@ garrow_double_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowBinaryDataType,                \\\n-              garrow_binary_data_type,             \\\n+G_DEFINE_TYPE(GArrowBinaryDataType,\n+              garrow_binary_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -714,8 +714,8 @@ garrow_binary_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowStringDataType,                \\\n-              garrow_string_data_type,             \\\n+G_DEFINE_TYPE(GArrowStringDataType,\n+              garrow_string_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -746,8 +746,8 @@ garrow_string_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowDate32DataType,                \\\n-              garrow_date32_data_type,             \\\n+G_DEFINE_TYPE(GArrowDate32DataType,\n+              garrow_date32_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -781,8 +781,8 @@ garrow_date32_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowDate64DataType,                \\\n-              garrow_date64_data_type,             \\\n+G_DEFINE_TYPE(GArrowDate64DataType,\n+              garrow_date64_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -816,8 +816,8 @@ garrow_date64_data_type_new(void)\n }\n \n \n-G_DEFINE_TYPE(GArrowTimestampDataType,                \\\n-              garrow_timestamp_data_type,             \\\n+G_DEFINE_TYPE(GArrowTimestampDataType,\n+              garrow_timestamp_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -871,8 +871,8 @@ garrow_timestamp_data_type_get_unit(GArrowTimestampDataType *timestamp_data_type\n }\n \n \n-G_DEFINE_TYPE(GArrowTimeDataType,               \\\n-              garrow_time_data_type,            \\\n+G_DEFINE_TYPE(GArrowTimeDataType,\n+              garrow_time_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -904,8 +904,8 @@ garrow_time_data_type_get_unit(GArrowTimeDataType *time_data_type)\n }\n \n \n-G_DEFINE_TYPE(GArrowTime32DataType,                \\\n-              garrow_time32_data_type,             \\\n+G_DEFINE_TYPE(GArrowTime32DataType,\n+              garrow_time32_data_type,\n               GARROW_TYPE_TIME_DATA_TYPE)\n \n static void\n@@ -972,8 +972,8 @@ garrow_time32_data_type_new(GArrowTimeUnit unit, GError **error)\n }\n \n \n-G_DEFINE_TYPE(GArrowTime64DataType,                \\\n-              garrow_time64_data_type,             \\\n+G_DEFINE_TYPE(GArrowTime64DataType,\n+              garrow_time64_data_type,\n               GARROW_TYPE_TIME_DATA_TYPE)\n \n static void\n@@ -1040,8 +1040,8 @@ garrow_time64_data_type_new(GArrowTimeUnit unit, GError **error)\n }\n \n \n-G_DEFINE_TYPE(GArrowDecimalDataType,                \\\n-              garrow_decimal_data_type,             \\\n+G_DEFINE_TYPE(GArrowDecimalDataType,\n+              garrow_decimal_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\ndiff --git a/c_glib/arrow-glib/buffer.cpp b/c_glib/arrow-glib/buffer.cpp\nindex 23ec3b651c..82a6c2a93d 100644\n--- a/c_glib/arrow-glib/buffer.cpp\n+++ b/c_glib/arrow-glib/buffer.cpp\n@@ -404,8 +404,8 @@ garrow_buffer_slice(GArrowBuffer *buffer, gint64 offset, gint64 size)\n }\n \n \n-G_DEFINE_TYPE(GArrowMutableBuffer,              \\\n-              garrow_mutable_buffer,            \\\n+G_DEFINE_TYPE(GArrowMutableBuffer,\n+              garrow_mutable_buffer,\n               GARROW_TYPE_BUFFER)\n \n static void\n@@ -484,8 +484,8 @@ garrow_mutable_buffer_slice(GArrowMutableBuffer *buffer,\n }\n \n \n-G_DEFINE_TYPE(GArrowResizableBuffer,              \\\n-              garrow_resizable_buffer,            \\\n+G_DEFINE_TYPE(GArrowResizableBuffer,\n+              garrow_resizable_buffer,\n               GARROW_TYPE_MUTABLE_BUFFER)\n \n static void\ndiff --git a/c_glib/arrow-glib/composite-array.cpp b/c_glib/arrow-glib/composite-array.cpp\nindex 10aa27d122..b040ac72c7 100644\n--- a/c_glib/arrow-glib/composite-array.cpp\n+++ b/c_glib/arrow-glib/composite-array.cpp\n@@ -51,8 +51,8 @@ G_BEGIN_DECLS\n  * normal array to dictionary array by garrow_array_dictionary_encode().\n  */\n \n-G_DEFINE_TYPE(GArrowListArray,               \\\n-              garrow_list_array,             \\\n+G_DEFINE_TYPE(GArrowListArray,\n+              garrow_list_array,\n               GARROW_TYPE_ARRAY)\n \n static void\n@@ -141,8 +141,8 @@ garrow_list_array_get_value(GArrowListArray *array,\n }\n \n \n-G_DEFINE_TYPE(GArrowStructArray,               \\\n-              garrow_struct_array,             \\\n+G_DEFINE_TYPE(GArrowStructArray,\n+              garrow_struct_array,\n               GARROW_TYPE_ARRAY)\n \n static void\n@@ -264,8 +264,8 @@ garrow_struct_array_flatten(GArrowStructArray *array, GError **error)\n }\n \n \n-G_DEFINE_TYPE(GArrowDictionaryArray,            \\\n-              garrow_dictionary_array,          \\\n+G_DEFINE_TYPE(GArrowDictionaryArray,\n+              garrow_dictionary_array,\n               GARROW_TYPE_ARRAY)\n \n static void\ndiff --git a/c_glib/arrow-glib/composite-data-type.cpp b/c_glib/arrow-glib/composite-data-type.cpp\nindex 36a839b3b9..2645bead40 100644\n--- a/c_glib/arrow-glib/composite-data-type.cpp\n+++ b/c_glib/arrow-glib/composite-data-type.cpp\n@@ -43,8 +43,8 @@ G_BEGIN_DECLS\n  * #GArrowDictionaryDataType is a class for dictionary data type.\n  */\n \n-G_DEFINE_TYPE(GArrowListDataType,                \\\n-              garrow_list_data_type,             \\\n+G_DEFINE_TYPE(GArrowListDataType,\n+              garrow_list_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -98,8 +98,8 @@ garrow_list_data_type_get_value_field(GArrowListDataType *list_data_type)\n }\n \n \n-G_DEFINE_TYPE(GArrowStructDataType,                \\\n-              garrow_struct_data_type,             \\\n+G_DEFINE_TYPE(GArrowStructDataType,\n+              garrow_struct_data_type,\n               GARROW_TYPE_DATA_TYPE)\n \n static void\n@@ -252,8 +252,8 @@ garrow_struct_data_type_get_field_index(GArrowStructDataType *data_type,\n }\n \n \n-G_DEFINE_TYPE(GArrowDictionaryDataType,                \\\n-              garrow_dictionary_data_type,             \\\n+G_DEFINE_TYPE(GArrowDictionaryDataType,\n+              garrow_dictionary_data_type,\n               GARROW_TYPE_FIXED_WIDTH_DATA_TYPE)\n \n static void\ndiff --git a/c_glib/arrow-glib/input-stream.cpp b/c_glib/arrow-glib/input-stream.cpp\nindex d2e6366ade..cf4b6d0b50 100644\n--- a/c_glib/arrow-glib/input-stream.cpp\n+++ b/c_glib/arrow-glib/input-stream.cpp\n@@ -246,8 +246,8 @@ garrow_input_stream_read_tensor(GArrowInputStream *input_stream,\n }\n \n \n-G_DEFINE_TYPE(GArrowSeekableInputStream,                \\\n-              garrow_seekable_input_stream,             \\\n+G_DEFINE_TYPE(GArrowSeekableInputStream,\n+              garrow_seekable_input_stream,\n               GARROW_TYPE_INPUT_STREAM);\n \n static void\n@@ -336,8 +336,8 @@ enum {\n   PROP_BUFFER\n };\n \n-G_DEFINE_TYPE_WITH_PRIVATE(GArrowBufferInputStream,                     \\\n-                           garrow_buffer_input_stream,                  \\\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowBufferInputStream,\n+                           garrow_buffer_input_stream,\n                            GARROW_TYPE_SEEKABLE_INPUT_STREAM);\n \n #define GARROW_BUFFER_INPUT_STREAM_GET_PRIVATE(obj)                     \\\n@@ -455,8 +455,8 @@ garrow_buffer_input_stream_get_buffer(GArrowBufferInputStream *input_stream)\n }\n \n \n-G_DEFINE_TYPE(GArrowMemoryMappedInputStream,            \\\n-              garrow_memory_mapped_input_stream,        \\\n+G_DEFINE_TYPE(GArrowMemoryMappedInputStream,\n+              garrow_memory_mapped_input_stream,\n               GARROW_TYPE_SEEKABLE_INPUT_STREAM);\n \n static void\n@@ -665,8 +665,8 @@ namespace garrow {\n \n G_BEGIN_DECLS\n \n-G_DEFINE_TYPE(GArrowGIOInputStream,                \\\n-              garrow_gio_input_stream,             \\\n+G_DEFINE_TYPE(GArrowGIOInputStream,\n+              garrow_gio_input_stream,\n               GARROW_TYPE_SEEKABLE_INPUT_STREAM);\n \n static void\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T05:31:10.461+0000",
                    "updated": "2018-11-21T05:31:10.461+0000",
                    "started": "2018-11-21T05:31:10.460+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168174",
                    "issueId": "13199738"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@642b155[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57a9085c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7be97e86[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@649d624f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a9d26dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@67444391[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57e90cb1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@58e99319[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b31e51e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6eac6322[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@713f66c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@65da42a7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 21 05:31:37 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-21T05:31:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3847/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-21T03:20:04.000+0000",
        "updated": "2018-11-21T05:31:37.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Remove unnecessary \u201c\\\u201d.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199738/comment/16694259",
                    "id": "16694259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 3007\n[https://github.com/apache/arrow/pull/3007]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-11-21T05:31:37.448+0000",
                    "updated": "2018-11-21T05:31:37.448+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00pyo:",
        "customfield_12314139": null
    }
}