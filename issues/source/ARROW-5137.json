{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13226686",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686",
    "key": "ARROW-5137",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5137/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 43,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/224610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125\n \n \n   Also sets up the server-side APIs for [ARROW-5136](https://issues.apache.org/jira/browse/ARROW-5136).\r\n   \r\n   I mostly mirrored the existing Java APIs in each language, except I didn't add the BasicAuth specialization.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-08T21:19:27.047+0000",
                    "updated": "2019-04-08T21:19:27.047+0000",
                    "started": "2019-04-08T21:19:27.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "224610",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#issuecomment-481403939\n \n \n   @lihalite You can ping me when this is ready for review.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-09T19:34:49.269+0000",
                    "updated": "2019-04-09T19:34:49.269+0000",
                    "started": "2019-04-09T19:34:49.269+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225228",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#issuecomment-481422804\n \n \n   @pitrou thanks! This should be ready. Looks like LLVM/R are impacting Travis.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-09T20:29:56.928+0000",
                    "updated": "2019-04-09T20:29:56.928+0000",
                    "started": "2019-04-09T20:29:56.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225246",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#issuecomment-481436083\n \n \n   The LLVM issue is fixed on master, you can rebase.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-09T21:02:27.139+0000",
                    "updated": "2019-04-09T21:02:27.139+0000",
                    "started": "2019-04-09T21:02:27.139+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225259",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#issuecomment-481449092\n \n \n   Great, seems like that fixed the R build as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-09T21:34:31.923+0000",
                    "updated": "2019-04-09T21:34:31.923+0000",
                    "started": "2019-04-09T21:34:31.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225281",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273850442\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client_auth.h\n ##########\n @@ -0,0 +1,60 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the server during an\n+/// authentication handshake.\n+class ARROW_EXPORT ClientAuthReader {\n+ public:\n+  virtual ~ClientAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n+};\n+\n+/// \\brief A writer for messages to the server during an\n+/// authentication handshake.\n+class ARROW_EXPORT ClientAuthSender {\n+ public:\n+  virtual ~ClientAuthSender() = default;\n+  virtual Status Write(const std::string& token) = 0;\n+};\n+\n+/// \\brief An authentication implementation for a Flight service.\n+/// Authentication includes both an initial negotiation and a per-call\n+/// token validation. Implementations may choose to use either or both\n+/// mechanisms.\n+class ARROW_EXPORT ClientAuthHandler {\n+ public:\n+  virtual ~ClientAuthHandler() = default;\n+  /// \\brief Authenticate the client on initial connection. The client\n+  /// can send messages to/read responses from the server at any time.\n+  virtual Status Authenticate(ClientAuthSender& outgoing, ClientAuthReader& incoming) = 0;\n \n Review comment:\n   Either `const ClientAuthSender&` or `ClientAuthSender*`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.097+0000",
                    "updated": "2019-04-10T13:29:53.097+0000",
                    "started": "2019-04-10T13:29:53.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225554",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273848790\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client_auth.h\n ##########\n @@ -0,0 +1,60 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the server during an\n+/// authentication handshake.\n+class ARROW_EXPORT ClientAuthReader {\n+ public:\n+  virtual ~ClientAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n \n Review comment:\n   As per our C++ coding guidelines, out-arguments should be passed by pointer, not reference.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.353+0000",
                    "updated": "2019-04-10T13:29:53.353+0000",
                    "started": "2019-04-10T13:29:53.353+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225555",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273930867\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client_auth.h\n ##########\n @@ -0,0 +1,60 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the server during an\n+/// authentication handshake.\n+class ARROW_EXPORT ClientAuthReader {\n+ public:\n+  virtual ~ClientAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n \n Review comment:\n   Also... I think it doesn't help that you're using the word \"token\" here as well as in `GetToken`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.479+0000",
                    "updated": "2019-04-10T13:29:53.479+0000",
                    "started": "2019-04-10T13:29:53.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225556",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273935691\n \n \n\n ##########\n File path: cpp/src/arrow/flight/server_auth.h\n ##########\n @@ -0,0 +1,77 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+/// \\brief Server-side APIs to implement authentication for Flight.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the client during an\n+/// authentication handshake.\n+class ARROW_EXPORT ServerAuthReader {\n+ public:\n+  virtual ~ServerAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n+};\n+\n+/// \\brief A writer for messages to the client during an\n+/// authentication handshake.\n+class ARROW_EXPORT ServerAuthSender {\n+ public:\n+  virtual ~ServerAuthSender() = default;\n+  virtual Status Write(const std::string& token) = 0;\n+};\n+\n+/// \\brief An authentication implementation for a Flight service.\n+/// Authentication includes both an initial negotiation and a per-call\n+/// token validation. Implementations may choose to use either or both\n+/// mechanisms.\n+class ARROW_EXPORT ServerAuthHandler {\n+ public:\n+  virtual ~ServerAuthHandler();\n+  /// \\brief Authenticate the client on initial connection. The server\n+  /// can send and read responses from the client at any time.\n+  virtual Status Authenticate(ServerAuthSender& outgoing, ServerAuthReader& incoming) = 0;\n+  /// \\brief Validate a per-call client token.\n+  /// \\param[in] token The client token.\n+  /// \\param[out] peer_identity The identity of the peer, if this\n+  /// authentication method supports it.\n+  /// \\return Status OK if the token is valid, any other status if\n+  /// validation failed\n+  virtual Status IsValid(const std::string& token, std::string& peer_identity) = 0;\n \n Review comment:\n   What I don't understand is that `peer_identity` is returned here but not in `Authenticate`. Is there a rationale for this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.484+0000",
                    "updated": "2019-04-10T13:29:53.484+0000",
                    "started": "2019-04-10T13:29:53.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225557",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273933942\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.cc\n ##########\n @@ -63,6 +64,60 @@ struct ClientRpc {\n     ss << error_message << context.debug_error_string();\n     return Status::IOError(ss.str());\n   }\n+\n+  /// \\brief Add an auth token via an auth handler\n+  Status SetToken(std::shared_ptr<ClientAuthHandler> auth_handler) {\n \n Review comment:\n   Can simply be `ClientAuthHandler*`, since we're not taking ownership.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.485+0000",
                    "updated": "2019-04-10T13:29:53.485+0000",
                    "started": "2019-04-10T13:29:53.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225558",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273929112\n \n \n\n ##########\n File path: cpp/src/arrow/flight/server_auth.h\n ##########\n @@ -0,0 +1,77 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+/// \\brief Server-side APIs to implement authentication for Flight.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the client during an\n+/// authentication handshake.\n+class ARROW_EXPORT ServerAuthReader {\n+ public:\n+  virtual ~ServerAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n+};\n+\n+/// \\brief A writer for messages to the client during an\n+/// authentication handshake.\n+class ARROW_EXPORT ServerAuthSender {\n+ public:\n+  virtual ~ServerAuthSender() = default;\n+  virtual Status Write(const std::string& token) = 0;\n+};\n+\n+/// \\brief An authentication implementation for a Flight service.\n+/// Authentication includes both an initial negotiation and a per-call\n+/// token validation. Implementations may choose to use either or both\n+/// mechanisms.\n+class ARROW_EXPORT ServerAuthHandler {\n+ public:\n+  virtual ~ServerAuthHandler();\n+  /// \\brief Authenticate the client on initial connection. The server\n+  /// can send and read responses from the client at any time.\n+  virtual Status Authenticate(ServerAuthSender& outgoing, ServerAuthReader& incoming) = 0;\n+  /// \\brief Validate a per-call client token.\n+  /// \\param[in] token The client token.\n+  /// \\param[out] peer_identity The identity of the peer, if this\n+  /// authentication method supports it.\n+  /// \\return Status OK if the token is valid, any other status if\n+  /// validation failed\n+  virtual Status IsValid(const std::string& token, std::string& peer_identity) = 0;\n+};\n+\n+/// \\brief An authentication mechanism that does nothing. (However,\n+/// adding this will at least require that an authentication header is\n \n Review comment:\n   Could you explain what \"adding this\" means here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.496+0000",
                    "updated": "2019-04-10T13:29:53.496+0000",
                    "started": "2019-04-10T13:29:53.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225559",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273850491\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client_auth.h\n ##########\n @@ -0,0 +1,60 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the server during an\n+/// authentication handshake.\n+class ARROW_EXPORT ClientAuthReader {\n+ public:\n+  virtual ~ClientAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n+};\n+\n+/// \\brief A writer for messages to the server during an\n+/// authentication handshake.\n+class ARROW_EXPORT ClientAuthSender {\n+ public:\n+  virtual ~ClientAuthSender() = default;\n+  virtual Status Write(const std::string& token) = 0;\n+};\n+\n+/// \\brief An authentication implementation for a Flight service.\n+/// Authentication includes both an initial negotiation and a per-call\n+/// token validation. Implementations may choose to use either or both\n+/// mechanisms.\n+class ARROW_EXPORT ClientAuthHandler {\n+ public:\n+  virtual ~ClientAuthHandler() = default;\n+  /// \\brief Authenticate the client on initial connection. The client\n+  /// can send messages to/read responses from the server at any time.\n+  virtual Status Authenticate(ClientAuthSender& outgoing, ClientAuthReader& incoming) = 0;\n+  /// \\brief Get a per-call token.\n+  virtual Status GetToken(std::string& token) = 0;\n \n Review comment:\n   `std::string*`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.510+0000",
                    "updated": "2019-04-10T13:29:53.510+0000",
                    "started": "2019-04-10T13:29:53.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225560",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273928864\n \n \n\n ##########\n File path: cpp/src/arrow/flight/server_auth.h\n ##########\n @@ -0,0 +1,77 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+/// \\brief Server-side APIs to implement authentication for Flight.\n+\n+#pragma once\n+\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+namespace flight {\n+\n+/// \\brief A reader for messages from the client during an\n+/// authentication handshake.\n+class ARROW_EXPORT ServerAuthReader {\n+ public:\n+  virtual ~ServerAuthReader() = default;\n+  virtual Status Read(std::string& token) = 0;\n \n Review comment:\n   Same comments here as per C++ coding guidelines.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:53.514+0000",
                    "updated": "2019-04-10T13:29:53.514+0000",
                    "started": "2019-04-10T13:29:53.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225561",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273937724\n \n \n\n ##########\n File path: cpp/src/arrow/flight/test-integration-server.cc\n ##########\n @@ -122,7 +124,8 @@ int main(int argc, char** argv) {\n   gflags::ParseCommandLineFlags(&argc, &argv, true);\n \n   g_server.reset(new arrow::flight::FlightIntegrationTestServer);\n-  ARROW_CHECK_OK(g_server->Init(FLAGS_port));\n+  ARROW_CHECK_OK(\n+      g_server->Init(std::unique_ptr<arrow::flight::NoOpAuthHandler>(), FLAGS_port));\n \n Review comment:\n   Can one simply pass `nullptr` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:54.769+0000",
                    "updated": "2019-04-10T13:29:54.769+0000",
                    "started": "2019-04-10T13:29:54.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225562",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273941901\n \n \n\n ##########\n File path: cpp/src/arrow/flight/server.cc\n ##########\n @@ -151,16 +200,50 @@ class FlightServiceImpl : public FlightService::Service {\n     return grpc::Status::OK;\n   }\n \n+  // Authenticate the client (if applicable) and construct the call context\n+  grpc::Status CheckAuth(ServerContext* context, GrpcServerCallContext& flight_context) {\n+    flight_context.context_ = context;\n+    if (!auth_handler_) {\n+      flight_context.peer_identity_ = \"\";\n+      return grpc::Status::OK;\n+    }\n+\n+    const auto client_metadata = context->client_metadata();\n+    const auto auth_header = client_metadata.find(internal::AUTH_HEADER);\n+    if (auth_header == client_metadata.end()) {\n+      return grpc::Status(grpc::StatusCode::UNAUTHENTICATED,\n+                          \"unauthenticated: could not find auth header\");\n+    }\n+    const std::string token{auth_header->second.data(), auth_header->second.length()};\n+    GRPC_RETURN_NOT_OK(auth_handler_->IsValid(token, flight_context.peer_identity_));\n+    return grpc::Status::OK;\n+  }\n+\n+  grpc::Status Handshake(\n+      ServerContext* context,\n+      grpc::ServerReaderWriter<pb::HandshakeResponse, pb::HandshakeRequest>* stream) {\n+    if (!auth_handler_) {\n \n Review comment:\n   Is that what we want? Or do we want to allow handshakes only if a valid auth handler was given?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:55.298+0000",
                    "updated": "2019-04-10T13:29:55.298+0000",
                    "started": "2019-04-10T13:29:55.297+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225563",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273946514\n \n \n\n ##########\n File path: cpp/src/arrow/flight/flight-test.cc\n ##########\n @@ -207,6 +207,51 @@ class TestFlightClient : public ::testing::Test {\n   std::unique_ptr<TestServer> server_;\n };\n \n+class AuthTestServer : public FlightServerBase {\n+  Status DoAction(const ServerCallContext& context, const Action& action,\n+                  std::unique_ptr<ResultStream>* result) {\n+    std::vector<Result> results;\n+    std::shared_ptr<Buffer> buf;\n+    RETURN_NOT_OK(Buffer::FromString(context.peer_identity(), &buf));\n+    results.push_back(Result{buf});\n+    *result = std::unique_ptr<ResultStream>(new SimpleResultStream(std::move(results)));\n+    return Status::OK();\n+  }\n+};\n+\n+class TestAuthHandler : public ::testing::Test {\n+ public:\n+  void SetUp() {\n+    port_ = 30000;\n+    server_.reset(new InProcessTestServer(\n+        std::unique_ptr<FlightServerBase>(new FlightServerBase), port_));\n+    ASSERT_OK(server_->Start(std::unique_ptr<ServerAuthHandler>(\n+        new TestServerAuthHandler(\"user\", \"p4ssw0rd\"))));\n+    ASSERT_OK(ConnectClient());\n+  }\n+\n+  void TearDown() { server_->Stop(); }\n+\n+  Status ConnectClient() { return FlightClient::Connect(\"localhost\", port_, &client_); }\n+\n+ protected:\n+  int port_;\n+  std::unique_ptr<FlightClient> client_;\n+  std::unique_ptr<InProcessTestServer> server_;\n+};\n+\n+class TestAuth : public TestAuthHandler {\n \n Review comment:\n   Hmm... why are both `TestAuth` and `TestAuthHandler` needed here? `TestAuth` looks like it would work for all tests.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:55.324+0000",
                    "updated": "2019-04-10T13:29:55.324+0000",
                    "started": "2019-04-10T13:29:55.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225564",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273954453\n \n \n\n ##########\n File path: python/pyarrow/_flight.pyx\n ##########\n @@ -474,6 +485,148 @@ cdef class GeneratorStream(FlightDataStream):\n         return new CPyGeneratorFlightDataStream(self, self.schema, callback)\n \n \n+cdef class ServerCallContext:\n+    \"\"\"Per-call state/context.\"\"\"\n+    cdef:\n+        const CServerCallContext* context\n+\n+    def peer_identity(self):\n+        \"\"\"Get the identity of the authenticated peer.\n+\n+        May be the empty string.\n+        \"\"\"\n+        return tobytes(self.context.peer_identity())\n+\n+    @staticmethod\n+    cdef ServerCallContext wrap(const CServerCallContext& context):\n+        cdef ServerCallContext result = \\\n+            ServerCallContext.__new__(ServerCallContext)\n+        result.context = &context\n+        return result\n+\n+\n+cdef class ServerAuthReader:\n+    \"\"\"A reader for messages from the client during an auth handshake.\"\"\"\n+    cdef:\n+        CServerAuthReader* reader\n+\n+    cdef read(self):\n+        cdef c_string token\n+        if not self.reader:\n+            raise ValueError(\"Cannot use ServerAuthReader outside \"\n+                             \"ServerAuthHandler.authenticate\")\n+        check_status(self.reader.Read(token))\n+        return token\n+\n+    cdef void poison(self):\n+        \"\"\"Prevent further usage of this object.\n+\n+        This object is constructed by taking a pointer to a reference,\n+        so we want to make sure Python users do not access this after\n+        the reference goes away.\n+        \"\"\"\n+        self.reader = NULL\n+\n+    @staticmethod\n+    cdef ServerAuthReader wrap(CServerAuthReader& reader):\n+        cdef ServerAuthReader result = \\\n+            ServerAuthReader.__new__(ServerAuthReader)\n+        result.reader = &reader\n+        return result\n+\n+\n+cdef class ServerAuthSender:\n+    \"\"\"A writer for messages to the client during an auth handshake.\"\"\"\n+    cdef:\n+        CServerAuthSender* sender\n+\n+    cdef write(self, token):\n+        cdef c_string c_token = token\n+        # TODO: worth acquiring lock?\n+        if not self.sender:\n+            raise ValueError(\"Cannot use ServerAuthSender outside \"\n+                             \"ServerAuthHandler.authenticate\")\n+        check_status(self.sender.Write(token))\n+        return token\n+\n+    cdef void poison(self):\n+        \"\"\"Prevent further usage of this object.\n+\n+        This object is constructed by taking a pointer to a reference,\n+        so we want to make sure Python users do not access this after\n+        the reference goes away.\n+        \"\"\"\n+        self.sender = NULL\n+\n+    @staticmethod\n+    cdef ServerAuthSender wrap(CServerAuthSender& sender):\n+        cdef ServerAuthSender result = \\\n+            ServerAuthSender.__new__(ServerAuthSender)\n+        result.sender = &sender\n+        return result\n+\n+\n+cdef class ClientAuthReader:\n+    \"\"\"A reader for messages from the server during an auth handshake.\"\"\"\n+    cdef:\n+        CClientAuthReader* reader\n+\n+    cdef read(self):\n+        cdef c_string token\n+        if not self.reader:\n+            raise ValueError(\"Cannot use ClientAuthReader outside \"\n+                             \"ClientAuthHandler.authenticate\")\n+        check_status(self.reader.Read(token))\n+        return token\n+\n+    cdef void poison(self):\n+        \"\"\"Prevent further usage of this object.\n+\n+        This object is constructed by taking a pointer to a reference,\n+        so we want to make sure Python users do not access this after\n+        the reference goes away.\n+        \"\"\"\n+        self.reader = NULL\n+\n+    @staticmethod\n+    cdef ClientAuthReader wrap(CClientAuthReader& reader):\n+        cdef ClientAuthReader result = \\\n+            ClientAuthReader.__new__(ClientAuthReader)\n+        result.reader = &reader\n+        return result\n+\n+\n+cdef class ClientAuthSender:\n+    \"\"\"A writer for messages to the server during an auth handshake.\"\"\"\n+    cdef:\n+        CClientAuthSender* sender\n+\n+    cdef write(self, token):\n+        cdef c_string c_token = token\n+        # TODO: worth acquiring lock?\n \n Review comment:\n   Which lock is this talking about?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:55.435+0000",
                    "updated": "2019-04-10T13:29:55.435+0000",
                    "started": "2019-04-10T13:29:55.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225565",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273940628\n \n \n\n ##########\n File path: cpp/src/arrow/flight/test-util.h\n ##########\n @@ -111,5 +129,31 @@ Status MakeFlightInfo(const Schema& schema, const FlightDescriptor& descriptor,\n                       const std::vector<FlightEndpoint>& endpoints, int64_t total_records,\n                       int64_t total_bytes, FlightInfo::Data* out);\n \n+class ARROW_EXPORT TestServerAuthHandler : public ServerAuthHandler {\n \n Review comment:\n   Add a comment what this does precisely?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:55.481+0000",
                    "updated": "2019-04-10T13:29:55.481+0000",
                    "started": "2019-04-10T13:29:55.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225566",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273939137\n \n \n\n ##########\n File path: cpp/src/arrow/flight/test-util.cc\n ##########\n @@ -118,6 +118,19 @@ bool TestServer::IsRunning() { return server_process_->running(); }\n \n int TestServer::port() const { return port_; }\n \n+Status InProcessTestServer::Start(std::unique_ptr<ServerAuthHandler> auth_handler) {\n+  RETURN_NOT_OK(server_->Init(std::move(auth_handler), port_));\n+  thread_ = std::thread([this]() { ARROW_EXPECT_OK(server_->Serve()); });\n \n Review comment:\n   Note this is crashy if for some reason the `InProcessTestServer` is destroyed without `Stop` being called first (because `this->server_` will get destroyed while the worker thread is still running it).\r\n   \r\n   Perhaps you can add a destructor thusly (untested):\r\n   ```cpp\r\n   InProcessTestServer::~InProcessTestServer() {\r\n     if (thread_.joinable()) {\r\n       Stop();\r\n     }\r\n   }\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:55.483+0000",
                    "updated": "2019-04-10T13:29:55.483+0000",
                    "started": "2019-04-10T13:29:55.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225567",
                    "issueId": "13226686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/worklog/225568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4125: ARROW-5137: [Flight] Implement auth API\nURL: https://github.com/apache/arrow/pull/4125#discussion_r273940659\n \n \n\n ##########\n File path: cpp/src/arrow/flight/test-util.h\n ##########\n @@ -111,5 +129,31 @@ Status MakeFlightInfo(const Schema& schema, const FlightDescriptor& descriptor,\n                       const std::vector<FlightEndpoint>& endpoints, int64_t total_records,\n                       int64_t total_bytes, FlightInfo::Data* out);\n \n+class ARROW_EXPORT TestServerAuthHandler : public ServerAuthHandler {\n+ public:\n+  explicit TestServerAuthHandler(const std::string& username,\n+                                 const std::string& password);\n+  ~TestServerAuthHandler();\n+  Status Authenticate(ServerAuthSender& outgoing, ServerAuthReader& incoming) override;\n+  Status IsValid(const std::string& token, std::string& peer_identity) override;\n+\n+ private:\n+  std::string username_;\n+  std::string password_;\n+};\n+\n+class ARROW_EXPORT TestClientAuthHandler : public ClientAuthHandler {\n \n Review comment:\n   Same here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T13:29:55.493+0000",
                    "updated": "2019-04-10T13:29:55.493+0000",
                    "started": "2019-04-10T13:29:55.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225568",
                    "issueId": "13226686"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@43380cda[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c9142c6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b4c70fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4d1d8623[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f30e4c7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58b9d27a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@200a8213[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@10724af[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4959fe94[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5f65cfc7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b8bd422[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1311afa0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 11 15:01:36 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-04-11T15:01:36.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5137/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-04-08T12:12:46.000+0000",
        "updated": "2019-04-11T15:01:36.000+0000",
        "timeoriginalestimate": null,
        "description": "From the mailing list:\r\n{quote}Proposal 3: Add an interface to define authentication protocols on the\r\n client and server, using the existing Handshake endpoint and adding a\r\n protocol-defined, per-call token.\r\n{quote}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Flight] Implement authentication APIs",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226686/comment/16815487",
                    "id": "16815487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 4125\n[https://github.com/apache/arrow/pull/4125]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-04-11T15:01:36.122+0000",
                    "updated": "2019-04-11T15:01:36.122+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z01jzs:",
        "customfield_12314139": null
    }
}