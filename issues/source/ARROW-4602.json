{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13216245",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245",
    "key": "ARROW-4602",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4602/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/199775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3677: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3677\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T15:44:16.433+0000",
                    "updated": "2019-02-17T15:44:16.433+0000",
                    "started": "2019-02-17T15:44:16.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199775",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/199776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3677: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3677#issuecomment-464472821\n \n \n   I'm going to create a new cleaner PR\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T15:49:50.340+0000",
                    "updated": "2019-02-17T15:49:50.340+0000",
                    "started": "2019-02-17T15:49:50.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199776",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/199777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3677: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3677\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T15:49:50.483+0000",
                    "updated": "2019-02-17T15:49:50.483+0000",
                    "started": "2019-02-17T15:49:50.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199777",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/199781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678\n \n \n   Instead of registering DataSource with the context, we now register DataSourceProvider. This trait has a scan() method where we can pass the projection.\r\n   \r\n   ExecutionContext calls the optimizer rule for all SQL queries now, so that only the necessary columns are loaded from disk. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T15:57:42.376+0000",
                    "updated": "2019-02-17T15:57:42.376+0000",
                    "started": "2019-02-17T15:57:42.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199781",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/199789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#issuecomment-464481307\n \n \n   @sunchao @nevi-me @paddyhoran @kszucs Here is the followup PR to integrate the projection push down rule into the query execution\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T17:00:02.782+0000",
                    "updated": "2019-02-17T17:00:02.782+0000",
                    "started": "2019-02-17T17:00:02.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199789",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/199820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3677: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3677#issuecomment-464505284\n \n \n   You can always force push the branch\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T20:32:39.779+0000",
                    "updated": "2019-02-17T20:32:39.779+0000",
                    "started": "2019-02-17T20:32:39.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199820",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257733336\n \n \n\n ##########\n File path: rust/datafusion/src/execution/datasource.rs\n ##########\n @@ -39,10 +41,36 @@ pub struct CsvDataSource {\n }\n \n impl CsvDataSource {\n-    pub fn new(filename: &str, schema: Arc<Schema>, batch_size: usize) -> Self {\n+    pub fn new(\n \n Review comment:\n   Should we enable schema inference for csv files? I can open a JIRA for this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T15:13:36.613+0000",
                    "updated": "2019-02-18T15:13:36.613+0000",
                    "started": "2019-02-18T15:13:36.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200094",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#issuecomment-464840293\n \n \n   Force pushed after picking up change from master to fix the unrelated build error and rebasing.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T18:44:22.323+0000",
                    "updated": "2019-02-18T18:44:22.323+0000",
                    "started": "2019-02-18T18:44:22.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200192",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257798932\n \n \n\n ##########\n File path: rust/datafusion/src/execution/datasource.rs\n ##########\n @@ -39,10 +41,36 @@ pub struct CsvDataSource {\n }\n \n impl CsvDataSource {\n-    pub fn new(filename: &str, schema: Arc<Schema>, batch_size: usize) -> Self {\n+    pub fn new(\n \n Review comment:\n   @nevi-me Thanks, that would be great.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T18:48:37.650+0000",
                    "updated": "2019-02-18T18:48:37.650+0000",
                    "started": "2019-02-18T18:48:37.649+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200194",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257804246\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n+        &mut self,\n+        name: &str,\n+        filename: &str,\n+        schema: &Schema,\n+        has_header: bool,\n+    ) {\n+        self.datasources.borrow_mut().insert(\n+            name.to_string(),\n+            Rc::new(CsvProvider::new(filename, schema, has_header)),\n+        );\n     }\n \n-    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n-        println!(\"Logical plan: {:?}\", plan);\n+    fn optimize(&self, plan: &LogicalPlan) -> Rc<LogicalPlan> {\n+        let rule: Rc<RefCell<OptimizerRule>> =\n+            Rc::new(RefCell::new(ProjectionPushDown::new()));\n+        let mut borrowed_rule = rule.borrow_mut();\n+        borrowed_rule.optimize(plan).unwrap()\n \n Review comment:\n   Is it safe to `unwrap` the result?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:20:39.622+0000",
                    "updated": "2019-02-18T19:20:39.622+0000",
                    "started": "2019-02-18T19:20:39.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200209",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257804113\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n \n Review comment:\n   We should (maybe at some point later) document to these public methods.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:20:39.625+0000",
                    "updated": "2019-02-18T19:20:39.625+0000",
                    "started": "2019-02-18T19:20:39.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200210",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257805485\n \n \n\n ##########\n File path: rust/datafusion/src/execution/datasource.rs\n ##########\n @@ -56,19 +84,40 @@ impl DataSource for CsvDataSource {\n     }\n }\n \n-#[derive(Serialize, Deserialize, Clone)]\n-pub enum DataSourceMeta {\n-    /// Represents a CSV file with a provided schema\n-    CsvFile {\n-        filename: String,\n-        schema: Rc<Schema>,\n-        has_header: bool,\n-        projection: Option<Vec<usize>>,\n-    },\n-    /// Represents a Parquet file that contains schema information\n-    ParquetFile {\n-        filename: String,\n-        schema: Rc<Schema>,\n-        projection: Option<Vec<usize>>,\n-    },\n+pub trait DataSourceProvider {\n+    fn schema(&self) -> &Arc<Schema>;\n+    fn scan(&self, projection: &Option<Vec<usize>>) -> Rc<RefCell<DataSource>>;\n+}\n+\n+/// Represents a CSV file with a provided schema\n+pub struct CsvProvider {\n+    filename: String,\n+    schema: Arc<Schema>,\n+    has_header: bool,\n+}\n+\n+impl CsvProvider {\n+    pub fn new(filename: &str, schema: &Schema, has_header: bool) -> Self {\n+        Self {\n+            filename: String::from(filename),\n+            schema: Arc::new(schema.clone()),\n+            has_header,\n+        }\n+    }\n+}\n+\n+impl DataSourceProvider for CsvProvider {\n+    fn schema(&self) -> &Arc<Schema> {\n+        &self.schema\n+    }\n+\n+    fn scan(&self, projection: &Option<Vec<usize>>) -> Rc<RefCell<DataSource>> {\n+        Rc::new(RefCell::new(CsvDataSource::new(\n+            &self.filename,\n+            self.schema.clone(),\n+            self.has_header,\n+            projection,\n+            1024 * 1024,\n \n Review comment:\n   nit: can this be a constant?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:20:39.717+0000",
                    "updated": "2019-02-18T19:20:39.717+0000",
                    "started": "2019-02-18T19:20:39.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200211",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257805029\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n+        &mut self,\n+        name: &str,\n+        filename: &str,\n+        schema: &Schema,\n+        has_header: bool,\n+    ) {\n+        self.datasources.borrow_mut().insert(\n+            name.to_string(),\n+            Rc::new(CsvProvider::new(filename, schema, has_header)),\n+        );\n     }\n \n-    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n-        println!(\"Logical plan: {:?}\", plan);\n+    fn optimize(&self, plan: &LogicalPlan) -> Rc<LogicalPlan> {\n+        let rule: Rc<RefCell<OptimizerRule>> =\n+            Rc::new(RefCell::new(ProjectionPushDown::new()));\n+        let mut borrowed_rule = rule.borrow_mut();\n+        borrowed_rule.optimize(plan).unwrap()\n+    }\n \n+    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n \n Review comment:\n   Why the result is a `Rc<RefCell<Relation>>`? can we just use `Relation`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:20:39.726+0000",
                    "updated": "2019-02-18T19:20:39.726+0000",
                    "started": "2019-02-18T19:20:39.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200212",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257805657\n \n \n\n ##########\n File path: rust/datafusion/benches/aggregate_query_sql.rs\n ##########\n @@ -0,0 +1,84 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#[macro_use]\n+extern crate criterion;\n+use criterion::Criterion;\n+\n+use std::sync::Arc;\n+\n+extern crate arrow;\n+extern crate datafusion;\n+\n+use arrow::datatypes::{DataType, Field, Schema};\n+\n+use datafusion::execution::context::ExecutionContext;\n+\n+fn aggregate_query(sql: &str) {\n+    // create local execution context\n+    let mut ctx = ExecutionContext::new();\n+\n+    // define schema for data source (csv file)\n+    let schema = Arc::new(Schema::new(vec![\n+        Field::new(\"c1\", DataType::Utf8, false),\n+        Field::new(\"c2\", DataType::UInt32, false),\n+        Field::new(\"c3\", DataType::Int8, false),\n+        Field::new(\"c4\", DataType::Int16, false),\n+        Field::new(\"c5\", DataType::Int32, false),\n+        Field::new(\"c6\", DataType::Int64, false),\n+        Field::new(\"c7\", DataType::UInt8, false),\n+        Field::new(\"c8\", DataType::UInt16, false),\n+        Field::new(\"c9\", DataType::UInt32, false),\n+        Field::new(\"c10\", DataType::UInt64, false),\n+        Field::new(\"c11\", DataType::Float32, false),\n+        Field::new(\"c12\", DataType::Float64, false),\n+        Field::new(\"c13\", DataType::Utf8, false),\n+    ]));\n+\n+    // register csv file with the execution context\n+    ctx.register_csv(\n+        \"aggregate_test_100\",\n+        \"../../testing/data/csv/aggregate_test_100.csv\",\n+        &schema,\n+        true,\n+    );\n+\n+    // execute the query\n+    let relation = ctx.sql(&sql).unwrap();\n+\n+    // display the relation\n+    let mut results = relation.borrow_mut();\n+\n+    while let Some(_) = results.next().unwrap() {}\n+}\n+\n+fn criterion_benchmark(c: &mut Criterion) {\n+    c.bench_function(\"aggregate_query_no_group_by\", |b| {\n+        b.iter(|| aggregate_query(\"SELECT MIN(c12), MAX(c12) FROM aggregate_test_100\"))\n+    });\n+    c.bench_function(\"aggregate_query_group_by\", |b| {\n+        b.iter(|| {\n+            aggregate_query(\n+                \"SELECT c1, MIN(c12), MAX(c12) FROM aggregate_test_100 GROUP BY c1\",\n+            )\n+        })\n+    });\n+    c.bench_function(\"aggregate_query_group_by_with_filter\", |b| b.iter(|| aggregate_query(\"SELECT c1, MIN(c12), MAX(c12) FROM aggregate_test_100 WHERE c11 > 0.1 AND c11 < 0.9 GROUP BY c1\")));\n \n Review comment:\n   nit: long line.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:20:39.792+0000",
                    "updated": "2019-02-18T19:20:39.792+0000",
                    "started": "2019-02-18T19:20:39.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200213",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257806851\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n \n Review comment:\n   Yes. I'm actually working on a refactor of data source providers and I want users to be able to register their own custom data source providers (so they are not dependent on our release cycle to add new ones) and will add documentation as part of that PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:26:07.548+0000",
                    "updated": "2019-02-18T19:26:07.548+0000",
                    "started": "2019-02-18T19:26:07.547+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200221",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257806906\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n+        &mut self,\n+        name: &str,\n+        filename: &str,\n+        schema: &Schema,\n+        has_header: bool,\n+    ) {\n+        self.datasources.borrow_mut().insert(\n+            name.to_string(),\n+            Rc::new(CsvProvider::new(filename, schema, has_header)),\n+        );\n     }\n \n-    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n-        println!(\"Logical plan: {:?}\", plan);\n+    fn optimize(&self, plan: &LogicalPlan) -> Rc<LogicalPlan> {\n+        let rule: Rc<RefCell<OptimizerRule>> =\n+            Rc::new(RefCell::new(ProjectionPushDown::new()));\n+        let mut borrowed_rule = rule.borrow_mut();\n+        borrowed_rule.optimize(plan).unwrap()\n \n Review comment:\n   hmm good point, I will fix that\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:26:23.252+0000",
                    "updated": "2019-02-18T19:26:23.252+0000",
                    "started": "2019-02-18T19:26:23.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200222",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257807168\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n+        &mut self,\n+        name: &str,\n+        filename: &str,\n+        schema: &Schema,\n+        has_header: bool,\n+    ) {\n+        self.datasources.borrow_mut().insert(\n+            name.to_string(),\n+            Rc::new(CsvProvider::new(filename, schema, has_header)),\n+        );\n     }\n \n-    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n-        println!(\"Logical plan: {:?}\", plan);\n+    fn optimize(&self, plan: &LogicalPlan) -> Rc<LogicalPlan> {\n+        let rule: Rc<RefCell<OptimizerRule>> =\n+            Rc::new(RefCell::new(ProjectionPushDown::new()));\n+        let mut borrowed_rule = rule.borrow_mut();\n+        borrowed_rule.optimize(plan).unwrap()\n+    }\n \n+    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n \n Review comment:\n   We need interior mutability when iterating over the results (record batches) of the relation with the current ownership model. I've started wondering if we should try and use lifetimes instead but I'm not sure yet if it is possible, especially for concurrent queries against the same data.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:27:32.437+0000",
                    "updated": "2019-02-18T19:27:32.437+0000",
                    "started": "2019-02-18T19:27:32.437+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200225",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257808932\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n+        &mut self,\n+        name: &str,\n+        filename: &str,\n+        schema: &Schema,\n+        has_header: bool,\n+    ) {\n+        self.datasources.borrow_mut().insert(\n+            name.to_string(),\n+            Rc::new(CsvProvider::new(filename, schema, has_header)),\n+        );\n     }\n \n-    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n-        println!(\"Logical plan: {:?}\", plan);\n+    fn optimize(&self, plan: &LogicalPlan) -> Rc<LogicalPlan> {\n+        let rule: Rc<RefCell<OptimizerRule>> =\n+            Rc::new(RefCell::new(ProjectionPushDown::new()));\n+        let mut borrowed_rule = rule.borrow_mut();\n+        borrowed_rule.optimize(plan).unwrap()\n+    }\n \n+    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n \n Review comment:\n   Also Relation size isn't know at compile time so it has to be in `Box` or `Rc` \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:36:15.779+0000",
                    "updated": "2019-02-18T19:36:15.779+0000",
                    "started": "2019-02-18T19:36:15.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200232",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257809183\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n+        &mut self,\n+        name: &str,\n+        filename: &str,\n+        schema: &Schema,\n+        has_header: bool,\n+    ) {\n+        self.datasources.borrow_mut().insert(\n+            name.to_string(),\n+            Rc::new(CsvProvider::new(filename, schema, has_header)),\n+        );\n     }\n \n-    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n-        println!(\"Logical plan: {:?}\", plan);\n+    fn optimize(&self, plan: &LogicalPlan) -> Rc<LogicalPlan> {\n+        let rule: Rc<RefCell<OptimizerRule>> =\n+            Rc::new(RefCell::new(ProjectionPushDown::new()));\n+        let mut borrowed_rule = rule.borrow_mut();\n+        borrowed_rule.optimize(plan).unwrap()\n+    }\n \n+    pub fn execute(&mut self, plan: &LogicalPlan) -> Result<Rc<RefCell<Relation>>> {\n \n Review comment:\n   That happens outside this method? If we have a unique reference to `Relation` then you can do whatever you want right? It's stronger than `Rc<RefCell<`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:37:31.699+0000",
                    "updated": "2019-02-18T19:37:31.699+0000",
                    "started": "2019-02-18T19:37:31.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200235",
                    "issueId": "13216245"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/worklog/200236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #3678: ARROW-4602: [Rust] [DataFusion] Integrate query optimizer with ExecutionContext\nURL: https://github.com/apache/arrow/pull/3678#discussion_r257809280\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -73,26 +74,42 @@ impl ExecutionContext {\n         }\n     }\n \n-    pub fn register_datasource(&mut self, name: &str, ds: Rc<RefCell<DataSource>>) {\n-        self.datasources.borrow_mut().insert(name.to_string(), ds);\n+    pub fn register_csv(\n \n Review comment:\n   Sounds good.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T19:38:02.640+0000",
                    "updated": "2019-02-18T19:38:02.640+0000",
                    "started": "2019-02-18T19:38:02.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200236",
                    "issueId": "13216245"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 16800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@622ba247[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d5f8012[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62d22f54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@13fc6c0c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@106ab674[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@697e5655[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a257ca1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a49ffe5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f553dce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@34021a8f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@573a8da[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@20e0d946[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 19 02:29:51 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-19T02:29:51.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4602/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-02-17T15:42:53.000+0000",
        "updated": "2019-02-19T02:30:01.000+0000",
        "timeoriginalestimate": null,
        "description": "Integrate the new projection push down query optimizer rule with the query engine so that queries only load referenced columns from disk.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][ [DataFusion] Integrate query optimizer with ExecutionContext",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216245/comment/16771508",
                    "id": "16771508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 3678\n[https://github.com/apache/arrow/pull/3678]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2019-02-19T02:29:51.727+0000",
                    "updated": "2019-02-19T02:29:51.727+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|yi12hc:",
        "customfield_12314139": null
    }
}