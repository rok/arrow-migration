{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13412372",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372",
    "key": "ARROW-14744",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
            "name": "toppyy",
            "key": "JIRAUSER282904",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Topias Pyykk\u00f6nen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "aggregateprogress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14744/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/704055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy opened a new pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083\n\n\n   Supplement CsvReadOptions with column_names from schema if column_names are not set in read_options\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-05T15:36:43.015+0000",
                    "updated": "2022-01-05T15:36:43.015+0000",
                    "started": "2022-01-05T15:36:43.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704055",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/704057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1005827714\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-05T15:36:59.010+0000",
                    "updated": "2022-01-05T15:36:59.010+0000",
                    "started": "2022-01-05T15:36:59.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704057",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/704553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1006618779\n\n\n   Just pasting here the conversation from JIRA:\r\n   \r\n   > I did, however, run into trouble. Say, for example, the user has set skip_rows-option like this:\r\n   `read_options=arrow::CsvReadOptions$create(skip_rows=1))`\r\n   I image we'd like to keep whatever options the user has set when we re-create the `CsvReadOptions` object  with column names from the schema. The problem is that I cannot access `skip_rows` in the object after it's created, so I cannot use that information to create another instance of `CsvReadOptions` that has both the `column_names` and `skip_rows` set (plus any other options).\r\n   \r\n   > Any thoughts? Is there a way to access `skip_rows` and other attributes that I'm unaware of? Of course, one solution is to change class declaration of `CsvReadOptions` to have access to these attributes.\r\n   \r\n   Thanks for opening this draft PR!  After checking out a copy of your branch, I understand what's going on here and why it's not working a lot better not.  \r\n   \r\n   Currently, the approaches that come to mind for me are:\r\n   1. as you say, update that class so we can modify contents after creation\r\n   2. update the signature of `CsvFileFormat$create()`, setting `read_options` to a default value of `NULL` and then calling `csv_file_format_read_opts()` later in the function, passing in both the schema and any user-set values.\r\n   \r\n   I haven't fully fleshed out the second option or tested to see if it'll work, but if it does I'd be in favour of doing it that way so we can make the change we need without having to modify the structure of the existing classes.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T14:08:26.437+0000",
                    "updated": "2022-01-06T14:08:26.437+0000",
                    "started": "2022-01-06T14:08:26.437+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704553",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/705389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1007915879\n\n\n   Thanks for copy-pasting the discussion - it didn't occur to me. I tried option 2, but ended up having to change the class CsvReadOptions also (see below why). So the latest commits really implement options one and two. \r\n   \r\n   To me it still seems that it's impossible to get the value of _skip_rows_ later on if user has set it like this:\r\n   > `open_dataset(\r\n   >   td,\r\n   >   format = 'csv',\r\n   >   read_options = arrow::CsvReadOptions$create(\r\n   >     skip_rows = 1\r\n   >   )\r\n   > )`\r\n   \r\n   Because of this I had to implement CsvReadOptions$skip_rows to be able to retrieve the value in `csv_file_format_read_opts`. I could be wrong though.\r\n   \r\n   The functionality is as follows:\r\n   - Check if column_names are given as a separate argument. If so, use them.\r\n   - Check if column_names are given in read_options. If so, use them.\r\n   - Check if schema is set. If so, use names from schema as column names. \r\n   \r\n   For skip rows, we do the same (with the exception of using schema).\r\n   \r\n   The code is a bit verbose and may be improved by some simplification. Also, if any other options (in addition to column_names & skip_rows) are introduced, it needs an update - so not ideal in that sense.\r\n   \r\n   Let me know what you think!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-08T08:37:21.782+0000",
                    "updated": "2022-01-08T08:37:21.782+0000",
                    "started": "2022-01-08T08:37:21.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705389",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/705604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1007915879\n\n\n   Thanks for copy-pasting the discussion - it didn't occur to me. I tried option 2, but ended up having to change the class CsvReadOptions also (see below why). So the latest commits really implement options one and two. \r\n   \r\n   To me it still seems that it's impossible to get the value of _skip_rows_ later on if user has set it like this:\r\n   > `open_dataset(\r\n   >   td,\r\n   >   format = 'csv',\r\n   >   read_options = arrow::CsvReadOptions$create(\r\n   >     skip_rows = 1\r\n   >   )\r\n   > )`\r\n   \r\n   Because of this I had to implement CsvReadOptions$skip_rows to be able to retrieve the value in `csv_file_format_read_opts`. I could be wrong though.\r\n   \r\n   The functionality is as follows:\r\n   - Check if column_names are given as a separate argument. If so, use them.\r\n   - Check if column_names are given in read_options. If so, use them.\r\n   - Check if schema is set. If so, use names from schema as column names. \r\n   \r\n   For skip rows, we do the same (with the exception of using schema).\r\n   \r\n   The code is a bit verbose and may be improved by some simplification. Also, if any other options (in addition to column_names & skip_rows) are introduced, it needs an update - so not ideal in that sense.\r\n   \r\n   Let me know what you think!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-08T10:23:10.953+0000",
                    "updated": "2022-01-08T10:23:10.953+0000",
                    "started": "2022-01-08T10:23:10.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705604",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/707625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1011224682\n\n\n   Thanks for the updates here @toppyy .  I've taken the time to have a proper think about this, and on reflection, I don't think we need to make `open_dataset( td, format = 'csv', read_options = CsvReadOptions$create( skip_rows = 1 ))` work for users as they can pass in their `skip_rows` parameter this way: `open_dataset( td, format = 'csv', skip_rows = 1)`.\r\n   \r\n   Directly using `CsvReadOptions$create()` is pretty low-level and so here we can probably assume that someone using it is responsible for making sure things match up themselves (though should absolutely add further documentation to show our recommended way that users work with `open_dataset()` so it's clear - perhaps that could be part of this PR if you're interested but no worries if not).\r\n   \r\n   I feel an alternative solution here might be just to check if there are conflicting arguments specified to `open_dataset()` (e.g. through specifying the `read_options` argument in the ellipses as well as individual read options).  It might be something along the lines of adding validation at the end of open_dataset so that if `(!is.null(schema))` and format is csv, ensure that `identical(names(schema), read_options$column_names)` or raise an error.\r\n   \r\n   Does that make sense?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-12T16:25:07.558+0000",
                    "updated": "2022-01-12T16:25:07.558+0000",
                    "started": "2022-01-12T16:25:07.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707625",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/707626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic edited a comment on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1011224682\n\n\n   Thanks for the updates here @toppyy .  I've taken the time to have a proper think about this, and on reflection, I don't think we need to make `open_dataset( td, format = 'csv', read_options = CsvReadOptions$create( skip_rows = 1 ))` work for users as they can pass in their `skip_rows` parameter this way: `open_dataset( td, format = 'csv', skip_rows = 1)`.\r\n   \r\n   Directly using `CsvReadOptions$create()` is pretty low-level and so here we can probably assume that someone using it is responsible for making sure things match up themselves (though should absolutely add further documentation to show our recommended way that users work with `open_dataset()` so it's clear - perhaps that could be part of this PR if you're interested but no worries if not).\r\n   \r\n   I feel an alternative solution here might be just to check if there are conflicting arguments specified to `open_dataset()` (e.g. through specifying the `read_options` argument in the ellipses as well as individual read options).  It might be something along the lines of adding validation at the end of open_dataset so that if `(!is.null(schema))` and format is csv, ensure that `identical(names(schema), read_options$column_names)` or raise an error.\r\n   \r\n   How does that sound?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-12T16:25:20.337+0000",
                    "updated": "2022-01-12T16:25:20.337+0000",
                    "started": "2022-01-12T16:25:20.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707626",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/708552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1012386125\n\n\n   I think that makes a lot sense! Trying to infer the column names from schema added (a surprising) amount of complexity to the code for little to none added value for the user. As you say, they can pass the arguments using a different approach. \r\n   \r\n   Just to make sure I got it right before I jump into making changes, the approach we're taking is this:\r\n   Instead of deriving the column_names from the schema, we raise an error if `CsvReadOptions$create()` is used for read_options and it has no column names or they differ from the schema?\r\n   \r\n   If so, could the check for column names be inside `CsvFileFormat$create`? As the issue is limited to formats that use this function (not relevant for parquet).\r\n   \r\n   I can write this  up in the documentation as a part of this PR.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T18:12:28.997+0000",
                    "updated": "2022-01-13T18:12:28.997+0000",
                    "started": "2022-01-13T18:12:28.997+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708552",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/708917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1012889685\n\n\n   Yeah, spot on, and there is an extra level of complexity added here due to the fact that the way in which we infer column names from a schema is a bit incorrect (but this is being dealt with as part of another issue)\r\n   \r\n   Are you happy with leaving the existing code which derives column names from a schema as it was before any of the changes in this PR, and as you say, raise an error if CsvReadOptions$create() is used for read_options but is not consistent with the schema?\r\n   \r\n   There's a PR which was just merged that does a similar thing but relates to partitioning, and is a great example of this kind of thing being done really nicely: https://github.com/apache/arrow/blob/99f7c3cf3e6c2a9555ceff3d48ef73e485ede546/r/R/dataset-factory.R#L85-L95\r\n   \r\n   What you said about where the code for this should go sounds right and thanks for volunteering to update the docs too!\r\n   \r\n   Thanks for sticking with this even though we've drastically changed what we're doing to resolve this - even though we're not using the code from your previous solutions, the process of testing them out and the surrounding discussion has been really helpful for identifying some serious enhancements that can be made to how the schema and column name components interact and also how we direct our users to work with `open_dataset()`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T07:58:27.388+0000",
                    "updated": "2022-01-14T07:58:27.388+0000",
                    "started": "2022-01-14T07:58:27.388+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708917",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/709627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1013892092\n\n\n   I reverted the previous commits and implemented the following logic in `CsvFileFormat$create` as discussed: If a schema is specified and column names are set in read_options, we raise an error if the two do not match. \r\n   \r\n   Also added a note of this in the documentation. \r\n   \r\n   I thought about the documentation aspect a bit. As a starting point, I added link to [read_csv_arrow](https://arrow.apache.org/docs/r/reference/read_delim_arrow.html) into `open_dataset` docs. It has some explanation on how to specify column names and types. Though I suspect this might be a bit misleading for the readers who are unaware of the fact that both functions end up calling `CsvReadOptions$create`.\r\n   \r\n   It seems to that the `open_dataset` docs (or the cookbook) might benefit from additional examples or a separate section (like in read_csv_arrow) on this issue? \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-16T15:03:48.395+0000",
                    "updated": "2022-01-16T15:03:48.395+0000",
                    "started": "2022-01-16T15:03:48.394+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709627",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/709643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r785474474\n\n\n\n##########\nFile path: r/R/dataset.R\n##########\n@@ -123,6 +123,7 @@\n #' or call [`$NewScan()`][Scanner] to construct a query directly.\n #' @export\n #' @seealso `vignette(\"dataset\", package = \"arrow\")`\n+#' See [read_csv_arrow()] on how to specify column names and types for \"csv\"/\"text\" and \"tsv\" -formats.\n\nReview comment:\n       This is great, though I think it might fit better after the content on line 121 along with links to `read_feather()` and `read_parquet()` and a more generic comment about viewing those page for format-specific options.\n\n##########\nFile path: r/R/dataset-format.R\n##########\n@@ -122,6 +122,18 @@ CsvFileFormat$create <- function(...,\n                                  opts = csv_file_format_parse_options(...),\n                                  convert_options = csv_file_format_convert_opts(...),\n                                  read_options = csv_file_format_read_opts(...)) {\n+\n+  options <- list(...)\n+  schema  <- options[[\"schema\"]]\n+\n+  if (length(read_options$column_names) > 0 & !is.null(schema) & !identical(names(schema), read_options$column_names)) {\n+    abort(c(\n+        '\"column_names\" in read_options do not match the schema.',\n+      i = \"Set column_names in read_options to match the schema\",\n+      i = \"Omit the read_options argument\"\n+    ))\n\nReview comment:\n       Looking good, just a couple of suggestions:\r\n   - the user of the `open_dataset()` function won't necessarily have used the function `read_options()` directly, so we should remove the reference to it to avoid confusion\r\n   - to provide maximal useful information to the end-user, could you print out the arguments which are mismatches between `column_names` and the schema?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-16T17:50:01.153+0000",
                    "updated": "2022-01-16T17:50:01.153+0000",
                    "started": "2022-01-16T17:50:01.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709643",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/709645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1013924539\n\n\n   > It seems to that the `open_dataset` docs (or the cookbook) might benefit from additional examples or a separate section (like in read_csv_arrow) on this issue?\r\n   \r\n   Agreed - you're welcome to submit extra examples with the docs as part of this PR or we can open up a separate issue for that? Let me know which you'd rather do.\r\n   \r\n   The cookbook is in a separate [repo](https://github.com/apache/arrow-cookbook), so I've opened a ticket there: https://github.com/apache/arrow-cookbook/issues/120\r\n   \r\n   At present there is no chapter on datasets - I was thinking of starting one soon, but if you'd like to get it started, or contribute some content once it's started, let me know on that ticket.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-16T18:09:54.134+0000",
                    "updated": "2022-01-16T18:09:54.134+0000",
                    "started": "2022-01-16T18:09:54.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709645",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/709679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r785542810\n\n\n\n##########\nFile path: r/R/dataset-format.R\n##########\n@@ -122,6 +122,18 @@ CsvFileFormat$create <- function(...,\n                                  opts = csv_file_format_parse_options(...),\n                                  convert_options = csv_file_format_convert_opts(...),\n                                  read_options = csv_file_format_read_opts(...)) {\n+\n+  options <- list(...)\n+  schema  <- options[[\"schema\"]]\n+\n+  if (length(read_options$column_names) > 0 & !is.null(schema) & !identical(names(schema), read_options$column_names)) {\n+    abort(c(\n+        '\"column_names\" in read_options do not match the schema.',\n+      i = \"Set column_names in read_options to match the schema\",\n+      i = \"Omit the read_options argument\"\n+    ))\n\nReview comment:\n       Also, please could you add a test which triggers this error?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-16T23:20:57.306+0000",
                    "updated": "2022-01-16T23:20:57.306+0000",
                    "started": "2022-01-16T23:20:57.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709679",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/710120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r786252402\n\n\n\n##########\nFile path: r/R/dataset-format.R\n##########\n@@ -122,6 +122,18 @@ CsvFileFormat$create <- function(...,\n                                  opts = csv_file_format_parse_options(...),\n                                  convert_options = csv_file_format_convert_opts(...),\n                                  read_options = csv_file_format_read_opts(...)) {\n+\n+  options <- list(...)\n+  schema  <- options[[\"schema\"]]\n+\n+  if (length(read_options$column_names) > 0 & !is.null(schema) & !identical(names(schema), read_options$column_names)) {\n+    abort(c(\n+        '\"column_names\" in read_options do not match the schema.',\n+      i = \"Set column_names in read_options to match the schema\",\n+      i = \"Omit the read_options argument\"\n+    ))\n\nReview comment:\n       Thanks for the good comments!\r\n   \r\n   It raises an error and prints out the mismatches between read_options$column_names and names(schema).\r\n   \r\n   At the moment a mismatch is either due to 1) set difference or a 2) different order of column names. However, I'm a bit unsure of the latter. Do we in fact want to raise an error if the order of names differ? For example: `c(\"a\",\"b\") != c(\"a\",\"b\")`\r\n   \r\n   Also, if this is the case, I'd be interested if you have any tips on convenient ways to do this. I resorted to using `suppressWarnings` to handle cases where vector lengths differ.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-17T19:26:25.630+0000",
                    "updated": "2022-01-17T19:26:25.630+0000",
                    "started": "2022-01-17T19:26:25.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710120",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/710121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r786252402\n\n\n\n##########\nFile path: r/R/dataset-format.R\n##########\n@@ -122,6 +122,18 @@ CsvFileFormat$create <- function(...,\n                                  opts = csv_file_format_parse_options(...),\n                                  convert_options = csv_file_format_convert_opts(...),\n                                  read_options = csv_file_format_read_opts(...)) {\n+\n+  options <- list(...)\n+  schema  <- options[[\"schema\"]]\n+\n+  if (length(read_options$column_names) > 0 & !is.null(schema) & !identical(names(schema), read_options$column_names)) {\n+    abort(c(\n+        '\"column_names\" in read_options do not match the schema.',\n+      i = \"Set column_names in read_options to match the schema\",\n+      i = \"Omit the read_options argument\"\n+    ))\n\nReview comment:\n       Thanks for the good comments!\r\n   \r\n   It raises an error and prints out the mismatches between read_options$column_names and names(schema).\r\n   \r\n   At the moment a mismatch is either due to 1) set difference or a 2) different order of column names. However, I'm a bit unsure of the latter. Do we in fact want to raise an error if the order of names differ? For example: `c(\"a\",\"b\") != c(\"b\",\"a\")`\r\n   \r\n   Also, if this is the case, I'd be interested if you have any tips on convenient ways to do this. I resorted to using `suppressWarnings` to handle cases where vector lengths differ.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-17T19:26:38.290+0000",
                    "updated": "2022-01-17T19:26:38.290+0000",
                    "started": "2022-01-17T19:26:38.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710121",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/710122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1014835853\n\n\n   > you're welcome to submit extra examples with the docs as part of this PR or we can open up a separate issue for that?\r\n   \r\n   I think I'd prefer a separate issue just for the sake of clarity on my end. \r\n   \r\n   Thanks for the issue for the cookbook. I'll get back to that later after this one is sorted :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-17T19:30:44.094+0000",
                    "updated": "2022-01-17T19:30:44.094+0000",
                    "started": "2022-01-17T19:30:44.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710122",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/713309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#issuecomment-1019446733\n\n\n   I refactored/simplified the column_names vs. schema-names comparison a bit.\r\n   \r\n   While doing this, I realized that the solution did not solve the original issue. I was comparing column names versus schema only when both are set. However, the original issue presented itself when read_options was set _without_ column_names. Like so:\r\n   `open_dataset(\r\n     td,\r\n     format='csv',\r\n     schema = diamond_schema,\r\n     skip_rows = 1,\r\n     read_options=arrow::CsvReadOptions$create(\r\n       skip_rows = 1\r\n       # ..and no column_names\r\n     )\r\n   ) %>%  collect()`\r\n   \r\n   To raise an error in situation also, the code now checks that `identical(read_options$column_names,names(schema))` in all scenarios where schema is set. So the example would create an error despite the fact that `column_names` is not set at all. I added a hint for this situation in the error message (\"Omit the read_options -argument\"). \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-23T09:33:29.113+0000",
                    "updated": "2022-01-23T09:33:29.113+0000",
                    "started": "2022-01-23T09:33:29.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713309",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/713809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r790663925\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset-csv.R\n##########\n@@ -299,3 +299,21 @@ test_that(\"open_dataset() deals with BOMs (byte-order-marks) correctly\", {\n     tibble(a = c(1, 3), b = c(2, 4))\n   )\n })\n+\n+test_that(\"Error if read_options$column_names and schema-names differ (ARROW-14744)\", {\n+\n+  dst_dir  <- make_temp_dir()\n+  dst_file <- file.path(dst_dir, \"file.csv\")\n+  df <- df1[, c(\"int\", \"dbl\")]\n+  write.csv(df, dst_file, row.names = FALSE, quote = FALSE)\n+\n+  # Mismatch of column names vs schema given via read_options should raise an error\n+  opts <- CsvReadOptions$create(column_names = c(\"i\", \"d\"))\n+  schema             <- schema(int = int32(), dbl = float64())\n\nReview comment:\n       This is slightly unusual spacing here, and I notice that the linter is complaining about a \"Missing terminal newline\" a bit further down; would you mind running the styler on the files you have changed?\r\n   \r\n   Instructions here: https://arrow.apache.org/docs/dev/r/articles/developers/workflow.html\n\n##########\nFile path: r/tests/testthat/test-dataset-csv.R\n##########\n@@ -299,3 +299,21 @@ test_that(\"open_dataset() deals with BOMs (byte-order-marks) correctly\", {\n     tibble(a = c(1, 3), b = c(2, 4))\n   )\n })\n+\n+test_that(\"Error if read_options$column_names and schema-names differ (ARROW-14744)\", {\n+\n+  dst_dir  <- make_temp_dir()\n+  dst_file <- file.path(dst_dir, \"file.csv\")\n+  df <- df1[, c(\"int\", \"dbl\")]\n+  write.csv(df, dst_file, row.names = FALSE, quote = FALSE)\n+\n+  # Mismatch of column names vs schema given via read_options should raise an error\n+  opts <- CsvReadOptions$create(column_names = c(\"i\", \"d\"))\n+  schema             <- schema(int = int32(), dbl = float64())\n+\n+  expect_error(\n+    open_dataset(csv_dir, format = \"csv\", schema = schema, read_options = opts),\n+    \"column_names not matching or not found in schema-names\"\n+  )\n\nReview comment:\n       Thanks for the test, looking good.  One minor suggestion: how about swapping this for a simpler case, e.g.:\r\n   ```\r\n   open_dataset(csv_dir, format = \"csv\", schema = schema, column_names = c(\"these\", \"are\", \"not\", \"the\", \"columns\", \"from\", \"the\", \"schema\"))\r\n   ```\r\n   It then removes the need to do the more complex work of `opts <- CsvReadOptions$create(column_names = c(\"i\", \"d\"))` which is technically off-label usage that we don't recommend anyway.\n\n##########\nFile path: r/R/dataset-format.R\n##########\n@@ -122,6 +122,31 @@ CsvFileFormat$create <- function(...,\n                                  opts = csv_file_format_parse_options(...),\n                                  convert_options = csv_file_format_convert_opts(...),\n                                  read_options = csv_file_format_read_opts(...)) {\n+\n+  options <- list(...)\n+  schema  <- options[[\"schema\"]]\n+\n+  column_names     <- read_options$column_names\n+  schema_names     <- names(schema)\n+\n+  if (!is.null(schema) & !identical(schema_names, column_names)) {\n+\n+    # Element wise comparison and set differnce of column_names and names in schema\n+    mismatch_colnames <- column_names[match(column_names, schema_names, nomatch = 0) != seq(column_names)]\n+    not_in_schema     <- setdiff(schema_names, column_names)\n+\n+    abort(c(\n+            paste(\n+                \"column_names not matching or not found in schema-names:\",\n+                deparse1(c(mismatch_colnames, not_in_schema))\n+            ),\n+            i = \"Set column_names to match names of schema\",\n+            i = \"Omit the column_names argument\",\n+            i = \"Omit the read_options argument\"\n\nReview comment:\n       I really love that you've come up with helpful solutions for the end-user here.  However, I have a concern that given that there are multiple paths that users can take to get here, and `read_options` isn't an argument that the user is necessarily aware of (it's a few levels down in a function they wouldn't be likely to call directly), and so this error message might be a little confusing - it may be sufficient just to state what's wrong, without any suggestions.\r\n   \r\n   Could I get your thoughts here @jonkeane?\n\n##########\nFile path: r/R/dataset-format.R\n##########\n@@ -122,6 +122,31 @@ CsvFileFormat$create <- function(...,\n                                  opts = csv_file_format_parse_options(...),\n                                  convert_options = csv_file_format_convert_opts(...),\n                                  read_options = csv_file_format_read_opts(...)) {\n+\n+  options <- list(...)\n+  schema  <- options[[\"schema\"]]\n+\n+  column_names     <- read_options$column_names\n+  schema_names     <- names(schema)\n+\n+  if (!is.null(schema) & !identical(schema_names, column_names)) {\n+\n+    # Element wise comparison and set differnce of column_names and names in schema\n+    mismatch_colnames <- column_names[match(column_names, schema_names, nomatch = 0) != seq(column_names)]\n+    not_in_schema     <- setdiff(schema_names, column_names)\n+\n+    abort(c(\n+            paste(\n+                \"column_names not matching or not found in schema-names:\",\n\nReview comment:\n       What do you think to the idea of rephrasing this to use \"should\" or \"must\" as per the tidyverse style guide (https://style.tidyverse.org/error-messages.html)?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T14:55:02.159+0000",
                    "updated": "2022-01-24T14:55:02.159+0000",
                    "started": "2022-01-24T14:55:02.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713809",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/714560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "toppyy commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r791814292\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset-csv.R\n##########\n@@ -299,3 +299,21 @@ test_that(\"open_dataset() deals with BOMs (byte-order-marks) correctly\", {\n     tibble(a = c(1, 3), b = c(2, 4))\n   )\n })\n+\n+test_that(\"Error if read_options$column_names and schema-names differ (ARROW-14744)\", {\n+\n+  dst_dir  <- make_temp_dir()\n+  dst_file <- file.path(dst_dir, \"file.csv\")\n+  df <- df1[, c(\"int\", \"dbl\")]\n+  write.csv(df, dst_file, row.names = FALSE, quote = FALSE)\n+\n+  # Mismatch of column names vs schema given via read_options should raise an error\n+  opts <- CsvReadOptions$create(column_names = c(\"i\", \"d\"))\n+  schema             <- schema(int = int32(), dbl = float64())\n+\n+  expect_error(\n+    open_dataset(csv_dir, format = \"csv\", schema = schema, read_options = opts),\n+    \"column_names not matching or not found in schema-names\"\n+  )\n\nReview comment:\n       Thanks again for all of the comments, really helpful!\r\n   \r\n   At the moment the example you provided would *not* raise an error if I've got it right. This is due to the following logic in `csv_file_format_read_opts`:\r\n   \r\n   https://github.com/apache/arrow/blob/0fa4b9ca1e7b13ac230f85075d86d783eeea6a74/r/R/dataset-format.R#L223-L225\r\n   \r\n   If schema is set, it overrides `column_names` in all situations. Because the check is done after `csv_file_format_read_opts` no error is raised despite of conflicting arguments from the user (which might be a little confusing for the user?). \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T15:12:28.098+0000",
                    "updated": "2022-01-25T15:12:28.098+0000",
                    "started": "2022-01-25T15:12:28.098+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714560",
                    "issueId": "13412372"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/worklog/714575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #12083:\nURL: https://github.com/apache/arrow/pull/12083#discussion_r791822069\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset-csv.R\n##########\n@@ -299,3 +299,21 @@ test_that(\"open_dataset() deals with BOMs (byte-order-marks) correctly\", {\n     tibble(a = c(1, 3), b = c(2, 4))\n   )\n })\n+\n+test_that(\"Error if read_options$column_names and schema-names differ (ARROW-14744)\", {\n+\n+  dst_dir  <- make_temp_dir()\n+  dst_file <- file.path(dst_dir, \"file.csv\")\n+  df <- df1[, c(\"int\", \"dbl\")]\n+  write.csv(df, dst_file, row.names = FALSE, quote = FALSE)\n+\n+  # Mismatch of column names vs schema given via read_options should raise an error\n+  opts <- CsvReadOptions$create(column_names = c(\"i\", \"d\"))\n+  schema             <- schema(int = int32(), dbl = float64())\n+\n+  expect_error(\n+    open_dataset(csv_dir, format = \"csv\", schema = schema, read_options = opts),\n+    \"column_names not matching or not found in schema-names\"\n+  )\n\nReview comment:\n       Good catch - let's update that to something like `if (!is.null(schema)) && is.null(opts[[\"column_names\"]])`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T15:19:40.518+0000",
                    "updated": "2022-01-25T15:19:40.518+0000",
                    "started": "2022-01-25T15:19:40.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714575",
                    "issueId": "13412372"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 18600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@f939250[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40d86cac[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f91261[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@647b37e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d29aa31[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3933489[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4eb45480[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@75d3d26b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75ab86c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6f86c382[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3fa8aa6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@68514038[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 27 16:35:56 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-27T16:35:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14744/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-11-17T22:31:59.000+0000",
        "updated": "2022-01-29T03:21:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Note: this occurs regardless of whether the data has a header or not\r\n\r\n{code:r}\r\ntd <- tempfile()\r\ndir.create(td)\r\n\r\nreadr::write_csv(ggplot2::diamonds, file=file.path(td, 'diamonds.csv'), col_names=FALSE)\r\nreadLines(file.path(td, \"diamonds.csv\"), n = 2)\r\n\r\nopen_dataset(\r\n  td,\r\n  format = 'csv',\r\n  schema = diamond_schema,\r\n  partitioning = NULL,\r\n  skip_rows = 1,\r\n  unify_schemas = FALSE,\r\n  read_options = arrow::CsvReadOptions$create(\r\n    skip_rows = 1,\r\n    column_names = names(diamond_schema)\r\n  )\r\n) %>%\r\n  collect()\r\n# # A tibble: 53,939 \u00d7 10\r\n#    carat cut       color clarity depth table price     x     y     z\r\n#    <dbl> <chr>     <chr> <chr>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\r\n#  1  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\r\n#  2  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\r\n#  3  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\r\n#  4  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\r\n#  5  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\r\n#  6  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\r\n#  7  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\r\n#  8  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\r\n#  9  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\r\n# 10  0.3  Good      J     SI1      64      55   339  4.25  4.28  2.73\r\n# # \u2026 with 53,929 more rows\r\n\r\n\r\nopen_dataset(\r\n  td,\r\n  format='csv',\r\n  schema = diamond_schema,\r\n  skip_rows = 1,\r\n  read_options=arrow::CsvReadOptions$create(skip_rows=1)) %>%\r\n  collect()\r\n\r\n# # A tibble: 53,938 \u00d7 10\r\n#    carat cut   color clarity depth table price     x     y     z\r\n#    <dbl> <chr> <chr> <chr>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\r\n#  1    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  2    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  3    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  4    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  5    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  6    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  7    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  8    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n#  9    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n# 10    NA NA    NA    NA         NA    NA    NA    NA    NA    NA\r\n# # \u2026 with 53,928 more rows\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] open_dataset() error when `schema` argument supplied, but `column_names` not supplied to `CSVReadOptions`",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17461512",
                    "id": "17461512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "body": "Full reprex:\r\n\r\n{code:R}\r\nlibrary(arrow, warn.conflicts = FALSE)\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\ndiamond_schema <- Table$create(\r\n  ggplot2::diamonds %>% mutate_if(is.factor, as.character)\r\n)$schema\r\n\r\ntd <- tempfile()\r\ndir.create(td)\r\n\r\nreadr::write_csv(\r\n  ggplot2::diamonds, file=file.path(td, 'diamonds.csv'),\r\n  col_names = FALSE\r\n)\r\n\r\nopen_dataset(\r\n  td,\r\n  format='csv',\r\n  schema = diamond_schema,\r\n  skip_rows = 1,\r\n  read_options=arrow::CsvReadOptions$create(\r\n    skip_rows = 1\r\n    # ..and no column_names\r\n  )\r\n) %>%\r\n  collect()\r\n#> # A tibble: 53,938 \u00d7 10\r\n#>    carat cut   color clarity depth table price     x     y     z\r\n#>    <dbl> <chr> <chr> <chr>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\r\n#>  1    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  2    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  3    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  4    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  5    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  6    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  7    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  8    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#>  9    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#> 10    NA <NA>  <NA>  <NA>       NA    NA    NA    NA    NA    NA\r\n#> # \u2026 with 53,928 more rows\r\n\r\n# ...but works with column_names exists\r\nopen_dataset(\r\n  td,\r\n  format = 'csv',\r\n  schema = diamond_schema,\r\n  partitioning = NULL,\r\n  skip_rows = 1,\r\n  unify_schemas = FALSE,\r\n  read_options = arrow::CsvReadOptions$create(\r\n    skip_rows = 1,\r\n    column_names = names(diamond_schema)\r\n  )\r\n) %>%\r\n  collect()\r\n#> # A tibble: 53,939 \u00d7 10\r\n#>    carat cut       color clarity depth table price     x     y     z\r\n#>    <dbl> <chr>     <chr> <chr>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\r\n#>  1  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\r\n#>  2  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\r\n#>  3  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\r\n#>  4  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\r\n#>  5  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\r\n#>  6  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\r\n#>  7  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\r\n#>  8  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\r\n#>  9  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\r\n#> 10  0.3  Good      J     SI1      64      55   339  4.25  4.28  2.73\r\n#> # \u2026 with 53,929 more rows\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "created": "2021-12-17T15:21:59.525+0000",
                    "updated": "2021-12-17T15:21:59.525+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17467575",
                    "id": "17467575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
                        "name": "toppyy",
                        "key": "JIRAUSER282904",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Topias Pyykk\u00f6nen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I could try to make a pull request for this if it\u2019s up for grabs.\r\n\r\nHad a look at it and it seems that the function _csv_file_format_read_opts_ tries to set column names from the schema for the CSV read options. However, that function is never called by _CsvFileFormat$create_ when the read_options -parameter is set (as function-call is the default argument).\r\n\r\nSo at the moment, the column_names are not retrieved from the schema if any read_options are given (like skip_rows=1 in the example). At least two solutions come to mind:\r\n # Supplement the read_options with column names from schema in _CsvFileFormat$create_ if they are not set\r\n # Rename read_options-parameter in _CsvFileFormat$create_ and create a column_name-supplemented copy of read_options in csv_file_format_read_opts\r\n\r\nAny thoughts on which way to proceed (or should I consider something else)?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
                        "name": "toppyy",
                        "key": "JIRAUSER282904",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Topias Pyykk\u00f6nen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-01-02T09:26:56.479+0000",
                    "updated": "2022-01-02T09:26:56.479+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17468181",
                    "id": "17468181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "body": "At this point, you're the one who's looked into this the most, so I'd suggest you give whichever one you think is best a shot! [~thisisnic] has spend the most time here and may have a suggestion. Both solutions sound reasonable on paper but I find that it isn't until things are implemented (at least partially) that a clearest path emerges. Go for it! If you run into problems getting an Arrow development setup feel free to post here and we'll see what we can do.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "created": "2022-01-03T20:09:36.931+0000",
                    "updated": "2022-01-03T20:09:36.931+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17468591",
                    "id": "17468591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Hi [~toppyy] - thanks for working this out!  I think the first option is the better one as it avoids making breaking changes to the API for that function.  As [~paleolimbot] says, give us a shout if you need anything!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-04T11:53:20.067+0000",
                    "updated": "2022-01-04T11:53:20.067+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17468761",
                    "id": "17468761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
                        "name": "toppyy",
                        "key": "JIRAUSER282904",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Topias Pyykk\u00f6nen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Great, thanks for the comments! \r\n\r\nI made a first draft: [https://github.com/toppyy/arrow/blob/master/r/R/dataset-format.R#L126]\r\n\r\nIt basically just calls _csv_file_format_read_opts_ again if column_names are not set. \r\n\r\nI did, however, run into trouble. Say, for example, the user has set skip_rows-option like this:\r\nread_options=arrow::CsvReadOptions$create(skip_rows=1))\r\nI image we'd like to keep whatever options the user has set when we re-create the CsvReadOptions-object\u00a0 with column names from the schema. The problem is that I cannot access skip_rows in the object after it's created, so I cannot use that information to create another instance of CsvReadOptions that has both the column_names and skip rows set (plus any other options).\r\n\r\nAny thoughts? Is there a way to access skip_rows and other attributes that I'm unaware of? Of course, one solution is to change class declaration of CsvReadOptions to have access to these attributes.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
                        "name": "toppyy",
                        "key": "JIRAUSER282904",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Topias Pyykk\u00f6nen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-01-04T18:02:51.741+0000",
                    "updated": "2022-01-04T18:02:51.741+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17469234",
                    "id": "17469234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "That's fantastic, thanks for that quick initial draft!  Just had a thought - what do you think to the idea of opening a draft pull request?  It'll make it easier to skim through your changes and work out what we can do about the problem you ran into.\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-05T11:42:52.457+0000",
                    "updated": "2022-01-05T11:42:52.457+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17469387",
                    "id": "17469387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
                        "name": "toppyy",
                        "key": "JIRAUSER282904",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Topias Pyykk\u00f6nen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ok, that makes sense! Here's a link to the PR: [https://github.com/apache/arrow/pull/12083]\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toppyy",
                        "name": "toppyy",
                        "key": "JIRAUSER282904",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Topias Pyykk\u00f6nen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-01-05T15:38:56.306+0000",
                    "updated": "2022-01-05T15:38:56.306+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412372/comment/17483258",
                    "id": "17483258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 12083\n[https://github.com/apache/arrow/pull/12083]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-27T16:35:56.853+0000",
                    "updated": "2022-01-27T16:35:56.853+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wu54:",
        "customfield_12314139": null
    }
}