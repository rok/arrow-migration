{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13206148",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148",
    "key": "ARROW-4104",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "arrow",
            "java",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "aggregateprogress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4104/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 34,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra opened a new pull request #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-22T13:28:24.360+0000",
                    "updated": "2018-12-22T13:28:24.360+0000",
                    "started": "2018-12-22T13:28:24.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178248",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-449854433\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=h1) Report\n   > Merging [#3246](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cfaea429d0f2d3d9baa2a10d6da759ffd0f9d7f8?src=pr&el=desc) will **increase** coverage by `0.67%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3246/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3246      +/-   ##\n   ==========================================\n   + Coverage   88.46%   89.14%   +0.67%     \n   ==========================================\n     Files         539      383     -156     \n     Lines       72845    48876   -23969     \n   ==========================================\n   - Hits        64444    43571   -20873     \n   + Misses       8294     5305    -2989     \n   + Partials      107        0     -107\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/regex\\_util.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3JlZ2V4X3V0aWwuaA==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/like\\_holder.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2xpa2VfaG9sZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0.52% <0%> (-90.48%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_holder\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX2hvbGRlcl9yZWdpc3RyeS5o) | `0% <0%> (-80%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `0.26% <0%> (-74.08%)` | :arrow_down: |\n   | [cpp/src/gandiva/like\\_holder.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2xpa2VfaG9sZGVyLmNj) | `7.31% <0%> (-63.42%)` | :arrow_down: |\n   | [cpp/src/gandiva/regex\\_util.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3JlZ2V4X3V0aWwuY2M=) | `9.09% <0%> (-50%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `59.01% <0%> (-40.99%)` | :arrow_down: |\n   | [cpp/src/plasma/events.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZlbnRzLmNj) | `52.5% <0%> (-35%)` | :arrow_down: |\n   | ... and [216 more](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=footer). Last update [cfaea42...c6aadf5](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-25T14:29:23.699+0000",
                    "updated": "2018-12-25T14:29:23.699+0000",
                    "started": "2018-12-25T14:29:23.699+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178572",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-449854433\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=h1) Report\n   > Merging [#3246](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cfaea429d0f2d3d9baa2a10d6da759ffd0f9d7f8?src=pr&el=desc) will **increase** coverage by `0.67%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3246/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3246      +/-   ##\n   ==========================================\n   + Coverage   88.46%   89.14%   +0.67%     \n   ==========================================\n     Files         539      383     -156     \n     Lines       72845    48876   -23969     \n   ==========================================\n   - Hits        64444    43571   -20873     \n   + Misses       8294     5305    -2989     \n   + Partials      107        0     -107\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/regex\\_util.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3JlZ2V4X3V0aWwuaA==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/like\\_holder.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2xpa2VfaG9sZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0.52% <0%> (-90.48%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_holder\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX2hvbGRlcl9yZWdpc3RyeS5o) | `0% <0%> (-80%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `0.26% <0%> (-74.08%)` | :arrow_down: |\n   | [cpp/src/gandiva/like\\_holder.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2xpa2VfaG9sZGVyLmNj) | `7.31% <0%> (-63.42%)` | :arrow_down: |\n   | [cpp/src/gandiva/regex\\_util.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3JlZ2V4X3V0aWwuY2M=) | `9.09% <0%> (-50%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `59.01% <0%> (-40.99%)` | :arrow_down: |\n   | [cpp/src/plasma/events.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZlbnRzLmNj) | `52.5% <0%> (-35%)` | :arrow_down: |\n   | ... and [216 more](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=footer). Last update [cfaea42...e91da68](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-26T16:55:39.695+0000",
                    "updated": "2018-12-26T16:55:39.695+0000",
                    "started": "2018-12-26T16:55:39.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178718",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-450018292\n \n \n   @siddharthteotia @jacques-n can you please review ?\r\n   \r\n   1. I changed the default allocation size to 3968 (from 4096) since allocating 4096 elements causes a wastage of at ~16K.\r\n   2. Lot of tests assume an initial allocation of 4096 or 4095 - I've modified the tests to explicitly set the initial allocation size.\r\n   3. fixed a race condition (bug in my earlier change)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-26T20:06:16.547+0000",
                    "updated": "2018-12-26T20:06:16.547+0000",
                    "started": "2018-12-26T20:06:16.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178760",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244077330\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -98,5 +104,40 @@ protected ArrowBuf releaseBuffer(ArrowBuf buffer) {\n   protected static int getValidityBufferSizeFromCount(final int valueCount) {\n     return (int) Math.ceil(valueCount / 8.0);\n   }\n+\n+  /* round up to the next multiple of 8 */\n+  protected static long roundUp8(long size) {\n+    return ((size + 7) / 8) * 8;\n+  }\n+\n+  /*\n+   * Allocate a single buffer and slice into multiple.\n+   */\n+  protected static ArrowBuf[] allocAndSlice(BufferAllocator allocator, int[] lengths) {\n \n Review comment:\n   This seems more generic than necessary. Why not make it size aware and do the allocation based on a provided value count? Also, if int[] is always length two in usage, let's make it focus on that case. For example, we shouldn't be allocating the variable data chunk in the same vector since it will have a different lifecycle.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T03:36:55.763+0000",
                    "updated": "2018-12-27T03:36:55.763+0000",
                    "started": "2018-12-27T03:36:55.763+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178884",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244077377\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -522,15 +530,44 @@ public void reallocDataBuffer() {\n    * @throws OutOfMemoryException if the internal memory allocation fails\n    */\n   public void reallocValidityAndOffsetBuffers() {\n-    offsetBuffer = reallocBufferHelper(offsetBuffer, true);\n-    validityBuffer = reallocBufferHelper(validityBuffer, false);\n+    int offsetBaseSize = Integer.max(offsetBuffer.capacity(), offsetAllocationSizeInBytes);\n \n Review comment:\n   I don't understand why this can't be generic just like the the original alloc with just valuecount *2\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T03:36:55.766+0000",
                    "updated": "2018-12-27T03:36:55.766+0000",
                    "started": "2018-12-27T03:36:55.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178885",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244077401\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -522,15 +530,44 @@ public void reallocDataBuffer() {\n    * @throws OutOfMemoryException if the internal memory allocation fails\n    */\n   public void reallocValidityAndOffsetBuffers() {\n-    offsetBuffer = reallocBufferHelper(offsetBuffer, true);\n-    validityBuffer = reallocBufferHelper(validityBuffer, false);\n+    int offsetBaseSize = Integer.max(offsetBuffer.capacity(), offsetAllocationSizeInBytes);\n+    long newOffsetBufferSize = offsetBaseSize * 2L;\n+    long targetOffsetBufferSize = roundUp8(BaseAllocator.nextPowerOfTwo(newOffsetBufferSize));\n+    long targetOffsetCount = targetOffsetBufferSize / 4;\n+    targetOffsetBufferSize -= getValidityBufferSizeFromCount((int) targetOffsetCount);\n+    if (newOffsetBufferSize < targetOffsetBufferSize) {\n+      newOffsetBufferSize = targetOffsetBufferSize;\n+    }\n+\n+    long newValidityBufferSize = getValidityBufferSizeFromCount((int)(newOffsetBufferSize / 4));\n+\n+    long newAllocationSize = newOffsetBufferSize + newValidityBufferSize;\n+    assert newAllocationSize >= 1;\n+\n+    if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n+      throw new OversizedAllocationException(\"Unable to expand the buffer\");\n+    }\n+\n+    ArrowBuf[] buffers = allocAndSlice(allocator,\n+        new int[] {(int)newOffsetBufferSize, (int)newValidityBufferSize});\n+    final ArrowBuf newOffsetBuffer = buffers[0];\n+    newOffsetBuffer.setBytes(0, offsetBuffer, 0, offsetBuffer.capacity());\n+    newOffsetBuffer.setZero(offsetBuffer.capacity(), (int)newOffsetBufferSize - offsetBuffer.capacity());\n+    offsetBuffer.release();\n+    offsetBuffer = newOffsetBuffer;\n+    offsetAllocationSizeInBytes = (int)newOffsetBufferSize;\n+\n+    final ArrowBuf newValidityBuffer = buffers[1];\n+    newValidityBuffer.setBytes(0, validityBuffer, 0, validityBuffer.capacity());\n+    newValidityBuffer.setZero(validityBuffer.capacity(), (int)newValidityBufferSize - validityBuffer.capacity());\n+    validityBuffer.release();\n+    validityBuffer = newValidityBuffer;\n+    validityAllocationSizeInBytes = (int)newValidityBufferSize;\n   }\n \n-  /* helper method to realloc a particular buffer. returns the allocated buffer */\n-  private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean offsetBuffer) {\n-    final int currentBufferCapacity = buffer.capacity();\n-    long baseSize = (offsetBuffer ? offsetAllocationSizeInBytes\n-            : validityAllocationSizeInBytes);\n+  private void reallocValidityBuffer() {\n+    final int currentBufferCapacity = validityBuffer.capacity();\n \n Review comment:\n   Why do we have this method at all? Shouldn't this be shared with the value buffer?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T03:36:55.779+0000",
                    "updated": "2018-12-27T03:36:55.779+0000",
                    "started": "2018-12-27T03:36:55.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178886",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244089451\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -98,5 +104,40 @@ protected ArrowBuf releaseBuffer(ArrowBuf buffer) {\n   protected static int getValidityBufferSizeFromCount(final int valueCount) {\n     return (int) Math.ceil(valueCount / 8.0);\n   }\n+\n+  /* round up to the next multiple of 8 */\n+  protected static long roundUp8(long size) {\n+    return ((size + 7) / 8) * 8;\n+  }\n+\n+  /*\n+   * Allocate a single buffer and slice into multiple.\n+   */\n+  protected static ArrowBuf[] allocAndSlice(BufferAllocator allocator, int[] lengths) {\n \n Review comment:\n   I want to use this for both fixed-len (data+validity) and var-len vectors (offsets+validity). \r\n   \r\n   - For the fixed-len vectors, the data buffers and validity buffers are sized for the same number-of-elements. \r\n   - For the var-len vectors, the offset buffer needs to be sized for one extra element than the bitmap.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T06:20:54.331+0000",
                    "updated": "2018-12-27T06:20:54.331+0000",
                    "started": "2018-12-27T06:20:54.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178976",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244090075\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -522,15 +530,44 @@ public void reallocDataBuffer() {\n    * @throws OutOfMemoryException if the internal memory allocation fails\n    */\n   public void reallocValidityAndOffsetBuffers() {\n-    offsetBuffer = reallocBufferHelper(offsetBuffer, true);\n-    validityBuffer = reallocBufferHelper(validityBuffer, false);\n+    int offsetBaseSize = Integer.max(offsetBuffer.capacity(), offsetAllocationSizeInBytes);\n \n Review comment:\n   - even if the initial allocation was not a power-of-two allocation, I'm making the realloc switch to a power-of-2. most of the code deals with that.\r\n   - during realloc, we need to memcpy from original buffer, and bzero the rest. \r\n   \r\n   other than the above, the code is common (allocAndSlice).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T06:27:11.528+0000",
                    "updated": "2018-12-27T06:27:11.528+0000",
                    "started": "2018-12-27T06:27:11.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178978",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/178981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244090911\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -522,15 +530,44 @@ public void reallocDataBuffer() {\n    * @throws OutOfMemoryException if the internal memory allocation fails\n    */\n   public void reallocValidityAndOffsetBuffers() {\n-    offsetBuffer = reallocBufferHelper(offsetBuffer, true);\n-    validityBuffer = reallocBufferHelper(validityBuffer, false);\n+    int offsetBaseSize = Integer.max(offsetBuffer.capacity(), offsetAllocationSizeInBytes);\n+    long newOffsetBufferSize = offsetBaseSize * 2L;\n+    long targetOffsetBufferSize = roundUp8(BaseAllocator.nextPowerOfTwo(newOffsetBufferSize));\n+    long targetOffsetCount = targetOffsetBufferSize / 4;\n+    targetOffsetBufferSize -= getValidityBufferSizeFromCount((int) targetOffsetCount);\n+    if (newOffsetBufferSize < targetOffsetBufferSize) {\n+      newOffsetBufferSize = targetOffsetBufferSize;\n+    }\n+\n+    long newValidityBufferSize = getValidityBufferSizeFromCount((int)(newOffsetBufferSize / 4));\n+\n+    long newAllocationSize = newOffsetBufferSize + newValidityBufferSize;\n+    assert newAllocationSize >= 1;\n+\n+    if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n+      throw new OversizedAllocationException(\"Unable to expand the buffer\");\n+    }\n+\n+    ArrowBuf[] buffers = allocAndSlice(allocator,\n+        new int[] {(int)newOffsetBufferSize, (int)newValidityBufferSize});\n+    final ArrowBuf newOffsetBuffer = buffers[0];\n+    newOffsetBuffer.setBytes(0, offsetBuffer, 0, offsetBuffer.capacity());\n+    newOffsetBuffer.setZero(offsetBuffer.capacity(), (int)newOffsetBufferSize - offsetBuffer.capacity());\n+    offsetBuffer.release();\n+    offsetBuffer = newOffsetBuffer;\n+    offsetAllocationSizeInBytes = (int)newOffsetBufferSize;\n+\n+    final ArrowBuf newValidityBuffer = buffers[1];\n+    newValidityBuffer.setBytes(0, validityBuffer, 0, validityBuffer.capacity());\n+    newValidityBuffer.setZero(validityBuffer.capacity(), (int)newValidityBufferSize - validityBuffer.capacity());\n+    validityBuffer.release();\n+    validityBuffer = newValidityBuffer;\n+    validityAllocationSizeInBytes = (int)newValidityBufferSize;\n   }\n \n-  /* helper method to realloc a particular buffer. returns the allocated buffer */\n-  private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean offsetBuffer) {\n-    final int currentBufferCapacity = buffer.capacity();\n-    long baseSize = (offsetBuffer ? offsetAllocationSizeInBytes\n-            : validityAllocationSizeInBytes);\n+  private void reallocValidityBuffer() {\n+    final int currentBufferCapacity = validityBuffer.capacity();\n \n Review comment:\n   This is used by an api called setNull(int index) -  it just sets the validity bit to false without actually adding a data element. If this optimization isn't useful, I can switch to expand both validity/offset arrays (I preserved the old behavior).\r\n   \r\n   Also, used by another api setIndexDefined(int index). I think this one isn't meaningful unless we expand both the validity and the offset arrays.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T06:35:54.397+0000",
                    "updated": "2018-12-27T06:35:54.397+0000",
                    "started": "2018-12-27T06:35:54.396+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178981",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244140501\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -522,15 +530,44 @@ public void reallocDataBuffer() {\n    * @throws OutOfMemoryException if the internal memory allocation fails\n    */\n   public void reallocValidityAndOffsetBuffers() {\n-    offsetBuffer = reallocBufferHelper(offsetBuffer, true);\n-    validityBuffer = reallocBufferHelper(validityBuffer, false);\n+    int offsetBaseSize = Integer.max(offsetBuffer.capacity(), offsetAllocationSizeInBytes);\n \n Review comment:\n   thinking further, I think this can be simplified significantly if I make both the initial allocation and the reAlloc target a multiple-of-2 allocation. \r\n   \r\n   I'll need to fix a lot of tests (the allocation may be larger than what was asked for), but it's probably worth the simplicity. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T12:05:48.068+0000",
                    "updated": "2018-12-27T12:05:48.068+0000",
                    "started": "2018-12-27T12:05:48.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179074",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179151",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244189922\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -522,15 +530,44 @@ public void reallocDataBuffer() {\n    * @throws OutOfMemoryException if the internal memory allocation fails\n    */\n   public void reallocValidityAndOffsetBuffers() {\n-    offsetBuffer = reallocBufferHelper(offsetBuffer, true);\n-    validityBuffer = reallocBufferHelper(validityBuffer, false);\n+    int offsetBaseSize = Integer.max(offsetBuffer.capacity(), offsetAllocationSizeInBytes);\n+    long newOffsetBufferSize = offsetBaseSize * 2L;\n+    long targetOffsetBufferSize = roundUp8(BaseAllocator.nextPowerOfTwo(newOffsetBufferSize));\n+    long targetOffsetCount = targetOffsetBufferSize / 4;\n+    targetOffsetBufferSize -= getValidityBufferSizeFromCount((int) targetOffsetCount);\n+    if (newOffsetBufferSize < targetOffsetBufferSize) {\n+      newOffsetBufferSize = targetOffsetBufferSize;\n+    }\n+\n+    long newValidityBufferSize = getValidityBufferSizeFromCount((int)(newOffsetBufferSize / 4));\n+\n+    long newAllocationSize = newOffsetBufferSize + newValidityBufferSize;\n+    assert newAllocationSize >= 1;\n+\n+    if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n+      throw new OversizedAllocationException(\"Unable to expand the buffer\");\n+    }\n+\n+    ArrowBuf[] buffers = allocAndSlice(allocator,\n+        new int[] {(int)newOffsetBufferSize, (int)newValidityBufferSize});\n+    final ArrowBuf newOffsetBuffer = buffers[0];\n+    newOffsetBuffer.setBytes(0, offsetBuffer, 0, offsetBuffer.capacity());\n+    newOffsetBuffer.setZero(offsetBuffer.capacity(), (int)newOffsetBufferSize - offsetBuffer.capacity());\n+    offsetBuffer.release();\n+    offsetBuffer = newOffsetBuffer;\n+    offsetAllocationSizeInBytes = (int)newOffsetBufferSize;\n+\n+    final ArrowBuf newValidityBuffer = buffers[1];\n+    newValidityBuffer.setBytes(0, validityBuffer, 0, validityBuffer.capacity());\n+    newValidityBuffer.setZero(validityBuffer.capacity(), (int)newValidityBufferSize - validityBuffer.capacity());\n+    validityBuffer.release();\n+    validityBuffer = newValidityBuffer;\n+    validityAllocationSizeInBytes = (int)newValidityBufferSize;\n   }\n \n-  /* helper method to realloc a particular buffer. returns the allocated buffer */\n-  private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean offsetBuffer) {\n-    final int currentBufferCapacity = buffer.capacity();\n-    long baseSize = (offsetBuffer ? offsetAllocationSizeInBytes\n-            : validityAllocationSizeInBytes);\n+  private void reallocValidityBuffer() {\n+    final int currentBufferCapacity = validityBuffer.capacity();\n \n Review comment:\n   Yes, we should always only resize together. If you resized the validity buffer, you'll need to resize the data buffer ultimately anyway (when you call setValueCount). We shouldn't be ever doing a partial resize.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-27T16:59:12.983+0000",
                    "updated": "2018-12-27T16:59:12.983+0000",
                    "started": "2018-12-27T16:59:12.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179151",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-449854433\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=h1) Report\n   > Merging [#3246](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cfaea429d0f2d3d9baa2a10d6da759ffd0f9d7f8?src=pr&el=desc) will **increase** coverage by `0.8%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3246/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3246      +/-   ##\n   ==========================================\n   + Coverage   88.46%   89.27%    +0.8%     \n   ==========================================\n     Files         539      384     -155     \n     Lines       72845    48973   -23872     \n   ==========================================\n   - Hits        64444    43720   -20724     \n   + Misses       8294     5253    -3041     \n   + Partials      107        0     -107\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0.52% <0%> (-90.48%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_holder\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX2hvbGRlcl9yZWdpc3RyeS5o) | `0% <0%> (-80%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `0.26% <0%> (-74.08%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `59.01% <0%> (-40.99%)` | :arrow_down: |\n   | [cpp/src/plasma/events.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZlbnRzLmNj) | `52.5% <0%> (-35%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/options.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3Yvb3B0aW9ucy5o) | `66.66% <0%> (-33.34%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `41.7% <0%> (-29.39%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `21.61% <0%> (-23.65%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `51.26% <0%> (-22.34%)` | :arrow_down: |\n   | ... and [221 more](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=footer). Last update [cfaea42...135b558](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-28T11:47:17.911+0000",
                    "updated": "2018-12-28T11:47:17.911+0000",
                    "started": "2018-12-28T11:47:17.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179423",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-449854433\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=h1) Report\n   > Merging [#3246](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cfaea429d0f2d3d9baa2a10d6da759ffd0f9d7f8?src=pr&el=desc) will **increase** coverage by `0.8%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3246/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3246      +/-   ##\n   ==========================================\n   + Coverage   88.46%   89.27%    +0.8%     \n   ==========================================\n     Files         539      384     -155     \n     Lines       72845    48981   -23864     \n   ==========================================\n   - Hits        64444    43728   -20716     \n   + Misses       8294     5253    -3041     \n   + Partials      107        0     -107\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0.52% <0%> (-90.48%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_holder\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX2hvbGRlcl9yZWdpc3RyeS5o) | `0% <0%> (-80%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `0.26% <0%> (-74.08%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `59.01% <0%> (-40.99%)` | :arrow_down: |\n   | [cpp/src/plasma/events.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZlbnRzLmNj) | `52.5% <0%> (-35%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/options.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3Yvb3B0aW9ucy5o) | `66.66% <0%> (-33.34%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `41.7% <0%> (-29.39%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `21.61% <0%> (-23.65%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `51.26% <0%> (-22.34%)` | :arrow_down: |\n   | ... and [221 more](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=footer). Last update [cfaea42...ad698b0](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-29T16:47:12.066+0000",
                    "updated": "2018-12-29T16:47:12.066+0000",
                    "started": "2018-12-29T16:47:12.065+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179712",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3246: ARROW-4104: [WIP] [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-449854433\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=h1) Report\n   > Merging [#3246](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cfaea429d0f2d3d9baa2a10d6da759ffd0f9d7f8?src=pr&el=desc) will **increase** coverage by `0.8%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3246/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3246      +/-   ##\n   ==========================================\n   + Coverage   88.46%   89.27%    +0.8%     \n   ==========================================\n     Files         539      384     -155     \n     Lines       72845    48981   -23864     \n   ==========================================\n   - Hits        64444    43728   -20716     \n   + Misses       8294     5253    -3041     \n   + Partials      107        0     -107\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0.52% <0%> (-90.48%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_holder\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX2hvbGRlcl9yZWdpc3RyeS5o) | `0% <0%> (-80%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `0.26% <0%> (-74.08%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `59.01% <0%> (-40.99%)` | :arrow_down: |\n   | [cpp/src/plasma/events.cc](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZlbnRzLmNj) | `52.5% <0%> (-35%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/options.h](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3Yvb3B0aW9ucy5o) | `66.66% <0%> (-33.34%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `41.7% <0%> (-29.39%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `21.61% <0%> (-23.65%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `51.26% <0%> (-22.34%)` | :arrow_down: |\n   | ... and [221 more](https://codecov.io/gh/apache/arrow/pull/3246/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=footer). Last update [cfaea42...cf00f87](https://codecov.io/gh/apache/arrow/pull/3246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-30T15:54:37.657+0000",
                    "updated": "2018-12-30T15:54:37.657+0000",
                    "started": "2018-12-30T15:54:37.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179796",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-450612031\n \n \n   @jacques-n - I've addressed the review comments. There is one change one behavior - both allocateNew and reAlloc can allocate more than the requested size, to ensure that the allocated buffer size is a power-of-2. Most of the test related changes are related to this.\r\n   \r\n   can you please review now ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-31T06:17:21.395+0000",
                    "updated": "2018-12-31T06:17:21.395+0000",
                    "started": "2018-12-31T06:17:21.394+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179855",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/179856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#issuecomment-450612031\n \n \n   @jacques-n - I've addressed the review comments. There is one change in behavior - both allocateNew and reAlloc can allocate more than the requested size, to ensure that the allocated buffer size is a power-of-2. Most of the test related changes are related to this.\r\n   \r\n   can you please review now ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-31T06:17:32.595+0000",
                    "updated": "2018-12-31T06:17:32.595+0000",
                    "started": "2018-12-31T06:17:32.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "179856",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/180340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244804888\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -98,5 +105,67 @@ protected ArrowBuf releaseBuffer(ArrowBuf buffer) {\n   protected static int getValidityBufferSizeFromCount(final int valueCount) {\n     return (int) Math.ceil(valueCount / 8.0);\n   }\n+\n+  /* round up to the next multiple of 8 */\n+  private static long roundUp8(long size) {\n+    return ((size + 7) / 8) * 8;\n+  }\n+\n+  protected long computeCombinedBufferSize(int valueCount, int typeWidth) {\n+    // compute size of validity buffer.\n+    long bufferSize = roundUp8(getValidityBufferSizeFromCount(valueCount));\n+\n+    // add the size of the value buffer.\n+    if (typeWidth == 0) {\n+      // for boolean type, value-buffer and validity-buffer are of same size.\n+      bufferSize *= 2;\n+    } else {\n+      bufferSize += roundUp8(valueCount * typeWidth);\n+    }\n+    return BaseAllocator.nextPowerOfTwo(bufferSize);\n+  }\n+\n+  protected ArrowBuf[] allocDataAndValidityBufs(int valueCount, int typeWidth) {\n \n Review comment:\n   Let's return an object instead of an array.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-02T18:10:40.005+0000",
                    "updated": "2019-01-02T18:10:40.005+0000",
                    "started": "2019-01-02T18:10:40.004+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "180340",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/180342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244805596\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -98,5 +105,67 @@ protected ArrowBuf releaseBuffer(ArrowBuf buffer) {\n   protected static int getValidityBufferSizeFromCount(final int valueCount) {\n     return (int) Math.ceil(valueCount / 8.0);\n   }\n+\n+  /* round up to the next multiple of 8 */\n+  private static long roundUp8(long size) {\n+    return ((size + 7) / 8) * 8;\n+  }\n+\n+  protected long computeCombinedBufferSize(int valueCount, int typeWidth) {\n \n Review comment:\n   Why not just add the pre-checks to this method rather than have in other places.\r\n   \r\n   valueCount between 0 and the value count allowed for a particular type.\r\n   type width 0 to 16 (right?)\r\n   \r\n   Also, shouldn't we be returning the calculated valuecount? e.g. if you size for 50 but it turns out we can fit 60 in the same memory, shouldn't we be using that as the available size/value count (for initial alloc purposes, etc)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-02T18:10:40.013+0000",
                    "updated": "2019-01-02T18:10:40.013+0000",
                    "started": "2019-01-02T18:10:40.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "180342",
                    "issueId": "13206148"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206148/worklog/180341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #3246: ARROW-4104: [Java] fix a race condition in AllocationManager\nURL: https://github.com/apache/arrow/pull/3246#discussion_r244804649\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -98,5 +105,67 @@ protected ArrowBuf releaseBuffer(ArrowBuf buffer) {\n   protected static int getValidityBufferSizeFromCount(final int valueCount) {\n     return (int) Math.ceil(valueCount / 8.0);\n   }\n+\n+  /* round up to the next multiple of 8 */\n+  private static long roundUp8(long size) {\n+    return ((size + 7) / 8) * 8;\n+  }\n+\n+  protected long computeCombinedBufferSize(int valueCount, int typeWidth) {\n+    // compute size of validity buffer.\n+    long bufferSize = roundUp8(getValidityBufferSizeFromCount(valueCount));\n+\n+    // add the size of the value buffer.\n+    if (typeWidth == 0) {\n+      // for boolean type, value-buffer and validity-buffer are of same size.\n+      bufferSize *= 2;\n+    } else {\n+      bufferSize += roundUp8(valueCount * typeWidth);\n+    }\n+    return BaseAllocator.nextPowerOfTwo(bufferSize);\n+  }\n+\n+  protected ArrowBuf[] allocDataAndValidityBufs(int valueCount, int typeWidth) {\n \n Review comment:\n   Isn't this really allocFixedDataAndValidityBufs?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-02T18:10:40.013+0000",
                    "updated": "2019-01-02T18:10:40.013+0000",
                    "started": "2019-01-02T18:10:40.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "180341",
                    "issueId": "13206148"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 17400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@49700ea2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4df231e8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58ebb2cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@44ab548[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cc8aff3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2019c8a5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@256173b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@745072a9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d2efce7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@531c5707[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d4e026f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@a7cf255[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 17400,
        "customfield_12312520": null,
        "customfield_12312521": "2018-12-22 12:54:47.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-13T12:31:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4104/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-22T12:54:47.000+0000",
        "updated": "2019-03-12T20:44:39.000+0000",
        "timeoriginalestimate": null,
        "description": "This is caused due to a bug in my changes for ARROW-1807. The synchronization is happening on the BufferLedger instance instead of the AllocationManager instance.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 17400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] race in AllocationManager during release",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|u0099s:",
        "customfield_12314139": null
    }
}