{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13090217",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217",
    "key": "ARROW-1280",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "beginner",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12510308",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12510308",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13090215",
                    "key": "ARROW-1278",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090215",
                    "fields": {
                        "summary": "Integration tests for Fixed Size List type",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12560809",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12560809",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13232662",
                    "key": "ARROW-5299",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13232662",
                    "fields": {
                        "summary": "[C++] ListArray comparison is incorrect",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1280/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 39,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278\n \n \n   - FixedSizeListType, parameterized by the list size (similar to FixedSizeBinaryType), constructed with `fixed_size_list(<value field or type>, list_size)`\r\n   - FixedSizeListArray, including Equal and pretty print impls\r\n   - FixedSizeListBuilder, works with MakeBuilder\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-08T17:14:21.514+0000",
                    "updated": "2019-05-08T17:14:21.514+0000",
                    "started": "2019-05-08T17:14:21.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239323",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282455707\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n+ public:\n+  using TypeClass = FixedSizeListType;\n+\n+  explicit FixedSizeListArray(const std::shared_ptr<ArrayData>& data);\n+\n+  FixedSizeListArray(const std::shared_ptr<DataType>& type, int64_t length,\n+                     const std::shared_ptr<Buffer>& value_offsets,\n+                     const std::shared_ptr<Array>& values,\n+                     const std::shared_ptr<Buffer>& null_bitmap = NULLPTR,\n+                     int64_t null_count = kUnknownNullCount, int64_t offset = 0);\n+\n+  const FixedSizeListType* list_type() const;\n+\n+  /// \\brief Return array object containing the list's values\n+  std::shared_ptr<Array> values() const;\n+\n+  std::shared_ptr<DataType> value_type() const;\n+\n+  // Neither of these functions will perform boundschecking\n+  int32_t value_offset(int64_t i) const {\n+    i += data_->offset;\n+    return static_cast<int32_t>(list_size_ * i);\n+  }\n+  int32_t value_length(...) const { return list_size_; }\n \n Review comment:\n   I think I prefer the explicit `int64_t i` as parameter. A bit better for the ABI.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T12:25:33.730+0000",
                    "updated": "2019-05-09T12:25:33.730+0000",
                    "started": "2019-05-09T12:25:33.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239718",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282455794\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n \n Review comment:\n   is it worth having common abstract class?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T12:25:35.069+0000",
                    "updated": "2019-05-09T12:25:35.069+0000",
                    "started": "2019-05-09T12:25:35.068+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239719",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282483057\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n+ public:\n+  using TypeClass = FixedSizeListType;\n+\n+  explicit FixedSizeListArray(const std::shared_ptr<ArrayData>& data);\n+\n+  FixedSizeListArray(const std::shared_ptr<DataType>& type, int64_t length,\n+                     const std::shared_ptr<Buffer>& value_offsets,\n+                     const std::shared_ptr<Array>& values,\n+                     const std::shared_ptr<Buffer>& null_bitmap = NULLPTR,\n+                     int64_t null_count = kUnknownNullCount, int64_t offset = 0);\n+\n+  const FixedSizeListType* list_type() const;\n+\n+  /// \\brief Return array object containing the list's values\n+  std::shared_ptr<Array> values() const;\n+\n+  std::shared_ptr<DataType> value_type() const;\n+\n+  // Neither of these functions will perform boundschecking\n+  int32_t value_offset(int64_t i) const {\n+    i += data_->offset;\n+    return static_cast<int32_t>(list_size_ * i);\n+  }\n+  int32_t value_length(...) const { return list_size_; }\n \n Review comment:\n   Even though it's independent of index?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T13:24:52.762+0000",
                    "updated": "2019-05-09T13:24:52.762+0000",
                    "started": "2019-05-09T13:24:52.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239739",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282486759\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n \n Review comment:\n   There's not much opportunity for code reuse in arrays/builders. The only advantage I can think of would be easier reuse of code which consumes `ListArray` (but only code which doesn't directly access the offsets buffer). Those algorithms could use `ArrayData BasicListArray::GetView(int64_t i)` or similar. This seems like speculative generality to me; I'd be more open to doing it if you can think of existing code which would benefit from being refactored this way.\r\n   \r\n   `FixedSizeListScalar` and `ListScalar` are identical but also trivial.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T13:34:05.630+0000",
                    "updated": "2019-05-09T13:34:05.630+0000",
                    "started": "2019-05-09T13:34:05.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239742",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282595609\n \n \n\n ##########\n File path: cpp/src/arrow/scalar.cc\n ##########\n @@ -69,4 +69,14 @@ ListScalar::ListScalar(const std::shared_ptr<Array>& value,\n ListScalar::ListScalar(const std::shared_ptr<Array>& value, bool is_valid)\n     : ListScalar(value, value->type(), is_valid) {}\n \n+// XXX DCHECK(value.length() == list_size) ?\n \n Review comment:\n   Just add it :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:50.776+0000",
                    "updated": "2019-05-09T18:18:50.776+0000",
                    "started": "2019-05-09T18:18:50.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239867",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282595906\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -197,7 +197,9 @@ class ArrayPrinter : public PrettyPrinter {\n   }\n \n   template <typename T>\n-  inline typename std::enable_if<std::is_base_of<ListArray, T>::value, Status>::type\n+  inline typename std::enable_if<std::is_base_of<ListArray, T>::value ||\n \n Review comment:\n   Could you add a test in `pretty_print-test.cc`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:51.307+0000",
                    "updated": "2019-05-09T18:18:51.307+0000",
                    "started": "2019-05-09T18:18:51.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239868",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282597063\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/json-internal.cc\n ##########\n @@ -556,6 +556,12 @@ class ArrayWriter {\n     return WriteChildren(type.children(), {array.values()});\n   }\n \n+  Status Visit(const FixedSizeListArray& array) {\n \n Review comment:\n   You might add a simple test for this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:51.505+0000",
                    "updated": "2019-05-09T18:18:51.505+0000",
                    "started": "2019-05-09T18:18:51.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239869",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282596787\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata-internal.cc\n ##########\n @@ -293,6 +293,14 @@ static Status ConcreteTypeFromFlatbuffer(\n       }\n       *out = std::make_shared<ListType>(children[0]);\n       return Status::OK();\n+    case flatbuf::Type_FixedSizeList:\n+      if (children.size() != 1) {\n+        return Status::Invalid(\"List must have exactly 1 child field\");\n \n Review comment:\n   \"Fixed-sized list\" rather than \"list\"?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:51.562+0000",
                    "updated": "2019-05-09T18:18:51.562+0000",
                    "started": "2019-05-09T18:18:51.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239870",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282597613\n \n \n\n ##########\n File path: cpp/src/arrow/compare.cc\n ##########\n @@ -576,12 +584,22 @@ class ArrayEqualsVisitor : public RangeEqualsVisitor {\n       return Status::OK();\n     }\n \n+    // XXX this looks like an error where the author expected RangeEquals to take\n \n Review comment:\n   It would be nice if you could dig a bit (or perhaps open a JIRA about this, explaining the issue and/or adding a reproducer).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:51.761+0000",
                    "updated": "2019-05-09T18:18:51.761+0000",
                    "started": "2019-05-09T18:18:51.760+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239871",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282599433\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_nested.h\n ##########\n @@ -87,6 +87,72 @@ class ARROW_EXPORT ListBuilder : public ArrayBuilder {\n   Status AppendNextOffset(int64_t num_repeats);\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeList builder\n+\n+/// \\class FixedSizeListBuilder\n+/// \\brief Builder class for fixed-length list array value types\n+///\n+/// A note on types.  Per arrow/type.h all types in the c++ implementation are\n+/// logical so even though this class always builds list array, this can\n+/// represent multiple different logical types.  If no logical type is provided\n+/// at construction time, the class defaults to List<T> where t is taken from the\n+/// value_builder/values that the object is constructed with.\n+class ARROW_EXPORT FixedSizeListBuilder : public ArrayBuilder {\n+ public:\n+  FixedSizeListBuilder(MemoryPool* pool,\n+                       std::shared_ptr<ArrayBuilder> const& value_builder,\n+                       int32_t list_size);\n+\n+  FixedSizeListBuilder(MemoryPool* pool,\n+                       std::shared_ptr<ArrayBuilder> const& value_builder,\n+                       const std::shared_ptr<DataType>& type);\n+\n+  Status Resize(int64_t capacity) override;\n+  void Reset() override;\n+  Status FinishInternal(std::shared_ptr<ArrayData>* out) override;\n+\n+  /// \\cond FALSE\n+  using ArrayBuilder::Finish;\n+  /// \\endcond\n+\n+  Status Finish(std::shared_ptr<FixedSizeListArray>* out) { return FinishTyped(out); }\n+\n+  /// \\brief Append a valid fixed length list.\n+  ///\n+  /// This function affects only the validity bitmap; the child values must be appended\n+  /// using the child array builder.\n+  Status Append();\n+\n+  /// \\brief Vector append\n+  ///\n+  /// If passed, valid_bytes wil be read and any zero byte\n+  /// will cause the corresponding slot to be null\n+  ///\n+  /// This function affects only the validity bitmap; the child values must be appended\n+  /// using the child array builder. This includes appending nulls for null lists.\n+  /// XXX this restriction is confusing, should this method be omitted?\n \n Review comment:\n   This is the same kind of restriction as for other nested types, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:51.897+0000",
                    "updated": "2019-05-09T18:18:51.897+0000",
                    "started": "2019-05-09T18:18:51.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239872",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282598189\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_nested.h\n ##########\n @@ -87,6 +87,72 @@ class ARROW_EXPORT ListBuilder : public ArrayBuilder {\n   Status AppendNextOffset(int64_t num_repeats);\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeList builder\n+\n+/// \\class FixedSizeListBuilder\n+/// \\brief Builder class for fixed-length list array value types\n+///\n+/// A note on types.  Per arrow/type.h all types in the c++ implementation are\n \n Review comment:\n   Not sure it's worth copying this blurb from the `ListBuilder` doc above.\r\n   (but if you copy it, you must change `List<T>` for `FixedSizeList<T>` ;-))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:51.922+0000",
                    "updated": "2019-05-09T18:18:51.922+0000",
                    "started": "2019-05-09T18:18:51.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239873",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282601290\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n \n Review comment:\n   \"fixed-size list data\", probably.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.064+0000",
                    "updated": "2019-05-09T18:18:52.064+0000",
                    "started": "2019-05-09T18:18:52.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239874",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282601702\n \n \n\n ##########\n File path: cpp/src/arrow/array.cc\n ##########\n @@ -839,6 +878,22 @@ struct ValidateVisitor {\n     return ValidateOffsets(array);\n   }\n \n+  Status Visit(const FixedSizeListArray& array) {\n+    if (array.length() < 0) {\n+      return Status::Invalid(\"Length was negative\");\n+    }\n+    if (!array.values()) {\n+      return Status::Invalid(\"values was null\");\n+    }\n+    if (array.values()->length() != array.length() * array.value_length()) {\n \n Review comment:\n   +1\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.065+0000",
                    "updated": "2019-05-09T18:18:52.065+0000",
                    "started": "2019-05-09T18:18:52.065+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239875",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282600676\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n+ public:\n+  using TypeClass = FixedSizeListType;\n+\n+  explicit FixedSizeListArray(const std::shared_ptr<ArrayData>& data);\n+\n+  FixedSizeListArray(const std::shared_ptr<DataType>& type, int64_t length,\n+                     const std::shared_ptr<Buffer>& value_offsets,\n+                     const std::shared_ptr<Array>& values,\n+                     const std::shared_ptr<Buffer>& null_bitmap = NULLPTR,\n+                     int64_t null_count = kUnknownNullCount, int64_t offset = 0);\n+\n+  const FixedSizeListType* list_type() const;\n+\n+  /// \\brief Return array object containing the list's values\n+  std::shared_ptr<Array> values() const;\n+\n+  std::shared_ptr<DataType> value_type() const;\n+\n+  // Neither of these functions will perform boundschecking\n+  int32_t value_offset(int64_t i) const {\n+    i += data_->offset;\n+    return static_cast<int32_t>(list_size_ * i);\n+  }\n+  int32_t value_length(...) const { return list_size_; }\n \n Review comment:\n   I would rather remove the argument. Or you can provide two separate overrides. A variadic function looks bizarre here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.068+0000",
                    "updated": "2019-05-09T18:18:52.068+0000",
                    "started": "2019-05-09T18:18:52.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239876",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282602036\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n+ public:\n+  using TypeClass = FixedSizeListType;\n+\n+  explicit FixedSizeListArray(const std::shared_ptr<ArrayData>& data);\n+\n+  FixedSizeListArray(const std::shared_ptr<DataType>& type, int64_t length,\n+                     const std::shared_ptr<Buffer>& value_offsets,\n \n Review comment:\n   Why is this constructor taking a value offsets buffer?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.100+0000",
                    "updated": "2019-05-09T18:18:52.100+0000",
                    "started": "2019-05-09T18:18:52.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239877",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282605456\n \n \n\n ##########\n File path: cpp/src/arrow/array-list-test.cc\n ##########\n @@ -332,4 +332,219 @@ TEST_F(TestListArray, TestBuilderPreserveFieleName) {\n   ASSERT_EQ(\"counts\", type.value_field()->name());\n }\n \n+// ----------------------------------------------------------------------\n+// FixedSizeList tests\n+\n+class TestFixedSizeListArray : public TestBuilder {\n+ public:\n+  void SetUp() {\n+    TestBuilder::SetUp();\n+\n+    value_type_ = int32();\n+    type_ = fixed_size_list(value_type_, list_size());\n+\n+    std::unique_ptr<ArrayBuilder> tmp;\n+    ASSERT_OK(MakeBuilder(pool_, type_, &tmp));\n+    builder_.reset(checked_cast<FixedSizeListBuilder*>(tmp.release()));\n+  }\n+\n+  void Done() {\n+    std::shared_ptr<Array> out;\n+    FinishAndCheckPadding(builder_.get(), &out);\n+    result_ = std::dynamic_pointer_cast<FixedSizeListArray>(out);\n+  }\n+\n+ protected:\n+  static constexpr int32_t list_size() { return 2; }\n+  std::shared_ptr<DataType> value_type_;\n+\n+  std::shared_ptr<FixedSizeListBuilder> builder_;\n+  std::shared_ptr<FixedSizeListArray> result_;\n+};\n+\n+TEST_F(TestFixedSizeListArray, Equality) {\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  std::shared_ptr<Array> array, equal_array, unequal_array;\n+  std::vector<int32_t> equal_values = {1, 2, 3, 4, 5, 2, 2, 2, 5, 6};\n+  std::vector<int32_t> unequal_values = {1, 2, 2, 2, 3, 4, 5, 2};\n+\n+  // setup two equal arrays\n+  ASSERT_OK(builder_->AppendValues(equal_values.size() / list_size()));\n+  ASSERT_OK(vb->AppendValues(equal_values.data(), equal_values.size()));\n+  ASSERT_OK(builder_->Finish(&array));\n+\n+  ASSERT_OK(builder_->AppendValues(equal_values.size() / list_size()));\n+  ASSERT_OK(vb->AppendValues(equal_values.data(), equal_values.size()));\n+\n+  ASSERT_OK(builder_->Finish(&equal_array));\n+\n+  // now an unequal one\n+  ASSERT_OK(builder_->AppendValues(unequal_values.size() / list_size()));\n+  ASSERT_OK(vb->AppendValues(unequal_values.data(), unequal_values.size()));\n+  ASSERT_OK(builder_->Finish(&unequal_array));\n+\n+  // Test array equality\n+  AssertArraysEqual(*array, *array);\n+  AssertArraysEqual(*array, *equal_array);\n+  EXPECT_FALSE(equal_array->Equals(unequal_array));\n+  EXPECT_FALSE(unequal_array->Equals(equal_array));\n+\n+  // Test range equality\n+  EXPECT_TRUE(array->RangeEquals(0, 1, 0, unequal_array));\n+  EXPECT_FALSE(array->RangeEquals(0, 2, 0, unequal_array));\n+  EXPECT_FALSE(array->RangeEquals(1, 2, 1, unequal_array));\n+  EXPECT_TRUE(array->RangeEquals(1, 3, 2, unequal_array));\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestAppendNull) {\n+  ASSERT_OK(builder_->AppendNull());\n+  ASSERT_OK(builder_->AppendNull());\n+\n+  Done();\n+\n+  ASSERT_OK(ValidateArray(*result_));\n+  ASSERT_TRUE(result_->IsNull(0));\n+  ASSERT_TRUE(result_->IsNull(1));\n+\n+  ASSERT_EQ(0, result_->value_offset(0));\n+  ASSERT_EQ(list_size(), result_->value_offset(1));\n+\n+  auto values = result_->values();\n+  ASSERT_EQ(list_size() * 2, values->length());\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestAppendNulls) {\n+  ASSERT_OK(builder_->AppendNulls(3));\n+\n+  Done();\n+\n+  ASSERT_OK(ValidateArray(*result_));\n+  ASSERT_EQ(result_->length(), 3);\n+  ASSERT_EQ(result_->null_count(), 3);\n+  ASSERT_TRUE(result_->IsNull(0));\n+  ASSERT_TRUE(result_->IsNull(1));\n+  ASSERT_TRUE(result_->IsNull(2));\n+\n+  ASSERT_EQ(0, result_->value_offset(0));\n+  ASSERT_EQ(list_size(), result_->value_offset(1));\n+  ASSERT_EQ(list_size() * 2, result_->value_offset(2));\n+\n+  auto values = result_->values();\n+  ASSERT_EQ(list_size() * 3, values->length());\n+}\n+\n+void ValidateBasicFixedSizeListArray(const FixedSizeListArray* result,\n+                                     const std::vector<int32_t>& values,\n+                                     const std::vector<uint8_t>& is_valid) {\n+  ASSERT_OK(ValidateArray(*result));\n+  ASSERT_EQ(1, result->null_count());\n+  ASSERT_LE(result->values()->null_count(), 2);\n+\n+  ASSERT_EQ(3, result->length());\n+  for (int32_t i = 0; i < 3; ++i) {\n+    ASSERT_EQ(i * result->value_length(), result->value_offset(i));\n+  }\n+\n+  for (int i = 0; i < result->length(); ++i) {\n+    ASSERT_EQ(is_valid[i] == 0, result->IsNull(i));\n+  }\n+\n+  ASSERT_EQ(result->length() * result->value_length(), result->values()->length());\n+  auto varr = std::dynamic_pointer_cast<Int32Array>(result->values());\n+\n+  for (size_t i = 0; i < values.size(); ++i) {\n+    if (is_valid[i / result->value_length()] == 0) {\n+      continue;\n+    }\n+    ASSERT_EQ(values[i], varr->Value(i));\n+  }\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestBasics) {\n+  std::vector<int32_t> values = {0, 1, 2, 3, 4, 5};\n+  std::vector<uint8_t> is_valid = {1, 0, 1};\n+\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  ASSERT_OK(builder_->Reserve(values.size() / list_size()));\n+  ASSERT_OK(vb->Reserve(values.size()));\n+\n+  int pos = 0;\n+  for (size_t i = 0; i < values.size() / list_size(); ++i) {\n+    if (is_valid[i] == 0) {\n+      ASSERT_OK(builder_->AppendNull());\n+      pos += list_size();\n+      continue;\n+    }\n+    ASSERT_OK(builder_->Append());\n+    for (int j = 0; j < list_size(); ++j) {\n+      ASSERT_OK(vb->Append(values[pos++]));\n+    }\n+  }\n+\n+  Done();\n+  ValidateBasicFixedSizeListArray(result_.get(), values, is_valid);\n+}\n+\n+TEST_F(TestFixedSizeListArray, BulkAppend) {\n+  std::vector<int32_t> values = {0, 1, 2, 3, 4, 5};\n+  std::vector<uint8_t> is_valid = {1, 0, 1};\n+\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  ASSERT_OK(builder_->Reserve(values.size() / list_size()));\n+  ASSERT_OK(vb->Reserve(values.size()));\n+\n+  ASSERT_OK(builder_->AppendValues(values.size() / list_size(), is_valid.data()));\n+  for (int32_t value : values) {\n+    ASSERT_OK(vb->Append(value));\n+  }\n+  Done();\n+  ValidateBasicFixedSizeListArray(result_.get(), values, is_valid);\n+}\n+\n+TEST_F(TestFixedSizeListArray, BulkAppendInvalid) {\n+  std::vector<int32_t> values = {0, 1, 2, 3, 4, 5};\n+  std::vector<uint8_t> is_valid = {1, 0, 1};\n+\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  ASSERT_OK(builder_->Reserve(values.size() / list_size()));\n+  ASSERT_OK(vb->Reserve(values.size()));\n+\n+  ASSERT_OK(builder_->AppendValues(values.size() / list_size(), is_valid.data()));\n+  for (int32_t value : values) {\n+    ASSERT_OK(vb->Append(value));\n+  }\n+  for (int32_t value : values) {\n+    ASSERT_OK(vb->Append(value));\n+  }\n+\n+  Done();\n+  ASSERT_RAISES(Invalid, ValidateArray(*result_));\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestZeroLength) {\n+  // All buffers are null\n+  Done();\n+  ASSERT_OK(ValidateArray(*result_));\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestBuilderPreserveFieleName) {\n+  auto list_type_with_name = fixed_size_list(field(\"counts\", int32()), list_size());\n+\n+  std::unique_ptr<ArrayBuilder> tmp;\n+  ASSERT_OK(MakeBuilder(pool_, list_type_with_name, &tmp));\n+  builder_.reset(checked_cast<FixedSizeListBuilder*>(tmp.release()));\n+\n+  ASSERT_OK(builder_->AppendValues(4));\n+\n+  std::shared_ptr<Array> list_array;\n+  ASSERT_OK(builder_->Finish(&list_array));\n \n Review comment:\n   IIUC, this builds an invalid FixedSizeListArray? No values are appended to the child array.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.135+0000",
                    "updated": "2019-05-09T18:18:52.135+0000",
                    "started": "2019-05-09T18:18:52.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239878",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282604902\n \n \n\n ##########\n File path: cpp/src/arrow/array-list-test.cc\n ##########\n @@ -332,4 +332,219 @@ TEST_F(TestListArray, TestBuilderPreserveFieleName) {\n   ASSERT_EQ(\"counts\", type.value_field()->name());\n }\n \n+// ----------------------------------------------------------------------\n+// FixedSizeList tests\n+\n+class TestFixedSizeListArray : public TestBuilder {\n+ public:\n+  void SetUp() {\n+    TestBuilder::SetUp();\n+\n+    value_type_ = int32();\n+    type_ = fixed_size_list(value_type_, list_size());\n+\n+    std::unique_ptr<ArrayBuilder> tmp;\n+    ASSERT_OK(MakeBuilder(pool_, type_, &tmp));\n+    builder_.reset(checked_cast<FixedSizeListBuilder*>(tmp.release()));\n+  }\n+\n+  void Done() {\n+    std::shared_ptr<Array> out;\n+    FinishAndCheckPadding(builder_.get(), &out);\n+    result_ = std::dynamic_pointer_cast<FixedSizeListArray>(out);\n+  }\n+\n+ protected:\n+  static constexpr int32_t list_size() { return 2; }\n+  std::shared_ptr<DataType> value_type_;\n+\n+  std::shared_ptr<FixedSizeListBuilder> builder_;\n+  std::shared_ptr<FixedSizeListArray> result_;\n+};\n+\n+TEST_F(TestFixedSizeListArray, Equality) {\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  std::shared_ptr<Array> array, equal_array, unequal_array;\n+  std::vector<int32_t> equal_values = {1, 2, 3, 4, 5, 2, 2, 2, 5, 6};\n+  std::vector<int32_t> unequal_values = {1, 2, 2, 2, 3, 4, 5, 2};\n+\n+  // setup two equal arrays\n+  ASSERT_OK(builder_->AppendValues(equal_values.size() / list_size()));\n+  ASSERT_OK(vb->AppendValues(equal_values.data(), equal_values.size()));\n+  ASSERT_OK(builder_->Finish(&array));\n+\n+  ASSERT_OK(builder_->AppendValues(equal_values.size() / list_size()));\n+  ASSERT_OK(vb->AppendValues(equal_values.data(), equal_values.size()));\n+\n+  ASSERT_OK(builder_->Finish(&equal_array));\n+\n+  // now an unequal one\n+  ASSERT_OK(builder_->AppendValues(unequal_values.size() / list_size()));\n+  ASSERT_OK(vb->AppendValues(unequal_values.data(), unequal_values.size()));\n+  ASSERT_OK(builder_->Finish(&unequal_array));\n+\n+  // Test array equality\n+  AssertArraysEqual(*array, *array);\n+  AssertArraysEqual(*array, *equal_array);\n+  EXPECT_FALSE(equal_array->Equals(unequal_array));\n+  EXPECT_FALSE(unequal_array->Equals(equal_array));\n+\n+  // Test range equality\n+  EXPECT_TRUE(array->RangeEquals(0, 1, 0, unequal_array));\n+  EXPECT_FALSE(array->RangeEquals(0, 2, 0, unequal_array));\n+  EXPECT_FALSE(array->RangeEquals(1, 2, 1, unequal_array));\n+  EXPECT_TRUE(array->RangeEquals(1, 3, 2, unequal_array));\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestAppendNull) {\n+  ASSERT_OK(builder_->AppendNull());\n+  ASSERT_OK(builder_->AppendNull());\n+\n+  Done();\n+\n+  ASSERT_OK(ValidateArray(*result_));\n+  ASSERT_TRUE(result_->IsNull(0));\n+  ASSERT_TRUE(result_->IsNull(1));\n+\n+  ASSERT_EQ(0, result_->value_offset(0));\n+  ASSERT_EQ(list_size(), result_->value_offset(1));\n+\n+  auto values = result_->values();\n+  ASSERT_EQ(list_size() * 2, values->length());\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestAppendNulls) {\n+  ASSERT_OK(builder_->AppendNulls(3));\n+\n+  Done();\n+\n+  ASSERT_OK(ValidateArray(*result_));\n+  ASSERT_EQ(result_->length(), 3);\n+  ASSERT_EQ(result_->null_count(), 3);\n+  ASSERT_TRUE(result_->IsNull(0));\n+  ASSERT_TRUE(result_->IsNull(1));\n+  ASSERT_TRUE(result_->IsNull(2));\n+\n+  ASSERT_EQ(0, result_->value_offset(0));\n+  ASSERT_EQ(list_size(), result_->value_offset(1));\n+  ASSERT_EQ(list_size() * 2, result_->value_offset(2));\n+\n+  auto values = result_->values();\n+  ASSERT_EQ(list_size() * 3, values->length());\n+}\n+\n+void ValidateBasicFixedSizeListArray(const FixedSizeListArray* result,\n+                                     const std::vector<int32_t>& values,\n+                                     const std::vector<uint8_t>& is_valid) {\n+  ASSERT_OK(ValidateArray(*result));\n+  ASSERT_EQ(1, result->null_count());\n+  ASSERT_LE(result->values()->null_count(), 2);\n+\n+  ASSERT_EQ(3, result->length());\n+  for (int32_t i = 0; i < 3; ++i) {\n+    ASSERT_EQ(i * result->value_length(), result->value_offset(i));\n+  }\n+\n+  for (int i = 0; i < result->length(); ++i) {\n+    ASSERT_EQ(is_valid[i] == 0, result->IsNull(i));\n+  }\n+\n+  ASSERT_EQ(result->length() * result->value_length(), result->values()->length());\n+  auto varr = std::dynamic_pointer_cast<Int32Array>(result->values());\n+\n+  for (size_t i = 0; i < values.size(); ++i) {\n+    if (is_valid[i / result->value_length()] == 0) {\n+      continue;\n+    }\n+    ASSERT_EQ(values[i], varr->Value(i));\n+  }\n+}\n+\n+TEST_F(TestFixedSizeListArray, TestBasics) {\n+  std::vector<int32_t> values = {0, 1, 2, 3, 4, 5};\n+  std::vector<uint8_t> is_valid = {1, 0, 1};\n+\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  ASSERT_OK(builder_->Reserve(values.size() / list_size()));\n+  ASSERT_OK(vb->Reserve(values.size()));\n+\n+  int pos = 0;\n+  for (size_t i = 0; i < values.size() / list_size(); ++i) {\n+    if (is_valid[i] == 0) {\n+      ASSERT_OK(builder_->AppendNull());\n+      pos += list_size();\n+      continue;\n+    }\n+    ASSERT_OK(builder_->Append());\n+    for (int j = 0; j < list_size(); ++j) {\n+      ASSERT_OK(vb->Append(values[pos++]));\n+    }\n+  }\n+\n+  Done();\n+  ValidateBasicFixedSizeListArray(result_.get(), values, is_valid);\n+}\n+\n+TEST_F(TestFixedSizeListArray, BulkAppend) {\n+  std::vector<int32_t> values = {0, 1, 2, 3, 4, 5};\n+  std::vector<uint8_t> is_valid = {1, 0, 1};\n+\n+  Int32Builder* vb = checked_cast<Int32Builder*>(builder_->value_builder());\n+\n+  ASSERT_OK(builder_->Reserve(values.size() / list_size()));\n \n Review comment:\n   Is it required to `Reserve` explicitly here? The builder should reserve automatically when the safe append methods are called.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.222+0000",
                    "updated": "2019-05-09T18:18:52.222+0000",
                    "started": "2019-05-09T18:18:52.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239879",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282601132\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -522,6 +522,44 @@ class ARROW_EXPORT ListArray : public Array {\n   std::shared_ptr<Array> values_;\n };\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+/// Concrete Array class for list data\n+class ARROW_EXPORT FixedSizeListArray : public Array {\n \n Review comment:\n   Agreed with @bkietz. Also code reuse can be achieved through templating (we generally care about performing non-virtual calls anyway).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.230+0000",
                    "updated": "2019-05-09T18:18:52.230+0000",
                    "started": "2019-05-09T18:18:52.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239880",
                    "issueId": "13090217"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/worklog/239881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4278: ARROW-1280: [C++] add fixed size list type\nURL: https://github.com/apache/arrow/pull/4278#discussion_r282602884\n \n \n\n ##########\n File path: cpp/src/arrow/array.cc\n ##########\n @@ -295,6 +295,45 @@ std::shared_ptr<DataType> ListArray::value_type() const {\n \n std::shared_ptr<Array> ListArray::values() const { return values_; }\n \n+// ----------------------------------------------------------------------\n+// FixedSizeListArray\n+\n+FixedSizeListArray::FixedSizeListArray(const std::shared_ptr<ArrayData>& data) {\n+  SetData(data);\n+}\n+\n+FixedSizeListArray::FixedSizeListArray(const std::shared_ptr<DataType>& type,\n+                                       int64_t length,\n+                                       const std::shared_ptr<Buffer>& value_offsets,\n+                                       const std::shared_ptr<Array>& values,\n+                                       const std::shared_ptr<Buffer>& null_bitmap,\n+                                       int64_t null_count, int64_t offset) {\n+  auto internal_data =\n \n Review comment:\n   Perhaps DCHECK that `type->value_type()` matches `values->type()`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T18:18:52.256+0000",
                    "updated": "2019-05-09T18:18:52.256+0000",
                    "started": "2019-05-09T18:18:52.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239881",
                    "issueId": "13090217"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5f4f1900[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@149cb9a8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f69d703[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3e4976bf[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6dc54144[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4f0ee9a3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4edeee8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3b578564[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c5f3c2b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@44a481f2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d37ad76[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7a4c6b11[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon May 13 15:03:14 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-05-13T15:03:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1280/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-07-26T14:38:32.000+0000",
        "updated": "2019-05-15T14:30:43.000+0000",
        "timeoriginalestimate": null,
        "description": "At the moment, we only support lists with a variable size per entry. In some cases, each entry of a list column will have the same number of elements. In this case, we can use a more effective data structure as well as do certain optimisations on the operations of this type. To implement this type:\r\n\r\n* Describe the memory structure of it in Layout.md\r\n* Add the type to the enums in the C++ code\r\n* Add FixedSizeListArray, FixedSizeListType and FixedSizeListBuilder classes to the C++ library",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement Fixed Size List type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/comment/16434059",
                    "id": "16434059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "body": "[~xhochy] do you think this would qualify for the \"beginner\" label and get tackled at a hackathon? I would like to see support for FixedSizeList in Python/C++ and I wouldn't think it'd be _too_ hard to adapt the List type",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "created": "2018-04-11T15:13:34.245+0000",
                    "updated": "2018-04-11T15:13:34.245+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/comment/16435416",
                    "id": "16435416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "[~bhulette] yes this surely does. It probably involves amending the {{Layout.md}}\u00a0and implementing a first variant in C++ with the respective unit tests.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-04-12T11:57:14.811+0000",
                    "updated": "2018-04-12T11:57:14.811+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090217/comment/16838606",
                    "id": "16838606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 4278\n[https://github.com/apache/arrow/pull/4278]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-05-13T15:03:14.543+0000",
                    "updated": "2019-05-13T15:03:14.543+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3i1en:",
        "customfield_12314139": null
    }
}