{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13133850",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850",
    "key": "ARROW-2036",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jim.crist",
            "name": "jim.crist",
            "key": "jim.crist",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jim.crist&avatarId=33449",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jim.crist&avatarId=33449",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jim.crist&avatarId=33449",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jim.crist&avatarId=33449"
            },
            "displayName": "Jim Crist",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jim.crist",
            "name": "jim.crist",
            "key": "jim.crist",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jim.crist&avatarId=33449",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jim.crist&avatarId=33449",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jim.crist&avatarId=33449",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jim.crist&avatarId=33449"
            },
            "displayName": "Jim Crist",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jim.crist",
            "name": "jim.crist",
            "key": "jim.crist",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jim.crist&avatarId=33449",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jim.crist&avatarId=33449",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jim.crist&avatarId=33449",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jim.crist&avatarId=33449"
            },
            "displayName": "Jim Crist",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2036/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79bb63bc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55f22c5c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20d99d4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4659d505[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67710bed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@ad22101[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64ffdab6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6c86cad1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3478acf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1806698f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2362a53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@58bcb886[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jan 30 22:20:21 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-01-30T22:20:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2036/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-01-25T21:41:31.000+0000",
        "updated": "2018-02-21T20:30:16.000+0000",
        "timeoriginalestimate": null,
        "description": "If `NativeFile` supported most/all of the standard IOBase methods ([https://docs.python.org/3/library/io.html#io.IOBase),] then it'd be easier to use arrow files with other python libraries. Would at least be nice to support enough operations to use `io.TextIOWrapper`.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "NativeFile should support standard IOBase methods",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340133",
                    "id": "16340133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist opened a new pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517\n \n \n   Adds support for most common file methods, adding enough to use\r\n   `io.TextIOWrapper`.\r\n   \r\n   Added attribtes/methods:\r\n   \r\n   - `closed` attribute\r\n   - `readable`, `writable`, `seekable` methods\r\n   - `read1` alias for `read` to support `TextIOWrapper` on python 2\r\n   - No-op `flush` method\r\n   \r\n   Also refactored the cython internals a bit, adding default settings for\r\n   `is_readable` and `is_writable`, which makes subclasses not need to set\r\n   them in all places.\r\n   \r\n   Also renamed `is_writeable` to `is_writable` for common spelling with\r\n   the standard python method `writable`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T21:45:54.154+0000",
                    "updated": "2018-01-25T21:45:54.154+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340135",
                    "id": "16340135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360611148\n \n \n   > Also refactored the cython internals a bit, adding default settings for\r\n   `is_readable` and `is_writable`, which makes subclasses not need to set\r\n   them in all places.\r\n   \r\n   I believe this also fixes https://issues.apache.org/jira/browse/ARROW-2030, cc @cpcloud.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T21:46:45.772+0000",
                    "updated": "2018-01-25T21:46:45.772+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340141",
                    "id": "16340141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360611148\n \n \n   > Also refactored the cython internals a bit, adding default settings for\r\n   `is_readable` and `is_writable`, which makes subclasses not need to set\r\n   them in all places.\r\n   \r\n   I believe this also fixes https://issues.apache.org/jira/browse/ARROW-2030, cc @cpcloud.\r\n   \r\n   *edit: I may I misunderstood ARROW-2030, this may not apply here*\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T21:49:55.698+0000",
                    "updated": "2018-01-25T21:49:55.698+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340147",
                    "id": "16340147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360611148\n \n \n   > Also refactored the cython internals a bit, adding default settings for\r\n   `is_readable` and `is_writable`, which makes subclasses not need to set\r\n   them in all places.\r\n   \r\n   I believe this also fixes https://issues.apache.org/jira/browse/ARROW-2030, cc @cpcloud.\r\n   \r\n   *edit: I may have misunderstood ARROW-2030, this may not apply here*\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T21:57:50.968+0000",
                    "updated": "2018-01-25T21:57:50.968+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340228",
                    "id": "16340228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360624914\n \n \n   @jcrist I don't think this PR fixes that because even if the initialization happens in the parent class it still won't show up in the child instance. If you attach `public` or `readonly` then the child sees the initialized values of the parent's parameters. There's some aspect of `cdef class` initialization that's not 100% clear to me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T22:40:28.036+0000",
                    "updated": "2018-01-25T22:40:28.036+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340248",
                    "id": "16340248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360628372\n \n \n   > @jcrist I don't think this PR fixes that because even if the initialization happens in the parent class it still won't show up in the child instance.\r\n   \r\n   Are you sure? I added a bogus attribute (without `readonly` or `public`), set it only in the `__cinit__` of the base class, and added a method in a subclass that accesses it. Everything worked fine.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T22:56:10.942+0000",
                    "updated": "2018-01-25T22:56:10.942+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340252",
                    "id": "16340252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r163993942\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -39,13 +39,14 @@ cdef extern from \"Python.h\":\n \n \n cdef class NativeFile:\n-\n     def __cinit__(self):\n-        self.is_open = False\n+        self.closed = True\n         self.own_file = False\n \n Review comment:\n   Should `own_file` be true for most of these? I stuck with the existing behavior, but this seems odd to me. For example `MemoryMappedFile` opens the file itself, why isn't it responsible for closing it on `__dealloc__`? Are we relying on a C++ destructor to handle that?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:01:05.192+0000",
                    "updated": "2018-01-25T23:01:05.192+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340257",
                    "id": "16340257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r163995819\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -39,13 +39,14 @@ cdef extern from \"Python.h\":\n \n \n cdef class NativeFile:\n-\n     def __cinit__(self):\n-        self.is_open = False\n+        self.closed = True\n         self.own_file = False\n \n Review comment:\n   I think this arose due to some wacky GC issues with HDFS file handles, I'd have to look back at the original commit that added this to remember. My prior would be that `__dealloc__` / `__del__` should close the file if it is open. With `MemoryMappedFile`, this is a no-op because the file descriptor is owned by the mapped buffer, whose lifetime may exceed the file object\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:10:05.247+0000",
                    "updated": "2018-01-25T23:10:05.247+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340259",
                    "id": "16340259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360631476\n \n \n   @jcrist \r\n   \r\n   ```\r\n   In [12]: import pyarrow as pa\r\n   \r\n   In [13]: hdfsfile = pa.HdfsFile()\r\n   \r\n   In [14]: hasattr(hdfsfile, 'is_readable')\r\n   Out[14]: False\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:10:16.083+0000",
                    "updated": "2018-01-25T23:10:16.083+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340265",
                    "id": "16340265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360631993\n \n \n   If you look at the generated C code, there's no `PyMemberDef` array generated to enable attribute lookup in the interpreter. You *can* access attributes in Cython code because it's not going through Python's attribute access mechanism\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:12:31.339+0000",
                    "updated": "2018-01-25T23:12:31.339+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340293",
                    "id": "16340293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360636059\n \n \n   That's a completely separate issue than the one described though. Those attributes are C level only, not exposed to python. This has nothing to do with initialization order or subclassing.\r\n   \r\n   FWIW this PR adds `readable`/`writable` methods to mirror the standard python file interface, which are thin wrappers around those attributes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:32:09.582+0000",
                    "updated": "2018-01-25T23:32:09.582+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340294",
                    "id": "16340294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360636059\n \n \n   That's a completely separate issue than the one described though. Those attributes are C level only, not exposed to python. This has nothing to do with initialization order or subclassing.\r\n   \r\n   FWIW this PR adds `readable`/`writable` methods to mirror the standard python file interface, which are thin wrappers around those attributes. I don't think `is_readable`/`is_writable` should be exposed at the Python level, as they're part of the implementation and not standard python file attributes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:33:11.425+0000",
                    "updated": "2018-01-25T23:33:11.425+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340300",
                    "id": "16340300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164000701\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -39,13 +39,14 @@ cdef extern from \"Python.h\":\n \n \n cdef class NativeFile:\n-\n     def __cinit__(self):\n-        self.is_open = False\n+        self.closed = True\n         self.own_file = False\n \n Review comment:\n   Ok. I'll leave that for a follow-up PR if that's ok. I believe this attribute is unnecessary for any of the existing file objects.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:39:06.792+0000",
                    "updated": "2018-01-25T23:39:06.792+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16340513",
                    "id": "16340513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360673448\n \n \n   I am aware that those properties are C only.\r\n   \r\n   ARROW-2030 was showing up in a user's code as an attribute error (IIRC not because they were explicitly accessing the property) which occurred because something was calling `_assert_readable()` and raising an exception.\r\n   \r\n   It's not about making them accessible, it's about the manifestation of a possible bug.\r\n   \r\n   It's possible I'm mistaken here, so I'll post in the JIRA with a reproducible test case if I can make one. We can continue the discussion there.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T03:19:08.897+0000",
                    "updated": "2018-01-26T03:19:08.897+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16341145",
                    "id": "16341145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360810013\n \n \n   Sounds good, I suspect we're just talking past each other here. Apologies for sidetracking this PR.\r\n   \r\n   In regards to this PR, I'm a bit unsure about the `writeable -> writable` change. If you google \"writeable or writable\" you'll find other projects(e.g. nodejs) that have also gone through this decision - most settled on `writable` as it's a more common english spelling. I made this change originally to mirror the added `writable` method (part of the python file interface). However, a few dependencies of pyarrow (`libhdfs` and `numpy`) use \"writeable\" instead, as does the arrow c++ code. I could go either way on this change.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T15:10:05.775+0000",
                    "updated": "2018-01-26T15:10:05.775+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16341317",
                    "id": "16341317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-360849259\n \n \n   I renamed Writeable -> Writable in C++ recently, so probably best to use the more common spelling such that it's not disruptive\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T17:26:10.487+0000",
                    "updated": "2018-01-26T17:26:10.487+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16344167",
                    "id": "16344167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361418609\n \n \n   > I renamed Writeable -> Writable in C++ recently, so probably best to use the more common spelling such that it's not disruptive\r\n   \r\n   Was this supposed to be a complete port over from \"writeable\" to \"writable\" (minus libhdfs, which is a dependency)? I found a few classes/methods still using \"Writeable\" (e.g. `WriteableFile` or `OSFile::OpenWriteable`).\r\n   \r\n   ---\r\n   \r\n   The python code uses writable wherever it makes sense. I think this is ready for review/merge.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-29T23:08:18.723+0000",
                    "updated": "2018-01-29T23:08:18.723+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345197",
                    "id": "16345197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164772429\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n \n Review comment:\n   Unrelated, but I wonder what happens if two threads call `close()` concurrently.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T15:14:42.214+0000",
                    "updated": "2018-01-30T15:14:42.214+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345218",
                    "id": "16345218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164776409\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n \n Review comment:\n   Hmmm, maybe the nogil block here should be removed?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T15:26:02.124+0000",
                    "updated": "2018-01-30T15:26:02.124+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345229",
                    "id": "16345229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164778479\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n \n Review comment:\n   Well, if `rd_file.close()` or `wr_file.close()` may do I/O, you want to release the GIL.\r\n   One possible solution is something like:\r\n   ```\r\n   rd_file, self.rd_file = self.rd_file, None\r\n   wr_file, self.wr_file = self.wr_file, None\r\n   with nogil:\r\n       if self.is_readable:\r\n           check_status(rd_file.get().close())\r\n       else:\r\n           check_status(rd_file.get().close())\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T15:32:06.210+0000",
                    "updated": "2018-01-30T15:32:06.210+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345249",
                    "id": "16345249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164782236\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n \n Review comment:\n   That'd work, but prevents calling `close` again in the case of a failure. It's not actually clear to me what should happen if `close` fails (reset state?, set closed anayway?). Anyway, should probably open a jira about this, as it's unrelated to this PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T15:42:40.148+0000",
                    "updated": "2018-01-30T15:42:40.148+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345257",
                    "id": "16345257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164783762\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n \n Review comment:\n   A general guideline for `close()` is that even if it fails somehow (e.g. IO error), it should still put the object in a \"closed\" state (and release associated resources).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T15:46:45.773+0000",
                    "updated": "2018-01-30T15:46:45.773+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345555",
                    "id": "16345555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361686042\n \n \n   Test failure is unrelated, ready for review. We're waiting on this to simplify a PR adding arrow's hdfs (really just libhdfs) support to dask.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T18:20:23.597+0000",
                    "updated": "2018-01-30T18:20:23.597+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345701",
                    "id": "16345701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361716402\n \n \n   Looking now. Can you rebase?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:00:43.575+0000",
                    "updated": "2018-01-30T20:00:43.575+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345708",
                    "id": "16345708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164862205\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n \n Review comment:\n   Should these be properties?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:03:32.996+0000",
                    "updated": "2018-01-30T20:03:32.996+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345709",
                    "id": "16345709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164862381\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n \n Review comment:\n   GIL should be released here -- if any Python resources are required in `Close` then the GIL will be re-acquired\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:03:32.997+0000",
                    "updated": "2018-01-30T20:03:32.997+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345719",
                    "id": "16345719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164863482\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n \n Review comment:\n   The `seekable`/`readable`/`writable`? No, this is required for the python file interface. See https://docs.python.org/3/library/io.html#io.IOBase\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:06:12.109+0000",
                    "updated": "2018-01-30T20:06:12.109+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345739",
                    "id": "16345739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361722755\n \n \n   > Can you rebase?\r\n   \r\n   Rebased. I'm curious why was that necessary; there were no merge conflicts (none of the files edited have been touched since I submitted the PR). Just to run the CI again?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:24:00.854+0000",
                    "updated": "2018-01-30T20:24:00.854+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345758",
                    "id": "16345758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#discussion_r164870116\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -65,45 +66,63 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n \n Review comment:\n   Roger, thanks\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:33:14.290+0000",
                    "updated": "2018-01-30T20:33:14.290+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345760",
                    "id": "16345760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361725325\n \n \n   @jcrist the build was failing due to a Parquet dependency upgrade (Thrift 0.11), so the Python tests wouldn't run without picking up recent patches https://github.com/apache/arrow/commit/0621765defc022e0fae68f4cac52835699b98500\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:33:57.530+0000",
                    "updated": "2018-01-30T20:33:57.530+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345761",
                    "id": "16345761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361725364\n \n \n   +1, will merge once the build completes\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:34:06.412+0000",
                    "updated": "2018-01-30T20:34:06.412+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345837",
                    "id": "16345837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361739325\n \n \n   @jcrist can you enable Appveyor on your fork? Then builds for your PRs will run a little more quickly there\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T21:25:36.123+0000",
                    "updated": "2018-01-30T21:25:36.123+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345850",
                    "id": "16345850",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jcrist commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361741586\n \n \n   Done: https://ci.appveyor.com/project/jcrist/arrow\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T21:33:29.085+0000",
                    "updated": "2018-01-30T21:33:29.085+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345913",
                    "id": "16345913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517#issuecomment-361754121\n \n \n   Cool, from https://ci.appveyor.com/project/jcrist/arrow/build/1.0.1 looks like we are good. The Travis CI failure is ARROW-2062\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T22:19:54.129+0000",
                    "updated": "2018-01-30T22:19:54.129+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345914",
                    "id": "16345914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1517\n[https://github.com/apache/arrow/pull/1517]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-30T22:20:17.716+0000",
                    "updated": "2018-01-30T22:20:17.716+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133850/comment/16345915",
                    "id": "16345915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1517: ARROW-2036: [Python] Support standard IOBase methods on NativeFile\nURL: https://github.com/apache/arrow/pull/1517\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/io-hdfs.pxi b/python/pyarrow/io-hdfs.pxi\nindex 3abf045f9..83b14b687 100644\n--- a/python/pyarrow/io-hdfs.pxi\n+++ b/python/pyarrow/io-hdfs.pxi\n@@ -413,9 +413,7 @@ cdef class HadoopFileSystem:\n                                    &wr_handle))\n \n             out.wr_file = <shared_ptr[OutputStream]> wr_handle\n-\n-            out.is_readable = False\n-            out.is_writeable = 1\n+            out.is_writable = True\n         else:\n             with nogil:\n                 check_status(self.client.get()\n@@ -423,7 +421,6 @@ cdef class HadoopFileSystem:\n \n             out.rd_file = <shared_ptr[RandomAccessFile]> rd_handle\n             out.is_readable = True\n-            out.is_writeable = 0\n \n         if c_buffer_size == 0:\n             c_buffer_size = 2 ** 16\n@@ -431,7 +428,7 @@ cdef class HadoopFileSystem:\n         out.mode = mode\n         out.buffer_size = c_buffer_size\n         out.parent = _HdfsFileNanny(self, out)\n-        out.is_open = True\n+        out.closed = False\n         out.own_file = True\n \n         return out\ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex bb363bacc..bd508cf57 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -39,13 +39,14 @@ cdef extern from \"Python.h\":\n \n \n cdef class NativeFile:\n-\n     def __cinit__(self):\n-        self.is_open = False\n+        self.closed = True\n         self.own_file = False\n+        self.is_readable = False\n+        self.is_writable = False\n \n     def __dealloc__(self):\n-        if self.is_open and self.own_file:\n+        if self.own_file and not self.closed:\n             self.close()\n \n     def __enter__(self):\n@@ -65,34 +66,52 @@ cdef class NativeFile:\n \n         def __get__(self):\n             # Emulate built-in file modes\n-            if self.is_readable and self.is_writeable:\n+            if self.is_readable and self.is_writable:\n                 return 'rb+'\n             elif self.is_readable:\n                 return 'rb'\n-            elif self.is_writeable:\n+            elif self.is_writable:\n                 return 'wb'\n             else:\n                 raise ValueError('File object is malformed, has no mode')\n \n+    def readable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n+    def writable(self):\n+        self._assert_open()\n+        return self.is_writable\n+\n+    def seekable(self):\n+        self._assert_open()\n+        return self.is_readable\n+\n     def close(self):\n-        if self.is_open:\n+        if not self.closed:\n             with nogil:\n                 if self.is_readable:\n                     check_status(self.rd_file.get().Close())\n                 else:\n                     check_status(self.wr_file.get().Close())\n-        self.is_open = False\n+        self.closed = True\n+\n+    def flush(self):\n+        \"\"\"Flush the buffer stream, if applicable.\n+\n+        No-op to match the IOBase interface.\"\"\"\n+        self._assert_open()\n \n     cdef read_handle(self, shared_ptr[RandomAccessFile]* file):\n         self._assert_readable()\n         file[0] = <shared_ptr[RandomAccessFile]> self.rd_file\n \n     cdef write_handle(self, shared_ptr[OutputStream]* file):\n-        self._assert_writeable()\n+        self._assert_writable()\n         file[0] = <shared_ptr[OutputStream]> self.wr_file\n \n     def _assert_open(self):\n-        if not self.is_open:\n+        if self.closed:\n             raise ValueError(\"I/O operation on closed file\")\n \n     def _assert_readable(self):\n@@ -100,10 +119,10 @@ cdef class NativeFile:\n         if not self.is_readable:\n             raise IOError(\"only valid on readonly files\")\n \n-    def _assert_writeable(self):\n+    def _assert_writable(self):\n         self._assert_open()\n-        if not self.is_writeable:\n-            raise IOError(\"only valid on writeable files\")\n+        if not self.is_writable:\n+            raise IOError(\"only valid on writable files\")\n \n     def size(self):\n         \"\"\"\n@@ -175,7 +194,7 @@ cdef class NativeFile:\n         Write byte from any object implementing buffer protocol (bytes,\n         bytearray, ndarray, pyarrow.Buffer)\n         \"\"\"\n-        self._assert_writeable()\n+        self._assert_writable()\n \n         if isinstance(data, six.string_types):\n             data = tobytes(data)\n@@ -224,6 +243,12 @@ cdef class NativeFile:\n \n         return PyObject_to_object(obj)\n \n+    def read1(self, nbytes=None):\n+        \"\"\"Read and return up to n bytes.\n+\n+        Alias for read, needed to match the IOBase interface.\"\"\"\n+        return self.read(nbytes=None)\n+\n     def read_buffer(self, nbytes=None):\n         cdef:\n             int64_t c_nbytes\n@@ -333,7 +358,7 @@ cdef class NativeFile:\n         Pipe file-like object to file\n         \"\"\"\n         write_queue = Queue(50)\n-        self._assert_writeable()\n+        self._assert_writable()\n \n         buffer_size = buffer_size or DEFAULT_BUFFER_SIZE\n \n@@ -390,16 +415,14 @@ cdef class PythonFile(NativeFile):\n \n         if mode.startswith('w'):\n             self.wr_file.reset(new PyOutputStream(handle))\n-            self.is_readable = 0\n-            self.is_writeable = 1\n+            self.is_writable = True\n         elif mode.startswith('r'):\n             self.rd_file.reset(new PyReadableFile(handle))\n-            self.is_readable = 1\n-            self.is_writeable = 0\n+            self.is_readable = True\n         else:\n             raise ValueError('Invalid file mode: {0}'.format(mode))\n \n-        self.is_open = True\n+        self.closed = False\n \n \n cdef class MemoryMappedFile(NativeFile):\n@@ -409,11 +432,6 @@ cdef class MemoryMappedFile(NativeFile):\n     cdef:\n         object path\n \n-    def __cinit__(self):\n-        self.is_open = False\n-        self.is_readable = 0\n-        self.is_writeable = 0\n-\n     @staticmethod\n     def create(path, size):\n         cdef:\n@@ -426,11 +444,11 @@ cdef class MemoryMappedFile(NativeFile):\n \n         cdef MemoryMappedFile result = MemoryMappedFile()\n         result.path = path\n-        result.is_readable = 1\n-        result.is_writeable = 1\n+        result.is_readable = True\n+        result.is_writable = True\n         result.wr_file = <shared_ptr[OutputStream]> handle\n         result.rd_file = <shared_ptr[RandomAccessFile]> handle\n-        result.is_open = True\n+        result.closed = False\n \n         return result\n \n@@ -444,14 +462,14 @@ cdef class MemoryMappedFile(NativeFile):\n \n         if mode in ('r', 'rb'):\n             c_mode = FileMode_READ\n-            self.is_readable = 1\n+            self.is_readable = True\n         elif mode in ('w', 'wb'):\n             c_mode = FileMode_WRITE\n-            self.is_writeable = 1\n+            self.is_writable = True\n         elif mode in ('r+', 'r+b', 'rb+'):\n             c_mode = FileMode_READWRITE\n-            self.is_readable = 1\n-            self.is_writeable = 1\n+            self.is_readable = True\n+            self.is_writable = True\n         else:\n             raise ValueError('Invalid file mode: {0}'.format(mode))\n \n@@ -460,7 +478,7 @@ cdef class MemoryMappedFile(NativeFile):\n \n         self.wr_file = <shared_ptr[OutputStream]> handle\n         self.rd_file = <shared_ptr[RandomAccessFile]> handle\n-        self.is_open = True\n+        self.closed = False\n \n \n def memory_map(path, mode='r'):\n@@ -484,7 +502,7 @@ def memory_map(path, mode='r'):\n def create_memory_map(path, size):\n     \"\"\"\n     Create memory map at indicated path of the given size, return open\n-    writeable file object\n+    writable file object\n \n     Parameters\n     ----------\n@@ -513,16 +531,14 @@ cdef class OSFile(NativeFile):\n             shared_ptr[Readable] handle\n             c_string c_path = encode_file_path(path)\n \n-        self.is_readable = self.is_writeable = 0\n-\n         if mode in ('r', 'rb'):\n             self._open_readable(c_path, maybe_unbox_memory_pool(memory_pool))\n         elif mode in ('w', 'wb'):\n-            self._open_writeable(c_path)\n+            self._open_writable(c_path)\n         else:\n             raise ValueError('Invalid file mode: {0}'.format(mode))\n \n-        self.is_open = True\n+        self.closed = False\n \n     cdef _open_readable(self, c_string path, CMemoryPool* pool):\n         cdef shared_ptr[ReadableFile] handle\n@@ -530,15 +546,15 @@ cdef class OSFile(NativeFile):\n         with nogil:\n             check_status(ReadableFile.Open(path, pool, &handle))\n \n-        self.is_readable = 1\n+        self.is_readable = True\n         self.rd_file = <shared_ptr[RandomAccessFile]> handle\n \n-    cdef _open_writeable(self, c_string path):\n+    cdef _open_writable(self, c_string path):\n         cdef shared_ptr[FileOutputStream] handle\n \n         with nogil:\n             check_status(FileOutputStream.Open(path, &handle))\n-        self.is_writeable = 1\n+        self.is_writable = True\n         self.wr_file = <shared_ptr[OutputStream]> handle\n \n \n@@ -546,9 +562,8 @@ cdef class FixedSizeBufferWriter(NativeFile):\n \n     def __cinit__(self, Buffer buffer):\n         self.wr_file.reset(new CFixedSizeBufferWriter(buffer.buffer))\n-        self.is_readable = 0\n-        self.is_writeable = 1\n-        self.is_open = True\n+        self.is_writable = True\n+        self.closed = False\n \n     def set_memcopy_threads(self, int num_threads):\n         cdef CFixedSizeBufferWriter* writer = \\\n@@ -738,14 +753,13 @@ cdef class BufferOutputStream(NativeFile):\n         self.buffer = _allocate_buffer(maybe_unbox_memory_pool(memory_pool))\n         self.wr_file.reset(new CBufferOutputStream(\n             <shared_ptr[CResizableBuffer]> self.buffer))\n-        self.is_readable = 0\n-        self.is_writeable = 1\n-        self.is_open = True\n+        self.is_writable = True\n+        self.closed = False\n \n     def get_result(self):\n         with nogil:\n             check_status(self.wr_file.get().Close())\n-        self.is_open = False\n+        self.closed = True\n         return pyarrow_wrap_buffer(<shared_ptr[CBuffer]> self.buffer)\n \n \n@@ -753,9 +767,8 @@ cdef class MockOutputStream(NativeFile):\n \n     def __cinit__(self):\n         self.wr_file.reset(new CMockOutputStream())\n-        self.is_readable = 0\n-        self.is_writeable = 1\n-        self.is_open = True\n+        self.is_writable = True\n+        self.closed = False\n \n     def size(self):\n         return (<CMockOutputStream*>self.wr_file.get()).GetExtentBytesWritten()\n@@ -780,9 +793,8 @@ cdef class BufferReader(NativeFile):\n             self.buffer = frombuffer(obj)\n \n         self.rd_file.reset(new CBufferReader(self.buffer.buffer))\n-        self.is_readable = 1\n-        self.is_writeable = 0\n-        self.is_open = True\n+        self.is_readable = True\n+        self.closed = False\n \n \n def frombuffer(object obj):\n@@ -834,8 +846,8 @@ cdef get_writer(object source, shared_ptr[OutputStream]* writer):\n     if isinstance(source, NativeFile):\n         nf = source\n \n-        if not nf.is_writeable:\n-            raise IOError('Native file is not writeable')\n+        if not nf.is_writable:\n+            raise IOError('Native file is not writable')\n \n         nf.write_handle(writer)\n     else:\ndiff --git a/python/pyarrow/ipc.pxi b/python/pyarrow/ipc.pxi\nindex 7534b0d0e..a30a228ae 100644\n--- a/python/pyarrow/ipc.pxi\n+++ b/python/pyarrow/ipc.pxi\n@@ -429,7 +429,7 @@ def write_tensor(Tensor tensor, NativeFile dest):\n         int32_t metadata_length\n         int64_t body_length\n \n-    dest._assert_writeable()\n+    dest._assert_writable()\n \n     with nogil:\n         check_status(\ndiff --git a/python/pyarrow/ipc.py b/python/pyarrow/ipc.py\nindex f264f089c..4081fc50e 100644\n--- a/python/pyarrow/ipc.py\n+++ b/python/pyarrow/ipc.py\n@@ -65,7 +65,7 @@ class RecordBatchStreamWriter(lib._RecordBatchWriter):\n     Parameters\n     ----------\n     sink : str, pyarrow.NativeFile, or file-like Python object\n-        Either a file path, or a writeable file object\n+        Either a file path, or a writable file object\n     schema : pyarrow.Schema\n         The Arrow schema for data to be written to the file\n     \"\"\"\n@@ -96,7 +96,7 @@ class RecordBatchFileWriter(lib._RecordBatchFileWriter):\n     Parameters\n     ----------\n     sink : str, pyarrow.NativeFile, or file-like Python object\n-        Either a file path, or a writeable file object\n+        Either a file path, or a writable file object\n     schema : pyarrow.Schema\n         The Arrow schema for data to be written to the file\n     \"\"\"\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex 90f749d6d..161562c04 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -333,8 +333,8 @@ cdef class NativeFile:\n         shared_ptr[RandomAccessFile] rd_file\n         shared_ptr[OutputStream] wr_file\n         bint is_readable\n-        bint is_writeable\n-        bint is_open\n+        bint is_writable\n+        readonly bint closed\n         bint own_file\n \n     # By implementing these \"virtual\" functions (all functions in Cython\ndiff --git a/python/pyarrow/tests/test_io.py b/python/pyarrow/tests/test_io.py\nindex 3f7aa2e1c..da26b101d 100644\n--- a/python/pyarrow/tests/test_io.py\n+++ b/python/pyarrow/tests/test_io.py\n@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-from io import BytesIO\n+from io import BytesIO, TextIOWrapper\n import gc\n import os\n import pytest\n@@ -482,27 +482,48 @@ def test_native_file_modes(tmpdir):\n \n     with pa.OSFile(path, mode='r') as f:\n         assert f.mode == 'rb'\n+        assert f.readable()\n+        assert not f.writable()\n+        assert f.seekable()\n \n     with pa.OSFile(path, mode='rb') as f:\n         assert f.mode == 'rb'\n+        assert f.readable()\n+        assert not f.writable()\n+        assert f.seekable()\n \n     with pa.OSFile(path, mode='w') as f:\n         assert f.mode == 'wb'\n+        assert not f.readable()\n+        assert f.writable()\n+        assert not f.seekable()\n \n     with pa.OSFile(path, mode='wb') as f:\n         assert f.mode == 'wb'\n+        assert not f.readable()\n+        assert f.writable()\n+        assert not f.seekable()\n \n     with open(path, 'wb') as f:\n         f.write(b'foooo')\n \n     with pa.memory_map(path, 'r') as f:\n         assert f.mode == 'rb'\n+        assert f.readable()\n+        assert not f.writable()\n+        assert f.seekable()\n \n     with pa.memory_map(path, 'r+') as f:\n         assert f.mode == 'rb+'\n+        assert f.readable()\n+        assert f.writable()\n+        assert f.seekable()\n \n     with pa.memory_map(path, 'r+b') as f:\n         assert f.mode == 'rb+'\n+        assert f.readable()\n+        assert f.writable()\n+        assert f.seekable()\n \n \n def test_native_file_raises_ValueError_after_close(tmpdir):\n@@ -511,19 +532,56 @@ def test_native_file_raises_ValueError_after_close(tmpdir):\n         f.write(b'foooo')\n \n     with pa.OSFile(path, mode='rb') as os_file:\n-        pass\n+        assert not os_file.closed\n+    assert os_file.closed\n \n     with pa.memory_map(path, mode='rb') as mmap_file:\n-        pass\n+        assert not mmap_file.closed\n+    assert mmap_file.closed\n \n     files = [os_file,\n              mmap_file]\n \n     methods = [('tell', ()),\n                ('seek', (0,)),\n-               ('size', ())]\n+               ('size', ()),\n+               ('flush', ()),\n+               ('readable', ()),\n+               ('writable', ()),\n+               ('seekable', ())]\n \n     for f in files:\n         for method, args in methods:\n             with pytest.raises(ValueError):\n                 getattr(f, method)(*args)\n+\n+\n+def test_native_file_TextIOWrapper(tmpdir):\n+    data = (u'foooo\\n'\n+            u'barrr\\n'\n+            u'bazzz\\n')\n+\n+    path = os.path.join(str(tmpdir), guid())\n+    with open(path, 'wb') as f:\n+        f.write(data.encode('utf-8'))\n+\n+    with TextIOWrapper(pa.OSFile(path, mode='rb')) as fil:\n+        assert fil.readable()\n+        res = fil.read()\n+        assert res == data\n+    assert fil.closed\n+\n+    with TextIOWrapper(pa.OSFile(path, mode='rb')) as fil:\n+        # Iteration works\n+        lines = list(fil)\n+        assert ''.join(lines) == data\n+\n+    # Writing\n+    path2 = os.path.join(str(tmpdir), guid())\n+    with TextIOWrapper(pa.OSFile(path2, mode='wb')) as fil:\n+        assert fil.writable()\n+        fil.write(data)\n+\n+    with TextIOWrapper(pa.OSFile(path2, mode='rb')) as fil:\n+        res = fil.read()\n+        assert res == data\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T22:20:21.905+0000",
                    "updated": "2018-01-30T22:20:21.905+0000"
                }
            ],
            "maxResults": 36,
            "total": 36,
            "startAt": 0
        },
        "customfield_12311820": "0|i3pdvb:",
        "customfield_12314139": null
    }
}