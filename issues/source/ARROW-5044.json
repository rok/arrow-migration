{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13224440",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224440",
    "key": "ARROW-5044",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333001",
                "id": "12333001",
                "name": "Packaging"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5044/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 2400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@129e7bd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1867b27f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c83da90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@9526135[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6665fda[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2a78e86a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@181df0ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2dc7110[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3670661e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5b26e302[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ccbfa01[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4d7e5a79[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 2400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Mar 28 01:28:17 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-28T01:28:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5044/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-03-27T22:01:27.000+0000",
        "updated": "2019-03-28T01:28:49.000+0000",
        "timeoriginalestimate": null,
        "description": "{noformat}\r\n+ cargo fmt --all -- --check\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/arrow/src/csv/writer.rs at line 53:\r\n //! let batch = RecordBatch::try_new(\r\n //!     Arc::new(schema),\r\n //!     vec![Arc::new(c1), Arc::new(c2), Arc::new(c3), Arc::new(c4)],\r\n-//! ).unwrap();\r\n+//! )\r\n+//! .unwrap();\r\n //!\r\n //! let file = get_temp_file(\"out.csv\", &[]);\r\n //!\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/datasource/datasource.rs at line 24:\r\n \r\n use crate::error::Result;\r\n \r\n-/// Returned by implementors of `Table#scan`, this `RecordBatchIterator` is wrapped with an `Arc`\r\n-/// and `Mutex` so that it can be shared across threads as it is used.\r\n+/// Returned by implementors of `Table#scan`, this `RecordBatchIterator` is wrapped with\r\n+/// an `Arc` and `Mutex` so that it can be shared across threads as it is used.\r\n pub type ScanResult = Arc<Mutex<RecordBatchIterator>>;\r\n \r\n /// Source table\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/datasource/datasource.rs at line 33:\r\n     /// Get a reference to the schema for this table\r\n     fn schema(&self) -> &Arc<Schema>;\r\n \r\n-    /// Perform a scan of a table and return a sequence of iterators over the data (one iterator per partition)\r\n+    /// Perform a scan of a table and return a sequence of iterators over the data (one\r\n+    /// iterator per partition)\r\n     fn scan(\r\n         &self,\r\n         projection: &Option<Vec<usize>>,\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/datasource/memory.rs at line 16:\r\n // under the License.\r\n \r\n //! In-memory data source for presenting a Vec<RecordBatch> as a data source that can be\r\n-//! queried by DataFusion. This allows data to be pre-loaded into memory and then repeatedly\r\n-//! queried without incurring additional file I/O overhead.\r\n+//! queried by DataFusion. This allows data to be pre-loaded into memory and then\r\n+//! repeatedly queried without incurring additional file I/O overhead.\r\n \r\n use std::sync::{Arc, Mutex};\r\n \r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/context.rs at line 15:\r\n // specific language governing permissions and limitations\r\n // under the License.\r\n \r\n-//! ExecutionContext contains methods for registering data sources and executing SQL queries\r\n+//! ExecutionContext contains methods for registering data sources and executing SQL\r\n+//! queries\r\n \r\n use std::cell::RefCell;\r\n use std::collections::HashMap;\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/context.rs at line 139:\r\n         Ok(plan)\r\n     }\r\n \r\n-    /// Execute a logical plan and produce a Relation (a schema-aware iterator over a series\r\n-    /// of RecordBatch instances)\r\n+    /// Execute a logical plan and produce a Relation (a schema-aware iterator over a\r\n+    /// series of RecordBatch instances)\r\n     pub fn execute(\r\n         &mut self,\r\n         plan: &LogicalPlan,\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/filter.rs at line 15:\r\n // specific language governing permissions and limitations\r\n // under the License.\r\n \r\n-//! Execution of a filter (predicate) relation. The SQL clause `WHERE expr` represents a filter.\r\n+//! Execution of a filter (predicate) relation. The SQL clause `WHERE expr` represents a\r\n+//! filter.\r\n \r\n use std::cell::RefCell;\r\n use std::rc::Rc;\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/filter.rs at line 32:\r\n \r\n /// Implementation of a filter relation\r\n pub(super) struct FilterRelation {\r\n-    /// The schema for the filter relation. This is always the same as the schema of the input relation.\r\n+    /// The schema for the filter relation. This is always the same as the schema of the\r\n+    /// input relation.\r\n     schema: Arc<Schema>,\r\n     /// Relation that is  being filtered\r\n     input: Rc<RefCell<Relation>>,\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/limit.rs at line 33:\r\n pub(super) struct LimitRelation {\r\n     /// The relation which the limit is being applied to\r\n     input: Rc<RefCell<Relation>>,\r\n-    /// The schema for the limit relation, which is always the same as the schema of the input relation\r\n+    /// The schema for the limit relation, which is always the same as the schema of the\r\n+    /// input relation\r\n     schema: Arc<Schema>,\r\n     /// The number of rows returned by this relation\r\n     limit: usize,\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/projection.rs at line 15:\r\n // specific language governing permissions and limitations\r\n // under the License.\r\n \r\n-//! Defines the projection relation. A projection determines which columns or expressions are\r\n-//! returned from a query. The SQL statement `SELECT a, b, a+b FROM t1` is an example of a\r\n-//! projection on table `t1` where the expressions `a`, `b`, and `a+b` are the projection\r\n-//! expressions.\r\n+//! Defines the projection relation. A projection determines which columns or expressions\r\n+//! are returned from a query. The SQL statement `SELECT a, b, a+b FROM t1` is an example\r\n+//! of a projection on table `t1` where the expressions `a`, `b`, and `a+b` are the\r\n+//! projection expressions.\r\n \r\n use std::cell::RefCell;\r\n use std::rc::Rc;\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/execution/relation.rs at line 16:\r\n // under the License.\r\n \r\n //! A relation is a representation of a set of tuples. A database table is a\r\n-//! type of relation. During query execution, each operation on a relation (such as projection,\r\n-//! selection, aggregation) results in a new relation.\r\n+//! type of relation. During query execution, each operation on a relation (such as\r\n+//! projection, selection, aggregation) results in a new relation.\r\n \r\n use std::sync::{Arc, Mutex};\r\n \r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/optimizer/optimizer.rs at line 21:\r\n use crate::logicalplan::LogicalPlan;\r\n use std::sync::Arc;\r\n \r\n-/// An optimizer rules performs a transformation on a logical plan to produce an optimized logical plan.\r\n+/// An optimizer rules performs a transformation on a logical plan to produce an optimized\r\n+/// logical plan.\r\n pub trait OptimizerRule {\r\n     /// Perform optimizations on the plan\r\n     fn optimize(&mut self, plan: &LogicalPlan) -> Result<Arc<LogicalPlan>>;\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/optimizer/projection_push_down.rs at line 142:\r\n                 schema,\r\n                 ..\r\n             } => {\r\n-                // once we reach the table scan, we can use the accumulated set of column indexes as\r\n-                // the projection in the table scan\r\n+                // once we reach the table scan, we can use the accumulated set of column\r\n+                // indexes as the projection in the table scan\r\n                 let mut projection: Vec<usize> = Vec::with_capacity(accum.len());\r\n                 accum.iter().for_each(|i| projection.push(*i));\r\n \r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/optimizer/projection_push_down.rs at line 158:\r\n                 }\r\n                 let projected_schema = Schema::new(projected_fields);\r\n \r\n-                // now that the table scan is returning a different schema we need to create a\r\n-                // mapping from the original column index to the new column index so that we\r\n-                // can rewrite expressions as we walk back up the tree\r\n+                // now that the table scan is returning a different schema we need to\r\n+                // create a mapping from the original column index to the\r\n+                // new column index so that we can rewrite expressions as\r\n+                // we walk back up the tree\r\n \r\n                 if mapping.len() != 0 {\r\n                     return Err(ExecutionError::InternalError(\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/optimizer/type_coercion.rs at line 17:\r\n \r\n //! The type_coercion optimizer rule ensures that all binary operators are operating on\r\n //! compatible types by adding explicit cast operations to expressions. For example,\r\n-//! the operation `c_float + c_int` would be rewritten as `c_float + CAST(c_int AS float)`.\r\n-//! This keeps the runtime query execution code much simpler.\r\n+//! the operation `c_float + c_int` would be rewritten as `c_float + CAST(c_int AS\r\n+//! float)`. This keeps the runtime query execution code much simpler.\r\n \r\n use std::sync::Arc;\r\n \r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/optimizer/utils.rs at line 24:\r\n use crate::error::{ExecutionError, Result};\r\n use crate::logicalplan::Expr;\r\n \r\n-/// Recursively walk a list of expression trees, collecting the unique set of column indexes\r\n-/// referenced in the expression\r\n+/// Recursively walk a list of expression trees, collecting the unique set of column\r\n+/// indexes referenced in the expression\r\n pub fn exprlist_to_column_indices(expr: &Vec<Expr>, accum: &mut HashSet<usize>) {\r\n     expr.iter().for_each(|e| expr_to_column_indices(e, accum));\r\n }\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/src/table.rs at line 15:\r\n // specific language governing permissions and limitations\r\n // under the License.\r\n \r\n-//! Table API for building a logical query plan. This is similar to the Table API in Ibis and\r\n-//! the DataFrame API in Apache Spark\r\n+//! Table API for building a logical query plan. This is similar to the Table API in Ibis\r\n+//! and the DataFrame API in Apache Spark\r\n \r\n use crate::error::Result;\r\n use crate::logicalplan::LogicalPlan;\r\nDiff in /tmp/arrow-0.13.0.tW4Dz/apache-arrow-0.13.0/rust/datafusion/tests/sql.rs at line 129:\r\n     assert_eq!(expected, actual);\r\n }\r\n \r\n-//TODO Uncomment the following test when ORDER BY is implemented to be able to test ORDER BY + LIMIT\r\n+//TODO Uncomment the following test when ORDER BY is implemented to be able to test ORDER\r\n+// BY + LIMIT\r\n /*\r\n #[test]\r\n fn csv_query_limit_with_order_by() {\r\n\r\n{noformat}",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Release][Rust] Format error in verification script",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z016hk:",
        "customfield_12314139": null
    }
}