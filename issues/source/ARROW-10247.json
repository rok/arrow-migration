{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13334637",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637",
    "key": "ARROW-10247",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10247/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/532696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130\n\n\n   Enables usage of dictionary columns as partition columns on write.\r\n   \r\n   Additionally resolves some partition-related follow ups from #8894 (@pitrou):\r\n   - raise an error status [instead of aborting](https://github.com/apache/arrow/pull/8894/#discussion_r545219042) for overflowing maximum group count\r\n   - handle dictionary index types [other than int32](https://github.com/apache/arrow/pull/8894/#discussion_r545215901) \r\n   - don't build an unused null bitmap [in CountsToOffsets](https://github.com/apache/arrow/pull/8894/#discussion_r545212237)\r\n   - improve docstrings for [MakeGroupings, ApplyGroupings](https://github.com/apache/arrow/pull/8894/#discussion_r545209568)\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T19:55:27.603+0000",
                    "updated": "2021-01-07T19:55:27.603+0000",
                    "started": "2021-01-07T19:55:27.603+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532696",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/532697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#issuecomment-756346881\n\n\n   https://issues.apache.org/jira/browse/ARROW-10247\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T19:56:04.427+0000",
                    "updated": "2021-01-07T19:56:04.427+0000",
                    "started": "2021-01-07T19:56:04.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532697",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/532709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#issuecomment-756372363\n\n\n   non apache CI: https://github.com/bkietz/arrow/runs/1664709650\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T20:43:15.771+0000",
                    "updated": "2021-01-07T20:43:15.771+0000",
                    "started": "2021-01-07T20:43:15.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532709",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555126282\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -230,9 +236,9 @@ std::vector<KeyValuePartitioning::Key> DirectoryPartitioning::ParseKeys(\n   return keys;\n }\n \n-inline util::optional<int> NextValid(const std::vector<Scalar*>& values, int first_null) {\n+inline util::optional<int> NextValid(const ScalarVector& values, int first_null) {\n   auto it = std::find_if(values.begin() + first_null + 1, values.end(),\n-                         [](Scalar* v) { return v != nullptr; });\n+                         [](const std::shared_ptr<Scalar> v) { return v != nullptr; });\n\nReview comment:\n       `const&`?\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       Can you comment on this? It's not obvious why we're limited by the size of an `int16_t`.\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -288,16 +288,58 @@ class ARROW_DS_EXPORT PartitioningOrFactory {\n /// \\brief Assemble lists of indices of identical rows.\n ///\n /// \\param[in] by A StructArray whose columns will be used as grouping criteria.\n-/// \\return A StructArray mapping unique rows (in field \"values\", represented as a\n-///         StructArray with the same fields as `by`) to lists of indices where\n-///         that row appears (in field \"groupings\").\n+///               Top level nulls are invalid, as are empty criteria (no grouping\n+///               columns).\n+/// \\return A array of type `struct<values: by.type, groupings: list<int64>>`,\n+///         which is a mapping from unique rows (field \"values\") to lists of\n+///         indices into `by` where that row appears (field \"groupings\").\n+///\n+/// For example,\n+///   MakeGroupings([\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 1}\n+///   ]) == [\n+///       {\"values\": {\"a\": \"ex\",  \"b\": 0}, \"groupings\": [0, 1, 4]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 0}, \"groupings\": [2, 3]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 1}, \"groupings\": [5]}\n+///   ]\n ARROW_DS_EXPORT\n Result<std::shared_ptr<StructArray>> MakeGroupings(const StructArray& by);\n \n-/// \\brief Produce slices of an Array which correspond to the provided groupings.\n+/// \\brief Produce a ListArray whose slots are slices of `array` which correspond to the\n\nReview comment:\n       Perhaps unimportant, but at least in Python a slice is a contiguous subsequence. That said, the example dissipates the ambiguity.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T15:45:47.272+0000",
                    "updated": "2021-01-11T15:45:47.272+0000",
                    "started": "2021-01-11T15:45:47.271+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534290",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555173519\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -230,9 +236,9 @@ std::vector<KeyValuePartitioning::Key> DirectoryPartitioning::ParseKeys(\n   return keys;\n }\n \n-inline util::optional<int> NextValid(const std::vector<Scalar*>& values, int first_null) {\n+inline util::optional<int> NextValid(const ScalarVector& values, int first_null) {\n   auto it = std::find_if(values.begin() + first_null + 1, values.end(),\n-                         [](Scalar* v) { return v != nullptr; });\n+                         [](const std::shared_ptr<Scalar> v) { return v != nullptr; });\n\nReview comment:\n       yes, thanks\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T16:24:25.164+0000",
                    "updated": "2021-01-11T16:24:25.164+0000",
                    "started": "2021-01-11T16:24:25.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534312",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555176556\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       I picked it arbitrarily, to be honest. A huge number of groups seemed likely to be an error to see who would ask about it. Should we instead allow the full range of int32? @jorisvandenbossche \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T16:28:35.035+0000",
                    "updated": "2021-01-11T16:28:35.035+0000",
                    "started": "2021-01-11T16:28:35.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534316",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555177802\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -288,16 +288,58 @@ class ARROW_DS_EXPORT PartitioningOrFactory {\n /// \\brief Assemble lists of indices of identical rows.\n ///\n /// \\param[in] by A StructArray whose columns will be used as grouping criteria.\n-/// \\return A StructArray mapping unique rows (in field \"values\", represented as a\n-///         StructArray with the same fields as `by`) to lists of indices where\n-///         that row appears (in field \"groupings\").\n+///               Top level nulls are invalid, as are empty criteria (no grouping\n+///               columns).\n+/// \\return A array of type `struct<values: by.type, groupings: list<int64>>`,\n+///         which is a mapping from unique rows (field \"values\") to lists of\n+///         indices into `by` where that row appears (field \"groupings\").\n+///\n+/// For example,\n+///   MakeGroupings([\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 1}\n+///   ]) == [\n+///       {\"values\": {\"a\": \"ex\",  \"b\": 0}, \"groupings\": [0, 1, 4]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 0}, \"groupings\": [2, 3]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 1}, \"groupings\": [5]}\n+///   ]\n ARROW_DS_EXPORT\n Result<std::shared_ptr<StructArray>> MakeGroupings(const StructArray& by);\n \n-/// \\brief Produce slices of an Array which correspond to the provided groupings.\n+/// \\brief Produce a ListArray whose slots are slices of `array` which correspond to the\n\nReview comment:\n       I'll use \"selections\" instead\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T16:30:15.648+0000",
                    "updated": "2021-01-11T16:30:15.648+0000",
                    "started": "2021-01-11T16:30:15.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534321",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555181548\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       For now I'll remove the constant `kMaxGroups` and allow any int32 group count.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T16:35:37.799+0000",
                    "updated": "2021-01-11T16:35:37.799+0000",
                    "started": "2021-01-11T16:35:37.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534329",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#issuecomment-758114350\n\n\n   non apache CI: https://github.com/bkietz/arrow/runs/1682804367\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T17:47:15.903+0000",
                    "updated": "2021-01-11T17:47:15.903+0000",
                    "started": "2021-01-11T17:47:15.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534371",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555270347\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       You never know if someone has a strange use case requiring a lot of groups, so if there is not a technical reason, I think it's good to just allow it\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T18:59:01.184+0000",
                    "updated": "2021-01-11T18:59:01.184+0000",
                    "started": "2021-01-11T18:59:01.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534438",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555271701\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       I don't know, is a separate file created for each group? If so, it makes sense to put a configurable limit.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T19:01:22.007+0000",
                    "updated": "2021-01-11T19:01:22.007+0000",
                    "started": "2021-01-11T19:01:22.006+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534442",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534447",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555273007\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       Yes, at least one file for each group\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T19:03:44.788+0000",
                    "updated": "2021-01-11T19:03:44.788+0000",
                    "started": "2021-01-11T19:03:44.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534447",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555279313\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       Then it's definitely worth having a reasonably small configurable limit (such as 100). I suspect it's easy to end up with Arrow creating a million files if you do a mistake in choosing your partition columns.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T19:15:20.526+0000",
                    "updated": "2021-01-11T19:15:20.526+0000",
                    "started": "2021-01-11T19:15:20.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534463",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555275756\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -288,16 +288,58 @@ class ARROW_DS_EXPORT PartitioningOrFactory {\n /// \\brief Assemble lists of indices of identical rows.\n ///\n /// \\param[in] by A StructArray whose columns will be used as grouping criteria.\n-/// \\return A StructArray mapping unique rows (in field \"values\", represented as a\n-///         StructArray with the same fields as `by`) to lists of indices where\n-///         that row appears (in field \"groupings\").\n+///               Top level nulls are invalid, as are empty criteria (no grouping\n+///               columns).\n+/// \\return A array of type `struct<values: by.type, groupings: list<int64>>`,\n+///         which is a mapping from unique rows (field \"values\") to lists of\n+///         indices into `by` where that row appears (field \"groupings\").\n+///\n+/// For example,\n+///   MakeGroupings([\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 1}\n+///   ]) == [\n+///       {\"values\": {\"a\": \"ex\",  \"b\": 0}, \"groupings\": [0, 1, 4]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 0}, \"groupings\": [2, 3]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 1}, \"groupings\": [5]}\n+///   ]\n\nReview comment:\n       Nice docstrings! Those examples help a lot\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -288,16 +288,58 @@ class ARROW_DS_EXPORT PartitioningOrFactory {\n /// \\brief Assemble lists of indices of identical rows.\n ///\n /// \\param[in] by A StructArray whose columns will be used as grouping criteria.\n-/// \\return A StructArray mapping unique rows (in field \"values\", represented as a\n-///         StructArray with the same fields as `by`) to lists of indices where\n-///         that row appears (in field \"groupings\").\n+///               Top level nulls are invalid, as are empty criteria (no grouping\n+///               columns).\n+/// \\return A array of type `struct<values: by.type, groupings: list<int64>>`,\n+///         which is a mapping from unique rows (field \"values\") to lists of\n+///         indices into `by` where that row appears (field \"groupings\").\n+///\n+/// For example,\n+///   MakeGroupings([\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 1}\n+///   ]) == [\n+///       {\"values\": {\"a\": \"ex\",  \"b\": 0}, \"groupings\": [0, 1, 4]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 0}, \"groupings\": [2, 3]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 1}, \"groupings\": [5]}\n+///   ]\n ARROW_DS_EXPORT\n Result<std::shared_ptr<StructArray>> MakeGroupings(const StructArray& by);\n \n-/// \\brief Produce slices of an Array which correspond to the provided groupings.\n+/// \\brief Produce a ListArray whose slots are selections of `array` which correspond to\n+/// the provided groupings.\n+///\n+/// For example,\n+///   ApplyGroupings([[0, 1, 4], [2, 3], [5]], [\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 1},\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 2},\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 3},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 4},\n+///       {\"a\": \"why\", \"b\": 1, \"passenger\": 5}\n+///   ]) == [\n+///     [\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 1},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 4},\n+///     ],\n+///     [\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 2},\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 3},\n+///     ],\n+///     [\n+///       {\"a\": \"why\", \"b\": 1, \"passenger\": 5}\n+///     ]\n+///   ]\n ARROW_DS_EXPORT\n Result<std::shared_ptr<ListArray>> ApplyGroupings(const ListArray& groupings,\n                                                   const Array& array);\n+\n+/// \\brief Produce slices of a RecordBatch which correspond to the provided groupings.\n\nReview comment:\n       Also here \"slices\" -> \"selections\" ?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1433,12 +1433,19 @@ cdef class DirectoryPartitioning(Partitioning):\n     cdef:\n         CDirectoryPartitioning* directory_partitioning\n \n-    def __init__(self, Schema schema not None):\n-        cdef shared_ptr[CDirectoryPartitioning] partitioning\n-        partitioning = make_shared[CDirectoryPartitioning](\n-            pyarrow_unwrap_schema(schema)\n+    def __init__(self, Schema schema not None, dictionaries=None):\n\nReview comment:\n       Can you update the above docstring for this new keyword? (and same for HivePartitioning, and partitioning() below) \n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -2315,6 +2315,29 @@ def test_write_dataset_partitioned(tempdir):\n         partitioning=partitioning_schema)\n \n \n+@pytest.mark.parquet\n+@pytest.mark.pandas\n+def test_write_dataset_partitioned_dict(tempdir):\n+    directory = tempdir / \"partitioned\"\n+    _ = _create_parquet_dataset_partitioned(directory)\n+\n+    # directory partitioning, dictionary partition columns\n+    dataset = ds.dataset(\n+        directory,\n+        partitioning=ds.HivePartitioning.discover(infer_dictionary=True))\n+    target = tempdir / 'partitioned-dir-target'\n+    expected_paths = [\n+        target / \"a\", target / \"a\" / \"part-0.feather\",\n+        target / \"b\", target / \"b\" / \"part-1.feather\"\n+    ]\n+    partitioning_schema = ds.partitioning(pa.schema([\n+        dataset.schema.field('part')]),\n+        dictionaries=[pa.array(['a', 'b'])])\n\nReview comment:\n       Or even more, it doesn't seem to impact the result if I set different values there than the actual values in the partition column\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -2315,6 +2315,29 @@ def test_write_dataset_partitioned(tempdir):\n         partitioning=partitioning_schema)\n \n \n+@pytest.mark.parquet\n+@pytest.mark.pandas\n+def test_write_dataset_partitioned_dict(tempdir):\n+    directory = tempdir / \"partitioned\"\n+    _ = _create_parquet_dataset_partitioned(directory)\n+\n+    # directory partitioning, dictionary partition columns\n+    dataset = ds.dataset(\n+        directory,\n+        partitioning=ds.HivePartitioning.discover(infer_dictionary=True))\n+    target = tempdir / 'partitioned-dir-target'\n+    expected_paths = [\n+        target / \"a\", target / \"a\" / \"part-0.feather\",\n+        target / \"b\", target / \"b\" / \"part-1.feather\"\n+    ]\n+    partitioning_schema = ds.partitioning(pa.schema([\n+        dataset.schema.field('part')]),\n+        dictionaries=[pa.array(['a', 'b'])])\n\nReview comment:\n       Are you required to pass those dictionaries for writing? \r\n   Based on a quick test locally, it seems to work without as well? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T19:23:48.962+0000",
                    "updated": "2021-01-11T19:23:48.962+0000",
                    "started": "2021-01-11T19:23:48.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534470",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555285509\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       As long as it is configurable, then that is fine for me. \r\n   But I think something like 100 is too small. For example, the NYC taxi dataset partitioned by year + month for 8 years of data already has 8*12 = 96 groups. And I think partitioning by day is not that uncommon in practice for big data (although for those cases you will probably not write that all at once)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T19:26:50.007+0000",
                    "updated": "2021-01-11T19:26:50.007+0000",
                    "started": "2021-01-11T19:26:50.006+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534472",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555770569\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -288,16 +288,58 @@ class ARROW_DS_EXPORT PartitioningOrFactory {\n /// \\brief Assemble lists of indices of identical rows.\n ///\n /// \\param[in] by A StructArray whose columns will be used as grouping criteria.\n-/// \\return A StructArray mapping unique rows (in field \"values\", represented as a\n-///         StructArray with the same fields as `by`) to lists of indices where\n-///         that row appears (in field \"groupings\").\n+///               Top level nulls are invalid, as are empty criteria (no grouping\n+///               columns).\n+/// \\return A array of type `struct<values: by.type, groupings: list<int64>>`,\n+///         which is a mapping from unique rows (field \"values\") to lists of\n+///         indices into `by` where that row appears (field \"groupings\").\n+///\n+/// For example,\n+///   MakeGroupings([\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0},\n+///       {\"a\": \"why\", \"b\": 1}\n+///   ]) == [\n+///       {\"values\": {\"a\": \"ex\",  \"b\": 0}, \"groupings\": [0, 1, 4]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 0}, \"groupings\": [2, 3]},\n+///       {\"values\": {\"a\": \"why\", \"b\": 1}, \"groupings\": [5]}\n+///   ]\n ARROW_DS_EXPORT\n Result<std::shared_ptr<StructArray>> MakeGroupings(const StructArray& by);\n \n-/// \\brief Produce slices of an Array which correspond to the provided groupings.\n+/// \\brief Produce a ListArray whose slots are selections of `array` which correspond to\n+/// the provided groupings.\n+///\n+/// For example,\n+///   ApplyGroupings([[0, 1, 4], [2, 3], [5]], [\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 1},\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 2},\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 3},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 4},\n+///       {\"a\": \"why\", \"b\": 1, \"passenger\": 5}\n+///   ]) == [\n+///     [\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 0},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 1},\n+///       {\"a\": \"ex\",  \"b\": 0, \"passenger\": 4},\n+///     ],\n+///     [\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 2},\n+///       {\"a\": \"why\", \"b\": 0, \"passenger\": 3},\n+///     ],\n+///     [\n+///       {\"a\": \"why\", \"b\": 1, \"passenger\": 5}\n+///     ]\n+///   ]\n ARROW_DS_EXPORT\n Result<std::shared_ptr<ListArray>> ApplyGroupings(const ListArray& groupings,\n                                                   const Array& array);\n+\n+/// \\brief Produce slices of a RecordBatch which correspond to the provided groupings.\n\nReview comment:\n       will do\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T13:31:18.400+0000",
                    "updated": "2021-01-12T13:31:18.400+0000",
                    "started": "2021-01-12T13:31:18.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534837",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555770771\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1433,12 +1433,19 @@ cdef class DirectoryPartitioning(Partitioning):\n     cdef:\n         CDirectoryPartitioning* directory_partitioning\n \n-    def __init__(self, Schema schema not None):\n-        cdef shared_ptr[CDirectoryPartitioning] partitioning\n-        partitioning = make_shared[CDirectoryPartitioning](\n-            pyarrow_unwrap_schema(schema)\n+    def __init__(self, Schema schema not None, dictionaries=None):\n\nReview comment:\n       will do\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T13:31:48.634+0000",
                    "updated": "2021-01-12T13:31:48.634+0000",
                    "started": "2021-01-12T13:31:48.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534838",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555771737\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -562,6 +569,8 @@ inline Result<std::shared_ptr<Array>> CountsToOffsets(\n // since no Writers accept a selection vector.\n class StructDictionary {\n  public:\n+  static constexpr int32_t kMaxGroups = std::numeric_limits<int16_t>::max();\n\nReview comment:\n       I'll add max groups as a member of WriteOptions\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T13:33:17.865+0000",
                    "updated": "2021-01-12T13:33:17.865+0000",
                    "started": "2021-01-12T13:33:17.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534841",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534849",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555785945\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -2315,6 +2315,29 @@ def test_write_dataset_partitioned(tempdir):\n         partitioning=partitioning_schema)\n \n \n+@pytest.mark.parquet\n+@pytest.mark.pandas\n+def test_write_dataset_partitioned_dict(tempdir):\n+    directory = tempdir / \"partitioned\"\n+    _ = _create_parquet_dataset_partitioned(directory)\n+\n+    # directory partitioning, dictionary partition columns\n+    dataset = ds.dataset(\n+        directory,\n+        partitioning=ds.HivePartitioning.discover(infer_dictionary=True))\n+    target = tempdir / 'partitioned-dir-target'\n+    expected_paths = [\n+        target / \"a\", target / \"a\" / \"part-0.feather\",\n+        target / \"b\", target / \"b\" / \"part-1.feather\"\n+    ]\n+    partitioning_schema = ds.partitioning(pa.schema([\n+        dataset.schema.field('part')]),\n+        dictionaries=[pa.array(['a', 'b'])])\n\nReview comment:\n       That's surprising; you should see errors: `No dictionary provided for dictionary field part: dictionary<values=string, indices=int32, ordered=0>` if you specify an incorrect dictionary and `Dictionary supplied for field part: dictionary<values=string, indices=int32, ordered=0> does not contain 'a'` if you specify a dictionary which doesn't include all the column's values\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T13:55:26.051+0000",
                    "updated": "2021-01-12T13:55:26.051+0000",
                    "started": "2021-01-12T13:55:26.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534849",
                    "issueId": "13334637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/worklog/534940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9130:\nURL: https://github.com/apache/arrow/pull/9130#discussion_r555948969\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -2315,6 +2315,29 @@ def test_write_dataset_partitioned(tempdir):\n         partitioning=partitioning_schema)\n \n \n+@pytest.mark.parquet\n+@pytest.mark.pandas\n+def test_write_dataset_partitioned_dict(tempdir):\n+    directory = tempdir / \"partitioned\"\n+    _ = _create_parquet_dataset_partitioned(directory)\n+\n+    # directory partitioning, dictionary partition columns\n+    dataset = ds.dataset(\n+        directory,\n+        partitioning=ds.HivePartitioning.discover(infer_dictionary=True))\n+    target = tempdir / 'partitioned-dir-target'\n+    expected_paths = [\n+        target / \"a\", target / \"a\" / \"part-0.feather\",\n+        target / \"b\", target / \"b\" / \"part-1.feather\"\n+    ]\n+    partitioning_schema = ds.partitioning(pa.schema([\n+        dataset.schema.field('part')]),\n+        dictionaries=[pa.array(['a', 'b'])])\n\nReview comment:\n       For now I've updated the docstring and put a comment in the test to indicate that dictionaries are required fro parsing dict fields.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T17:29:44.459+0000",
                    "updated": "2021-01-12T17:29:44.459+0000",
                    "started": "2021-01-12T17:29:44.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534940",
                    "issueId": "13334637"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e0b9f67[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a5836d5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ccea55e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@78bd08c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@698965bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6006192c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39bbb427[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@606d1c2c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@426b0927[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1274a73f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@760a33da[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7e8ecd4b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 15 16:44:04 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-15T16:44:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10247/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-10-09T12:00:06.000+0000",
        "updated": "2021-01-15T16:44:07.000+0000",
        "timeoriginalestimate": null,
        "description": "When the column to use for partitioning is dictionary encoded, we get this error:\r\n\r\n{code}\r\nIn [9]: import pyarrow.dataset as ds\r\n\r\nIn [10]: part = [\"xxx\"] * 3 + [\"yyy\"] * 3\r\n    ...: table = pa.table([\r\n    ...:     pa.array(range(len(part))),\r\n    ...:     pa.array(part).dictionary_encode(),\r\n    ...: ], names=['col', 'part'])\r\n\r\nIn [11]: part = ds.partitioning(table.select([\"part\"]).schema)\r\n\r\nIn [12]: ds.write_dataset(table, \"test_dataset_dict_part\", format=\"parquet\", partitioning=part)\r\n---------------------------------------------------------------------------\r\nArrowTypeError                            Traceback (most recent call last)\r\n<ipython-input-12-c7b81c9b0bda> in <module>\r\n----> 1 ds.write_dataset(table, \"test_dataset_dict_part\", format=\"parquet\", partitioning=part)\r\n\r\n~/scipy/repos/arrow/python/pyarrow/dataset.py in write_dataset(data, base_dir, basename_template, format, partitioning, schema, filesystem, file_options, use_threads)\r\n    773     _filesystemdataset_write(\r\n    774         data, base_dir, basename_template, schema,\r\n--> 775         filesystem, partitioning, file_options, use_threads,\r\n    776     )\r\n\r\n~/scipy/repos/arrow/python/pyarrow/_dataset.pyx in pyarrow._dataset._filesystemdataset_write()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowTypeError: scalar xxx (of type string) is invalid for part: dictionary<values=string, indices=int32, ordered=0>\r\nIn ../src/arrow/dataset/filter.cc, line 1082, code: VisitConjunctionMembers(*and_.left_operand(), visitor)\r\nIn ../src/arrow/dataset/partition.cc, line 257, code: VisitKeys(expr, [&](const std::string& name, const std::shared_ptr<Scalar>& value) { auto&& _error_or_value28 = (FieldRef(name).FindOneOrNone(*schema_)); do { ::arrow::Status __s = ::arrow::internal::GenericToStatus((_error_or_value28).status()); do { if ((__builtin_expect(!!(!__s.ok()), 0))) { ::arrow::Status _st = (__s); _st.AddContextLine(\"../src/arrow/dataset/partition.cc\", 257, \"(_error_or_value28).status()\"); return _st; } } while (0); } while (false); auto match = std::move(_error_or_value28).ValueUnsafe();;; if (match) { const auto& field = schema_->field(match[0]); if (!value->type->Equals(field->type())) { return Status::TypeError(\"scalar \", value->ToString(), \" (of type \", *value->type, \") is invalid for \", field->ToString()); } values[match[0]] = value.get(); } return Status::OK(); })\r\nIn ../src/arrow/dataset/file_base.cc, line 321, code: (_error_or_value24).status()\r\nIn ../src/arrow/dataset/file_base.cc, line 354, code: task_group->Finish()\r\n{code}\r\n\r\nWhile this seems a quit normal use case, as this column will typically be repeated many times (and we also support reading it as such with dictionary type, so a roundtrip is currently not possible in that case)\r\n\r\nI tagged it for 2.0.0 for a moment in case it's possible today, but I didn't yet look into how easy it would be to fix.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Cannot write dataset with dictionary column as partition field",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/comment/17210866",
                    "id": "17210866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "cc [~bkietz]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-10-09T12:00:23.397+0000",
                    "updated": "2020-10-09T12:00:23.397+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/comment/17261996",
                    "id": "17261996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "What is the best workaround for this issue right now? I was playing around with making a new partition schema if a dictionary type was found in my partition columns:\r\n\r\n\u00a0\r\n{code:java}\r\npartitioning = None\r\npart_schema = t.select([\"project\", \"date\"]).schema\r\nfields = []\r\nfor part in part_schema:\r\n    if pa.types.is_dictionary(part.type):\r\n        fields.append(pa.field(part.name, part.type.value_type))\r\n    else:\r\n        fields.append(pa.field(part.name, part.type))\r\nnew_schema = pa.schema(fields)\r\npartitioning = ds.partitioning(new_schema, flavor=\"hive\")\r\n{code}\r\nThis seems to work for me. My only issue is if I have multiple partition columns with different types.\r\n\r\nThis would return an error when I read the dataset with ds.dataset():\r\n{code:java}\r\npartitioning = ds.partitioning(pa.schema([('date', pa.date32()), (\"project\", pa.dictionary(index_type=pa.int32(), value_type=pa.string()))]), flavor=\"hive\"){code}\r\nArrowInvalid: No dictionary provided for dictionary field project: dictionary<values=string, indices=int32, ordered=0>\r\n\r\n\u00a0\r\n\r\nAnd this returns dictionaries for both partitions (instead of date being pa.date32()) which is not ideal:\r\n{code:java}\r\npartitioning=ds.HivePartitioning.discover(infer_dictionary=True){code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-10T02:43:24.008+0000",
                    "updated": "2021-01-10T03:27:25.286+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/comment/17265918",
                    "id": "17265918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~ldacey] yes, this problem of not being able to specify one column with a dictionary type (and {{discover(infer_dictionary=True)}} doing it for all columns) is indeed a open issue in the user API. I just noted that on the PR as well: https://github.com/apache/arrow/pull/9130#issuecomment-760801124\r\n\r\nSo with the imminent pyarrow 3.0, you will be able to do:\r\n\r\n{code:python}\r\npartitioning = ds.partitioning(\r\n    pa.schema([('date', pa.date32()), (\"project\", pa.dictionary(index_type=pa.int32(), value_type=pa.string()))]),\r\n    flavor=\"hive\", dictionaries={'project': pa.array([... all possible values for the project field ...]}\r\n)\r\n{code}\r\n\r\nNote that the above is only needed for reading, for writing it will work without specifying those dictionaries keyword manually. I will open a new JIRA to further improve this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-01-15T10:58:24.795+0000",
                    "updated": "2021-01-15T10:58:24.795+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/comment/17265928",
                    "id": "17265928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Nice - how would you generally go about finding the array of values? Would it be detected from the file paths, or would I need\u00a0 store it externally somewhere (sometimes new categories could be added into the field without me being aware so explicitly listing them in my code might be weird)?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-15T11:08:06.945+0000",
                    "updated": "2021-01-15T11:08:22.754+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/comment/17265940",
                    "id": "17265940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "bq. how would you generally go about finding the array of values?\r\n\r\nWell, that's up to you .. (parsing it from the file paths, storing that information somewhere, ..). But, so, my hunch is that we shouldn't actually _require_ the user to pass it, since pyarrow can infer that itself from parsing the file paths if not provided. I opened ARROW-11260 for this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-01-15T11:25:03.786+0000",
                    "updated": "2021-01-15T11:25:03.786+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13334637/comment/17266184",
                    "id": "17266184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9130\n[https://github.com/apache/arrow/pull/9130]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-15T16:44:04.951+0000",
                    "updated": "2021-01-15T16:44:04.951+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jkcw:",
        "customfield_12314139": null
    }
}