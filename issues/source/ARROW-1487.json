{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13100645",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645",
    "key": "ARROW-1487",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12514165",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12514165",
                "type": {
                    "id": "12310060",
                    "name": "Container",
                    "inward": "Is contained by",
                    "outward": "contains",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310060"
                },
                "inwardIssue": {
                    "id": "13100663",
                    "key": "ARROW-1492",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100663",
                    "fields": {
                        "summary": "[C++] Type casting function kernel suite",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Licht-T",
            "name": "Licht-T",
            "key": "licht-t",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=licht-t&avatarId=33236",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=licht-t&avatarId=33236",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=licht-t&avatarId=33236",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=licht-t&avatarId=33236"
            },
            "displayName": "Licht Takeuchi",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1487/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e5dbae2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f9cf0db[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@623456f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5a967843[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a32f2ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5051b2d7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1092ddcd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@792febfc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34c57141[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@69dfaa04[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f256e47[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@69d30854[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Dec 25 00:30:03 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-06T21:40:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1487/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-09-08T01:09:56.000+0000",
        "updated": "2017-12-25T00:30:03.000+0000",
        "timeoriginalestimate": null,
        "description": "If a cast rule for the child type is not implemented, the failure should occur during kernel selection rather than at kernel evaluation time. ",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16211446",
                    "id": "16211446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Github user wesm commented on the issue:\n\n    https://github.com/apache/arrow/issues/1214\n  \n    There's already a JIRA for this, could you follow it there? https://issues.apache.org/jira/browse/ARROW-1487. Patches welcome if you'd like to see it done sooner\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-19T17:57:23.582+0000",
                    "updated": "2017-10-19T17:57:23.582+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16275919",
                    "id": "16275919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T opened a new pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383\n \n \n   This closes [ARROW-1487](https://issues.apache.org/jira/browse/ARROW-1487).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-03T12:48:13.441+0000",
                    "updated": "2017-12-03T12:48:13.441+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16276101",
                    "id": "16276101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#discussion_r154537405\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -801,6 +801,47 @@ TYPED_TEST(TestDictionaryCast, Basic) {\n   this->CheckPass(*plain_array, *dict_array, dict_array->type(), options);\n }*/\n \n+TEST_F(TestCast, ListToList) {\n+  CastOptions options;\n+  std::shared_ptr<Array> offsets;\n+\n+  vector<int32_t> offsets_values = {0, 1, 2, 5, 7, 7, 8, 10};\n+  std::vector<bool> offsets_is_valid = {true, true, true, true, false, true, true, true};\n+  ArrayFromVector<Int32Type, int32_t>(offsets_is_valid, offsets_values, &offsets);\n+\n+  shared_ptr<Array> int32_plain_array =\n+      TestBase::MakeRandomArray<typename TypeTraits<Int32Type>::ArrayType>(10, 2);\n+  std::shared_ptr<Array> int32_list_array;\n+  ASSERT_OK(\n+      ListArray::FromArrays(*offsets, *int32_plain_array, pool_, &int32_list_array));\n+\n+  std::shared_ptr<Array> int64_plain_array;\n+  ASSERT_OK(Cast(&this->ctx_, *int32_plain_array, int64(), options, &int64_plain_array));\n+  std::shared_ptr<Array> int64_list_array;\n+  ASSERT_OK(\n+      ListArray::FromArrays(*offsets, *int64_plain_array, pool_, &int64_list_array));\n+\n+  std::shared_ptr<Array> float64_plain_array;\n+  ASSERT_OK(\n+      Cast(&this->ctx_, *int32_plain_array, float64(), options, &float64_plain_array));\n+  std::shared_ptr<Array> float64_list_array;\n+  ASSERT_OK(\n+      ListArray::FromArrays(*offsets, *float64_plain_array, pool_, &float64_list_array));\n \n Review comment:\n   In here, per below, we will want to verify that the casted result retains zero-copy references to the buffers from the parent array.\r\n   \r\n   There is another nuance to be aware of, which is that the offset member may be non-zero, so in that case simply reusing the buffers is not the appropriate action\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-03T21:31:13.531+0000",
                    "updated": "2017-12-03T21:31:13.531+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16276102",
                    "id": "16276102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#discussion_r154537350\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -460,6 +460,29 @@ struct CastFunctor<Date32Type, Date64Type> {\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// List to List\n+\n+template <>\n+struct CastFunctor<ListType, ListType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    Datum datum_out;\n+    ListArray input_array(input.Copy());\n+\n+    const ListType& type = static_cast<const ListType&>(*output->type);\n+\n+    FUNC_RETURN_NOT_OK(\n+        Cast(ctx, Datum(input_array.values()), type.value_type(), options, &datum_out));\n+\n+    FUNC_RETURN_NOT_OK(\n+        input.buffers[0]->Copy(0, input.buffers[0]->size(), &output->buffers[0]));\n+    FUNC_RETURN_NOT_OK(\n+        input.buffers[1]->Copy(0, input.buffers[1]->size(), &output->buffers[1]));\n+    output->child_data.emplace_back(datum_out.array());\n \n Review comment:\n   There's a couple issues with this:\r\n   \r\n   a) We should not perform any additional copying or allocation beyond what is required to perform the cast on the child, i.e. we should simply reuse the buffers from the input array without copying\r\n   \r\n   b) It would be better to resolve the cast kernel for the child data when the kernel is resolved in `GetCastFunction`. Instead of defining a functor for list, instead create an alternative implementation of `UnaryKernel` that has the child cast kernel as a member variable. This is what I meant in https://issues.apache.org/jira/browse/ARROW-1487 by \"If a cast rule for the child type is not implemented, the failure should occur during kernel selection rather than at kernel evaluation time.\"\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-03T21:31:13.540+0000",
                    "updated": "2017-12-03T21:31:13.540+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16277729",
                    "id": "16277729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#issuecomment-349138694\n \n \n   @wesm Thanks for your review! Now revised the implementation (but the test codes is not yet). Is this the right direction?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T23:13:38.442+0000",
                    "updated": "2017-12-04T23:13:38.442+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16277938",
                    "id": "16277938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#discussion_r154836688\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -766,6 +806,7 @@ class CastKernel : public UnaryKernel {\n   bool is_zero_copy_;\n   bool can_pre_allocate_values_;\n   std::shared_ptr<DataType> out_type_;\n+  std::vector<std::unique_ptr<UnaryKernel>> child_cast_kernels;\n \n Review comment:\n   I'm sort of thinking of having a `ListCastKernel : public UnaryKernel` implementation. Would you mind if I took a pass at working on this? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-05T03:05:58.805+0000",
                    "updated": "2017-12-05T03:05:58.805+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16279283",
                    "id": "16279283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on a change in pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#discussion_r155093785\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -766,6 +806,7 @@ class CastKernel : public UnaryKernel {\n   bool is_zero_copy_;\n   bool can_pre_allocate_values_;\n   std::shared_ptr<DataType> out_type_;\n+  std::vector<std::unique_ptr<UnaryKernel>> child_cast_kernels;\n \n Review comment:\n   @wesm IMO, we don't have to create the special case like `ListCastKernel`. I think simply checking child `Field` is sufficient.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-05T22:22:16.126+0000",
                    "updated": "2017-12-05T22:22:16.126+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16279311",
                    "id": "16279311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#discussion_r155098546\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -766,6 +806,7 @@ class CastKernel : public UnaryKernel {\n   bool is_zero_copy_;\n   bool can_pre_allocate_values_;\n   std::shared_ptr<DataType> out_type_;\n+  std::vector<std::unique_ptr<UnaryKernel>> child_cast_kernels;\n \n Review comment:\n   You can take a look at what I just did -- for the moment casting sliced `ListArray` raises an exception, we'll need to do some more work to make that work\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-05T22:44:03.531+0000",
                    "updated": "2017-12-05T22:44:03.531+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16279316",
                    "id": "16279316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#discussion_r155099662\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -766,6 +806,7 @@ class CastKernel : public UnaryKernel {\n   bool is_zero_copy_;\n   bool can_pre_allocate_values_;\n   std::shared_ptr<DataType> out_type_;\n+  std::vector<std::unique_ptr<UnaryKernel>> child_cast_kernels;\n \n Review comment:\n   I think we can generalize to support struct casts and have instead a `NestedCastKernel` when the time comes. I think we should defer that a bit until we've dealt with the sliced list case. The problem with the current `CastKernel` is that it's tied up in the business of memory allocation for primitive arrays. We'll keep needing to do some refactoring around this as we implement more kernels which are capable of writing into pre-allocated memory\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-05T22:49:12.157+0000",
                    "updated": "2017-12-05T22:49:12.157+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16280970",
                    "id": "16280970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#issuecomment-349783651\n \n \n   macOS build stalled out due to ARROW-1880\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T21:40:14.807+0000",
                    "updated": "2017-12-06T21:40:14.807+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16280971",
                    "id": "16280971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1383\n[https://github.com/apache/arrow/pull/1383]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-06T21:40:41.036+0000",
                    "updated": "2017-12-06T21:40:41.036+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16280972",
                    "id": "16280972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex 84af8f7c6..3fc150186 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -801,6 +801,47 @@ TYPED_TEST(TestDictionaryCast, Basic) {\n   this->CheckPass(*plain_array, *dict_array, dict_array->type(), options);\n }*/\n \n+TEST_F(TestCast, ListToList) {\n+  CastOptions options;\n+  std::shared_ptr<Array> offsets;\n+\n+  vector<int32_t> offsets_values = {0, 1, 2, 5, 7, 7, 8, 10};\n+  std::vector<bool> offsets_is_valid = {true, true, true, true, false, true, true, true};\n+  ArrayFromVector<Int32Type, int32_t>(offsets_is_valid, offsets_values, &offsets);\n+\n+  shared_ptr<Array> int32_plain_array =\n+      TestBase::MakeRandomArray<typename TypeTraits<Int32Type>::ArrayType>(10, 2);\n+  std::shared_ptr<Array> int32_list_array;\n+  ASSERT_OK(\n+      ListArray::FromArrays(*offsets, *int32_plain_array, pool_, &int32_list_array));\n+\n+  std::shared_ptr<Array> int64_plain_array;\n+  ASSERT_OK(Cast(&this->ctx_, *int32_plain_array, int64(), options, &int64_plain_array));\n+  std::shared_ptr<Array> int64_list_array;\n+  ASSERT_OK(\n+      ListArray::FromArrays(*offsets, *int64_plain_array, pool_, &int64_list_array));\n+\n+  std::shared_ptr<Array> float64_plain_array;\n+  ASSERT_OK(\n+      Cast(&this->ctx_, *int32_plain_array, float64(), options, &float64_plain_array));\n+  std::shared_ptr<Array> float64_list_array;\n+  ASSERT_OK(\n+      ListArray::FromArrays(*offsets, *float64_plain_array, pool_, &float64_list_array));\n+\n+  this->CheckPass(*int32_list_array, *int64_list_array, int64_list_array->type(),\n+                  options);\n+  this->CheckPass(*int32_list_array, *float64_list_array, float64_list_array->type(),\n+                  options);\n+  this->CheckPass(*int64_list_array, *int32_list_array, int32_list_array->type(),\n+                  options);\n+  this->CheckPass(*int64_list_array, *float64_list_array, float64_list_array->type(),\n+                  options);\n+  this->CheckPass(*float64_list_array, *int32_list_array, int32_list_array->type(),\n+                  options);\n+  this->CheckPass(*float64_list_array, *int64_list_array, int64_list_array->type(),\n+                  options);\n+}\n+\n // ----------------------------------------------------------------------\n // Dictionary tests\n \ndiff --git a/cpp/src/arrow/compute/kernels/cast.cc b/cpp/src/arrow/compute/kernels/cast.cc\nindex 465be958c..afa05485f 100644\n--- a/cpp/src/arrow/compute/kernels/cast.cc\n+++ b/cpp/src/arrow/compute/kernels/cast.cc\n@@ -460,6 +460,49 @@ struct CastFunctor<Date32Type, Date64Type> {\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// List to List\n+\n+class ListCastKernel : public UnaryKernel {\n+ public:\n+  ListCastKernel(std::unique_ptr<UnaryKernel> child_caster,\n+                 const std::shared_ptr<DataType>& out_type)\n+      : child_caster_(std::move(child_caster)), out_type_(out_type) {}\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(Datum::ARRAY, input.kind());\n+\n+    const ArrayData& in_data = *input.array();\n+    DCHECK_EQ(Type::LIST, in_data.type->id());\n+    ArrayData* result;\n+\n+    if (in_data.offset != 0) {\n+      return Status::NotImplemented(\n+          \"Casting sliced lists (non-zero offset) not yet implemented\");\n+    }\n+\n+    if (out->kind() == Datum::NONE) {\n+      out->value = ArrayData::Make(out_type_, in_data.length);\n+    }\n+\n+    result = out->array().get();\n+\n+    // Copy buffers from parent\n+    result->buffers = in_data.buffers;\n+\n+    Datum casted_child;\n+    RETURN_NOT_OK(child_caster_->Call(ctx, Datum(in_data.child_data[0]), &casted_child));\n+    result->child_data.push_back(casted_child.array());\n+\n+    RETURN_IF_ERROR(ctx);\n+    return Status::OK();\n+  }\n+\n+ private:\n+  std::unique_ptr<UnaryKernel> child_caster_;\n+  std::shared_ptr<DataType> out_type_;\n+};\n+\n // ----------------------------------------------------------------------\n // Dictionary to other things\n \n@@ -895,7 +938,6 @@ GET_CAST_FUNCTION(DATE64_CASES, Date64Type);\n GET_CAST_FUNCTION(TIME32_CASES, Time32Type);\n GET_CAST_FUNCTION(TIME64_CASES, Time64Type);\n GET_CAST_FUNCTION(TIMESTAMP_CASES, TimestampType);\n-\n GET_CAST_FUNCTION(DICTIONARY_CASES, DictionaryType);\n \n #define CAST_FUNCTION_CASE(InType)                      \\\n@@ -903,6 +945,26 @@ GET_CAST_FUNCTION(DICTIONARY_CASES, DictionaryType);\n     *kernel = Get##InType##CastFunc(out_type, options); \\\n     break\n \n+namespace {\n+\n+Status GetListCastFunc(const DataType& in_type, const std::shared_ptr<DataType>& out_type,\n+                       const CastOptions& options, std::unique_ptr<UnaryKernel>* kernel) {\n+  if (out_type->id() != Type::LIST) {\n+    // Kernel will be null\n+    return Status::OK();\n+  }\n+  const DataType& in_value_type = *static_cast<const ListType&>(in_type).value_type();\n+  std::shared_ptr<DataType> out_value_type =\n+      static_cast<const ListType&>(*out_type).value_type();\n+  std::unique_ptr<UnaryKernel> child_caster;\n+  RETURN_NOT_OK(GetCastFunction(in_value_type, out_value_type, options, &child_caster));\n+  *kernel =\n+      std::unique_ptr<UnaryKernel>(new ListCastKernel(std::move(child_caster), out_type));\n+  return Status::OK();\n+}\n+\n+}  // namespace\n+\n Status GetCastFunction(const DataType& in_type, const std::shared_ptr<DataType>& out_type,\n                        const CastOptions& options, std::unique_ptr<UnaryKernel>* kernel) {\n   switch (in_type.id()) {\n@@ -924,6 +986,9 @@ Status GetCastFunction(const DataType& in_type, const std::shared_ptr<DataType>&\n     CAST_FUNCTION_CASE(Time64Type);\n     CAST_FUNCTION_CASE(TimestampType);\n     CAST_FUNCTION_CASE(DictionaryType);\n+    case Type::LIST:\n+      RETURN_NOT_OK(GetListCastFunc(in_type, out_type, options, kernel));\n+      break;\n     default:\n       break;\n   }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T21:40:43.317+0000",
                    "updated": "2017-12-06T21:40:43.317+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13100645/comment/16302973",
                    "id": "16302973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1383: ARROW-1487: [C++] Implement casts from List<A> to List<B>, where a cast function is defined from any A to B\nURL: https://github.com/apache/arrow/pull/1383#issuecomment-353809520\n \n \n   Thnaks @wesm! I understand why normal `CastKernel` and `ListCastKernel` are needed separately.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-25T00:30:03.729+0000",
                    "updated": "2017-12-25T00:30:03.729+0000"
                }
            ],
            "maxResults": 13,
            "total": 13,
            "startAt": 0
        },
        "customfield_12311820": "0|i3jslz:",
        "customfield_12314139": null
    }
}