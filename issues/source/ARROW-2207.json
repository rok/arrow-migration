{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13140697",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697",
    "key": "ARROW-2207",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2207/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/99522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 opened a new pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012\n \n \n   Support GArrowDecimal128 to GLIB.\r\n   \r\n   - Add garrow_decimal128_to_string()\r\n   - Add garrow_decimal128_to_integer_string()\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T13:31:42.715+0000",
                    "updated": "2018-05-08T13:31:42.715+0000",
                    "started": "2018-05-08T13:31:42.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99522",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/99557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#issuecomment-387431142\n \n \n   @shiro615 There seem to be some build errors in your code in Travis, can you fix them?\r\n   \r\n   You can safely ignore the Python unit test errors in the first build, the Plasma problems are unrelated to your changes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T14:56:04.599+0000",
                    "updated": "2018-05-08T14:56:04.599+0000",
                    "started": "2018-05-08T14:56:04.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99557",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#issuecomment-387913650\n \n \n   Thanks!\r\n   We need to update file list in `arrow-glib/meson.build` because we support two build systems, GNU Autotools and Meson.\r\n   Can you apply the following patch?\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/meson.build b/c_glib/arrow-glib/meson.build\r\n   index 0278ac26..5e3dbe21 100644\r\n   --- a/c_glib/arrow-glib/meson.build\r\n   +++ b/c_glib/arrow-glib/meson.build\r\n   @@ -26,6 +26,7 @@ sources = files(\r\n      'column.cpp',\r\n      'composite-array.cpp',\r\n      'composite-data-type.cpp',\r\n   +  'decimal.cpp',\r\n      'error.cpp',\r\n      'field.cpp',\r\n      'record-batch.cpp',\r\n   @@ -68,6 +69,7 @@ c_headers = files(\r\n      'composite-array.h',\r\n      'composite-data-type.h',\r\n      'data-type.h',\r\n   +  'decimal.h',\r\n      'error.h',\r\n      'field.h',\r\n      'gobject-type.h',\r\n   @@ -111,6 +113,7 @@ cpp_headers = files(\r\n      'chunked-array.hpp',\r\n      'column.hpp',\r\n      'data-type.hpp',\r\n   +  'decimal.hpp',\r\n      'error.hpp',\r\n      'field.hpp',\r\n      'record-batch.hpp',\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:21:54.727+0000",
                    "updated": "2018-05-10T00:21:54.727+0000",
                    "started": "2018-05-10T00:21:54.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100347",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187213416\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(decimal);\n+  return arrow_decimal->ToString(scale).c_str();\n+}\n+\n+/**\n+ * garrow_decimal128_to_integer_string:\n+ * @decimal: A #GArrowDecimal128.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_integer_string(GArrowDecimal128 *decimal)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(decimal);\n+  return arrow_decimal->ToIntegerString().c_str();\n+}\n+\n+G_END_DECLS\n+\n+GArrowDecimal128 *\n+garrow_decimal128_new_raw(std::shared_ptr<arrow::Decimal128> *arrow_decimal128)\n+{\n+  auto decimal = g_object_new(GARROW_TYPE_DECIMAL128,\n+                             \"decimal128\", arrow_decimal128,\n+                             NULL);\n \n Review comment:\n   Can you fix the indent?\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/decimal.cpp b/c_glib/arrow-glib/decimal.cpp\r\n   index f5934cc9..3044e39d 100644\r\n   --- a/c_glib/arrow-glib/decimal.cpp\r\n   +++ b/c_glib/arrow-glib/decimal.cpp\r\n   @@ -172,8 +172,8 @@ GArrowDecimal128 *\r\n    garrow_decimal128_new_raw(std::shared_ptr<arrow::Decimal128> *arrow_decimal128)\r\n    {\r\n      auto decimal = g_object_new(GARROW_TYPE_DECIMAL128,\r\n   -                             \"decimal128\", arrow_decimal128,\r\n   -                             NULL);\r\n   +                              \"decimal128\", arrow_decimal128,\r\n   +                              NULL);\r\n      return GARROW_DECIMAL128(decimal);\r\n    }\r\n   ```\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.542+0000",
                    "updated": "2018-05-10T00:59:35.542+0000",
                    "started": "2018-05-10T00:59:35.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100355",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187212358\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n \n Review comment:\n   Can you use `0.10.0`?\r\n   Because we will ship this feature in Apache Arrow GLib 0.10.0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.545+0000",
                    "updated": "2018-05-10T00:59:35.545+0000",
                    "started": "2018-05-10T00:59:35.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100356",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187212365\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n \n Review comment:\n   Can you use `0.10.0`?\r\n   Because we will ship this feature in Apache Arrow GLib 0.10.0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.558+0000",
                    "updated": "2018-05-10T00:59:35.558+0000",
                    "started": "2018-05-10T00:59:35.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100357",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187212012\n \n \n\n ##########\n File path: c_glib/arrow-glib/Makefile.am\n ##########\n @@ -98,6 +99,7 @@ libarrow_glib_la_sources =\t\t\t\\\n \tcolumn.cpp\t\t\t\t\\\n \tcomposite-array.cpp\t\t\t\\\n \tcomposite-data-type.cpp\t\t\t\\\n+\tdecimal.cpp\t\t\t\\\n \n Review comment:\n   Can you add a TAB before `\\`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.573+0000",
                    "updated": "2018-05-10T00:59:35.573+0000",
                    "started": "2018-05-10T00:59:35.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100358",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187212346\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n \n Review comment:\n   Can you use `0.10.0`?\r\n   Because we will ship this feature in Apache Arrow GLib 0.10.0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.574+0000",
                    "updated": "2018-05-10T00:59:35.574+0000",
                    "started": "2018-05-10T00:59:35.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100359",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187212324\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n \n Review comment:\n   Can you use `0.10.0`?\r\n   Because we will ship this feature in Apache Arrow GLib 0.10.0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.580+0000",
                    "updated": "2018-05-10T00:59:35.580+0000",
                    "started": "2018-05-10T00:59:35.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100360",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187215662\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(decimal);\n+  return arrow_decimal->ToString(scale).c_str();\n \n Review comment:\n   This is not safe because `ToString()` returns a temporary `std::string`. It's unavailable outside of this scope.\r\n   \r\n   We need to return duplicated `gchar *`:\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/decimal.cpp b/c_glib/arrow-glib/decimal.cpp\r\n   index f5934cc9..37a88e54 100644\r\n   --- a/c_glib/arrow-glib/decimal.cpp\r\n   +++ b/c_glib/arrow-glib/decimal.cpp\r\n   @@ -142,13 +142,16 @@ garrow_decimal128_new_integer(const gint64 data)\r\n     *\r\n     * Returns: The string representation of the decimal.\r\n     *\r\n   + *   It should be freed with g_free() when no longer needed.\r\n   + *\r\n     * Since: 1.0.0\r\n     */\r\n   -const gchar *\r\n   +gchar *\r\n    garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\r\n    {\r\n      auto arrow_decimal = garrow_decimal128_get_raw(decimal);\r\n   -  return arrow_decimal->ToString(scale).c_str();\r\n   +  auto string = arrow_decimal->ToString(scale);\r\n   +  return g_strndup(string.data(), string.size());\r\n    }\r\n    \r\n    /**\r\n   ```\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/decimal.h b/c_glib/arrow-glib/decimal.h\r\n   index 4c1ef545..8245abc5 100644\r\n   --- a/c_glib/arrow-glib/decimal.h\r\n   +++ b/c_glib/arrow-glib/decimal.h\r\n   @@ -37,8 +37,8 @@ struct _GArrowDecimal128Class\r\n    \r\n    GArrowDecimal128 *garrow_decimal128_new_string(const gchar *data);\r\n    GArrowDecimal128 *garrow_decimal128_new_integer(const gint64 data);\r\n   -const gchar *garrow_decimal128_to_string(GArrowDecimal128 *decimal,\r\n   -                                         gint32 scale);\r\n   +gchar *garrow_decimal128_to_string(GArrowDecimal128 *decimal,\r\n   +                                   gint32 scale);\r\n    const gchar *garrow_decimal128_to_integer_string(GArrowDecimal128 *decimal);\r\n    \r\n    G_END_DECLS\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.683+0000",
                    "updated": "2018-05-10T00:59:35.683+0000",
                    "started": "2018-05-10T00:59:35.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100361",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187214799\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\n \n Review comment:\n   How about removing `gint32 scale` argument from this function?\r\n   Because `*_to_string()` is a general name for a function that doesn't accept no extra argument in GLib context.\r\n   For example:\r\n   \r\n     * [`g_quark_to_string()`](https://developer.gnome.org/glib/stable/glib-Quarks.html#g-quark-to-string)\r\n     * [`gtk_css_provider_to_string()`](https://developer.gnome.org/gtk3/stable/GtkCssProvider.html#gtk-css-provider-to-string)\r\n    * [`gtk_tree_path_to_string()`](https://developer.gnome.org/gtk3/stable/GtkTreeModel.html#gtk-tree-path-to-string)\r\n   \r\n   If we remove `gint32 scale` argument, we can use `arrow::Decimal128::ToIntegerString()` internally.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.683+0000",
                    "updated": "2018-05-10T00:59:35.683+0000",
                    "started": "2018-05-10T00:59:35.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100362",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187212373\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(decimal);\n+  return arrow_decimal->ToString(scale).c_str();\n+}\n+\n+/**\n+ * garrow_decimal128_to_integer_string:\n+ * @decimal: A #GArrowDecimal128.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n \n Review comment:\n   Can you use `0.10.0`?\r\n   Because we will ship this feature in Apache Arrow GLib 0.10.0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.684+0000",
                    "updated": "2018-05-10T00:59:35.684+0000",
                    "started": "2018-05-10T00:59:35.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100363",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187213518\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n \n Review comment:\n   Can you fix the indent?\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/decimal.cpp b/c_glib/arrow-glib/decimal.cpp\r\n   index f5934cc9..6549a2ed 100644\r\n   --- a/c_glib/arrow-glib/decimal.cpp\r\n   +++ b/c_glib/arrow-glib/decimal.cpp\r\n   @@ -65,9 +65,9 @@ garrow_decimal128_finalize(GObject *object)\r\n    \r\n    static void\r\n    garrow_decimal128_set_property(GObject *object,\r\n   -                        guint prop_id,\r\n   -                        const GValue *value,\r\n   -                        GParamSpec *pspec)\r\n   +                               guint prop_id,\r\n   +                               const GValue *value,\r\n   +                               GParamSpec *pspec)\r\n    {\r\n      auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\r\n   \r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.691+0000",
                    "updated": "2018-05-10T00:59:35.691+0000",
                    "started": "2018-05-10T00:59:35.690+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100364",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187213180\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n \n Review comment:\n   Can you align trailing `\\` as the following?\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/decimal.cpp b/c_glib/arrow-glib/decimal.cpp\r\n   index f5934cc9..9fe2b3fa 100644\r\n   --- a/c_glib/arrow-glib/decimal.cpp\r\n   +++ b/c_glib/arrow-glib/decimal.cpp\r\n   @@ -48,9 +48,9 @@ G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\r\n                               garrow_decimal128,\r\n                               G_TYPE_OBJECT)\r\n    \r\n   -#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\r\n   -  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\r\n   -                               GARROW_TYPE_DECIMAL128,     \\\r\n   +#define GARROW_DECIMAL128_GET_PRIVATE(obj)                      \\\r\n   +  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                           \\\r\n   +                               GARROW_TYPE_DECIMAL128,          \\\r\n                                   GArrowDecimal128Private))\r\n    \r\n    static void\r\n   ```\r\n   \r\n   We can use `c-backslash-region` (`C-c C-\\`) on Emacs for this but I don't know the same feature for Vim...\r\n   \r\n   It may be a time that we introduce clang-format or something.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.707+0000",
                    "updated": "2018-05-10T00:59:35.707+0000",
                    "started": "2018-05-10T00:59:35.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100365",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100366",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187215732\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(decimal);\n+  return arrow_decimal->ToString(scale).c_str();\n+}\n+\n+/**\n+ * garrow_decimal128_to_integer_string:\n+ * @decimal: A #GArrowDecimal128.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_integer_string(GArrowDecimal128 *decimal)\n+{\n+  auto arrow_decimal = garrow_decimal128_get_raw(decimal);\n+  return arrow_decimal->ToIntegerString().c_str();\n \n Review comment:\n   We need to return duplicated `gchar *` here too.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.708+0000",
                    "updated": "2018-05-10T00:59:35.708+0000",
                    "started": "2018-05-10T00:59:35.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100366",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#discussion_r187216019\n \n \n\n ##########\n File path: c_glib/arrow-glib/decimal.cpp\n ##########\n @@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/decimal.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: decimal128\n+ * @title: Decimal128 class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowDecimal128 is a decimal128 class.\n+ *\n+ * Since: 0.9.0\n+ */\n+\n+typedef struct GArrowDecimal128Private_ {\n+  std::shared_ptr<arrow::Decimal128> decimal128;\n+} GArrowDecimal128Private;\n+\n+enum {\n+  PROP_0,\n+  PROP_DECIMAL128\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowDecimal128,\n+                           garrow_decimal128,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_DECIMAL128_GET_PRIVATE(obj)                 \\\n+  (G_TYPE_INSTANCE_GET_PRIVATE((obj),                   \\\n+                               GARROW_TYPE_DECIMAL128,     \\\n+                               GArrowDecimal128Private))\n+\n+static void\n+garrow_decimal128_finalize(GObject *object)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  priv->decimal128 = nullptr;\n+\n+  G_OBJECT_CLASS(garrow_decimal128_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_decimal128_set_property(GObject *object,\n+                        guint prop_id,\n+                        const GValue *value,\n+                        GParamSpec *pspec)\n+{\n+  auto priv = GARROW_DECIMAL128_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_DECIMAL128:\n+    priv->decimal128 =\n+      *static_cast<std::shared_ptr<arrow::Decimal128> *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_decimal128_init(GArrowDecimal128 *object)\n+{\n+}\n+\n+static void\n+garrow_decimal128_class_init(GArrowDecimal128Class *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_decimal128_finalize;\n+  gobject_class->set_property = garrow_decimal128_set_property;\n+\n+  spec = g_param_spec_pointer(\"decimal128\",\n+                              \"Decimal128\",\n+                              \"The raw std::shared<arrow::Decimal128> *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_DECIMAL128, spec);\n+}\n+\n+/**\n+ * garrow_decimal128_new_string:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_string(const gchar *data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_new_integer:\n+ * @data: The data of the decimal.\n+ *\n+ * Returns: A newly created #GArrowDecimal128.\n+ *\n+ * Since: 1.0.0\n+ */\n+GArrowDecimal128 *\n+garrow_decimal128_new_integer(const gint64 data)\n+{\n+  auto arrow_decimal = std::make_shared<arrow::Decimal128>(data);\n+  return garrow_decimal128_new_raw(&arrow_decimal);\n+}\n+\n+/**\n+ * garrow_decimal128_to_string:\n+ * @decimal: A #GArrowDecimal128.\n+ * @scale: The scale of the decimal.\n+ *\n+ * Returns: The string representation of the decimal.\n+ *\n+ * Since: 1.0.0\n+ */\n+const gchar *\n+garrow_decimal128_to_string(GArrowDecimal128 *decimal, gint32 scale)\n \n Review comment:\n   How about `garrow_decimal128_to_string_scale(GArrowDecimal128 *decimal, gint32 scale)` as the new name?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T00:59:35.717+0000",
                    "updated": "2018-05-10T00:59:35.717+0000",
                    "started": "2018-05-10T00:59:35.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100367",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#issuecomment-388105858\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=h1) Report\n   > Merging [#2012](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/414268ba8e303e77fb41df3872bbc58ce8852ef4?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2012/graphs/tree.svg?src=pr&width=650&token=LpTCFbqVT1&height=150)](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2012      +/-   ##\n   ==========================================\n   + Coverage   87.32%   87.33%   +<.01%     \n   ==========================================\n     Files         186      186              \n     Lines       29004    29004              \n   ==========================================\n   + Hits        25329    25331       +2     \n   + Misses       3675     3673       -2\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/python/builtin\\_convert.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vYnVpbHRpbl9jb252ZXJ0LmNj) | `91.81% <0%> (+0.24%)` | :arrow_up: |\n   | [cpp/src/arrow/python/python\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3RvX2Fycm93LmNj) | `88.2% <0%> (+0.25%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=footer). Last update [414268b...a878a8b](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T16:23:32.928+0000",
                    "updated": "2018-05-10T16:23:32.928+0000",
                    "started": "2018-05-10T16:23:32.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100672",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on issue #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#issuecomment-388219799\n \n \n   @xhochy @kou Thank you for review.I fixed. \r\n   Please review again.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:54:37.945+0000",
                    "updated": "2018-05-10T23:54:37.945+0000",
                    "started": "2018-05-10T23:54:37.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100911",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/100920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#issuecomment-388222742\n \n \n   @shiro615 Thanks!\r\n   I found needed changes about documents. Can you apply the following patch?\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/decimal.cpp b/c_glib/arrow-glib/decimal.cpp\r\n   index ac792f62..ca57677f 100644\r\n   --- a/c_glib/arrow-glib/decimal.cpp\r\n   +++ b/c_glib/arrow-glib/decimal.cpp\r\n   @@ -26,11 +26,11 @@\r\n    G_BEGIN_DECLS\r\n    \r\n    /**\r\n   - * SECTION: decimal128\r\n   - * @title: Decimal128 class\r\n   + * SECTION: decimal\r\n   + * @title: Decimal classes\r\n     * @include: arrow-glib/arrow-glib.h\r\n     *\r\n   - * #GArrowDecimal128 is a decimal128 class.\r\n   + * #GArrowDecimal128 is a 128-bit decimal class.\r\n     *\r\n     * Since: 0.10.0\r\n     */\r\n   diff --git a/c_glib/doc/reference/arrow-glib-docs.xml b/c_glib/doc/reference/arrow-glib-docs.xml\r\n   index c7e53a52..2c75041f 100644\r\n   --- a/c_glib/doc/reference/arrow-glib-docs.xml\r\n   +++ b/c_glib/doc/reference/arrow-glib-docs.xml\r\n   @@ -51,6 +51,10 @@\r\n          <title>Compute</title>\r\n          <xi:include href=\"xml/compute.xml\"/>\r\n        </chapter>\r\n   +    <chapter id=\"decimal\">\r\n   +      <title>Decimal</title>\r\n   +      <xi:include href=\"xml/decimal.xml\"/>\r\n   +    </chapter>\r\n        <chapter id=\"tensor\">\r\n          <title>Tensor</title>\r\n          <xi:include href=\"xml/tensor.xml\"/>\r\n   ```\r\n   \r\n   I'll merged this after the patch is applied.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-11T00:14:42.189+0000",
                    "updated": "2018-05-11T00:14:42.189+0000",
                    "started": "2018-05-11T00:14:42.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100920",
                    "issueId": "13140697"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/worklog/101061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2012: ARROW-2207: [GLib] Support GArrowDecimal128\nURL: https://github.com/apache/arrow/pull/2012#issuecomment-388105858\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=h1) Report\n   > Merging [#2012](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/414268ba8e303e77fb41df3872bbc58ce8852ef4?src=pr&el=desc) will **increase** coverage by `0.09%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2012/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2012      +/-   ##\n   ==========================================\n   + Coverage   87.32%   87.42%   +0.09%     \n   ==========================================\n     Files         186      189       +3     \n     Lines       29004    29289     +285     \n   ==========================================\n   + Hits        25329    25607     +278     \n   - Misses       3675     3682       +7\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/memory.h](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `83.54% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmNj) | `92.55% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/util/thread-pool.h](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmg=) | `92.3% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.62% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/python/builtin\\_convert.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vYnVpbHRpbl9jb252ZXJ0LmNj) | `91.81% <0%> (+0.24%)` | :arrow_up: |\n   | [cpp/src/arrow/python/python\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3RvX2Fycm93LmNj) | `88.2% <0%> (+0.25%)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `88.99% <0%> (+0.26%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=footer). Last update [414268b...6ef7331](https://codecov.io/gh/apache/arrow/pull/2012?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-11T10:06:22.708+0000",
                    "updated": "2018-05-11T10:06:22.708+0000",
                    "started": "2018-05-11T10:06:22.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101061",
                    "issueId": "13140697"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@26f2d9d2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66bdb1c4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53e45ca1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@585ce488[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e68b47c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c087c7b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6df83a0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@523feb9c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@290f6ef3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@763b240d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5abf5087[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@77f13347[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 11 21:32:08 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-11T21:32:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2207/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-02-24T08:44:17.000+0000",
        "updated": "2018-07-27T15:28:43.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Support decimal type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140697/comment/16472698",
                    "id": "16472698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 2012\n[https://github.com/apache/arrow/pull/2012]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-05-11T21:32:08.157+0000",
                    "updated": "2018-05-11T21:32:08.157+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qk27:",
        "customfield_12314139": null
    }
}