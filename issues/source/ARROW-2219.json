{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13141010",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141010",
    "key": "ARROW-2219",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342821",
                "id": "12342821",
                "description": "",
                "name": "JS-0.3.1",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-16"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2219/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@63a31b5c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cbf57e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3885f658[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@673a9433[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30af52aa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48b43334[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f943b4c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6c3ca781[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@264c92ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4f8828c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31382426[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@38b18d2f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 26 19:38:43 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-26T19:38:43.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2219/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-26T19:13:53.000+0000",
        "updated": "2018-02-26T19:38:43.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JS] Fix \"indices\" typo ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141010/comment/16377439",
                    "id": "16377439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on issue #1666: ARROW-2219: [JS] rename indicies to indices\nURL: https://github.com/apache/arrow/pull/1666#issuecomment-368620635\n \n \n   Agreed, definitely worth it. I like indices, since it's consistent with C++\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T19:30:06.783+0000",
                    "updated": "2018-02-26T19:30:06.783+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141010/comment/16377453",
                    "id": "16377453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit closed pull request #1666: ARROW-2219: [JS] rename indicies to indices\nURL: https://github.com/apache/arrow/pull/1666\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/js/src/Arrow.externs.js b/js/src/Arrow.externs.js\nindex de1e65392..cf4db9134 100644\n--- a/js/src/Arrow.externs.js\n+++ b/js/src/Arrow.externs.js\n@@ -447,7 +447,7 @@ FlatListData.prototype.valueOffsets;\n \n var DictionaryData = function() {};\n /** @type {?} */\n-DictionaryData.prototype.indicies;\n+DictionaryData.prototype.indices;\n /** @type {?} */\n DictionaryData.prototype.dictionary;\n \ndiff --git a/js/src/data.ts b/js/src/data.ts\nindex d49fb790b..cdd9f29a7 100644\n--- a/js/src/data.ts\n+++ b/js/src/data.ts\n@@ -148,28 +148,28 @@ export class FlatListData<T extends FlatListType> extends FlatData<T> {\n \n export class DictionaryData<T extends DataType> extends BaseData<Dictionary<T>> {\n     protected _dictionary: Vector<T>;\n-    protected _indicies: Data<Int<any>>;\n-    public get indicies() { return this._indicies; }\n+    protected _indices: Data<Int<any>>;\n+    public get indices() { return this._indices; }\n     public get dictionary() { return this._dictionary; }\n-    constructor(type: Dictionary<T>, dictionary: Vector<T>, indicies: Data<Int<any>>) {\n-        super(type, indicies.length, (indicies as any)._nullCount);\n-        this._indicies = indicies;\n+    constructor(type: Dictionary<T>, dictionary: Vector<T>, indices: Data<Int<any>>) {\n+        super(type, indices.length, (indices as any)._nullCount);\n+        this._indices = indices;\n         this._dictionary = dictionary;\n-        this.length = this._indicies.length;\n+        this.length = this._indices.length;\n     }\n-    public get nullCount() { return this._indicies.nullCount; }\n-    public get nullBitmap() { return this._indicies.nullBitmap; }\n+    public get nullCount() { return this._indices.nullCount; }\n+    public get nullBitmap() { return this._indices.nullBitmap; }\n     public clone<R extends Dictionary<T>>(type: R, length = this.length, offset = this.offset) {\n         const data = this._dictionary.data.clone(type.dictionary as any);\n         return new DictionaryData<R>(\n             this.type as any,\n             this._dictionary.clone(data) as any,\n-            this._indicies.slice(offset - this.offset, length)\n+            this._indices.slice(offset - this.offset, length)\n         ) as any;\n     }\n     protected sliceInternal(clone: this, _offset: number, _length: number) {\n-        clone.length = clone._indicies.length;\n-        clone._nullCount = (clone._indicies as any)._nullCount;\n+        clone.length = clone._indices.length;\n+        clone._nullCount = (clone._indices as any)._nullCount;\n         return clone;\n     }\n }\ndiff --git a/js/src/ipc/reader/vector.ts b/js/src/ipc/reader/vector.ts\nindex 809069c6d..b8c4871eb 100644\n--- a/js/src/ipc/reader/vector.ts\n+++ b/js/src/ipc/reader/vector.ts\n@@ -92,7 +92,7 @@ export abstract class TypeDataLoader extends TypeVisitor {\n     public visitFixedSizeList  (type: FixedSizeList)   { return this.visitFixedSizeListType(type); }\n     public visitMap            (type: Map_)            { return this.visitNestedType(type); }\n     public visitDictionary     (type: Dictionary)      {\n-        return new DictionaryData(type, this.dictionaries.get(type.id)!, this.visit(type.indicies));\n+        return new DictionaryData(type, this.dictionaries.get(type.id)!, this.visit(type.indices));\n     }\n     protected getFieldMetadata() { return this.nodes.next().value; }\n     protected getBufferMetadata() { return this.buffers.next().value; }\ndiff --git a/js/src/table.ts b/js/src/table.ts\nindex 3e50d16e3..d0d699f36 100644\n--- a/js/src/table.ts\n+++ b/js/src/table.ts\n@@ -160,7 +160,7 @@ export class Table implements DataFrame {\n             const batch = batches[batchIndex];\n             // rebind the countBy Col\n             count_by.bind(batch);\n-            const keys = (count_by.vector as DictionaryVector).indicies;\n+            const keys = (count_by.vector as DictionaryVector).indices;\n             // yield all indices\n             for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                 let key = keys.get(index);\n@@ -258,7 +258,7 @@ class FilteredDataFrame implements DataFrame {\n             const predicate = this.predicate.bind(batch);\n             // rebind the countBy Col\n             count_by.bind(batch);\n-            const keys = (count_by.vector as DictionaryVector).indicies;\n+            const keys = (count_by.vector as DictionaryVector).indices;\n             // yield all indices\n             for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                 let key = keys.get(index);\ndiff --git a/js/src/type.ts b/js/src/type.ts\nindex 5e6c939ef..370be0def 100644\n--- a/js/src/type.ts\n+++ b/js/src/type.ts\n@@ -83,8 +83,8 @@ export class Field<T extends DataType = DataType> {\n     public toString() { return `${this.name}: ${this.type}`; }\n     public get typeId(): T['TType'] { return this.type.TType; }\n     public get [Symbol.toStringTag](): string { return 'Field'; }\n-    public get indicies(): T | Int<any> {\n-        return DataType.isDictionary(this.type) ? this.type.indicies : this.type;\n+    public get indices(): T | Int<any> {\n+        return DataType.isDictionary(this.type) ? this.type.indices : this.type;\n     }\n }\n \n@@ -443,17 +443,17 @@ export interface Dictionary<T extends DataType = any> extends DataType<Type.Dict\n export class Dictionary<T extends DataType> extends DataType<Type.Dictionary> {\n     public readonly id: number;\n     public readonly dictionary: T;\n-    public readonly indicies: Int<any>;\n+    public readonly indices: Int<any>;\n     public readonly isOrdered: boolean;\n-    constructor(dictionary: T, indicies: Int<any>, id?: Long | number | null, isOrdered?: boolean | null) {\n+    constructor(dictionary: T, indices: Int<any>, id?: Long | number | null, isOrdered?: boolean | null) {\n         super(Type.Dictionary);\n-        this.indicies = indicies;\n+        this.indices = indices;\n         this.dictionary = dictionary;\n         this.isOrdered = isOrdered || false;\n         this.id = id == null ? DictionaryBatch.getId() : typeof id === 'number' ? id : id.low;\n     }\n     public get ArrayType() { return this.dictionary.ArrayType; }\n-    public toString() { return `Dictionary<${this.indicies}, ${this.dictionary}>`; }\n+    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n     protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n         return proto[Symbol.toStringTag] = 'Dictionary';\n     })(Dictionary.prototype);\ndiff --git a/js/src/vector.ts b/js/src/vector.ts\nindex fa1d16efc..f36c691e1 100644\n--- a/js/src/vector.ts\n+++ b/js/src/vector.ts\n@@ -394,29 +394,29 @@ export class UnionVector<T extends (SparseUnion | DenseUnion) = any> extends Nes\n \n export class DictionaryVector<T extends DataType = DataType> extends Vector<Dictionary<T>> {\n     // @ts-ignore\n-    public readonly indicies: Vector<Int>;\n+    public readonly indices: Vector<Int>;\n     // @ts-ignore\n     public readonly dictionary: Vector<T>;\n-    constructor(data: Data<Dictionary<T>>, view: View<Dictionary<T>> = new DictionaryView<T>(data.dictionary, new IntVector(data.indicies))) {\n+    constructor(data: Data<Dictionary<T>>, view: View<Dictionary<T>> = new DictionaryView<T>(data.dictionary, new IntVector(data.indices))) {\n         super(data as Data<any>, view);\n         if (data instanceof DictionaryData && view instanceof DictionaryView) {\n-            this.indicies = view.indicies;\n+            this.indices = view.indices;\n             this.dictionary = data.dictionary;\n         } else if (data instanceof ChunkedData && view instanceof ChunkedView) {\n             const chunks = view.chunkVectors as DictionaryVector<T>[];\n             // Assume the last chunk's dictionary data is the most up-to-date,\n             // including data from DictionaryBatches that were marked as deltas\n             this.dictionary = chunks[chunks.length - 1].dictionary;\n-            this.indicies = chunks.reduce<Vector<Int> | null>(\n+            this.indices = chunks.reduce<Vector<Int> | null>(\n                 (idxs: Vector<Int> | null, dict: DictionaryVector<T>) =>\n-                    !idxs ? dict.indicies! : idxs.concat(dict.indicies!),\n+                    !idxs ? dict.indices! : idxs.concat(dict.indices!),\n                 null\n             )!;\n         } else {\n             throw new TypeError(`Unrecognized DictionaryVector view`);\n         }\n     }\n-    public getKey(index: number) { return this.indicies.get(index); }\n+    public getKey(index: number) { return this.indices.get(index); }\n     public getValue(key: number) { return this.dictionary.get(key); }\n     public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n }\ndiff --git a/js/src/vector/dictionary.ts b/js/src/vector/dictionary.ts\nindex f4de810b0..21f9bac09 100644\n--- a/js/src/vector/dictionary.ts\n+++ b/js/src/vector/dictionary.ts\n@@ -20,31 +20,31 @@ import { View, Vector } from '../vector';\n import { IterableArrayLike, DataType, Dictionary, Int } from '../type';\n \n export class DictionaryView<T extends DataType> implements View<T> {\n-    public indicies: Vector<Int>;\n+    public indices: Vector<Int>;\n     public dictionary: Vector<T>;\n-    constructor(dictionary: Vector<T>, indicies: Vector<Int>) {\n-        this.indicies = indicies;\n+    constructor(dictionary: Vector<T>, indices: Vector<Int>) {\n+        this.indices = indices;\n         this.dictionary = dictionary;\n     }\n     public clone(data: Data<Dictionary<T>>): this {\n-        return new DictionaryView(data.dictionary, this.indicies.clone(data.indicies)) as this;\n+        return new DictionaryView(data.dictionary, this.indices.clone(data.indices)) as this;\n     }\n     public isValid(index: number): boolean {\n-        return this.indicies.isValid(index);\n+        return this.indices.isValid(index);\n     }\n     public get(index: number): T['TValue'] {\n-        return this.dictionary.get(this.indicies.get(index));\n+        return this.dictionary.get(this.indices.get(index));\n     }\n     public set(index: number, value: T['TValue']): void {\n-        this.dictionary.set(this.indicies.get(index), value);\n+        this.dictionary.set(this.indices.get(index), value);\n     }\n     public toArray(): IterableArrayLike<T['TValue']> {\n         return [...this];\n     }\n     public *[Symbol.iterator](): IterableIterator<T['TValue']> {\n-        const values = this.dictionary, indicies = this.indicies;\n-        for (let index = -1, n = indicies.length; ++index < n;) {\n-            yield values.get(indicies.get(index));\n+        const values = this.dictionary, indices = this.indices;\n+        for (let index = -1, n = indices.length; ++index < n;) {\n+            yield values.get(indices.get(index));\n         }\n     }\n     public indexOf(search: T['TValue']) {\n@@ -52,7 +52,7 @@ export class DictionaryView<T extends DataType> implements View<T> {\n         const key = this.dictionary.indexOf(search);\n         if (key === -1) { return key; }\n \n-        // ... then find the first occurence of that key in indicies\n-        return this.indicies.indexOf(key!);\n+        // ... then find the first occurence of that key in indices\n+        return this.indices.indexOf(key!);\n     }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T19:38:26.701+0000",
                    "updated": "2018-02-26T19:38:26.701+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141010/comment/16377454",
                    "id": "16377454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "body": "Issue resolved by pull request 1666\n[https://github.com/apache/arrow/pull/1666]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "created": "2018-02-26T19:38:43.662+0000",
                    "updated": "2018-02-26T19:38:43.662+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qlyn:",
        "customfield_12314139": null
    }
}