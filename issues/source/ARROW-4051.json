{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13204782",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782",
    "key": "ARROW-4051",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4051/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 opened a new pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197\n \n \n   - Add `#GGandivaNullLiteralNode`.\r\n   - Remove `return_type` property in `#GGandivaFunctionNode` to use `ggandiva_node_get_return_type()`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T07:57:17.473+0000",
                    "updated": "2018-12-17T07:57:17.473+0000",
                    "started": "2018-12-17T07:57:17.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175912",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#issuecomment-447764912\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=h1) Report\n   > Merging [#3197](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5d1934fc3f5c65f70a3966b71c68941b2fd8d362?src=pr&el=desc) will **increase** coverage by `1.05%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3197/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3197      +/-   ##\n   ==========================================\n   + Coverage   86.43%   87.48%   +1.05%     \n   ==========================================\n     Files         504      446      -58     \n     Lines       69628    65862    -3766     \n   ==========================================\n   - Hits        60181    57620    -2561     \n   + Misses       9350     8242    -1108     \n   + Partials       97        0      -97\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [48 more](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=footer). Last update [5d1934f...0ac03b4](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T08:44:33.168+0000",
                    "updated": "2018-12-17T08:44:33.168+0000",
                    "started": "2018-12-17T08:44:33.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175928",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#issuecomment-447764912\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=h1) Report\n   > Merging [#3197](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5d1934fc3f5c65f70a3966b71c68941b2fd8d362?src=pr&el=desc) will **increase** coverage by `1.04%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3197/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3197      +/-   ##\n   ==========================================\n   + Coverage   86.43%   87.48%   +1.04%     \n   ==========================================\n     Files         504      446      -58     \n     Lines       69628    65862    -3766     \n   ==========================================\n   - Hits        60181    57617    -2564     \n   + Misses       9350     8245    -1105     \n   + Partials       97        0      -97\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `95.45% <0%> (-1.95%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=footer). Last update [5d1934f...0ac03b4](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T08:56:03.879+0000",
                    "updated": "2018-12-17T08:56:03.879+0000",
                    "started": "2018-12-17T08:56:03.878+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175931",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242067070\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -462,6 +459,41 @@ ggandiva_literal_node_class_init(GGandivaLiteralNodeClass *klass)\n }\n \n \n+G_DEFINE_TYPE(GGandivaNullLiteralNode,\n+              ggandiva_null_literal_node,\n+              GGANDIVA_TYPE_LITERAL_NODE)\n+\n+static void\n+ggandiva_null_literal_node_init(GGandivaNullLiteralNode *null_literal_node)\n+{\n+}\n+\n+static void\n+ggandiva_null_literal_node_class_init(GGandivaNullLiteralNodeClass *klass)\n+{\n+}\n+\n+/**\n+ * ggandiva_null_literal_node_new:\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: (nullable): A newly created #GGandivaNullLiteralNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaNullLiteralNode *\n+ggandiva_null_literal_node_new(GArrowDataType *return_type)\n+{\n+  auto arrow_data_type = garrow_data_type_get_raw(return_type);\n+  auto gandiva_node = gandiva::TreeExprBuilder::MakeNull(arrow_data_type);\n+  if (gandiva_node == nullptr) {\n \n Review comment:\n   Can you use `if (gandiva_node) {return GGANDIVA_NULL_...` instead of `== nullptr`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T09:13:17.099+0000",
                    "updated": "2018-12-17T09:13:17.099+0000",
                    "started": "2018-12-17T09:13:17.098+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175936",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242069121\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1139,49 +1169,56 @@ ggandiva_literal_node_new_raw(std::shared_ptr<gandiva::Node> *gandiva_node)\n {\n   GType type;\n \n-  switch ((*gandiva_node)->return_type()->id()) {\n-  case arrow::Type::BOOL:\n-    type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT8:\n-    type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT16:\n-    type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT32:\n-    type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT64:\n-    type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT8:\n-    type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT16:\n-    type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT32:\n-    type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT64:\n-    type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::FLOAT:\n-    type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::DOUBLE:\n-    type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::STRING:\n-    type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::BINARY:\n-    type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n-    break;\n-  default:\n-    type = GGANDIVA_TYPE_LITERAL_NODE;\n-    break;\n+  auto gandiva_literal_node =\n+    std::static_pointer_cast<gandiva::LiteralNode>(*gandiva_node);\n+\n+  if (gandiva_literal_node->is_null()) {\n+    type = GGANDIVA_TYPE_NULL_LITERAL_NODE;\n+  } else {\n+    switch ((*gandiva_node)->return_type()->id()) {\n+    case arrow::Type::BOOL:\n+      type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT8:\n+      type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT16:\n+      type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT32:\n+      type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT64:\n+      type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT8:\n+      type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT16:\n+      type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT32:\n+      type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT64:\n+      type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::FLOAT:\n+      type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::DOUBLE:\n+      type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::STRING:\n+      type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::BINARY:\n+      type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n+      break;\n+    default:\n+      type = GGANDIVA_TYPE_LITERAL_NODE;\n+      break;\n+    }\n   }\n   auto literal_node = GGANDIVA_LITERAL_NODE(g_object_new(type,\n                                                          \"node\", gandiva_node,\n \n Review comment:\n   Can we add `\"return-type\", ...` here to reuse `return-type` property instead of defining `ggandiva_node_get_return_type()`?\r\n   I don't want to recreate `GArrowDataType` objects if it's available.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T09:13:17.100+0000",
                    "updated": "2018-12-17T09:13:17.100+0000",
                    "started": "2018-12-17T09:13:17.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175937",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242091900\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -462,6 +459,41 @@ ggandiva_literal_node_class_init(GGandivaLiteralNodeClass *klass)\n }\n \n \n+G_DEFINE_TYPE(GGandivaNullLiteralNode,\n+              ggandiva_null_literal_node,\n+              GGANDIVA_TYPE_LITERAL_NODE)\n+\n+static void\n+ggandiva_null_literal_node_init(GGandivaNullLiteralNode *null_literal_node)\n+{\n+}\n+\n+static void\n+ggandiva_null_literal_node_class_init(GGandivaNullLiteralNodeClass *klass)\n+{\n+}\n+\n+/**\n+ * ggandiva_null_literal_node_new:\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: (nullable): A newly created #GGandivaNullLiteralNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaNullLiteralNode *\n+ggandiva_null_literal_node_new(GArrowDataType *return_type)\n+{\n+  auto arrow_data_type = garrow_data_type_get_raw(return_type);\n+  auto gandiva_node = gandiva::TreeExprBuilder::MakeNull(arrow_data_type);\n+  if (gandiva_node == nullptr) {\n \n Review comment:\n   Yes. I'll fixed it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T10:21:38.448+0000",
                    "updated": "2018-12-17T10:21:38.448+0000",
                    "started": "2018-12-17T10:21:38.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175949",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242091919\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1139,49 +1169,56 @@ ggandiva_literal_node_new_raw(std::shared_ptr<gandiva::Node> *gandiva_node)\n {\n   GType type;\n \n-  switch ((*gandiva_node)->return_type()->id()) {\n-  case arrow::Type::BOOL:\n-    type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT8:\n-    type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT16:\n-    type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT32:\n-    type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT64:\n-    type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT8:\n-    type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT16:\n-    type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT32:\n-    type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT64:\n-    type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::FLOAT:\n-    type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::DOUBLE:\n-    type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::STRING:\n-    type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::BINARY:\n-    type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n-    break;\n-  default:\n-    type = GGANDIVA_TYPE_LITERAL_NODE;\n-    break;\n+  auto gandiva_literal_node =\n+    std::static_pointer_cast<gandiva::LiteralNode>(*gandiva_node);\n+\n+  if (gandiva_literal_node->is_null()) {\n+    type = GGANDIVA_TYPE_NULL_LITERAL_NODE;\n+  } else {\n+    switch ((*gandiva_node)->return_type()->id()) {\n+    case arrow::Type::BOOL:\n+      type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT8:\n+      type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT16:\n+      type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT32:\n+      type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT64:\n+      type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT8:\n+      type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT16:\n+      type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT32:\n+      type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT64:\n+      type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::FLOAT:\n+      type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::DOUBLE:\n+      type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::STRING:\n+      type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::BINARY:\n+      type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n+      break;\n+    default:\n+      type = GGANDIVA_TYPE_LITERAL_NODE;\n+      break;\n+    }\n   }\n   auto literal_node = GGANDIVA_LITERAL_NODE(g_object_new(type,\n                                                          \"node\", gandiva_node,\n \n Review comment:\n   I see. I'll reuse `return_type` property in `GGandivaLiteralNode` and `GGandivaFunctionNode`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T10:21:41.274+0000",
                    "updated": "2018-12-17T10:21:41.274+0000",
                    "started": "2018-12-17T10:21:41.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175950",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/175974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#issuecomment-447764912\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=h1) Report\n   > Merging [#3197](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5d1934fc3f5c65f70a3966b71c68941b2fd8d362?src=pr&el=desc) will **increase** coverage by `1.05%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3197/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3197      +/-   ##\n   ==========================================\n   + Coverage   86.43%   87.48%   +1.05%     \n   ==========================================\n     Files         504      446      -58     \n     Lines       69628    65862    -3766     \n   ==========================================\n   - Hits        60181    57620    -2561     \n   + Misses       9350     8242    -1108     \n   + Partials       97        0      -97\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [48 more](https://codecov.io/gh/apache/arrow/pull/3197/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=footer). Last update [5d1934f...b17f5e2](https://codecov.io/gh/apache/arrow/pull/3197?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T11:29:00.227+0000",
                    "updated": "2018-12-17T11:29:00.227+0000",
                    "started": "2018-12-17T11:29:00.226+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175974",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/176239",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242312957\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1139,52 +1201,63 @@ ggandiva_literal_node_new_raw(std::shared_ptr<gandiva::Node> *gandiva_node)\n {\n   GType type;\n \n-  switch ((*gandiva_node)->return_type()->id()) {\n-  case arrow::Type::BOOL:\n-    type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT8:\n-    type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT16:\n-    type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT32:\n-    type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT64:\n-    type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT8:\n-    type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT16:\n-    type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT32:\n-    type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT64:\n-    type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::FLOAT:\n-    type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::DOUBLE:\n-    type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::STRING:\n-    type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::BINARY:\n-    type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n-    break;\n-  default:\n-    type = GGANDIVA_TYPE_LITERAL_NODE;\n-    break;\n+  auto gandiva_literal_node =\n+    std::static_pointer_cast<gandiva::LiteralNode>(*gandiva_node);\n+  auto arrow_data_type = (*gandiva_node)->return_type();\n+\n+  if (gandiva_literal_node->is_null()) {\n+    type = GGANDIVA_TYPE_NULL_LITERAL_NODE;\n+  } else {\n+    switch (arrow_data_type->id()) {\n+    case arrow::Type::BOOL:\n+      type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT8:\n+      type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT16:\n+      type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT32:\n+      type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT64:\n+      type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT8:\n+      type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT16:\n+      type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT32:\n+      type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT64:\n+      type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::FLOAT:\n+      type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::DOUBLE:\n+      type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::STRING:\n+      type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::BINARY:\n+      type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n+      break;\n+    default:\n+      type = GGANDIVA_TYPE_LITERAL_NODE;\n+      break;\n+    }\n   }\n-  auto literal_node = GGANDIVA_LITERAL_NODE(g_object_new(type,\n-                                                         \"node\", gandiva_node,\n-                                                         NULL));\n+  auto data_type = garrow_data_type_new_raw(&arrow_data_type);\n+  auto literal_node =\n+    GGANDIVA_LITERAL_NODE(g_object_new(type,\n+                                       \"node\", gandiva_node,\n+                                       \"return-type\", data_type,\n+                                       NULL));\n \n Review comment:\n   We need to call `g_object_unref(data_type)` after this to prevent a memory leak.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T21:00:30.913+0000",
                    "updated": "2018-12-17T21:00:30.913+0000",
                    "started": "2018-12-17T21:00:30.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176239",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/176240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242313488\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -462,6 +489,41 @@ ggandiva_literal_node_class_init(GGandivaLiteralNodeClass *klass)\n }\n \n \n+G_DEFINE_TYPE(GGandivaNullLiteralNode,\n+              ggandiva_null_literal_node,\n+              GGANDIVA_TYPE_LITERAL_NODE)\n+\n+static void\n+ggandiva_null_literal_node_init(GGandivaNullLiteralNode *null_literal_node)\n+{\n+}\n+\n+static void\n+ggandiva_null_literal_node_class_init(GGandivaNullLiteralNodeClass *klass)\n+{\n+}\n+\n+/**\n+ * ggandiva_null_literal_node_new:\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: (nullable): A newly created #GGandivaNullLiteralNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaNullLiteralNode *\n+ggandiva_null_literal_node_new(GArrowDataType *return_type)\n+{\n+  auto arrow_data_type = garrow_data_type_get_raw(return_type);\n+  auto gandiva_node = gandiva::TreeExprBuilder::MakeNull(arrow_data_type);\n+  if (gandiva_node) {\n+    return GGANDIVA_NULL_LITERAL_NODE(ggandiva_literal_node_new_raw(&gandiva_node));\n \n Review comment:\n   Can we use the given `return_type` to create `GGandivaNnullLiteralNode` instead of creating a new `GArrowDataType` in `ggandiva_literal_node_new_raw()`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-17T21:00:30.918+0000",
                    "updated": "2018-12-17T21:00:30.918+0000",
                    "started": "2018-12-17T21:00:30.918+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176240",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/176442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242460627\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1139,52 +1201,63 @@ ggandiva_literal_node_new_raw(std::shared_ptr<gandiva::Node> *gandiva_node)\n {\n   GType type;\n \n-  switch ((*gandiva_node)->return_type()->id()) {\n-  case arrow::Type::BOOL:\n-    type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT8:\n-    type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT16:\n-    type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT32:\n-    type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::UINT64:\n-    type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT8:\n-    type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT16:\n-    type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT32:\n-    type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::INT64:\n-    type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::FLOAT:\n-    type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::DOUBLE:\n-    type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::STRING:\n-    type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n-    break;\n-  case arrow::Type::type::BINARY:\n-    type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n-    break;\n-  default:\n-    type = GGANDIVA_TYPE_LITERAL_NODE;\n-    break;\n+  auto gandiva_literal_node =\n+    std::static_pointer_cast<gandiva::LiteralNode>(*gandiva_node);\n+  auto arrow_data_type = (*gandiva_node)->return_type();\n+\n+  if (gandiva_literal_node->is_null()) {\n+    type = GGANDIVA_TYPE_NULL_LITERAL_NODE;\n+  } else {\n+    switch (arrow_data_type->id()) {\n+    case arrow::Type::BOOL:\n+      type = GGANDIVA_TYPE_BOOLEAN_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT8:\n+      type = GGANDIVA_TYPE_UINT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT16:\n+      type = GGANDIVA_TYPE_UINT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT32:\n+      type = GGANDIVA_TYPE_UINT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::UINT64:\n+      type = GGANDIVA_TYPE_UINT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT8:\n+      type = GGANDIVA_TYPE_INT8_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT16:\n+      type = GGANDIVA_TYPE_INT16_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT32:\n+      type = GGANDIVA_TYPE_INT32_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::INT64:\n+      type = GGANDIVA_TYPE_INT64_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::FLOAT:\n+      type = GGANDIVA_TYPE_FLOAT_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::DOUBLE:\n+      type = GGANDIVA_TYPE_DOUBLE_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::STRING:\n+      type = GGANDIVA_TYPE_STRING_LITERAL_NODE;\n+      break;\n+    case arrow::Type::type::BINARY:\n+      type = GGANDIVA_TYPE_BINARY_LITERAL_NODE;\n+      break;\n+    default:\n+      type = GGANDIVA_TYPE_LITERAL_NODE;\n+      break;\n+    }\n   }\n-  auto literal_node = GGANDIVA_LITERAL_NODE(g_object_new(type,\n-                                                         \"node\", gandiva_node,\n-                                                         NULL));\n+  auto data_type = garrow_data_type_new_raw(&arrow_data_type);\n+  auto literal_node =\n+    GGANDIVA_LITERAL_NODE(g_object_new(type,\n+                                       \"node\", gandiva_node,\n+                                       \"return-type\", data_type,\n+                                       NULL));\n \n Review comment:\n   I'll add `g_object_unref(data_type)` to `GArrowDataType`  newly created.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-18T09:27:43.300+0000",
                    "updated": "2018-12-18T09:27:43.300+0000",
                    "started": "2018-12-18T09:27:43.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176442",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/176443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242460675\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -462,6 +489,41 @@ ggandiva_literal_node_class_init(GGandivaLiteralNodeClass *klass)\n }\n \n \n+G_DEFINE_TYPE(GGandivaNullLiteralNode,\n+              ggandiva_null_literal_node,\n+              GGANDIVA_TYPE_LITERAL_NODE)\n+\n+static void\n+ggandiva_null_literal_node_init(GGandivaNullLiteralNode *null_literal_node)\n+{\n+}\n+\n+static void\n+ggandiva_null_literal_node_class_init(GGandivaNullLiteralNodeClass *klass)\n+{\n+}\n+\n+/**\n+ * ggandiva_null_literal_node_new:\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: (nullable): A newly created #GGandivaNullLiteralNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaNullLiteralNode *\n+ggandiva_null_literal_node_new(GArrowDataType *return_type)\n+{\n+  auto arrow_data_type = garrow_data_type_get_raw(return_type);\n+  auto gandiva_node = gandiva::TreeExprBuilder::MakeNull(arrow_data_type);\n+  if (gandiva_node) {\n+    return GGANDIVA_NULL_LITERAL_NODE(ggandiva_literal_node_new_raw(&gandiva_node));\n \n Review comment:\n   Sorry. I didn\u2019t reuse `return_type`. I'll fix it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-18T09:27:50.588+0000",
                    "updated": "2018-12-18T09:27:50.588+0000",
                    "started": "2018-12-18T09:27:50.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176443",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/176453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on a change in pull request #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#discussion_r242473411\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1107,10 +1184,14 @@ GGandivaFieldNode *\n ggandiva_field_node_new_raw(std::shared_ptr<gandiva::Node> *gandiva_node,\n                             GArrowField *field)\n {\n+  auto arrow_return_type = (*gandiva_node)->return_type();\n+  auto return_type = garrow_data_type_new_raw(&arrow_return_type);\n   auto field_node = g_object_new(GGANDIVA_TYPE_FIELD_NODE,\n                                  \"node\", gandiva_node,\n                                  \"field\", field,\n+                                 \"return-type\", return_type,\n \n Review comment:\n   I've added `return-type`, because `field_node.retury_type` is nil.\r\n   If this is overdone, I'll move `return-type` property from `GGandivaNode` to `GGandivaLiteralNode`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-18T10:05:01.241+0000",
                    "updated": "2018-12-18T10:05:01.241+0000",
                    "started": "2018-12-18T10:05:01.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176453",
                    "issueId": "13204782"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/worklog/176843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on issue #3197: ARROW-4051: [Gandiva] [GLib] Add support for null literal\nURL: https://github.com/apache/arrow/pull/3197#issuecomment-448455204\n \n \n   Thanks!\r\n   \r\n   > TODO: GArrowField keeps GArrowDataType passed in garrow_field_new() and provides it by property.\r\n   \r\n   I\u2019ll send a pull request to address it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T03:16:49.822+0000",
                    "updated": "2018-12-19T03:16:49.822+0000",
                    "started": "2018-12-19T03:16:49.821+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176843",
                    "issueId": "13204782"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3a5eee72[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25a51a05[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ad9da55[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@17a19e39[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26b9c1e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3d86826e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6959fcf9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7212e7bd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1accaefa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1350da3f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35c84298[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@50827493[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 19 02:40:43 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-19T02:40:43.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4051/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-17T06:19:32.000+0000",
        "updated": "2018-12-19T03:16:49.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] [GLib] Add support for null literal",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204782/comment/16724636",
                    "id": "16724636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 3197\n[https://github.com/apache/arrow/pull/3197]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-12-19T02:40:43.755+0000",
                    "updated": "2018-12-19T02:40:43.755+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|u0013c:",
        "customfield_12314139": null
    }
}