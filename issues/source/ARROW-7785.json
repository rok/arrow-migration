{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13283739",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739",
    "key": "ARROW-7785",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7785/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/397380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533\n \n \n   Extract `SparseTensorConverter` related things from `sparse_tensor.cc` to `sparse_tensor/converter.cc`.\r\n   This should reduce the code generation time of `sparse_tensor.cc`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-04T09:05:17.923+0000",
                    "updated": "2020-03-04T09:05:17.923+0000",
                    "started": "2020-03-04T09:05:17.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397380",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/397389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-594407935\n \n \n   This is the result of ClangBuildAnalyzer.\r\n   \r\n   Before:\r\n   ```\r\n   **** Files that took longest to codegen (compiler backend):\r\n     6516 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/take.cc.o\r\n     4033 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor.cc.o\r\n     3943 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/array/diff.cc.o\r\n     2124 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/filter.cc.o\r\n     2054 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/compare.cc.o\r\n     1895 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/scalar.cc.o\r\n     1586 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/cast.cc.o\r\n     1268 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/ipc/json_simple.cc.o\r\n     1060 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/hash.cc.o\r\n      909 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/array.cc.o\r\n   ```\r\n   \r\n   After:\r\n   ```\r\n   **** Files that took longest to codegen (compiler backend):\r\n     6576 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/take.cc.o\r\n     4134 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/array/diff.cc.o\r\n     3015 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor/converter.cc.o\r\n     2115 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/filter.cc.o\r\n     2017 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/compare.cc.o\r\n     1598 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/cast.cc.o\r\n     1418 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/type.cc.o\r\n     1417 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/scalar.cc.o\r\n     1280 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor.cc.o\r\n     1266 ms: ../../apache/arrow/cpp/build.clang-9.debug/src/arrow/CMakeFiles/arrow_objlib.dir/ipc/json_simple.cc.o\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-04T09:14:57.134+0000",
                    "updated": "2020-03-04T09:14:57.134+0000",
                    "started": "2020-03-04T09:14:57.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397389",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/397390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-594408721\n \n \n   https://issues.apache.org/jira/browse/ARROW-7785\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-04T09:16:37.179+0000",
                    "updated": "2020-03-04T09:16:37.179+0000",
                    "started": "2020-03-04T09:16:37.179+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397390",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/397403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-594415239\n \n \n   Would you have the timings in release mode?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-04T09:31:27.862+0000",
                    "updated": "2020-03-04T09:31:27.862+0000",
                    "started": "2020-03-04T09:31:27.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397403",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/397418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-594420632\n \n \n   This is the result on release mode.  I need additional work to reduce the codegen time of `sparse_tensor/converter.cc`.\r\n   \r\n   Before:\r\n   ```\r\n   **** Files that took longest to codegen (compiler backend):\r\n    75997 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor.cc.o\r\n    45778 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/take.cc.o\r\n    17773 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/array/diff.cc.o\r\n    13087 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/filter.cc.o\r\n    10313 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/compare.cc.o\r\n     9937 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/cast.cc.o\r\n     8628 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/hash.cc.o\r\n     6480 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/scalar.cc.o\r\n     6371 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/ipc/json_internal.cc.o\r\n     6157 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/builder.cc.o\r\n   ```\r\n   \r\n   After:\r\n   ```\r\n   **** Files that took longest to codegen (compiler backend):\r\n    62183 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor/converter.cc.o\r\n    46198 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/take.cc.o\r\n    17761 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/array/diff.cc.o\r\n    13090 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/filter.cc.o\r\n    11373 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor.cc.o\r\n    10288 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/compare.cc.o\r\n     9948 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/cast.cc.o\r\n     8703 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/hash.cc.o\r\n     6400 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/scalar.cc.o\r\n     6305 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/ipc/json_internal.cc.o\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-04T09:43:01.823+0000",
                    "updated": "2020-03-04T09:43:01.823+0000",
                    "started": "2020-03-04T09:43:01.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397418",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/397421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #6533: ARROW-7785: WIP: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-594420990\n \n \n   Yes, the main problem is the codegen time in this case. I would hope it's possible to make some portions non-templated and only keep the hot conversion loops as template functions.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-04T09:43:54.075+0000",
                    "updated": "2020-03-04T09:43:54.075+0000",
                    "started": "2020-03-04T09:43:54.075+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397421",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6533: ARROW-7785: WIP: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-595095489\n \n \n   Finally, I got the following result.\r\n   \r\n   ```\r\n   **** Files that took longest to codegen (compiler backend):\r\n    45358 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/take.cc.o\r\n    26609 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor/csf_converter.cc.o\r\n    18784 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/array/diff.cc.o\r\n    12986 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/filter.cc.o\r\n    12112 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor/coo_converter.cc.o\r\n    11550 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor.cc.o\r\n    10641 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor/csr_converter.cc.o\r\n    10521 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor/csc_converter.cc.o\r\n    10315 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/compare.cc.o\r\n     9921 ms: ../../apache/arrow/cpp/build.clang-9.release/src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/cast.cc.o\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T08:31:01.159+0000",
                    "updated": "2020-03-05T08:31:01.159+0000",
                    "started": "2020-03-05T08:31:01.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398200",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-595513989\n \n \n   @pitrou Could you review this again?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:28:15.996+0000",
                    "updated": "2020-03-06T00:28:15.996+0000",
                    "started": "2020-03-06T00:28:15.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398785",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388643517\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/coo_converter.cc\n ##########\n @@ -0,0 +1,192 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n \n Review comment:\n   Can you run IWYU on this file?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:14.537+0000",
                    "updated": "2020-03-06T00:31:14.537+0000",
                    "started": "2020-03-06T00:31:14.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398788",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388643309\n \n \n\n ##########\n File path: cpp/src/arrow/CMakeLists.txt\n ##########\n @@ -144,6 +144,10 @@ set(ARROW_SRCS\n     result.cc\n     scalar.cc\n     sparse_tensor.cc\n+    sparse_tensor/coo_converter.cc\n+    sparse_tensor/csc_converter.cc\n+    sparse_tensor/csf_converter.cc\n+    sparse_tensor/csr_converter.cc\n \n Review comment:\n   Could call this directory \"tensor\" to make more general?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:14.702+0000",
                    "updated": "2020-03-06T00:31:14.702+0000",
                    "started": "2020-03-06T00:31:14.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398789",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388644162\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/csr_converter.cc\n ##########\n @@ -0,0 +1,201 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n+\n+#include \"arrow/visitor_inline.h\"\n+\n+namespace arrow {\n+namespace internal {\n+namespace {\n+\n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCSRIndex\n+\n+template <typename TYPE>\n+class SparseCSRMatrixConverter {\n+ public:\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  SparseCSRMatrixConverter(const NumericTensorType& tensor,\n+                           const std::shared_ptr<DataType>& index_value_type,\n+                           MemoryPool* pool)\n+      : tensor_(tensor), index_value_type_(index_value_type), pool_(pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    RETURN_NOT_OK(CheckMaximumValue(std::numeric_limits<c_index_value_type>::max()));\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n+    const int64_t ndim = tensor_.ndim();\n+    if (ndim > 2) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"Invalid tensor dimension\");\n+      // LCOV_EXCL_STOP\n+    }\n+\n+    const int64_t nr = tensor_.shape()[0];\n+    const int64_t nc = tensor_.shape()[1];\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> indptr_buffer;\n+    std::shared_ptr<Buffer> indices_buffer;\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    if (ndim <= 1) {\n+      return Status::NotImplemented(\"TODO for ndim <= 1\");\n+    } else {\n+      RETURN_NOT_OK(AllocateBuffer(pool_, indices_elsize * (nr + 1), &indptr_buffer));\n+      auto* indptr = reinterpret_cast<c_index_value_type*>(indptr_buffer->mutable_data());\n+\n+      RETURN_NOT_OK(\n+          AllocateBuffer(pool_, indices_elsize * nonzero_count, &indices_buffer));\n+      auto* indices =\n+          reinterpret_cast<c_index_value_type*>(indices_buffer->mutable_data());\n+\n+      c_index_value_type k = 0;\n+      *indptr++ = 0;\n+      for (int64_t i = 0; i < nr; ++i) {\n+        for (int64_t j = 0; j < nc; ++j) {\n+          const value_type x = tensor_.Value({i, j});\n+          if (x != 0) {\n+            *values++ = x;\n+            *indices++ = static_cast<c_index_value_type>(j);\n+            k++;\n+          }\n+        }\n+        *indptr++ = k;\n+      }\n+    }\n+\n+    std::vector<int64_t> indptr_shape({nr + 1});\n+    std::shared_ptr<Tensor> indptr_tensor =\n+        std::make_shared<Tensor>(index_value_type_, indptr_buffer, indptr_shape);\n+\n+    std::vector<int64_t> indices_shape({nonzero_count});\n+    std::shared_ptr<Tensor> indices_tensor =\n+        std::make_shared<Tensor>(index_value_type_, indices_buffer, indices_shape);\n+\n+    sparse_index = std::make_shared<SparseCSRIndex>(indptr_tensor, indices_tensor);\n+    data = values_buffer;\n+\n+    return Status::OK();\n+  }\n+\n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      default:\n+        return Status::TypeError(\"Unsupported SparseTensor index value type\");\n+        // LCOV_EXCL_STOP\n+    }\n+  }\n+\n+#undef CALL_TYPE_SPECIFIC_CONVERT\n+\n+  std::shared_ptr<SparseCSRIndex> sparse_index;\n+  std::shared_ptr<Buffer> data;\n+\n+ private:\n+  const NumericTensorType& tensor_;\n+  const std::shared_ptr<DataType>& index_value_type_;\n+  MemoryPool* pool_;\n+\n+  template <typename c_value_type>\n+  inline Status CheckMaximumValue(const c_value_type type_max) const {\n+    if (static_cast<int64_t>(type_max) < tensor_.shape()[1]) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"The bit width of the index value type is too small\");\n+      // LCOV_EXCL_STOP\n+    }\n+    return Status::OK();\n+  }\n+\n+  inline Status CheckMaximumValue(const int64_t) const { return Status::OK(); }\n+\n+  inline Status CheckMaximumValue(const uint64_t) const { return Status::OK(); }\n+};\n+\n+// ----------------------------------------------------------------------\n+// Instantiate templates\n+\n+template class SparseCSRMatrixConverter<UInt8Type>;\n+template class SparseCSRMatrixConverter<UInt16Type>;\n+template class SparseCSRMatrixConverter<UInt32Type>;\n+template class SparseCSRMatrixConverter<UInt64Type>;\n+template class SparseCSRMatrixConverter<Int8Type>;\n+template class SparseCSRMatrixConverter<Int16Type>;\n+template class SparseCSRMatrixConverter<Int32Type>;\n+template class SparseCSRMatrixConverter<Int64Type>;\n+template class SparseCSRMatrixConverter<HalfFloatType>;\n+template class SparseCSRMatrixConverter<FloatType>;\n+template class SparseCSRMatrixConverter<DoubleType>;\n \n Review comment:\n   same\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:14.850+0000",
                    "updated": "2020-03-06T00:31:14.850+0000",
                    "started": "2020-03-06T00:31:14.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398790",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388643827\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/csc_converter.cc\n ##########\n @@ -0,0 +1,201 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n \n Review comment:\n   Same\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:14.919+0000",
                    "updated": "2020-03-06T00:31:14.919+0000",
                    "started": "2020-03-06T00:31:14.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398791",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388643707\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/coo_converter.cc\n ##########\n @@ -0,0 +1,192 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n+\n+#include \"arrow/buffer_builder.h\"\n+#include \"arrow/visitor_inline.h\"\n+\n+namespace arrow {\n+namespace internal {\n+namespace {\n+\n+inline void IncrementIndex(std::vector<int64_t>& coord,\n+                           const std::vector<int64_t>& shape) {\n+  const int64_t ndim = shape.size();\n+  ++coord[ndim - 1];\n+  if (coord[ndim - 1] == shape[ndim - 1]) {\n+    int64_t d = ndim - 1;\n+    while (d > 0 && coord[d] == shape[d]) {\n+      coord[d] = 0;\n+      ++coord[d - 1];\n+      --d;\n+    }\n+  }\n+}\n+\n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCOOIndex\n+\n+template <typename TYPE>\n+class SparseCOOTensorConverter {\n+ public:\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  SparseCOOTensorConverter(const NumericTensorType& tensor,\n+                           const std::shared_ptr<DataType>& index_value_type,\n+                           MemoryPool* pool)\n+      : tensor_(tensor), index_value_type_(index_value_type), pool_(pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n+    const int64_t ndim = tensor_.ndim();\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> indices_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, indices_elsize * ndim * nonzero_count, &indices_buffer));\n+    c_index_value_type* indices =\n+        reinterpret_cast<c_index_value_type*>(indices_buffer->mutable_data());\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    if (ndim <= 1) {\n+      const value_type* data = reinterpret_cast<const value_type*>(tensor_.raw_data());\n+      const int64_t count = ndim == 0 ? 1 : tensor_.shape()[0];\n+      for (int64_t i = 0; i < count; ++i, ++data) {\n+        if (*data != 0) {\n+          *indices++ = static_cast<c_index_value_type>(i);\n+          *values++ = *data;\n+        }\n+      }\n+    } else {\n+      const std::vector<int64_t>& shape = tensor_.shape();\n+      std::vector<int64_t> coord(ndim, 0);  // The current logical coordinates\n+\n+      for (int64_t n = tensor_.size(); n > 0; n--) {\n+        const value_type x = tensor_.Value(coord);\n+        if (tensor_.Value(coord) != 0) {\n+          *values++ = x;\n+          // Write indices in row-major order.\n+          for (int64_t i = 0; i < ndim; ++i) {\n+            *indices++ = static_cast<c_index_value_type>(coord[i]);\n+          }\n+        }\n+        IncrementIndex(coord, shape);\n+      }\n+    }\n+\n+    // make results\n+    const std::vector<int64_t> indices_shape = {nonzero_count, ndim};\n+    const std::vector<int64_t> indices_strides = {indices_elsize * ndim, indices_elsize};\n+    sparse_index = std::make_shared<SparseCOOIndex>(std::make_shared<Tensor>(\n+        index_value_type_, indices_buffer, indices_shape, indices_strides));\n+    data = values_buffer;\n+\n+    return Status::OK();\n+  }\n+\n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      default:\n+        return Status::TypeError(\"Unsupported SparseTensor index value type\");\n+        // LCOV_EXCL_STOP\n+    }\n+  }\n+\n+#undef CALL_TYPE_SPECIFIC_CONVERT\n+\n+  std::shared_ptr<SparseCOOIndex> sparse_index;\n+  std::shared_ptr<Buffer> data;\n+\n+ private:\n+  const NumericTensorType& tensor_;\n+  const std::shared_ptr<DataType>& index_value_type_;\n+  MemoryPool* pool_;\n+};\n+\n+// ----------------------------------------------------------------------\n+// Instantiate templates\n+\n+template class SparseCOOTensorConverter<UInt8Type>;\n+template class SparseCOOTensorConverter<UInt16Type>;\n+template class SparseCOOTensorConverter<UInt32Type>;\n+template class SparseCOOTensorConverter<UInt64Type>;\n+template class SparseCOOTensorConverter<Int8Type>;\n+template class SparseCOOTensorConverter<Int16Type>;\n+template class SparseCOOTensorConverter<Int32Type>;\n+template class SparseCOOTensorConverter<Int64Type>;\n+template class SparseCOOTensorConverter<HalfFloatType>;\n+template class SparseCOOTensorConverter<FloatType>;\n+template class SparseCOOTensorConverter<DoubleType>;\n \n Review comment:\n   I don't think these template instantiations are necessary\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:14.978+0000",
                    "updated": "2020-03-06T00:31:14.978+0000",
                    "started": "2020-03-06T00:31:14.978+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398792",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388644112\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/csf_converter.cc\n ##########\n @@ -0,0 +1,235 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n+\n+#include \"arrow/buffer_builder.h\"\n+#include \"arrow/util/sort.h\"\n+#include \"arrow/visitor_inline.h\"\n+\n+namespace arrow {\n+namespace internal {\n+namespace {\n+\n+inline void IncrementIndex(std::vector<int64_t>& coord, const std::vector<int64_t>& shape,\n+                           const std::vector<int64_t>& axis_order) {\n+  const int64_t ndim = shape.size();\n+  const int64_t last_axis = axis_order[ndim - 1];\n+  ++coord[last_axis];\n+  if (coord[last_axis] == shape[last_axis]) {\n+    int64_t d = ndim - 1;\n+    while (d > 0 && coord[axis_order[d]] == shape[axis_order[d]]) {\n+      coord[axis_order[d]] = 0;\n+      ++coord[axis_order[d - 1]];\n+      --d;\n+    }\n+  }\n+}\n+\n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCSFIndex\n+\n+template <typename TYPE>\n+class SparseCSFTensorConverter {\n+ public:\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  SparseCSFTensorConverter(const NumericTensorType& tensor,\n+                           const std::shared_ptr<DataType>& index_value_type,\n+                           MemoryPool* pool)\n+      : tensor_(tensor), index_value_type_(index_value_type), pool_(pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    RETURN_NOT_OK(CheckMaximumValue(std::numeric_limits<c_index_value_type>::max()));\n+\n+    const int64_t ndim = tensor_.ndim();\n+    // Axis order as ascending order of dimension size is a good heuristic but is not\n+    // necessarily optimal.\n+    std::vector<int64_t> axis_order = internal::ArgSort(tensor_.shape());\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    std::vector<int64_t> counts(ndim, 0);\n+    std::vector<int64_t> coord(ndim, 0);\n+    std::vector<int64_t> previous_coord(ndim, -1);\n+    std::vector<TypedBufferBuilder<c_index_value_type>> indptr_buffer_builders(ndim - 1);\n+    std::vector<TypedBufferBuilder<c_index_value_type>> indices_buffer_builders(ndim);\n+\n+    if (ndim <= 1) {\n+      return Status::NotImplemented(\"TODO for ndim <= 1\");\n+    } else {\n+      const std::vector<int64_t>& shape = tensor_.shape();\n+      for (int64_t n = tensor_.size(); n > 0; n--) {\n+        const value_type x = tensor_.Value(coord);\n+\n+        if (x != 0) {\n+          bool tree_split = false;\n+          *values++ = x;\n+\n+          for (int64_t i = 0; i < ndim; ++i) {\n+            int64_t dimension = axis_order[i];\n+\n+            tree_split = tree_split || (coord[dimension] != previous_coord[dimension]);\n+            if (tree_split) {\n+              if (i < ndim - 1) {\n+                RETURN_NOT_OK(indptr_buffer_builders[i].Append(\n+                    static_cast<c_index_value_type>(counts[i + 1])));\n+              }\n+              RETURN_NOT_OK(indices_buffer_builders[i].Append(\n+                  static_cast<c_index_value_type>(coord[dimension])));\n+              ++counts[i];\n+            }\n+          }\n+          previous_coord = coord;\n+        }\n+        IncrementIndex(coord, shape, axis_order);\n+      }\n+    }\n+\n+    for (int64_t column = 0; column < ndim - 1; ++column) {\n+      RETURN_NOT_OK(indptr_buffer_builders[column].Append(\n+          static_cast<c_index_value_type>(counts[column + 1])));\n+    }\n+\n+    // make results\n+    data = values_buffer;\n+\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers(ndim - 1);\n+    std::vector<std::shared_ptr<Buffer>> indices_buffers(ndim);\n+    std::vector<int64_t> indptr_shapes(counts.begin(), counts.end() - 1);\n+    std::vector<int64_t> indices_shapes = counts;\n+\n+    for (int64_t column = 0; column < ndim; ++column) {\n+      RETURN_NOT_OK(\n+          indices_buffer_builders[column].Finish(&indices_buffers[column], true));\n+    }\n+    for (int64_t column = 0; column < ndim - 1; ++column) {\n+      RETURN_NOT_OK(indptr_buffer_builders[column].Finish(&indptr_buffers[column], true));\n+    }\n+\n+    ARROW_ASSIGN_OR_RAISE(\n+        sparse_index, SparseCSFIndex::Make(index_value_type_, indices_shapes, axis_order,\n+                                           indptr_buffers, indices_buffers));\n+    return Status::OK();\n+  }\n+\n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      default:\n+        return Status::TypeError(\"Unsupported SparseTensor index value type\");\n+        // LCOV_EXCL_STOP\n+    }\n+  }\n+\n+#undef CALL_TYPE_SPECIFIC_CONVERT\n+\n+  std::shared_ptr<SparseCSFIndex> sparse_index;\n+  std::shared_ptr<Buffer> data;\n+\n+ private:\n+  const NumericTensorType& tensor_;\n+  const std::shared_ptr<DataType>& index_value_type_;\n+  MemoryPool* pool_;\n+\n+  template <typename c_value_type>\n+  inline Status CheckMaximumValue(const c_value_type type_max) const {\n+    auto max_dimension =\n+        *std::max_element(tensor_.shape().begin(), tensor_.shape().end());\n+    if (static_cast<int64_t>(type_max) < max_dimension) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"The bit width of the index value type is too small\");\n+      // LCOV_EXCL_STOP\n+    }\n+    return Status::OK();\n+  }\n+\n+  inline Status CheckMaximumValue(const int64_t) const { return Status::OK(); }\n+\n+  inline Status CheckMaximumValue(const uint64_t) const { return Status::OK(); }\n+};\n+\n+// ----------------------------------------------------------------------\n+// Instantiate templates\n+\n+template class SparseCSFTensorConverter<UInt8Type>;\n+template class SparseCSFTensorConverter<UInt16Type>;\n+template class SparseCSFTensorConverter<UInt32Type>;\n+template class SparseCSFTensorConverter<UInt64Type>;\n+template class SparseCSFTensorConverter<Int8Type>;\n+template class SparseCSFTensorConverter<Int16Type>;\n+template class SparseCSFTensorConverter<Int32Type>;\n+template class SparseCSFTensorConverter<Int64Type>;\n+template class SparseCSFTensorConverter<HalfFloatType>;\n+template class SparseCSFTensorConverter<FloatType>;\n+template class SparseCSFTensorConverter<DoubleType>;\n \n Review comment:\n   same\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:15.026+0000",
                    "updated": "2020-03-06T00:31:15.026+0000",
                    "started": "2020-03-06T00:31:15.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398793",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388643947\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/csc_converter.cc\n ##########\n @@ -0,0 +1,201 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n+\n+#include \"arrow/visitor_inline.h\"\n+\n+namespace arrow {\n+namespace internal {\n+namespace {\n+\n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCSCIndex\n+\n+template <typename TYPE>\n+class SparseCSCMatrixConverter {\n+ public:\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  SparseCSCMatrixConverter(const NumericTensorType& tensor,\n+                           const std::shared_ptr<DataType>& index_value_type,\n+                           MemoryPool* pool)\n+      : tensor_(tensor), index_value_type_(index_value_type), pool_(pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    RETURN_NOT_OK(CheckMaximumValue(std::numeric_limits<c_index_value_type>::max()));\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n+    const int64_t ndim = tensor_.ndim();\n+    if (ndim > 2) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"Invalid tensor dimension\");\n+      // LCOV_EXCL_STOP\n+    }\n+\n+    const int64_t nr = tensor_.shape()[0];\n+    const int64_t nc = tensor_.shape()[1];\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> indptr_buffer;\n+    std::shared_ptr<Buffer> indices_buffer;\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    if (ndim <= 1) {\n+      return Status::NotImplemented(\"TODO for ndim <= 1\");\n+    } else {\n+      RETURN_NOT_OK(AllocateBuffer(pool_, indices_elsize * (nc + 1), &indptr_buffer));\n+      auto* indptr = reinterpret_cast<c_index_value_type*>(indptr_buffer->mutable_data());\n+\n+      RETURN_NOT_OK(\n+          AllocateBuffer(pool_, indices_elsize * nonzero_count, &indices_buffer));\n+      auto* indices =\n+          reinterpret_cast<c_index_value_type*>(indices_buffer->mutable_data());\n+\n+      c_index_value_type k = 0;\n+      *indptr++ = 0;\n+      for (int64_t j = 0; j < nc; ++j) {\n+        for (int64_t i = 0; i < nr; ++i) {\n+          const value_type x = tensor_.Value({i, j});\n+          if (x != 0) {\n+            *values++ = x;\n+            *indices++ = static_cast<c_index_value_type>(i);\n+            k++;\n+          }\n+        }\n+        *indptr++ = k;\n+      }\n+    }\n+\n+    std::vector<int64_t> indptr_shape({nc + 1});\n+    std::shared_ptr<Tensor> indptr_tensor =\n+        std::make_shared<Tensor>(index_value_type_, indptr_buffer, indptr_shape);\n+\n+    std::vector<int64_t> indices_shape({nonzero_count});\n+    std::shared_ptr<Tensor> indices_tensor =\n+        std::make_shared<Tensor>(index_value_type_, indices_buffer, indices_shape);\n+\n+    sparse_index = std::make_shared<SparseCSCIndex>(indptr_tensor, indices_tensor);\n+    data = values_buffer;\n+\n+    return Status::OK();\n+  }\n+\n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      default:\n+        return Status::TypeError(\"Unsupported SparseTensor index value type\");\n+        // LCOV_EXCL_STOP\n+    }\n+  }\n+\n+#undef CALL_TYPE_SPECIFIC_CONVERT\n+\n+  std::shared_ptr<SparseCSCIndex> sparse_index;\n+  std::shared_ptr<Buffer> data;\n+\n+ private:\n+  const NumericTensorType& tensor_;\n+  const std::shared_ptr<DataType>& index_value_type_;\n+  MemoryPool* pool_;\n+\n+  template <typename c_value_type>\n+  inline Status CheckMaximumValue(const c_value_type type_max) const {\n+    if (static_cast<int64_t>(type_max) < tensor_.shape()[1]) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"The bit width of the index value type is too small\");\n+      // LCOV_EXCL_STOP\n+    }\n+    return Status::OK();\n+  }\n+\n+  inline Status CheckMaximumValue(const int64_t) const { return Status::OK(); }\n+\n+  inline Status CheckMaximumValue(const uint64_t) const { return Status::OK(); }\n+};\n+\n+// ----------------------------------------------------------------------\n+// Instantiate templates\n+\n+template class SparseCSCMatrixConverter<UInt8Type>;\n+template class SparseCSCMatrixConverter<UInt16Type>;\n+template class SparseCSCMatrixConverter<UInt32Type>;\n+template class SparseCSCMatrixConverter<UInt64Type>;\n+template class SparseCSCMatrixConverter<Int8Type>;\n+template class SparseCSCMatrixConverter<Int16Type>;\n+template class SparseCSCMatrixConverter<Int32Type>;\n+template class SparseCSCMatrixConverter<Int64Type>;\n+template class SparseCSCMatrixConverter<HalfFloatType>;\n+template class SparseCSCMatrixConverter<FloatType>;\n+template class SparseCSCMatrixConverter<DoubleType>;\n \n Review comment:\n   Same comment\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:31:15.058+0000",
                    "updated": "2020-03-06T00:31:15.058+0000",
                    "started": "2020-03-06T00:31:15.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398794",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/398803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388650104\n \n \n\n ##########\n File path: cpp/src/arrow/CMakeLists.txt\n ##########\n @@ -144,6 +144,10 @@ set(ARROW_SRCS\n     result.cc\n     scalar.cc\n     sparse_tensor.cc\n+    sparse_tensor/coo_converter.cc\n+    sparse_tensor/csc_converter.cc\n+    sparse_tensor/csf_converter.cc\n+    sparse_tensor/csr_converter.cc\n \n Review comment:\n   OK, I will do.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T00:49:02.032+0000",
                    "updated": "2020-03-06T00:49:02.032+0000",
                    "started": "2020-03-06T00:49:02.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398803",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/399014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388799883\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/coo_converter.cc\n ##########\n @@ -0,0 +1,192 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n \n Review comment:\n   I added a commit to fix for IWYU, but the following reports are remaining.  I guess these reports are false positive.\r\n   \r\n   ```\r\n   include-what-you-use 0.13 (git:06e88ef) based on clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)\r\n   /home/mrkn/src/github.com/apache/arrow/cpp/src/arrow/tensor/csf_converter.cc should add these lines:\r\n   namespace arrow { template <typename T, typename Enable = void> class TypedBufferBuilder; }\r\n   \r\n   /home/mrkn/src/github.com/apache/arrow/cpp/src/arrow/tensor/csf_converter.cc should remove these lines:\r\n   - #include \"arrow/buffer_builder.h\"  // lines 27-27\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T09:36:44.202+0000",
                    "updated": "2020-03-06T09:36:44.202+0000",
                    "started": "2020-03-06T09:36:44.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "399014",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/399015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-595684613\n \n \n   @wesm Thank you for reviewing this.  I've added commits to fix things you pointed out.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T09:37:41.036+0000",
                    "updated": "2020-03-06T09:37:41.036+0000",
                    "started": "2020-03-06T09:37:41.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "399015",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/399120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6533: ARROW-7785: [C++] sparse_tensor.cc is extremely slow to compile\nURL: https://github.com/apache/arrow/pull/6533#discussion_r388939797\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor/coo_converter.cc\n ##########\n @@ -0,0 +1,192 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/sparse_tensor/converter.h\"\n \n Review comment:\n   Seems so\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T14:40:47.456+0000",
                    "updated": "2020-03-06T14:40:47.456+0000",
                    "started": "2020-03-06T14:40:47.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "399120",
                    "issueId": "13283739"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/worklog/399256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6533: ARROW-7785: [C++] Improve compilation performance of sparse tensor related code\nURL: https://github.com/apache/arrow/pull/6533#issuecomment-595881941\n \n \n   Here's an appveyor build on my fork: https://ci.appveyor.com/project/wesm/arrow/builds/31299374\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T17:43:51.946+0000",
                    "updated": "2020-03-06T17:43:51.946+0000",
                    "started": "2020-03-06T17:43:51.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "399256",
                    "issueId": "13283739"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@61266b17[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11de37a2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d746d7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@df72456[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41dc7421[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3847591f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7696c4ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@42779bff[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@602882ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@62a5b057[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2254a150[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5c827e86[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Mar 07 14:23:17 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-07T14:23:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7785/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-02-06T16:23:19.000+0000",
        "updated": "2020-03-07T14:23:17.000+0000",
        "timeoriginalestimate": null,
        "description": "This comes up especially when doing an optimized build. {{sparse_tensor.cc}} is always enabled even if all components are disabled, and it takes multiple seconds to compile.\r\n\r\nUsing [CLangBuildAnalyzer|https://github.com/aras-p/ClangBuildAnalyzer] I get the following results:\r\n{code}\r\n**** Files that took longest to codegen (compiler backend):\r\n 66372 ms: build-clang-profile/src/arrow/CMakeFiles/arrow_objlib.dir/sparse_tensor.cc.o\r\n 16457 ms: build-clang-profile/src/arrow/CMakeFiles/arrow_objlib.dir/array/diff.cc.o\r\n  6283 ms: build-clang-profile/src/arrow/CMakeFiles/arrow_objlib.dir/scalar.cc.o\r\n  5284 ms: build-clang-profile/src/arrow/CMakeFiles/arrow_objlib.dir/builder.cc.o\r\n  5090 ms: build-clang-profile/src/arrow/CMakeFiles/arrow_objlib.dir/array/dict_internal.cc.o\r\n{code}\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] sparse_tensor.cc is extremely slow to compile",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/comment/17031727",
                    "id": "17031727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~mrkn]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-02-06T16:23:32.029+0000",
                    "updated": "2020-02-06T16:23:32.029+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283739/comment/17054092",
                    "id": "17054092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6533\n[https://github.com/apache/arrow/pull/6533]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-07T14:23:17.225+0000",
                    "updated": "2020-03-07T14:23:17.225+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0b87s:",
        "customfield_12314139": null
    }
}