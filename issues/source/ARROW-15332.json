{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13422644",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644",
    "key": "ARROW-15332",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15332/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/708792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150\n\n\n   \r\n    * The benchmark named ReadFile is misleading since it is actually reading from an in-memory buffer and no OS \"read\" call is ever issued.\r\n    * Renamed ReadTempFile to ReadCachedFile and added a second case for ReadUncachedFile. The former reads a file in the OS' page cache and the latter forces a read to actually hit the disk.\r\n    * The TempFile benchmarks were not actually writing the correct amount of data and were reporting unrealistically high rates as a result.\r\n    * Adding a \"partial read\" parameter which, when true, only reads 1/8 the columns in the file so we can see the impact of pushdown projection.\r\n    * Slightly reduced the range of parameters to keep the benchmark time reasonable (8k columns wasn't telling us anything more than 4k columns).\r\n   \r\n   NOTE: This PR will invalidate some previous results from arrow-ipc-read-write-benchmark, disrupting conbench & other monitoring efforts.  This is because those previous results were wrong.\r\n   \r\n   It also likely invalidates even more arrow-ipc-read-write-benchmark results because we added a new parameter and renamed some of the benchmarks.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T01:30:33.375+0000",
                    "updated": "2022-01-14T01:30:33.375+0000",
                    "started": "2022-01-14T01:30:33.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708792",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/708793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1012668208\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T01:30:56.441+0000",
                    "updated": "2022-01-14T01:30:56.441+0000",
                    "started": "2022-01-14T01:30:56.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708793",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/708799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1012674728\n\n\n   Sample Results:\r\n   \r\n   ```\r\n   2022-01-13T15:39:41-10:00\r\n   Running ./release/arrow-ipc-read-write-benchmark\r\n   Run on (16 X 5100 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32 KiB (x8)\r\n     L1 Instruction 32 KiB (x8)\r\n     L2 Unified 256 KiB (x8)\r\n     L3 Unified 16384 KiB (x1)\r\n   Load Average: 1.03, 1.04, 0.97\r\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\r\n   -------------------------------------------------------------------------------------------------------------------------\r\n   Benchmark                                                               Time             CPU   Iterations UserCounters...\r\n   -------------------------------------------------------------------------------------------------------------------------\r\n   ReadBuffer/num_cols:1/is_partial:0/real_time                         2339 ns         2339 ns       299520 bytes_per_second=417.528G/s\r\n   ReadBuffer/num_cols:8/is_partial:0/real_time                         5370 ns         5370 ns       129234 bytes_per_second=181.846G/s\r\n   ReadBuffer/num_cols:64/is_partial:0/real_time                       31651 ns        31651 ns        22064 bytes_per_second=30.854G/s\r\n   ReadBuffer/num_cols:512/is_partial:0/real_time                     281760 ns       281756 ns         2489 bytes_per_second=3.46593G/s\r\n   ReadBuffer/num_cols:4096/is_partial:0/real_time                   2248611 ns      2248569 ns          311 bytes_per_second=444.719M/s\r\n   ReadBuffer/num_cols:1/is_partial:1/real_time                        34997 ns        34996 ns        20005 bytes_per_second=27.9038G/s\r\n   ReadBuffer/num_cols:8/is_partial:1/real_time                        10516 ns        10515 ns        65872 bytes_per_second=11.6082G/s\r\n   ReadBuffer/num_cols:64/is_partial:1/real_time                       31562 ns        31561 ns        22004 bytes_per_second=3.86766G/s\r\n   ReadBuffer/num_cols:512/is_partial:1/real_time                     214759 ns       214757 ns         3237 bytes_per_second=582.047M/s\r\n   ReadBuffer/num_cols:4096/is_partial:1/real_time                   1671177 ns      1670968 ns          419 bytes_per_second=74.7976M/s\r\n   ReadBufferAsync/num_cols:1/is_partial:0/real_time                    3855 ns         3855 ns       180777 bytes_per_second=253.309G/s\r\n   ReadBufferAsync/num_cols:8/is_partial:0/real_time                    6970 ns         6970 ns       100649 bytes_per_second=140.104G/s\r\n   ReadBufferAsync/num_cols:64/is_partial:0/real_time                  33747 ns        33746 ns        20721 bytes_per_second=28.9377G/s\r\n   ReadBufferAsync/num_cols:512/is_partial:0/real_time                284691 ns       284690 ns         2453 bytes_per_second=3.43026G/s\r\n   ReadBufferAsync/num_cols:4096/is_partial:0/real_time              2246321 ns      2246299 ns          312 bytes_per_second=445.172M/s\r\n   ReadBufferAsync/num_cols:1/is_partial:1/real_time                    4442 ns         4442 ns       156962 bytes_per_second=219.86G/s\r\n   ReadBufferAsync/num_cols:8/is_partial:1/real_time                    6304 ns         6304 ns       111473 bytes_per_second=19.3636G/s\r\n   ReadBufferAsync/num_cols:64/is_partial:1/real_time                  23053 ns        23051 ns        29330 bytes_per_second=5.29527G/s\r\n   ReadBufferAsync/num_cols:512/is_partial:1/real_time                178310 ns       178299 ns         3981 bytes_per_second=701.027M/s\r\n   ReadBufferAsync/num_cols:4096/is_partial:1/real_time              1399513 ns      1399473 ns          498 bytes_per_second=89.3168M/s\r\n   ReadCachedFile/num_cols:1/is_partial:0/real_time                  1215565 ns      1174926 ns          522 bytes_per_second=12.8541G/s\r\n   ReadCachedFile/num_cols:8/is_partial:0/real_time                  1280821 ns      1238925 ns          432 bytes_per_second=12.1992G/s\r\n   ReadCachedFile/num_cols:64/is_partial:0/real_time                 1493422 ns      1451935 ns          384 bytes_per_second=10.4625G/s\r\n   ReadCachedFile/num_cols:512/is_partial:0/real_time                4437113 ns      4374682 ns          165 bytes_per_second=3.52143G/s\r\n   ReadCachedFile/num_cols:4096/is_partial:0/real_time              26650682 ns     26419503 ns           25 bytes_per_second=600.36M/s\r\n   ReadCachedFile/num_cols:1/is_partial:1/real_time                  1230819 ns      1189216 ns          450 bytes_per_second=12.6948G/s\r\n   ReadCachedFile/num_cols:8/is_partial:1/real_time                   184017 ns       176714 ns         3274 bytes_per_second=10.6138G/s\r\n   ReadCachedFile/num_cols:64/is_partial:1/real_time                  426931 ns       413851 ns         1542 bytes_per_second=4.5748G/s\r\n   ReadCachedFile/num_cols:512/is_partial:1/real_time                2278713 ns      2217240 ns          280 bytes_per_second=877.688M/s\r\n   ReadCachedFile/num_cols:4096/is_partial:1/real_time              18832777 ns     18614163 ns           39 bytes_per_second=106.198M/s\r\n   ReadCachedFileAsync/num_cols:1/is_partial:0/real_time             1410031 ns       116183 ns          410 bytes_per_second=11.0813G/s\r\n   ReadCachedFileAsync/num_cols:8/is_partial:0/real_time             1459886 ns       130222 ns          483 bytes_per_second=10.7029G/s\r\n   ReadCachedFileAsync/num_cols:64/is_partial:0/real_time            2330443 ns       321086 ns          221 bytes_per_second=6.70473G/s\r\n   ReadCachedFileAsync/num_cols:512/is_partial:0/real_time           5482006 ns      1257601 ns          103 bytes_per_second=2.85023G/s\r\n   ReadCachedFileAsync/num_cols:4096/is_partial:0/real_time         58510720 ns     20036778 ns           10 bytes_per_second=273.454M/s\r\n   ReadCachedFileAsync/num_cols:1/is_partial:1/real_time             1372293 ns       110795 ns          485 bytes_per_second=11.3861G/s\r\n   ReadCachedFileAsync/num_cols:8/is_partial:1/real_time             1405059 ns       118576 ns          511 bytes_per_second=1.39007G/s\r\n   ReadCachedFileAsync/num_cols:64/is_partial:1/real_time            1636863 ns       167263 ns          430 bytes_per_second=1.19321G/s\r\n   ReadCachedFileAsync/num_cols:512/is_partial:1/real_time           4227871 ns       643349 ns          259 bytes_per_second=473.051M/s\r\n   ReadCachedFileAsync/num_cols:4096/is_partial:1/real_time         15536425 ns      2950475 ns           44 bytes_per_second=128.73M/s\r\n   ReadUncachedFile/num_cols:1/is_partial:0/real_time               90759059 ns     21259292 ns            7 bytes_per_second=176.291M/s\r\n   ReadUncachedFile/num_cols:8/is_partial:0/real_time              869888780 ns    176945198 ns            1 bytes_per_second=147.145M/s\r\n   ReadUncachedFile/num_cols:64/is_partial:0/real_time            7444635509 ns   1366674351 ns            1 bytes_per_second=137.549M/s\r\n   ReadUncachedFile/num_cols:1/is_partial:1/real_time               62928170 ns     18097667 ns            9 bytes_per_second=254.258M/s\r\n   ReadUncachedFile/num_cols:8/is_partial:1/real_time              133338397 ns     33394170 ns            4 bytes_per_second=119.995M/s\r\n   ReadUncachedFile/num_cols:64/is_partial:1/real_time            1467858164 ns    284143075 ns            1 bytes_per_second=87.2019M/s\r\n   ReadUncachedFileAsync/num_cols:1/is_partial:0/real_time          74365294 ns      4432433 ns            8 bytes_per_second=215.154M/s\r\n   ReadUncachedFileAsync/num_cols:8/is_partial:0/real_time        1112630678 ns     15459211 ns            1 bytes_per_second=115.043M/s\r\n   ReadUncachedFileAsync/num_cols:64/is_partial:0/real_time       8005232159 ns     87626234 ns            1 bytes_per_second=127.916M/s\r\n   ReadUncachedFileAsync/num_cols:1/is_partial:1/real_time          82149012 ns      4770464 ns            8 bytes_per_second=194.768M/s\r\n   ReadUncachedFileAsync/num_cols:8/is_partial:1/real_time         999669229 ns     25252003 ns            1 bytes_per_second=16.0053M/s\r\n   ReadUncachedFileAsync/num_cols:64/is_partial:1/real_time       8953151862 ns    122078755 ns            1 bytes_per_second=14.2966M/s\r\n   ReadMmapCachedFile/num_cols:1/is_partial:0/real_time               125726 ns       125677 ns         4359 bytes_per_second=124.278G/s\r\n   ReadMmapCachedFile/num_cols:8/is_partial:0/real_time               152793 ns       152693 ns         4078 bytes_per_second=102.263G/s\r\n   ReadMmapCachedFile/num_cols:64/is_partial:0/real_time              448895 ns       448890 ns         1544 bytes_per_second=34.8077G/s\r\n   ReadMmapCachedFile/num_cols:512/is_partial:0/real_time            3245646 ns      3245563 ns          201 bytes_per_second=4.81414G/s\r\n   ReadMmapCachedFile/num_cols:4096/is_partial:0/real_time          24613857 ns     24613192 ns           26 bytes_per_second=650.04M/s\r\n   ReadMmapCachedFile/num_cols:1/is_partial:1/real_time              1404416 ns      1403848 ns          429 bytes_per_second=11.1256G/s\r\n   ReadMmapCachedFile/num_cols:8/is_partial:1/real_time               258900 ns       258655 ns         2438 bytes_per_second=7.54394G/s\r\n   ReadMmapCachedFile/num_cols:64/is_partial:1/real_time              637583 ns       637050 ns         1070 bytes_per_second=3.06333G/s\r\n   ReadMmapCachedFile/num_cols:512/is_partial:1/real_time            2433011 ns      2430223 ns          260 bytes_per_second=822.027M/s\r\n   ReadMmapCachedFile/num_cols:4096/is_partial:1/real_time          13873093 ns     13871727 ns           49 bytes_per_second=144.164M/s\r\n   ReadMmapCachedFileAsync/num_cols:1/is_partial:0/real_time          140850 ns       140795 ns         4303 bytes_per_second=110.933G/s\r\n   ReadMmapCachedFileAsync/num_cols:8/is_partial:0/real_time          179309 ns       179210 ns         3469 bytes_per_second=87.14G/s\r\n   ReadMmapCachedFileAsync/num_cols:64/is_partial:0/real_time         448913 ns       448908 ns         1446 bytes_per_second=34.8063G/s\r\n   ReadMmapCachedFileAsync/num_cols:512/is_partial:0/real_time       3254736 ns      3254735 ns          201 bytes_per_second=4.8007G/s\r\n   ReadMmapCachedFileAsync/num_cols:4096/is_partial:0/real_time     24568415 ns     24568065 ns           29 bytes_per_second=651.243M/s\r\n   ReadMmapCachedFileAsync/num_cols:1/is_partial:1/real_time          147544 ns       147505 ns         4174 bytes_per_second=105.901G/s\r\n   ReadMmapCachedFileAsync/num_cols:8/is_partial:1/real_time          156600 ns       156560 ns         3922 bytes_per_second=12.4721G/s\r\n   ReadMmapCachedFileAsync/num_cols:64/is_partial:1/real_time         279874 ns       279869 ns         2286 bytes_per_second=6.9786G/s\r\n   ReadMmapCachedFileAsync/num_cols:512/is_partial:1/real_time       1294640 ns      1294599 ns          485 bytes_per_second=1.50862G/s\r\n   ReadMmapCachedFileAsync/num_cols:4096/is_partial:1/real_time      9290458 ns      9290186 ns           61 bytes_per_second=215.275M/s\r\n   ReadMmapUncachedFile/num_cols:1/is_partial:0/real_time           14218441 ns      4163041 ns           37 bytes_per_second=1125.3M/s\r\n   ReadMmapUncachedFile/num_cols:8/is_partial:0/real_time           15186534 ns      5445685 ns           34 bytes_per_second=8.23098G/s\r\n   ReadMmapUncachedFile/num_cols:64/is_partial:0/real_time          18517013 ns      6723617 ns           40 bytes_per_second=54.0044G/s\r\n   ReadMmapUncachedFile/num_cols:1/is_partial:1/real_time          199373218 ns     25452922 ns            6 bytes_per_second=80.2515M/s\r\n   ReadMmapUncachedFile/num_cols:8/is_partial:1/real_time           89239301 ns     20759803 ns            6 bytes_per_second=179.293M/s\r\n   ReadMmapUncachedFile/num_cols:64/is_partial:1/real_time        1248248168 ns    341291147 ns            1 bytes_per_second=102.544M/s\r\n   ReadMmapUncachedFileAsync/num_cols:1/is_partial:0/real_time      18912041 ns      4831881 ns           30 bytes_per_second=846.022M/s\r\n   ReadMmapUncachedFileAsync/num_cols:8/is_partial:0/real_time      18659801 ns      5592895 ns           29 bytes_per_second=6.69889G/s\r\n   ReadMmapUncachedFileAsync/num_cols:64/is_partial:0/real_time     22052427 ns      8448925 ns           25 bytes_per_second=45.3465G/s\r\n   ReadMmapUncachedFileAsync/num_cols:1/is_partial:1/real_time      19152585 ns      4715533 ns           32 bytes_per_second=835.396M/s\r\n   ReadMmapUncachedFileAsync/num_cols:8/is_partial:1/real_time      31351166 ns      5621547 ns           24 bytes_per_second=510.348M/s\r\n   ReadMmapUncachedFileAsync/num_cols:64/is_partial:1/real_time     23942101 ns      9873209 ns           24 bytes_per_second=5.22093G/s\r\n   ReadCompressedBuffer/num_cols:1/is_partial:0/real_time           23104550 ns      1218454 ns           30 bytes_per_second=692.504M/s\r\n   ReadCompressedBuffer/num_cols:8/is_partial:0/real_time            4595707 ns       740912 ns          152 bytes_per_second=3.39991G/s\r\n   ReadCompressedBuffer/num_cols:64/is_partial:0/real_time           6477766 ns      5240771 ns          109 bytes_per_second=2.4121G/s\r\n   ReadCompressedBuffer/num_cols:512/is_partial:0/real_time         33545970 ns     31936587 ns           21 bytes_per_second=476.957M/s\r\n   ReadCompressedBuffer/num_cols:4096/is_partial:0/real_time       266192000 ns    253035894 ns            3 bytes_per_second=60.107M/s\r\n   ReadCompressedBuffer/num_cols:1/is_partial:1/real_time           58344718 ns      2052251 ns           10 bytes_per_second=274.232M/s\r\n   ReadCompressedBuffer/num_cols:8/is_partial:1/real_time            3345093 ns       227327 ns          212 bytes_per_second=597.891M/s\r\n   ReadCompressedBuffer/num_cols:64/is_partial:1/real_time           1353268 ns       974815 ns          521 bytes_per_second=1.44327G/s\r\n   ReadCompressedBuffer/num_cols:512/is_partial:1/real_time          5785294 ns      5541711 ns          117 bytes_per_second=345.704M/s\r\n   ReadCompressedBuffer/num_cols:4096/is_partial:1/real_time        44613066 ns     43177604 ns           16 bytes_per_second=44.8299M/s\r\n   ReadCompressedBufferAsync/num_cols:1/is_partial:0/real_time      62489273 ns      1824188 ns           16 bytes_per_second=256.044M/s\r\n   ReadCompressedBufferAsync/num_cols:8/is_partial:0/real_time       4611022 ns       774268 ns          150 bytes_per_second=3.38862G/s\r\n   ReadCompressedBufferAsync/num_cols:64/is_partial:0/real_time      6482862 ns      5258856 ns          108 bytes_per_second=2.4102G/s\r\n   ReadCompressedBufferAsync/num_cols:512/is_partial:0/real_time    33535205 ns     31985320 ns           21 bytes_per_second=477.111M/s\r\n   ReadCompressedBufferAsync/num_cols:4096/is_partial:0/real_time  261546151 ns    248884692 ns            3 bytes_per_second=61.1747M/s\r\n   ReadCompressedBufferAsync/num_cols:1/is_partial:1/real_time      54144682 ns      1612839 ns           10 bytes_per_second=295.505M/s\r\n   ReadCompressedBufferAsync/num_cols:8/is_partial:1/real_time       3189016 ns       219889 ns          214 bytes_per_second=627.153M/s\r\n   ReadCompressedBufferAsync/num_cols:64/is_partial:1/real_time      1249434 ns       871746 ns          549 bytes_per_second=1.56321G/s\r\n   ReadCompressedBufferAsync/num_cols:512/is_partial:1/real_time     5307896 ns      5074152 ns          131 bytes_per_second=376.797M/s\r\n   ReadCompressedBufferAsync/num_cols:4096/is_partial:1/real_time   39080839 ns     37670339 ns           18 bytes_per_second=51.176M/s\r\n   WriteRecordBatch/1/real_time                                        34772 ns        34772 ns        20300 bytes_per_second=28.0844G/s\r\n   WriteRecordBatch/4/real_time                                        34535 ns        34535 ns        20351 bytes_per_second=28.2771G/s\r\n   WriteRecordBatch/16/real_time                                       36643 ns        36642 ns        19124 bytes_per_second=26.6505G/s\r\n   WriteRecordBatch/64/real_time                                       45013 ns        45012 ns        15689 bytes_per_second=21.695G/s\r\n   WriteRecordBatch/256/real_time                                      78685 ns        78684 ns         8838 bytes_per_second=12.411G/s\r\n   WriteRecordBatch/1024/real_time                                    201633 ns       201631 ns         3471 bytes_per_second=4.84328G/s\r\n   WriteRecordBatch/4096/real_time                                    694521 ns       694524 ns         1005 bytes_per_second=1.4061G/s\r\n   WriteRecordBatch/8192/real_time                                   1575717 ns      1575656 ns          442 bytes_per_second=634.632M/s\r\n   ReadRecordBatch/1/real_time                                           979 ns          979 ns       701667 bytes_per_second=997.706G/s\r\n   ReadRecordBatch/4/real_time                                          1750 ns         1750 ns       395005 bytes_per_second=557.954G/s\r\n   ReadRecordBatch/16/real_time                                         5132 ns         5132 ns       135412 bytes_per_second=190.286G/s\r\n   ReadRecordBatch/64/real_time                                        18851 ns        18851 ns        37344 bytes_per_second=51.8031G/s\r\n   ReadRecordBatch/256/real_time                                       86498 ns        86496 ns         7923 bytes_per_second=11.29G/s\r\n   ReadRecordBatch/1024/real_time                                     351658 ns       351652 ns         1989 bytes_per_second=2.77702G/s\r\n   ReadRecordBatch/4096/real_time                                    1395187 ns      1395182 ns          498 bytes_per_second=716.75M/s\r\n   ReadRecordBatch/8192/real_time                                    3144721 ns      3144621 ns          222 bytes_per_second=317.993M/s\r\n   ReadStream/1/real_time                                               1910 ns         1910 ns       364013 bytes_per_second=511.201G/s\r\n   ReadStream/4/real_time                                               3464 ns         3464 ns       200990 bytes_per_second=281.943G/s\r\n   ReadStream/16/real_time                                              9450 ns         9450 ns        74020 bytes_per_second=103.339G/s\r\n   ReadStream/64/real_time                                             34052 ns        34050 ns        20488 bytes_per_second=28.6789G/s\r\n   ReadStream/256/real_time                                           157756 ns       157756 ns         4436 bytes_per_second=6.19032G/s\r\n   ReadStream/1024/real_time                                          619067 ns       619065 ns         1122 bytes_per_second=1.57748G/s\r\n   ReadStream/4096/real_time                                         2416601 ns      2416567 ns          289 bytes_per_second=413.804M/s\r\n   ReadStream/8192/real_time                                         4807772 ns      4807614 ns          147 bytes_per_second=207.997M/s\r\n   DecodeStream/1/real_time                                             2148 ns         2148 ns       325906 bytes_per_second=454.604G/s\r\n   DecodeStream/4/real_time                                             3680 ns         3680 ns       189757 bytes_per_second=265.384G/s\r\n   DecodeStream/16/real_time                                            9498 ns         9498 ns        73771 bytes_per_second=102.818G/s\r\n   DecodeStream/64/real_time                                           33636 ns        33635 ns        20995 bytes_per_second=29.0335G/s\r\n   DecodeStream/256/real_time                                         149850 ns       149850 ns         4676 bytes_per_second=6.51692G/s\r\n   DecodeStream/1024/real_time                                        592956 ns       592940 ns         1173 bytes_per_second=1.64694G/s\r\n   DecodeStream/4096/real_time                                       2362735 ns      2362619 ns          297 bytes_per_second=423.238M/s\r\n   DecodeStream/8192/real_time                                       5194284 ns      5193784 ns          134 bytes_per_second=192.519M/s\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T01:46:53.895+0000",
                    "updated": "2022-01-14T01:46:53.895+0000",
                    "started": "2022-01-14T01:46:53.894+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708799",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/708801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1012676572\n\n\n   From these benchmarks I was a little surprised about how much impact reading a small number of columns has on overall performance.\r\n   \r\n   This is the motivation for ARROW-14577:\r\n   \r\n   ```\r\n   ReadUncachedFile/num_cols:1/is_partial:1/real_time               62928170 ns     18097667 ns            9 bytes_per_second=254.258M/s\r\n   ReadUncachedFile/num_cols:8/is_partial:1/real_time              133338397 ns     33394170 ns            4 bytes_per_second=119.995M/s\r\n   ReadUncachedFile/num_cols:64/is_partial:1/real_time            1467858164 ns    284143075 ns            1 bytes_per_second=87.2019M/s\r\n   ReadUncachedFileAsync/num_cols:1/is_partial:1/real_time          82149012 ns      4770464 ns            8 bytes_per_second=194.768M/s\r\n   ReadUncachedFileAsync/num_cols:8/is_partial:1/real_time         999669229 ns     25252003 ns            1 bytes_per_second=16.0053M/s\r\n   ReadUncachedFileAsync/num_cols:64/is_partial:1/real_time       8953151862 ns    122078755 ns            1 bytes_per_second=14.2966M/s\r\n   ```\r\n   \r\n   This is concerning since the two benchmarks should be doing the exact same task (a partial read with 1 column should be the same as a full read with 1 column):\r\n   ```\r\n   ReadMmapCachedFile/num_cols:1/is_partial:0/real_time               125726 ns       125677 ns         4359 bytes_per_second=124.278G/s\r\n   ReadMmapCachedFile/num_cols:1/is_partial:1/real_time              1404416 ns      1403848 ns          429 bytes_per_second=11.1256G/s\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T01:51:42.491+0000",
                    "updated": "2022-01-14T01:51:42.491+0000",
                    "started": "2022-01-14T01:51:42.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708801",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/708802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace edited a comment on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1012676572\n\n\n   From these benchmarks I was a little surprised about how much impact reading a small number of columns has on overall performance.  Although for all benchmarks except UncachedFile more columns means the metadata / data ratio is bigger as well.\r\n   \r\n   This is the motivation for ARROW-14577:\r\n   \r\n   ```\r\n   ReadUncachedFile/num_cols:1/is_partial:1/real_time               62928170 ns     18097667 ns            9 bytes_per_second=254.258M/s\r\n   ReadUncachedFile/num_cols:8/is_partial:1/real_time              133338397 ns     33394170 ns            4 bytes_per_second=119.995M/s\r\n   ReadUncachedFile/num_cols:64/is_partial:1/real_time            1467858164 ns    284143075 ns            1 bytes_per_second=87.2019M/s\r\n   ReadUncachedFileAsync/num_cols:1/is_partial:1/real_time          82149012 ns      4770464 ns            8 bytes_per_second=194.768M/s\r\n   ReadUncachedFileAsync/num_cols:8/is_partial:1/real_time         999669229 ns     25252003 ns            1 bytes_per_second=16.0053M/s\r\n   ReadUncachedFileAsync/num_cols:64/is_partial:1/real_time       8953151862 ns    122078755 ns            1 bytes_per_second=14.2966M/s\r\n   ```\r\n   \r\n   This is concerning since the two benchmarks should be doing the exact same task (a partial read with 1 column should be the same as a full read with 1 column):\r\n   ```\r\n   ReadMmapCachedFile/num_cols:1/is_partial:0/real_time               125726 ns       125677 ns         4359 bytes_per_second=124.278G/s\r\n   ReadMmapCachedFile/num_cols:1/is_partial:1/real_time              1404416 ns      1403848 ns          429 bytes_per_second=11.1256G/s\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T01:52:56.389+0000",
                    "updated": "2022-01-14T01:52:56.389+0000",
                    "started": "2022-01-14T01:52:56.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708802",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/708805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1012679640\n\n\n   Filed ARROW-15333 for the concerning benchmark\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T01:58:34.557+0000",
                    "updated": "2022-01-14T01:58:34.557+0000",
                    "started": "2022-01-14T01:58:34.557+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708805",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r784832743\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_benchmark.cc\n##########\n@@ -202,60 +227,139 @@ static void DecodeStream(benchmark::State& state) {  // NOLINT non-const referen\n   {                                                                               \\\n     auto record_batch = MakeRecordBatch(kBatchSize, state.range(0));              \\\n     auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n-    ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                        \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n     ABORT_NOT_OK(writer->Close());                                                \\\n     ABORT_NOT_OK(sink->Close());                                                  \\\n-  }\n+  }                                                                               \\\n+  constexpr int64_t total_size = kBatchSize * kBatches;\n+\n+// Note: When working with real files we ensure each array is at least 4MB large\n+// This slows things down considerably but using smaller sized arrays will cause\n+// the I/O to bottleneck for partial reads which is not what we are trying to\n+// measure here (although this may be interesting to optimize someday)\n+#define GENERATE_DATA_REAL_FILE()                                                 \\\n+  constexpr int64_t kArraySize = (1 << 19) * sizeof(int64_t); /* 4 MB */          \\\n+  constexpr int64_t kBatches = 4;                                                 \\\n+  auto num_fields = state.range(0);                                               \\\n+  auto options = ipc::IpcWriteOptions::Defaults();                                \\\n+  ASSIGN_OR_ABORT(auto sink, io::FileOutputStream::Open(\"/tmp/benchmark.arrow\")); \\\n+  {                                                                               \\\n+    auto batch_size = kArraySize * num_fields;                                    \\\n+    auto record_batch = MakeRecordBatch(batch_size, num_fields);                  \\\n+    auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n+    ABORT_NOT_OK(writer->Close());                                                \\\n+    ABORT_NOT_OK(sink->Close());                                                  \\\n+  }                                                                               \\\n+  int64_t total_size = kArraySize * kBatches * num_fields;\n \n #define READ_DATA_IN_MEMORY() auto input = std::make_shared<io::BufferReader>(buffer);\n #define READ_DATA_TEMP_FILE() \\\n   ASSIGN_OR_ABORT(auto input, io::ReadableFile::Open(\"/tmp/benchmark.arrow\"));\n+// This will not be correct if your system mounts /tmp to RAM (using tmpfs\n+// or ramfs).\n\nReview comment:\n       How are our benchmark machines set up? (Trying to find out now)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T13:21:17.381+0000",
                    "updated": "2022-01-14T13:21:17.381+0000",
                    "started": "2022-01-14T13:21:17.381+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709048",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1013111649\n\n\n   Benchmark runs are scheduled for baseline = c52f9cc38a3ebf7b991cba2191026a737621042f and contender = 9d456d8874a6ae643b9a5d746cdd33bd05358918. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a44078aa682f440cbaa41fac43438aa4...d98029ba779040f2af317212591c5cc1/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/e3a29ac7262f42c6b08afaaebbd9e8d5...029b676676f9485c8f1e92e9d2e5b9d6/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/4ecce4d05f534a599a196b1612970482...c5d5dd3756214f6e8a114440a75cfcb6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T13:22:08.261+0000",
                    "updated": "2022-01-14T13:22:08.261+0000",
                    "started": "2022-01-14T13:22:08.261+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709051",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1013111620\n\n\n   @ursabot please benchmark lang=C++\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T13:22:12.828+0000",
                    "updated": "2022-01-14T13:22:12.828+0000",
                    "started": "2022-01-14T13:22:12.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709052",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r784838047\n\n\n\n##########\nFile path: cpp/src/arrow/io/test_common.cc\n##########\n@@ -48,6 +52,28 @@ void AssertFileContents(const std::string& path, const std::string& contents) {\n \n bool FileExists(const std::string& path) { return std::ifstream(path.c_str()).good(); }\n \n+Status PurgeLocalFileFromOsCache(const std::string& path) {\n+#ifdef _WIN32\n+  return Status::NotImplemented(\"Cannot yet purge files from cache on Windows\");\n+#else\n+  int fd = open(path.c_str(), O_WRONLY);\n+  if (fd < 0) {\n+    return IOErrorFromErrno(errno, \"open on \", path,\n+                            \" to clear from cache did not succeed.\");\n+  }\n+  int err = posix_fadvise(fd, 0, 0, POSIX_FADV_DONTNEED);\n\nReview comment:\n       Ah, it also seems this isn't supported on MacOS: https://github.com/apache/arrow/runs/4811739968?check_suite_focus=true#step:7:779\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T13:22:45.678+0000",
                    "updated": "2022-01-14T13:22:45.678+0000",
                    "started": "2022-01-14T13:22:45.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709053",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1013111649\n\n\n   Benchmark runs are scheduled for baseline = c52f9cc38a3ebf7b991cba2191026a737621042f and contender = 9d456d8874a6ae643b9a5d746cdd33bd05358918. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a44078aa682f440cbaa41fac43438aa4...d98029ba779040f2af317212591c5cc1/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/e3a29ac7262f42c6b08afaaebbd9e8d5...029b676676f9485c8f1e92e9d2e5b9d6/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/4ecce4d05f534a599a196b1612970482...c5d5dd3756214f6e8a114440a75cfcb6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T17:31:31.818+0000",
                    "updated": "2022-01-14T17:31:31.818+0000",
                    "started": "2022-01-14T17:31:31.818+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709203",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r785032942\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_benchmark.cc\n##########\n@@ -202,60 +227,139 @@ static void DecodeStream(benchmark::State& state) {  // NOLINT non-const referen\n   {                                                                               \\\n     auto record_batch = MakeRecordBatch(kBatchSize, state.range(0));              \\\n     auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n-    ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                        \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n     ABORT_NOT_OK(writer->Close());                                                \\\n     ABORT_NOT_OK(sink->Close());                                                  \\\n-  }\n+  }                                                                               \\\n+  constexpr int64_t total_size = kBatchSize * kBatches;\n+\n+// Note: When working with real files we ensure each array is at least 4MB large\n+// This slows things down considerably but using smaller sized arrays will cause\n+// the I/O to bottleneck for partial reads which is not what we are trying to\n+// measure here (although this may be interesting to optimize someday)\n+#define GENERATE_DATA_REAL_FILE()                                                 \\\n+  constexpr int64_t kArraySize = (1 << 19) * sizeof(int64_t); /* 4 MB */          \\\n+  constexpr int64_t kBatches = 4;                                                 \\\n+  auto num_fields = state.range(0);                                               \\\n+  auto options = ipc::IpcWriteOptions::Defaults();                                \\\n+  ASSIGN_OR_ABORT(auto sink, io::FileOutputStream::Open(\"/tmp/benchmark.arrow\")); \\\n+  {                                                                               \\\n+    auto batch_size = kArraySize * num_fields;                                    \\\n+    auto record_batch = MakeRecordBatch(batch_size, num_fields);                  \\\n+    auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n+    ABORT_NOT_OK(writer->Close());                                                \\\n+    ABORT_NOT_OK(sink->Close());                                                  \\\n+  }                                                                               \\\n+  int64_t total_size = kArraySize * kBatches * num_fields;\n \n #define READ_DATA_IN_MEMORY() auto input = std::make_shared<io::BufferReader>(buffer);\n #define READ_DATA_TEMP_FILE() \\\n   ASSIGN_OR_ABORT(auto input, io::ReadableFile::Open(\"/tmp/benchmark.arrow\"));\n+// This will not be correct if your system mounts /tmp to RAM (using tmpfs\n+// or ramfs).\n\nReview comment:\n       Seems like the benchmark machine for C++ mounts /tmp to disk, so we should be all set.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T17:38:13.567+0000",
                    "updated": "2022-01-14T17:38:13.567+0000",
                    "started": "2022-01-14T17:38:13.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709209",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1013111649\n\n\n   Benchmark runs are scheduled for baseline = c52f9cc38a3ebf7b991cba2191026a737621042f and contender = 9d456d8874a6ae643b9a5d746cdd33bd05358918. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a44078aa682f440cbaa41fac43438aa4...d98029ba779040f2af317212591c5cc1/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/e3a29ac7262f42c6b08afaaebbd9e8d5...029b676676f9485c8f1e92e9d2e5b9d6/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/4ecce4d05f534a599a196b1612970482...c5d5dd3756214f6e8a114440a75cfcb6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T17:57:50.706+0000",
                    "updated": "2022-01-14T17:57:50.706+0000",
                    "started": "2022-01-14T17:57:50.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709220",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1013111649\n\n\n   Benchmark runs are scheduled for baseline = c52f9cc38a3ebf7b991cba2191026a737621042f and contender = 9d456d8874a6ae643b9a5d746cdd33bd05358918. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a44078aa682f440cbaa41fac43438aa4...d98029ba779040f2af317212591c5cc1/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/e3a29ac7262f42c6b08afaaebbd9e8d5...029b676676f9485c8f1e92e9d2e5b9d6/)\n   [Finished :arrow_down:0.08% :arrow_up:0.0% :warning: Contender and baseline run contexts do not match] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/4ecce4d05f534a599a196b1612970482...c5d5dd3756214f6e8a114440a75cfcb6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T18:51:45.538+0000",
                    "updated": "2022-01-14T18:51:45.538+0000",
                    "started": "2022-01-14T18:51:45.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709242",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r785083527\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_benchmark.cc\n##########\n@@ -202,60 +227,139 @@ static void DecodeStream(benchmark::State& state) {  // NOLINT non-const referen\n   {                                                                               \\\n     auto record_batch = MakeRecordBatch(kBatchSize, state.range(0));              \\\n     auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n-    ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                        \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n     ABORT_NOT_OK(writer->Close());                                                \\\n     ABORT_NOT_OK(sink->Close());                                                  \\\n-  }\n+  }                                                                               \\\n+  constexpr int64_t total_size = kBatchSize * kBatches;\n+\n+// Note: When working with real files we ensure each array is at least 4MB large\n+// This slows things down considerably but using smaller sized arrays will cause\n+// the I/O to bottleneck for partial reads which is not what we are trying to\n+// measure here (although this may be interesting to optimize someday)\n+#define GENERATE_DATA_REAL_FILE()                                                 \\\n+  constexpr int64_t kArraySize = (1 << 19) * sizeof(int64_t); /* 4 MB */          \\\n+  constexpr int64_t kBatches = 4;                                                 \\\n+  auto num_fields = state.range(0);                                               \\\n+  auto options = ipc::IpcWriteOptions::Defaults();                                \\\n+  ASSIGN_OR_ABORT(auto sink, io::FileOutputStream::Open(\"/tmp/benchmark.arrow\")); \\\n+  {                                                                               \\\n+    auto batch_size = kArraySize * num_fields;                                    \\\n+    auto record_batch = MakeRecordBatch(batch_size, num_fields);                  \\\n+    auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n+    ABORT_NOT_OK(writer->Close());                                                \\\n+    ABORT_NOT_OK(sink->Close());                                                  \\\n+  }                                                                               \\\n+  int64_t total_size = kArraySize * kBatches * num_fields;\n \n #define READ_DATA_IN_MEMORY() auto input = std::make_shared<io::BufferReader>(buffer);\n #define READ_DATA_TEMP_FILE() \\\n   ASSIGN_OR_ABORT(auto input, io::ReadableFile::Open(\"/tmp/benchmark.arrow\"));\n+// This will not be correct if your system mounts /tmp to RAM (using tmpfs\n+// or ramfs).\n\nReview comment:\n       Ok, maybe this warning is superfluous.  For some reason I always thought /tmp was mounted to tmpfs but now, reading up on it, it seems that is quite rare.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T18:59:16.030+0000",
                    "updated": "2022-01-14T18:59:16.030+0000",
                    "started": "2022-01-14T18:59:16.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709246",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r785084565\n\n\n\n##########\nFile path: cpp/src/arrow/io/test_common.cc\n##########\n@@ -48,6 +52,28 @@ void AssertFileContents(const std::string& path, const std::string& contents) {\n \n bool FileExists(const std::string& path) { return std::ifstream(path.c_str()).good(); }\n \n+Status PurgeLocalFileFromOsCache(const std::string& path) {\n+#ifdef _WIN32\n+  return Status::NotImplemented(\"Cannot yet purge files from cache on Windows\");\n+#else\n+  int fd = open(path.c_str(), O_WRONLY);\n+  if (fd < 0) {\n+    return IOErrorFromErrno(errno, \"open on \", path,\n+                            \" to clear from cache did not succeed.\");\n+  }\n+  int err = posix_fadvise(fd, 0, 0, POSIX_FADV_DONTNEED);\n\nReview comment:\n       Good catch.  I looked at file.cc and realized we are using:\r\n   \r\n   ```\r\n   #if defined(POSIX_FADV_WILLNEED)\r\n   ```\r\n   which seems much better.  I can't use that #if in the benchmark itself though (unless I want to import fcntl.h which wouldn't be the worst thing) so I changed it to SkipWithError.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T19:00:57.939+0000",
                    "updated": "2022-01-14T19:00:57.939+0000",
                    "started": "2022-01-14T19:00:57.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709247",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r785084565\n\n\n\n##########\nFile path: cpp/src/arrow/io/test_common.cc\n##########\n@@ -48,6 +52,28 @@ void AssertFileContents(const std::string& path, const std::string& contents) {\n \n bool FileExists(const std::string& path) { return std::ifstream(path.c_str()).good(); }\n \n+Status PurgeLocalFileFromOsCache(const std::string& path) {\n+#ifdef _WIN32\n+  return Status::NotImplemented(\"Cannot yet purge files from cache on Windows\");\n+#else\n+  int fd = open(path.c_str(), O_WRONLY);\n+  if (fd < 0) {\n+    return IOErrorFromErrno(errno, \"open on \", path,\n+                            \" to clear from cache did not succeed.\");\n+  }\n+  int err = posix_fadvise(fd, 0, 0, POSIX_FADV_DONTNEED);\n\nReview comment:\n       Good catch.  I looked at file.cc and realized we are using:\r\n   \r\n   ```\r\n   #if defined(POSIX_FADV_WILLNEED)\r\n   ```\r\n   which seems much better.  I can't use that #if in the benchmark itself though (unless I want to import fcntl.h which wouldn't be the worst thing) so I changed it to SkipWithError.  This has the added advantage of making it clear to the user that we aren't running all the benchmarks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T19:01:10.728+0000",
                    "updated": "2022-01-14T19:01:10.728+0000",
                    "started": "2022-01-14T19:01:10.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709248",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#discussion_r785084788\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_benchmark.cc\n##########\n@@ -202,60 +227,139 @@ static void DecodeStream(benchmark::State& state) {  // NOLINT non-const referen\n   {                                                                               \\\n     auto record_batch = MakeRecordBatch(kBatchSize, state.range(0));              \\\n     auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n-    ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                        \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n     ABORT_NOT_OK(writer->Close());                                                \\\n     ABORT_NOT_OK(sink->Close());                                                  \\\n-  }\n+  }                                                                               \\\n+  constexpr int64_t total_size = kBatchSize * kBatches;\n+\n+// Note: When working with real files we ensure each array is at least 4MB large\n+// This slows things down considerably but using smaller sized arrays will cause\n+// the I/O to bottleneck for partial reads which is not what we are trying to\n+// measure here (although this may be interesting to optimize someday)\n+#define GENERATE_DATA_REAL_FILE()                                                 \\\n+  constexpr int64_t kArraySize = (1 << 19) * sizeof(int64_t); /* 4 MB */          \\\n+  constexpr int64_t kBatches = 4;                                                 \\\n+  auto num_fields = state.range(0);                                               \\\n+  auto options = ipc::IpcWriteOptions::Defaults();                                \\\n+  ASSIGN_OR_ABORT(auto sink, io::FileOutputStream::Open(\"/tmp/benchmark.arrow\")); \\\n+  {                                                                               \\\n+    auto batch_size = kArraySize * num_fields;                                    \\\n+    auto record_batch = MakeRecordBatch(batch_size, num_fields);                  \\\n+    auto writer = *ipc::MakeFileWriter(sink, record_batch->schema(), options);    \\\n+    for (int64_t i = 0; i < kBatches; i++) {                                      \\\n+      ABORT_NOT_OK(writer->WriteRecordBatch(*record_batch));                      \\\n+    }                                                                             \\\n+    ABORT_NOT_OK(writer->Close());                                                \\\n+    ABORT_NOT_OK(sink->Close());                                                  \\\n+  }                                                                               \\\n+  int64_t total_size = kArraySize * kBatches * num_fields;\n \n #define READ_DATA_IN_MEMORY() auto input = std::make_shared<io::BufferReader>(buffer);\n #define READ_DATA_TEMP_FILE() \\\n   ASSIGN_OR_ABORT(auto input, io::ReadableFile::Open(\"/tmp/benchmark.arrow\"));\n+// This will not be correct if your system mounts /tmp to RAM (using tmpfs\n+// or ramfs).\n\nReview comment:\n       I had the opposite impression, so that's good to know! But I think we can keep it to be safe. I just wanted to double-check what Conbench was doing.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T19:01:23.534+0000",
                    "updated": "2022-01-14T19:01:23.534+0000",
                    "started": "2022-01-14T19:01:23.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709249",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace closed pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T20:18:20.970+0000",
                    "updated": "2022-01-14T20:18:20.970+0000",
                    "started": "2022-01-14T20:18:20.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709290",
                    "issueId": "13422644"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/worklog/709291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12150:\nURL: https://github.com/apache/arrow/pull/12150#issuecomment-1013447936\n\n\n   Benchmark runs are scheduled for baseline = 093fdad19dc2c0dfa3d2ed999fd918826d918e96 and contender = f585a470539d61cbc237b66a1851149d28adc176. f585a470539d61cbc237b66a1851149d28adc176 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/d1662e5be76441cb9089dbb35dee2f08...d29a4a0f09aa433bbc73d173f61cb9e1/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/4fa4137e8fc541c8822278acd0eb1899...f3e61f0ce9ec4796b43aa88bfdfe6e6a/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/8a5e2a687da84ad4b44d177e62e18572...e83773ccac6e4e888ae936f12c3454ba/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T20:21:25.456+0000",
                    "updated": "2022-01-14T20:21:25.456+0000",
                    "started": "2022-01-14T20:21:25.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709291",
                    "issueId": "13422644"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@47bc6512[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ff84b97[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64d2cd00[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@69fb96fe[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15d4faf2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4044c1df[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@320cbe1a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@77582c3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3544fbb5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@53689efb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44316e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2f0bef33[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 14 20:18:13 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-14T20:18:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15332/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-01-14T01:26:23.000+0000",
        "updated": "2022-01-15T11:21:11.000+0000",
        "timeoriginalestimate": null,
        "description": "This breaks out the benchmark changes in ARROW-14577 to allow us to more easily demonstrate the effect of the PR.\r\n\r\nFirst, there are a few problems with the current benchmark:\r\n\r\n * The benchmark named ReadFile is misleading since it is actually reading from an in-memory buffer and no OS \"read\" call is ever issued.\r\n * Renamed ReadTempFile to ReadCachedFile and added a second case for ReadUncachedFile.  The former reads a file in the OS' page cache and the latter forces a read to actually hit the disk.\r\n * The TempFile benchmarks were not actually writing the correct amount of data and were reporting unrealistically high rates as a result.\r\n * Adding a \"partial read\" parameter which, when true, only reads 1/8 the columns in the file so we can see the impact of pushdown projection.\r\n * Slightly reduced the range of parameters to keep the benchmark time reasonable (8k columns wasn't telling us anything more than 4k columns).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add new cases and fix issues in IPC read/write benchmark",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422644/comment/17476401",
                    "id": "17476401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 12150\n[https://github.com/apache/arrow/pull/12150]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-01-14T20:18:13.076+0000",
                    "updated": "2022-01-14T20:18:13.076+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ykyg:",
        "customfield_12314139": null
    }
}