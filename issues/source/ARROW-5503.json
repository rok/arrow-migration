{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13237358",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358",
    "key": "ARROW-5503",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5503/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 8,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/257668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518\n \n \n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   \r\n   tf <- tempfile()\r\n   writeLines('\r\n       { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\" }\r\n       { \"hello\": 3.25, \"world\": null }\r\n       { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\" }\r\n       { \"hello\": 0.0, \"world\": true, \"yo\": null }\r\n   ', tf)\r\n   \r\n   tab <- read_json_arrow(tf)\r\n   tab\r\n   #> arrow::Table\r\n   tab$schema\r\n   #> arrow::Schema \r\n   #> hello: double\r\n   #> world: bool\r\n   #> yo: string\r\n   as_tibble(tab)\r\n   #> # A tibble: 4 x 3\r\n   #>   hello world yo   \r\n   #>   <dbl> <lgl> <chr>\r\n   #> 1  3.5  FALSE thing\r\n   #> 2  3.25 NA    <NA> \r\n   #> 3  3.12 NA    \u5fcd   \r\n   #> 4  0    TRUE  <NA>\r\n   ```\r\n   \r\n   <sup>Created on 2019-06-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9000)</sup>\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T12:30:39.596+0000",
                    "updated": "2019-06-11T12:30:39.596+0000",
                    "started": "2019-06-11T12:30:39.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257668",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/257765",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518#issuecomment-500854591\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=h1) Report\n   > Merging [#4518](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/084549af7d4674976267add234bfcead81ca7ccf?src=pr&el=desc) will **decrease** coverage by `10.89%`.\n   > The diff coverage is `95.74%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4518/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4518       +/-   ##\n   ===========================================\n   - Coverage   88.25%   77.36%    -10.9%     \n   ===========================================\n     Files         846       53      -793     \n     Lines      103693     2023   -101670     \n     Branches     1253        0     -1253     \n   ===========================================\n   - Hits        91519     1565    -89954     \n   + Misses      11928      458    -11470     \n   + Partials      246        0      -246\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/arrow\\_types.h](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dfdHlwZXMuaA==) | `88.46% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [r/src/json.cpp](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9zcmMvanNvbi5jcHA=) | `100% <100%> (\u00f8)` | |\n   | [r/R/json.R](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9SL2pzb24uUg==) | `93.1% <93.1%> (\u00f8)` | |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/arrow/csv/chunker-test.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY2h1bmtlci10ZXN0LmNj) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/arrow/array/builder\\_decimal.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RlY2ltYWwuY2M=) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | ... and [790 more](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=footer). Last update [084549a...602227c](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T14:00:22.873+0000",
                    "updated": "2019-06-11T14:00:22.873+0000",
                    "started": "2019-06-11T14:00:22.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257765",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/257928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518#discussion_r292565946\n \n \n\n ##########\n File path: r/R/json.R\n ##########\n @@ -0,0 +1,139 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::json::TableReader` <- R6Class(\"arrow::json::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, json___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::json::ReadOptions` <- R6Class(\"arrow::json::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::json::ParseOptions` <- R6Class(\"arrow::json::ParseOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the json reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`. NB: if false, input must end with an empty line\n+#'\n+#' @export\n+json_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::json::ReadOptions`, json___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param newlines_in_values Whether objects may be printed across multiple lines (for example pretty printed),\n+#'\n+#' @export\n+json_parse_options <- function(\n+  newlines_in_values = FALSE\n+){\n+  shared_ptr(`arrow::json::ParseOptions`, json___ParseOptions__initialize(\n+    list(\n+      newlines_in_values = newlines_in_values\n+    )\n+  ))\n+}\n+\n+#' Json table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [json_read_options()]\n+#' @param parse_options, see [json_parse_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+json_table_reader <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  UseMethod(\"json_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+json_table_reader.default <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`json_table_reader.character` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  json_table_reader(fs::path_abs(file),\n+    read_options = read_options,\n+    parse_options = parse_options,\n+    ...\n+  )\n+}\n+\n+#' @export\n+`json_table_reader.fs_path` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  json_table_reader(ReadableFile(file),\n+    read_options = read_options,\n+    parse_options = parse_options,\n+    ...\n+  )\n+}\n+\n+#' @export\n+`json_table_reader.arrow::io::InputStream` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  shared_ptr(`arrow::json::TableReader`,\n+    json___TableReader__Make(file, read_options, parse_options)\n+  )\n+}\n+\n+#' @export\n+`json_table_reader.arrow::json::TableReader` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  file\n+}\n+\n+#' Read json file into an arrow::Table\n+#'\n+#' Use arrow::json::TableReader from [json_table_reader()]\n+#'\n+#' @param ... Used to construct an arrow::json::TableReader\n+#' @export\n+read_json_arrow <- function(...) {\n \n Review comment:\n   For consistency, this should have an `as_tibble` argument right? (Happy to defer the `as_tibble` cleanup to a separate issue since it cuts across all the readers.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T17:11:33.875+0000",
                    "updated": "2019-06-11T17:11:33.875+0000",
                    "started": "2019-06-11T17:11:33.874+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257928",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/257929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518#discussion_r292566807\n \n \n\n ##########\n File path: r/tests/testthat/test-json.R\n ##########\n @@ -0,0 +1,79 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+context(\"arrow::json::TableReader\")\n+\n+test_that(\"Can read json file with scalars columns (ARROW-5503)\", {\n+  tf <- tempfile()\n+  writeLines('\n+    { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\" }\n+    { \"hello\": 3.25, \"world\": null }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\" }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null }\n+  ', tf)\n+\n+  tab1 <- read_json_arrow(tf)\n+  tab2 <- read_json_arrow(mmap_open(tf))\n+  tab3 <- read_json_arrow(ReadableFile(tf))\n+\n+  expect_equal(tab1, tab2)\n+  expect_equal(tab1, tab3)\n+\n+  expect_equal(\n+    tab1$schema,\n+    schema(hello = float64(), world = boolean(), yo = utf8())\n+  )\n+  tib <- as_tibble(tab1)\n+  expect_equal(tib$hello, c(3.5, 3.25, 3.125, 0))\n+  expect_equal(tib$world, c(FALSE, NA, NA, TRUE))\n+  expect_equal(tib$yo, c(\"thing\", NA, \"\\u5fcd\", NA))\n+\n+  unlink(tf)\n+})\n+\n+test_that(\"Can read json file with nested columns (ARROW-5503)\", {\n+  tf <- tempfile()\n+  writeLines('\n+    { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\", \"arr\": [1, 2, 3], \"nuf\": {} }\n+    { \"hello\": 3.25, \"world\": null, \"arr\": [2], \"nuf\": null }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78 } }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90 } }\n+  ', tf)\n+\n+  tab1 <- read_json_arrow(tf)\n+  tab2 <- read_json_arrow(mmap_open(tf))\n+  tab3 <- read_json_arrow(ReadableFile(tf))\n+\n+  expect_equal(tab1, tab2)\n+  expect_equal(tab1, tab3)\n+\n+  expect_equal(\n+    tab1$schema,\n+    schema(\n+      hello = float64(),\n+      world = boolean(),\n+      yo = utf8(),\n+      arr = list_of(int64()),\n+      nuf = struct(ps = int64())\n+    )\n+  )\n+  # cannot yet test list and struct types in R api\n \n Review comment:\n   `as_tibble` doesn't work with them? Is that ticketed? That sounds important.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T17:11:38.929+0000",
                    "updated": "2019-06-11T17:11:38.929+0000",
                    "started": "2019-06-11T17:11:38.929+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257929",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/258571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518#discussion_r292832851\n \n \n\n ##########\n File path: r/R/json.R\n ##########\n @@ -0,0 +1,139 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::json::TableReader` <- R6Class(\"arrow::json::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, json___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::json::ReadOptions` <- R6Class(\"arrow::json::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::json::ParseOptions` <- R6Class(\"arrow::json::ParseOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the json reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`. NB: if false, input must end with an empty line\n+#'\n+#' @export\n+json_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::json::ReadOptions`, json___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param newlines_in_values Whether objects may be printed across multiple lines (for example pretty printed),\n+#'\n+#' @export\n+json_parse_options <- function(\n+  newlines_in_values = FALSE\n+){\n+  shared_ptr(`arrow::json::ParseOptions`, json___ParseOptions__initialize(\n+    list(\n+      newlines_in_values = newlines_in_values\n+    )\n+  ))\n+}\n+\n+#' Json table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [json_read_options()]\n+#' @param parse_options, see [json_parse_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+json_table_reader <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  UseMethod(\"json_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+json_table_reader.default <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`json_table_reader.character` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  json_table_reader(fs::path_abs(file),\n+    read_options = read_options,\n+    parse_options = parse_options,\n+    ...\n+  )\n+}\n+\n+#' @export\n+`json_table_reader.fs_path` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  json_table_reader(ReadableFile(file),\n+    read_options = read_options,\n+    parse_options = parse_options,\n+    ...\n+  )\n+}\n+\n+#' @export\n+`json_table_reader.arrow::io::InputStream` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  shared_ptr(`arrow::json::TableReader`,\n+    json___TableReader__Make(file, read_options, parse_options)\n+  )\n+}\n+\n+#' @export\n+`json_table_reader.arrow::json::TableReader` <- function(file,\n+  read_options = json_read_options(),\n+  parse_options = json_parse_options(),\n+  ...\n+){\n+  file\n+}\n+\n+#' Read json file into an arrow::Table\n+#'\n+#' Use arrow::json::TableReader from [json_table_reader()]\n+#'\n+#' @param ... Used to construct an arrow::json::TableReader\n+#' @export\n+read_json_arrow <- function(...) {\n \n Review comment:\n   \u2705 \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T09:52:28.650+0000",
                    "updated": "2019-06-12T09:52:28.650+0000",
                    "started": "2019-06-12T09:52:28.650+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258571",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/258582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518#discussion_r292837408\n \n \n\n ##########\n File path: r/tests/testthat/test-json.R\n ##########\n @@ -0,0 +1,79 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+context(\"arrow::json::TableReader\")\n+\n+test_that(\"Can read json file with scalars columns (ARROW-5503)\", {\n+  tf <- tempfile()\n+  writeLines('\n+    { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\" }\n+    { \"hello\": 3.25, \"world\": null }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\" }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null }\n+  ', tf)\n+\n+  tab1 <- read_json_arrow(tf)\n+  tab2 <- read_json_arrow(mmap_open(tf))\n+  tab3 <- read_json_arrow(ReadableFile(tf))\n+\n+  expect_equal(tab1, tab2)\n+  expect_equal(tab1, tab3)\n+\n+  expect_equal(\n+    tab1$schema,\n+    schema(hello = float64(), world = boolean(), yo = utf8())\n+  )\n+  tib <- as_tibble(tab1)\n+  expect_equal(tib$hello, c(3.5, 3.25, 3.125, 0))\n+  expect_equal(tib$world, c(FALSE, NA, NA, TRUE))\n+  expect_equal(tib$yo, c(\"thing\", NA, \"\\u5fcd\", NA))\n+\n+  unlink(tf)\n+})\n+\n+test_that(\"Can read json file with nested columns (ARROW-5503)\", {\n+  tf <- tempfile()\n+  writeLines('\n+    { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\", \"arr\": [1, 2, 3], \"nuf\": {} }\n+    { \"hello\": 3.25, \"world\": null, \"arr\": [2], \"nuf\": null }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78 } }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90 } }\n+  ', tf)\n+\n+  tab1 <- read_json_arrow(tf)\n+  tab2 <- read_json_arrow(mmap_open(tf))\n+  tab3 <- read_json_arrow(ReadableFile(tf))\n+\n+  expect_equal(tab1, tab2)\n+  expect_equal(tab1, tab3)\n+\n+  expect_equal(\n+    tab1$schema,\n+    schema(\n+      hello = float64(),\n+      world = boolean(),\n+      yo = utf8(),\n+      arr = list_of(int64()),\n+      nuf = struct(ps = int64())\n+    )\n+  )\n+  # cannot yet test list and struct types in R api\n \n Review comment:\n   `struct()` types needs this https://issues.apache.org/jira/browse/ARROW-2969?filter=12344983\r\n   \r\n   I don't think there is a jira issue for `list` types\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T10:03:55.261+0000",
                    "updated": "2019-06-12T10:03:55.261+0000",
                    "started": "2019-06-12T10:03:55.259+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258582",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/258608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518#issuecomment-500854591\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=h1) Report\n   > Merging [#4518](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/01dcb455c9e89854625322a1f053468f430a039b?src=pr&el=desc) will **decrease** coverage by `12.63%`.\n   > The diff coverage is `97.22%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4518/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4518       +/-   ##\n   ===========================================\n   - Coverage   88.15%   75.51%   -12.64%     \n   ===========================================\n     Files         850       56      -794     \n     Lines      106320     3186   -103134     \n     Branches     1253        0     -1253     \n   ===========================================\n   - Hits        93722     2406    -91316     \n   + Misses      12353      780    -11573     \n   + Partials      245        0      -245\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/arrow\\_types.h](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dfdHlwZXMuaA==) | `88.88% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [r/src/json.cpp](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9zcmMvanNvbi5jcHA=) | `100% <100%> (\u00f8)` | |\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.11% <100%> (+0.51%)` | :arrow_up: |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.23% <100%> (+0.52%)` | :arrow_up: |\n   | [r/R/json.R](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-ci9SL2pzb24uUg==) | `93.75% <93.75%> (\u00f8)` | |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/arrow/csv/chunker-test.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY2h1bmtlci10ZXN0LmNj) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/arrow/array/builder\\_decimal.cc](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RlY2ltYWwuY2M=) | | |\n   | ... and [793 more](https://codecov.io/gh/apache/arrow/pull/4518/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=footer). Last update [01dcb45...0314b6a](https://codecov.io/gh/apache/arrow/pull/4518?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T10:56:03.420+0000",
                    "updated": "2019-06-12T10:56:03.420+0000",
                    "started": "2019-06-12T10:56:03.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258608",
                    "issueId": "13237358"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/worklog/258633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4518: ARROW-5503 [R]: add read_json()\nURL: https://github.com/apache/arrow/pull/4518\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T11:27:42.836+0000",
                    "updated": "2019-06-12T11:27:42.836+0000",
                    "started": "2019-06-12T11:27:42.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258633",
                    "issueId": "13237358"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2e72fcb3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@540e4cc2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16fa2e2f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@30b4086e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fca1d8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@be1edcd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c2d31c8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5ccab75b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bdf2f7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3f543248[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ad2f71b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@13abfb75[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 12 11:27:33 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-12T11:27:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5503/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-03T22:53:40.000+0000",
        "updated": "2019-06-12T11:27:42.000+0000",
        "timeoriginalestimate": null,
        "description": "The C++ library gained a JSON file reader last month, and pyarrow already has bindings for it. R should have it too.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] add read_json()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237358/comment/16862017",
                    "id": "16862017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4518\n[https://github.com/apache/arrow/pull/4518]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-12T11:27:33.876+0000",
                    "updated": "2019-06-12T11:27:33.876+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z03dn4:",
        "customfield_12314139": null
    }
}