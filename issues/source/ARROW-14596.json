{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13410133",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133",
    "key": "ARROW-14596",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12637658",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637658",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13352435",
                    "key": "ARROW-11259",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352435",
                    "fields": {
                        "summary": "[Python] Allow to create field reference to nested field",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12649816",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12649816",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13478887",
                    "key": "ARROW-17540",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478887",
                    "fields": {
                        "summary": "[Python] Can not refer to field in a list of structs ",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
            "name": "milesgranger",
            "key": "JIRAUSER293894",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Miles Granger",
            "active": true,
            "timeZone": "Europe/Oslo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=TomScheffers",
            "name": "TomScheffers",
            "key": "tomscheffers",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
            },
            "displayName": "Tom Scheffers",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=TomScheffers",
            "name": "TomScheffers",
            "key": "tomscheffers",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
            },
            "displayName": "Tom Scheffers",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14596/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/814279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r988670499\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_nested.cc:\n##########\n@@ -242,6 +245,20 @@ struct StructFieldFunctor {\n                                 union_array.GetFlattenedField(index, ctx->memory_pool()));\n           break;\n         }\n+        case Type::LIST: {\n+          const auto& list_array = checked_cast<const ListArray&>(*current);\n+          ARROW_LOG(INFO) << list_array.ToString();\n+          ARROW_ASSIGN_OR_RAISE(\n+              Datum indices,\n+              CallFunction(\"add\", {list_array.offsets()->Slice(\n+                                       0, list_array.offsets()->length() - 1),\n+                                   MakeScalar(index)}));\n+          ARROW_ASSIGN_OR_RAISE(Datum result, CallFunction(\"take\", {list_array.values(),\n\nReview Comment:\n   What this is doing is probably the `list_element` kernel ? (defined just above)\n\n\n\n",
                    "created": "2022-10-06T07:54:24.065+0000",
                    "updated": "2022-10-06T07:54:24.065+0000",
                    "started": "2022-10-06T07:54:24.065+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814279",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/814296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r988740974\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_nested.cc:\n##########\n@@ -242,6 +245,20 @@ struct StructFieldFunctor {\n                                 union_array.GetFlattenedField(index, ctx->memory_pool()));\n           break;\n         }\n+        case Type::LIST: {\n+          const auto& list_array = checked_cast<const ListArray&>(*current);\n+          ARROW_LOG(INFO) << list_array.ToString();\n+          ARROW_ASSIGN_OR_RAISE(\n+              Datum indices,\n+              CallFunction(\"add\", {list_array.offsets()->Slice(\n+                                       0, list_array.offsets()->length() - 1),\n+                                   MakeScalar(index)}));\n+          ARROW_ASSIGN_OR_RAISE(Datum result, CallFunction(\"take\", {list_array.values(),\n\nReview Comment:\n   Wow, sharp eye! That's easier. :eyes: \n\n\n\n",
                    "created": "2022-10-06T08:55:05.070+0000",
                    "updated": "2022-10-06T08:55:05.070+0000",
                    "started": "2022-10-06T08:55:05.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814296",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/814610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#issuecomment-1271411341\n\n   I generally agree with the first two points, although I do like the explicitness of a leading dot.\r\n   \r\n   The third point, it could be a potentially buggy convenience add on. ie.\r\n   ```python\r\n   pa.table({\"a.dotted.field\": [1], \"nested\": [{\"field\": \"value\"]})\r\n   (..., columns=[\"a.dotted.field\", \"nested.field\"])\r\n   ```\r\n   vs explicitly mapping maybe?\r\n   ```python\r\n   (..., columns=[{\"my_dotted_field\": \"a.dotted.field\", \"nested_field\": \"nested.field\"}])\r\n   ```\n\n\n",
                    "created": "2022-10-07T10:24:43.263+0000",
                    "updated": "2022-10-07T10:24:43.263+0000",
                    "started": "2022-10-07T10:24:43.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814610",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/815155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#issuecomment-1273066330\n\n   Updated in https://github.com/apache/arrow/pull/14326/commits/ec7235538eee0ea956bf8f8cf6b378d55b23abd6 to take the last delimited dot path as the column name. But also though to leave any actual column with a dot alone; as if the user has dotted columns, is that up to us to automatically rename? Seems a dotted path gives more leniency in this regard.\n\n\n",
                    "created": "2022-10-10T09:56:50.413+0000",
                    "updated": "2022-10-10T09:56:50.413+0000",
                    "started": "2022-10-10T09:56:50.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815155",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/816904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r995464387\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   I would have expected the field names here to be \"i32\" and \"f64\"? (consistent with the test above) \n\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n\nReview Comment:\n   ```suggestion\r\n                          ProjectionDescr::FromNames({\".struct.i32\", \"nested.right.f64\"},\r\n   ```\r\n   \r\n   (so we cover both with and without leading dot)\n\n\n\n",
                    "created": "2022-10-14T07:59:04.932+0000",
                    "updated": "2022-10-14T07:59:04.932+0000",
                    "started": "2022-10-14T07:59:04.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816904",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/816905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r995465414\n\n\n##########\ncpp/src/arrow/dataset/scanner.cc:\n##########\n@@ -751,7 +751,19 @@ Result<ProjectionDescr> ProjectionDescr::FromNames(std::vector<std::string> name\n                                                    const Schema& dataset_schema) {\n   std::vector<compute::Expression> exprs(names.size());\n   for (size_t i = 0; i < exprs.size(); ++i) {\n-    exprs[i] = compute::field_ref(names[i]);\n+    // If name isn't in schema, try finding it by dotted path.\n+    if (dataset_schema.GetFieldByName(names[i]) == nullptr) {\n+      auto name = names[i];\n+      if (name.rfind(\".\", 0) != 0) {\n+        name = \".\" + name;\n+      }\n+      ARROW_ASSIGN_OR_RAISE(auto field_ref, FieldRef::FromDotPath(name));\n+      // safe as we know there is at least 1 dot.\n+      names[i] = name.substr(name.rfind(\".\") + 1);\n+      exprs[i] = compute::field_ref(field_ref);\n\nReview Comment:\n   `field_ref` is already a FieldRef, so is it needed to call the `compute::field_ref(..)` again?\n\n\n\n",
                    "created": "2022-10-14T07:59:49.590+0000",
                    "updated": "2022-10-14T07:59:49.590+0000",
                    "started": "2022-10-14T07:59:49.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816905",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/817746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r997315906\n\n\n##########\npython/pyarrow/tests/test_dataset.py:\n##########\n@@ -4787,3 +4787,31 @@ def test_write_dataset_with_scanner_use_projected_schema(tempdir):\n         ds.write_dataset(\n             scanner, tempdir, partitioning=[\"original_column\"], format=\"ipc\"\n         )\n+\n+\n+@pytest.mark.parametrize(\"format\", (\"ipc\", \"parquet\"))\n+def test_read_table_nested_columns(tempdir, format):\n+    if format == \"parquet\":\n+        pytest.importorskip(\"pyarrow.parquet\")\n+\n+    table = pa.table({\"user_id\": [\"abc123\", \"qrs456\"],\n+                      \"a.dotted.field\": [1, 2],\n+                      \"interaction\": [\n+        {\"type\": \"click\", \"element\": \"button\",\n+         \"values\": [1, 2], \"structs\":[{\"foo\": \"bar\"}]},\n+        {\"type\": \"scroll\", \"element\": \"window\",\n+         \"values\": [3, 4], \"structs\":[{\"fizz\": \"buzz\"}]}\n+    ]})\n\nReview Comment:\n   Is it worth adding nulls at various levels to ensure they come out right?\n\n\n\n",
                    "created": "2022-10-17T17:10:25.172+0000",
                    "updated": "2022-10-17T17:10:25.172+0000",
                    "started": "2022-10-17T17:10:25.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "817746",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/817774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r997391097\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   Ya...we do the field name renaming on python, and then in C++ it's left with whatever the dotted path was. Do you think we should move the field renaming into C++ instead?\n\n\n\n##########\ncpp/src/arrow/dataset/scanner.cc:\n##########\n@@ -751,7 +751,19 @@ Result<ProjectionDescr> ProjectionDescr::FromNames(std::vector<std::string> name\n                                                    const Schema& dataset_schema) {\n   std::vector<compute::Expression> exprs(names.size());\n   for (size_t i = 0; i < exprs.size(); ++i) {\n-    exprs[i] = compute::field_ref(names[i]);\n+    // If name isn't in schema, try finding it by dotted path.\n+    if (dataset_schema.GetFieldByName(names[i]) == nullptr) {\n+      auto name = names[i];\n+      if (name.rfind(\".\", 0) != 0) {\n+        name = \".\" + name;\n+      }\n+      ARROW_ASSIGN_OR_RAISE(auto field_ref, FieldRef::FromDotPath(name));\n+      // safe as we know there is at least 1 dot.\n+      names[i] = name.substr(name.rfind(\".\") + 1);\n+      exprs[i] = compute::field_ref(field_ref);\n\nReview Comment:\n   That's true, except `compute::field_ref` returns an `Expression` from a `FieldRef`'; which is the vector type of `exprs`.\n\n\n\n",
                    "created": "2022-10-17T18:38:22.751+0000",
                    "updated": "2022-10-17T18:38:22.751+0000",
                    "started": "2022-10-17T18:38:22.751+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "817774",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/817994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r998212310\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   But the name gets set in `ProjectionDescr::FromNames`, no? (this PR is currently not touching any python, except for a test)\n\n\n\n",
                    "created": "2022-10-18T13:21:07.727+0000",
                    "updated": "2022-10-18T13:21:07.727+0000",
                    "started": "2022-10-18T13:21:07.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "817994",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/817995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#issuecomment-1282378255\n\n   > Parquet is still materializing the entire column, correct?\r\n   \r\n   Yes, for that I opened https://issues.apache.org/jira/browse/ARROW-17959\n\n\n",
                    "created": "2022-10-18T13:21:44.579+0000",
                    "updated": "2022-10-18T13:21:44.579+0000",
                    "started": "2022-10-18T13:21:44.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "817995",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r998230262\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   Ah of course, mind was reverting to the first iteration of this PR. :sweat_smile: \n\n\n\n",
                    "created": "2022-10-18T13:32:08.762+0000",
                    "updated": "2022-10-18T13:32:08.762+0000",
                    "started": "2022-10-18T13:32:08.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818001",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818006",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r998254596\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   But so how did the tests pass before the latest change as well? It's not actually verifying the expected schema?\n\n\n\n",
                    "created": "2022-10-18T13:46:20.102+0000",
                    "updated": "2022-10-18T13:46:20.102+0000",
                    "started": "2022-10-18T13:46:20.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818006",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r998265046\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   Peeking around at it now, it doesn't seem so. More checking values; will look more and maybe see if I could get it to actually compare them.\n\n\n\n",
                    "created": "2022-10-18T13:53:10.742+0000",
                    "updated": "2022-10-18T13:53:10.742+0000",
                    "started": "2022-10-18T13:53:10.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818008",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r998291679\n\n\n##########\ncpp/src/arrow/dataset/scanner_test.cc:\n##########\n@@ -1074,6 +1074,24 @@ TEST_P(TestScanner, ProjectedScanNested) {\n   AssertScanBatchesUnorderedEqualRepetitionsOf(MakeScanner(batch_in), batch_out);\n }\n \n+TEST_P(TestScanner, ProjectedScanNestedFromNames) {\n+  SetSchema({\n+      field(\"struct\", struct_({field(\"i32\", int32()), field(\"f64\", float64())})),\n+      field(\"nested\", struct_({field(\"left\", int32()),\n+                               field(\"right\", struct_({field(\"i32\", int32()),\n+                                                       field(\"f64\", float64())}))})),\n+  });\n+  ASSERT_OK_AND_ASSIGN(auto descr,\n+                       ProjectionDescr::FromNames({\"struct.i32\", \"nested.right.f64\"},\n+                                                  *options_->dataset_schema))\n+  SetProjection(options_.get(), std::move(descr));\n+  auto batch_in = ConstantArrayGenerator::Zeroes(GetParam().items_per_batch, schema_);\n+  auto batch_out = ConstantArrayGenerator::Zeroes(\n+      GetParam().items_per_batch,\n+      schema({field(\"struct.i32\", int32()), field(\"nested.right.f64\", float64())}));\n\nReview Comment:\n   Found and fixed in https://github.com/apache/arrow/pull/14326/commits/ae5b01d2ce7c67fba5fc17028e6230fb550d2535, verified it'll fail with different field names. All other tests continued to pass locally, so didn't bother to propagate the `check_metadata` parameter up further from `AssertBatchEquals`.\n\n\n\n",
                    "created": "2022-10-18T14:13:31.874+0000",
                    "updated": "2022-10-18T14:13:31.874+0000",
                    "started": "2022-10-18T14:13:31.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818014",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r998421185\n\n\n##########\ncpp/src/arrow/dataset/test_util.h:\n##########\n@@ -157,7 +157,7 @@ class DatasetFixtureMixin : public ::testing::Test {\n     std::shared_ptr<RecordBatch> lhs;\n     ASSERT_OK(expected->ReadNext(&lhs));\n     EXPECT_NE(lhs, nullptr);\n-    AssertBatchesEqual(*lhs, batch);\n+    AssertBatchesEqual(*lhs, batch, true);\n\nReview Comment:\n   This feels as a bug to me that this is needed, since that flag is about checking schema _metadata_, not about checking the schema itself. I opened https://issues.apache.org/jira/browse/ARROW-18087 (we can probably handle this in a follow-up)\n\n\n\n",
                    "created": "2022-10-18T15:49:59.732+0000",
                    "updated": "2022-10-18T15:49:59.732+0000",
                    "started": "2022-10-18T15:49:59.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818055",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r999079707\n\n\n##########\ncpp/src/arrow/dataset/test_util.h:\n##########\n@@ -157,7 +157,7 @@ class DatasetFixtureMixin : public ::testing::Test {\n     std::shared_ptr<RecordBatch> lhs;\n     ASSERT_OK(expected->ReadNext(&lhs));\n     EXPECT_NE(lhs, nullptr);\n-    AssertBatchesEqual(*lhs, batch);\n+    AssertBatchesEqual(*lhs, batch, true);\n\nReview Comment:\n   I can remove this then?\n\n\n\n",
                    "created": "2022-10-19T08:02:53.650+0000",
                    "updated": "2022-10-19T08:02:53.650+0000",
                    "started": "2022-10-19T08:02:53.649+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818352",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#discussion_r1000248546\n\n\n##########\ncpp/src/arrow/dataset/test_util.h:\n##########\n@@ -157,7 +157,7 @@ class DatasetFixtureMixin : public ::testing::Test {\n     std::shared_ptr<RecordBatch> lhs;\n     ASSERT_OK(expected->ReadNext(&lhs));\n     EXPECT_NE(lhs, nullptr);\n-    AssertBatchesEqual(*lhs, batch);\n+    AssertBatchesEqual(*lhs, batch, true);\n\nReview Comment:\n   Not yet until https://github.com/apache/arrow/pull/14451 is merged. But will merge this one, and then remove it in the other PR.\n\n\n\n",
                    "created": "2022-10-20T07:34:00.313+0000",
                    "updated": "2022-10-20T07:34:00.313+0000",
                    "started": "2022-10-20T07:34:00.313+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818704",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche merged PR #14326:\nURL: https://github.com/apache/arrow/pull/14326\n\n\n",
                    "created": "2022-10-20T07:35:10.946+0000",
                    "updated": "2022-10-20T07:35:10.946+0000",
                    "started": "2022-10-20T07:35:10.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818705",
                    "issueId": "13410133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/worklog/818706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14326:\nURL: https://github.com/apache/arrow/pull/14326#issuecomment-1285077480\n\n   Thanks!\n\n\n",
                    "created": "2022-10-20T07:35:40.233+0000",
                    "updated": "2022-10-20T07:35:40.233+0000",
                    "started": "2022-10-20T07:35:40.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "818706",
                    "issueId": "13410133"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@291386b1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45094e67[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d94d5d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@12e1ca73[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@658a49e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@725901bc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49586072[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@55768978[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62840f6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@586aa660[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52bb06ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@33e76889[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Apr 22 12:59:16 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14596/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-11-04T20:35:54.000+0000",
        "updated": "2022-10-20T07:35:40.000+0000",
        "timeoriginalestimate": null,
        "description": "Reading nested field does not work with\u00a0use_legacy_dataset=False.\r\n\r\nThis works:\r\n\r\n\u00a0\r\n{code:java}\r\nimport pyarrow.parquet as pq\r\nt = pq.read_table(\r\n source=*filename*,\r\n columns=['store_key', 'properties.country'], \r\n use_legacy_dataset=True,\r\n).to_pandas()\r\n{code}\r\nThis does not work (for the same parquet file):\r\n\r\n\u00a0\r\n{code:java}\r\nimport pyarrow.parquet as pq\r\n\r\nt = pq.read_table(\r\n source=*filename*,\r\n columns=['store_key', 'properties.country'], \r\n use_legacy_dataset=False,\r\n).to_pandas(){code}\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] parquet.read_table nested fields in columns does not work for use_legacy_dataset=False",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/comment/17441214",
                    "id": "17441214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~TomScheffers] that's indeed a current limitation of the new implementation. There is work underway to enable this (the basic feature was just merged for C++ (ARROW-13987), now it still has to be exposed in python (ARROW-11259)), and hopefully this will be possible in the next version 7.0.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-11-09T15:11:34.073+0000",
                    "updated": "2021-11-09T15:11:34.073+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/comment/17525981",
                    "id": "17525981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Postponing to 9.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-04-21T18:49:59.385+0000",
                    "updated": "2022-04-21T18:49:59.385+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410133/comment/17526407",
                    "id": "17526407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "I would like to add observations we got today when pairing with [~jorisvandenbossche] on this topic.\r\n\r\nFirst was the result of using {{pq.read_table}} with legacy implementation vs using {{ds.dataset}} with column projection. The data can get selected correctly with the dataset implementation but what happens is that the structure of a nested field is not kept (from struct it is flattened to string column). In case of using columns selection with a list in \u00a0{{{}ds.dataset{}}}, it errors, as reported in the issue.\r\n{code:python}\r\n>>> import pandas as pd\r\n>>> import pyarrow as pa\r\n>>> import pyarrow.parquet as pq\r\n>>> \r\n>>> df = pd.DataFrame({\r\n...     'user_id': ['abc123', 'qrs456'],\r\n...     'interaction': [{'type': 'click', 'element': 'button'}, {'type':'scroll', 'element': 'window'}]\r\n... })\r\n>>> \r\n>>> table = pa.Table.from_pandas(df)\r\n>>> pq.write_table(table, 'example.parquet')\r\n{code}\r\n{code:python}\r\n>>> pq.read_table('example.parquet', columns = ['user_id', 'interaction.type'], use_legacy_dataset = True)\r\npyarrow.Table\r\nuser_id: string\r\ninteraction: struct<type: string>\r\n  child 0, type: string\r\n----\r\nuser_id: [[\"abc123\",\"qrs456\"]]\r\ninteraction: [\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n[\"click\",\"scroll\"]]\r\n{code}\r\n{code:python}\r\n>>> import pyarrow.dataset as ds\r\n>>> projection = {\r\n...         'user_id': ds.field('user_id'),\r\n...         'new': ds.field(('interaction', 'type'))\r\n...     }\r\n>>> ds.dataset('example.parquet').to_table(columns=projection)\r\npyarrow.Table\r\nuser_id: string\r\nnew: string\r\n----\r\nuser_id: [[\"abc123\",\"qrs456\"]]\r\nnew: [[\"click\",\"scroll\"]]\r\n{code}\r\n{code:python}\r\n>>> ds.dataset('example.parquet').to_table(columns=['user_id', 'interaction.type'])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/_dataset.pyx\", line 303, in pyarrow._dataset.Dataset.to_table\r\n    return self.scanner(**kwargs).to_table()\r\n  File \"pyarrow/_dataset.pyx\", line 270, in pyarrow._dataset.Dataset.scanner\r\n    return Scanner.from_dataset(self, **kwargs)\r\n  File \"pyarrow/_dataset.pyx\", line 2322, in pyarrow._dataset.Scanner.from_dataset\r\n    _populate_builder(builder, columns=columns, filter=filter,\r\n  File \"pyarrow/_dataset.pyx\", line 2168, in pyarrow._dataset._populate_builder\r\n    check_status(builder.ProjectColumns([tobytes(c) for c in columns]))\r\n  File \"pyarrow/error.pxi\", line 100, in pyarrow.lib.check_status\r\n    raise ArrowInvalid(message)\r\npyarrow.lib.ArrowInvalid: No match for FieldRef.Name(interaction.type) in user_id: string\r\ninteraction: struct<element: string, type: string>\r\n__fragment_index: int32\r\n__batch_index: int32\r\n__last_in_fragment: bool\r\n__filename: string\r\n/Users/alenkafrim/repos/arrow/cpp/src/arrow/type.h:1722  CheckNonEmpty(matches, root)\r\n/Users/alenkafrim/repos/arrow/cpp/src/arrow/type.h:1757  FindOne(root)\r\n/Users/alenkafrim/repos/arrow/cpp/src/arrow/dataset/scanner.cc:714  ref->GetOne(dataset_schema)\r\n/Users/alenkafrim/repos/arrow/cpp/src/arrow/dataset/scanner.cc:784  ProjectionDescr::FromNames(std::move(columns), *scan_options_->dataset_schema)\r\n{code}\r\nWhen Scanner object is being created from the dataset class via {{to_table}} and (through _populate_builder) and in the case of a list of columns the {{ProjectColumns}} method (\"arrow::dataset::ScannerBuilder\") is being called it only accepts string column names and errors when a column is a struct.\r\n\r\nWe were thinking if it would be a good idea to add a new method in {{scanner.cc}} that would mimic {{FromNames}} method but takes {{field_ref}} as an argument? Afterwords there would also be a need to recreate a struct field for which we are not sure how to approach.\r\n\r\ncc [~westonpace] [~apitrou] do you think that would be a correct way to go?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2022-04-22T12:59:16.326+0000",
                    "updated": "2022-04-22T12:59:16.326+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wgh4:",
        "customfield_12314139": null
    }
}