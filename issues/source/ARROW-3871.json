{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13200378",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378",
    "key": "ARROW-3871",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3871/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172202",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103\n \n \n   To get rid of `GetValuesSafely` I've had to add variants of `ArrayData.GetValues<>` that take and `offset` as a parameter, this is useful e.g. for boolean arrays or string arrays. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T09:38:09.024+0000",
                    "updated": "2018-12-05T09:38:09.024+0000",
                    "started": "2018-12-05T09:38:09.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172202",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#discussion_r239109938\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t offset_) const {\n \n Review comment:\n   @pitrou since this function can be used to access any of the buffers, the \"GetValues\" name could be misleading. Perhaps `GetBufferAs<T>(i)` or something?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:24:37.409+0000",
                    "updated": "2018-12-05T15:24:37.409+0000",
                    "started": "2018-12-05T15:24:37.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172316",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#discussion_r239108767\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t offset_) const {\n     if (buffers[i]) {\n-      return reinterpret_cast<const T*>(buffers[i]->data()) + offset;\n+      return reinterpret_cast<const T*>(buffers[i]->data()) + offset_;\n     } else {\n       return NULLPTR;\n     }\n   }\n \n+  template <typename T>\n+  inline const T* GetValues(int i) const {\n+    return GetValues<T>(i, offset);\n+  }\n+\n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline T* GetMutableValues(int i) {\n+  inline T* GetMutableValues(int i, int64_t offset_) {\n \n Review comment:\n   same\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:24:37.419+0000",
                    "updated": "2018-12-05T15:24:37.419+0000",
                    "started": "2018-12-05T15:24:37.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172317",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#discussion_r239108706\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t offset_) const {\n \n Review comment:\n   The `foo_` naming is reserved for class members\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:24:37.428+0000",
                    "updated": "2018-12-05T15:24:37.428+0000",
                    "started": "2018-12-05T15:24:37.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172318",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#discussion_r239110547\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t offset_) const {\n \n Review comment:\n   Perhaps `GetBufferValues`? But that's starting to feel a bit verbose, especially the mutable version :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:25:50.897+0000",
                    "updated": "2018-12-05T15:25:50.897+0000",
                    "started": "2018-12-05T15:25:50.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172320",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#discussion_r239110707\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t offset_) const {\n \n Review comment:\n   (personally I'm fine with GetValues, btw)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:26:10.619+0000",
                    "updated": "2018-12-05T15:26:10.619+0000",
                    "started": "2018-12-05T15:26:10.618+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172321",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#discussion_r239110984\n \n \n\n ##########\n File path: cpp/src/arrow/array.h\n ##########\n @@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t offset_) const {\n \n Review comment:\n   Yeah, I think it's OK, especially as this is an internal developer API\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:26:49.564+0000",
                    "updated": "2018-12-05T15:26:49.564+0000",
                    "started": "2018-12-05T15:26:49.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172322",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#issuecomment-444533507\n \n \n   Now the `offset` parameter shadows the `offset` struct member. Maybe call it \"absolute_offset\" so it is clear that the `ArrayData::offset` member is not used?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:48:49.627+0000",
                    "updated": "2018-12-05T15:48:49.627+0000",
                    "started": "2018-12-05T15:48:49.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172331",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103#issuecomment-444559095\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=h1) Report\n   > Merging [#3103](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2f4af266baca7e35497a0323cfb612a9549f725a?src=pr&el=desc) will **increase** coverage by `1.11%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3103/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3103      +/-   ##\n   ==========================================\n   + Coverage   87.04%   88.15%   +1.11%     \n   ==========================================\n     Files         492      434      -58     \n     Lines       69104    65343    -3761     \n   ==========================================\n   - Hits        60153    57605    -2548     \n   + Misses       8850     7738    -1112     \n   + Partials      101        0     -101\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/array.h](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS5o) | `98.42% <100%> (+0.05%)` | :arrow_up: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `72.03% <0%> (-0.95%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | ... and [50 more](https://codecov.io/gh/apache/arrow/pull/3103/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=footer). Last update [2f4af26...bcb1082](https://codecov.io/gh/apache/arrow/pull/3103?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T16:54:57.004+0000",
                    "updated": "2018-12-05T16:54:57.004+0000",
                    "started": "2018-12-05T16:54:57.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172384",
                    "issueId": "13200378"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/worklog/172394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3103: ARROW-3871: [R] Replace usages of C++ GetValuesSafely with new methods on ArrayData\nURL: https://github.com/apache/arrow/pull/3103\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex 0274c15f74..467da16ad0 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -170,24 +170,34 @@ struct ARROW_EXPORT ArrayData {\n \n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline const T* GetValues(int i) const {\n+  inline const T* GetValues(int i, int64_t absolute_offset) const {\n     if (buffers[i]) {\n-      return reinterpret_cast<const T*>(buffers[i]->data()) + offset;\n+      return reinterpret_cast<const T*>(buffers[i]->data()) + absolute_offset;\n     } else {\n       return NULLPTR;\n     }\n   }\n \n+  template <typename T>\n+  inline const T* GetValues(int i) const {\n+    return GetValues<T>(i, offset);\n+  }\n+\n   // Access a buffer's data as a typed C pointer\n   template <typename T>\n-  inline T* GetMutableValues(int i) {\n+  inline T* GetMutableValues(int i, int64_t absolute_offset) {\n     if (buffers[i]) {\n-      return reinterpret_cast<T*>(buffers[i]->mutable_data()) + offset;\n+      return reinterpret_cast<T*>(buffers[i]->mutable_data()) + absolute_offset;\n     } else {\n       return NULLPTR;\n     }\n   }\n \n+  template <typename T>\n+  inline T* GetMutableValues(int i) {\n+    return GetMutableValues<T>(i, offset);\n+  }\n+\n   std::shared_ptr<DataType> type;\n   int64_t length;\n   int64_t null_count;\ndiff --git a/r/src/array.cpp b/r/src/array.cpp\nindex 038d7862f4..901f2b69be 100644\n--- a/r/src/array.cpp\n+++ b/r/src/array.cpp\n@@ -534,7 +534,7 @@ struct Converter_SimpleArray {\n     if (n == null_count) {\n       std::fill_n(data.begin() + start, n, default_value<RTYPE>());\n     } else {\n-      auto p_values = GetValuesSafely<value_type>(array->data(), 1, array->offset());\n+      auto p_values = array->data()->GetValues<value_type>(1);\n       STOP_IF_NULL(p_values);\n \n       // first copy all the data\n@@ -566,9 +566,9 @@ struct Converter_String {\n     if (null_count == n) {\n       std::fill_n(data.begin(), n, NA_STRING);\n     } else {\n-      auto p_offset = GetValuesSafely<int32_t>(array->data(), 1, array->offset());\n+      auto p_offset = array->data()->GetValues<int32_t>(1);\n       STOP_IF_NULL(p_offset);\n-      auto p_data = GetValuesSafely<char>(array->data(), 2, *p_offset);\n+      auto p_data = array->data()->GetValues<char>(2, *p_offset);\n       if (!p_data) {\n         // There is an offset buffer, but the data buffer is null\n         // There is at least one value in the array and not all the values are null\n@@ -615,7 +615,7 @@ struct Converter_Boolean {\n       std::fill_n(data.begin() + start, n, NA_LOGICAL);\n     } else {\n       // process the data\n-      auto p_data = GetValuesSafely<uint8_t>(array->data(), 1, 0);\n+      auto p_data = array->data()->GetValues<uint8_t>(1, 0);\n       STOP_IF_NULL(p_data);\n \n       arrow::internal::BitmapReader data_reader(p_data, array->offset(), n);\n@@ -661,7 +661,7 @@ struct Converter_Dictionary_Int32Indices {\n       std::fill_n(data.begin() + start, n, NA_INTEGER);\n     } else {\n       std::shared_ptr<Array> indices = dict_array->indices();\n-      auto p_array = GetValuesSafely<value_type>(indices->data(), 1, indices->offset());\n+      auto p_array = indices->data()->GetValues<value_type>(1);\n       STOP_IF_NULL(p_array);\n \n       if (array->null_count()) {\n@@ -692,7 +692,7 @@ struct Converter_Date64 {\n     if (null_count == n) {\n       std::fill_n(data.begin() + start, n, NA_REAL);\n     } else {\n-      auto p_values = GetValuesSafely<int64_t>(array->data(), 1, array->offset());\n+      auto p_values = array->data()->GetValues<int64_t>(1);\n       STOP_IF_NULL(p_values);\n       auto p_vec = data.begin() + start;\n \n@@ -726,7 +726,7 @@ struct Converter_Promotion {\n     if (null_count == n) {\n       std::fill_n(data.begin() + start, n, default_value<RTYPE>());\n     } else {\n-      auto p_values = GetValuesSafely<value_type>(array->data(), 1, array->offset());\n+      auto p_values = array->data()->GetValues<value_type>(1);\n       STOP_IF_NULL(p_values);\n \n       auto value_convert = [](value_type value) {\n@@ -766,7 +766,7 @@ struct Converter_Time {\n     if (n == null_count) {\n       std::fill_n(data.begin() + start, n, NA_REAL);\n     } else {\n-      auto p_values = GetValuesSafely<value_type>(array->data(), 1, array->offset());\n+      auto p_values = array->data()->GetValues<value_type>(1);\n       STOP_IF_NULL(p_values);\n       auto p_vec = data.begin() + start;\n       auto convert = [this](value_type value) {\n@@ -803,7 +803,7 @@ struct Converter_Int64 {\n     if (null_count == n) {\n       std::fill_n(reinterpret_cast<int64_t*>(data.begin()) + start, n, NA_INT64);\n     } else {\n-      auto p_values = GetValuesSafely<int64_t>(array->data(), 1, array->offset());\n+      auto p_values = array->data()->GetValues<int64_t>(1);\n       STOP_IF_NULL(p_values);\n       auto p_vec = reinterpret_cast<int64_t*>(data.begin()) + start;\n \ndiff --git a/r/src/arrow_types.h b/r/src/arrow_types.h\nindex 9ebc558d0d..dba7a91c21 100644\n--- a/r/src/arrow_types.h\n+++ b/r/src/arrow_types.h\n@@ -173,17 +173,6 @@ std::shared_ptr<arrow::RecordBatch> RecordBatch__from_dataframe(Rcpp::DataFrame\n namespace arrow {\n namespace r {\n \n-template <typename T>\n-inline const T* GetValuesSafely(const std::shared_ptr<ArrayData>& data, int i,\n-                                int64_t offset) {\n-  auto buffer = data->buffers[i];\n-  if (!buffer) {\n-    return nullptr;\n-  } else {\n-    return reinterpret_cast<const T*>(buffer->data()) + offset;\n-  }\n-}\n-\n template <int RTYPE, typename Vec = Rcpp::Vector<RTYPE>>\n class RBuffer : public MutableBuffer {\n  public:\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T17:07:51.851+0000",
                    "updated": "2018-12-05T17:07:51.851+0000",
                    "started": "2018-12-05T17:07:51.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172394",
                    "issueId": "13200378"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@34b25a11[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e252f1f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48cccd7c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7fa65ead[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58747f24[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@75d26fd4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bdbfb3f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@164595df[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6db3556c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b792bc1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fff3b92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@35aebcdf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 05 17:07:39 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-05T17:07:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3871/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-24T19:46:27.000+0000",
        "updated": "2018-12-05T17:07:51.000+0000",
        "timeoriginalestimate": null,
        "description": "See https://github.com/apache/arrow/blob/master/cpp/src/arrow/array.h#L173",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Replace usages of C++ GetValuesSafely with new methods on ArrayData",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200378/comment/16710355",
                    "id": "16710355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3103\n[https://github.com/apache/arrow/pull/3103]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-05T17:07:39.350+0000",
                    "updated": "2018-12-05T17:07:39.350+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00tw0:",
        "customfield_12314139": null
    }
}