{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13337679",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679",
    "key": "ARROW-10413",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=carols10cents",
            "name": "carols10cents",
            "key": "carols10cents",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=carols10cents&avatarId=44235",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=carols10cents&avatarId=44235",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=carols10cents&avatarId=44235",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=carols10cents&avatarId=44235"
            },
            "displayName": "Carol Nichols",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=carols10cents",
            "name": "carols10cents",
            "key": "carols10cents",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=carols10cents&avatarId=44235",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=carols10cents&avatarId=44235",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=carols10cents&avatarId=44235",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=carols10cents&avatarId=44235"
            },
            "displayName": "Carol Nichols",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=carols10cents",
            "name": "carols10cents",
            "key": "carols10cents",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=carols10cents&avatarId=44235",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=carols10cents&avatarId=44235",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=carols10cents&avatarId=44235",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=carols10cents&avatarId=44235"
            },
            "displayName": "Carol Nichols",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10413/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/505738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#issuecomment-717972605\n\n\n   https://issues.apache.org/jira/browse/ARROW-10413\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T14:31:24.348+0000",
                    "updated": "2020-10-28T14:31:24.348+0000",
                    "started": "2020-10-28T14:31:24.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505738",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/505922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#issuecomment-718217382\n\n\n   @carols10cents this needs a rebase :( I had to fix failing tests on the parquet branch before merging it, so there's now a conflict\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T21:24:24.339+0000",
                    "updated": "2020-10-28T21:24:24.339+0000",
                    "started": "2020-10-28T21:24:24.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505922",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r513917668\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -209,6 +209,61 @@ impl ArrayData {\n     }\n }\n \n+impl PartialEq for ArrayData {\n+    fn eq(&self, other: &Self) -> bool {\n+        assert_eq!(\n+            self.data_type(),\n+            other.data_type(),\n+            \"Data types not the same\"\n+        );\n+        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n+        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n+        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n+        assert_eq!(self.null_count(), other.null_count());\n\nReview comment:\n       why are these asserts instead of equalities? Doesn't this panic?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T03:28:17.776+0000",
                    "updated": "2020-10-29T03:28:17.776+0000",
                    "started": "2020-10-29T03:28:17.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506031",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506041",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r513933731\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -209,6 +209,61 @@ impl ArrayData {\n     }\n }\n \n+impl PartialEq for ArrayData {\n+    fn eq(&self, other: &Self) -> bool {\n+        assert_eq!(\n+            self.data_type(),\n+            other.data_type(),\n+            \"Data types not the same\"\n+        );\n+        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n+        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n+        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n+        assert_eq!(self.null_count(), other.null_count());\n+        // compare buffers excluding padding\n+        let self_buffers = self.buffers();\n+        let other_buffers = other.buffers();\n+        assert_eq!(self_buffers.len(), other_buffers.len());\n+        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n+            compare_buffer_regions(\n+                s,\n+                self.offset(), // TODO mul by data length\n+                o,\n+                other.offset(), // TODO mul by data len\n+            );\n+        });\n+        // assert_eq!(self.buffers(), other.buffers());\n+\n+        assert_eq!(self.child_data(), other.child_data());\n+        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+        if self.null_count() != 0 || other.null_count() != 0 {\n+            compare_buffer_regions(\n+                self.null_buffer().unwrap(),\n+                self.offset(),\n+                other.null_buffer().unwrap(),\n+                other.offset(),\n+            )\n+        }\n\nReview comment:\n       I can't understand this part of the code. \r\n   \r\n   1. why are these asserts instead of equalities? Doesn't this panic? on the comparison?\r\n   2. why do we only compare buffers when there are no nulls? What about the other cases?\r\n   \r\n   I am trying to understand the goal here: IMO there are two equalities that we can do to the `ArrayData`: a \"physical equality\" and a \"logical equality\".\r\n   \r\n   The physical equality compares the data (in bytes) on the `ArrayData`, and two arrays are equal when that data is equal. For example, two `ArrayData` with 1 buffer each and a null bitmap of the form:\r\n   \r\n   ```\r\n   # (buffer, null_bit_as_bools)\r\n   a = ([1, 2], [true, false])\r\n   b = ([1, 0], [true, false])\r\n   ```\r\n   \r\n   are different under this equality because their data is different.\r\n   \r\n   Logical equality interprets the data on the `ArrayData` according to the spec and performs a comparison accordingly. In the example above, the two arrays are equal because the `2` and `0` become undefined due to the null bit.\r\n   \r\n   Is this code trying to achieve the former equality, or the latter? If it is the former, then:\r\n   * it needs to take into account that buffer equality for the null bitmap and boolean arrays is different and\r\n   * the condition `if self.null_count() != 0 || other.null_count() != 0` should not be there as this is a physical comparison that ignores null counts.\r\n   \r\n   If it is trying to achieve logical equality, then it has a lot of issues as buffer and child equality are not that simple.\r\n   \r\n   Coincidentally, I have been looking at the logical comparison of `ArrayData` as part of #8541 .\n\n##########\nFile path: rust/parquet/Cargo.toml\n##########\n@@ -40,6 +40,7 @@ zstd = { version = \"0.5\", optional = true }\n chrono = \"0.4\"\n num-bigint = \"0.3\"\n arrow = { path = \"../arrow\", version = \"3.0.0-SNAPSHOT\", optional = true }\n+base64 = { version = \"*\", optional = true }\n\nReview comment:\n       shouldn't we bracket this, to avoid backward incompatibilities if `base64` releases a major version?\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -1194,6 +1372,17 @@ mod tests {\n             });\n     }\n \n+    #[test]\n+    #[should_panic(expected = \"Parquet does not support writing empty structs\")]\n+    fn test_empty_struct_field() {\n+        let arrow_fields = vec![Field::new(\"struct\", DataType::Struct(vec![]), false)];\n+        let arrow_schema = Schema::new(arrow_fields);\n+        let converted_arrow_schema = arrow_to_parquet_schema(&arrow_schema);\n+\n+        assert!(converted_arrow_schema.is_err());\n+        converted_arrow_schema.unwrap();\n+    }\n\nReview comment:\n       Instead of `should_panic`, could we test the error type and message? `should_panic` is generally reserved to catch panics, not to raise the panic in the test itself.\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -267,9 +444,6 @@ fn arrow_to_parquet_type(field: &Field) -> Result<Type> {\n             let dict_field = Field::new(name, *value.clone(), field.is_nullable());\n             arrow_to_parquet_type(&dict_field)\n         }\n-        DataType::LargeUtf8 | DataType::LargeBinary | DataType::LargeList(_) => {\n-            Err(ArrowError(\"Large arrays not supported\".to_string()))\n-        }\n\nReview comment:\n       \u2764\ufe0f \n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -200,8 +200,7 @@ pub fn can_cast_types(from_type: &DataType, to_type: &DataType) -> bool {\n         (Timestamp(_, _), Date32(_)) => true,\n         (Timestamp(_, _), Date64(_)) => true,\n         // date64 to timestamp might not make sense,\n-\n-        // end temporal casts\n+        (Null, Int32) => true,\n\nReview comment:\n       Shouldn't we support (literally) all types?\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -2646,11 +2651,25 @@ mod tests {\n \n         // Cast to a dictionary (same value type, Utf8)\n         let cast_type = Dictionary(Box::new(UInt8), Box::new(Utf8));\n-        let cast_array = cast(&array, &cast_type).expect(\"cast succeeded\");\n+        let cast_array = cast(&array, &cast_type).expect(\"cast failed\");\n         assert_eq!(cast_array.data_type(), &cast_type);\n         assert_eq!(array_to_strings(&cast_array), expected);\n     }\n \n+    #[test]\n+    fn test_cast_null_array_to_int32() {\n+        let array = Arc::new(NullArray::new(6)) as ArrayRef;\n+\n+        let expected = Int32Array::from(vec![None; 6]);\n+\n+        // Cast to a dictionary (same value type, Utf8)\n\nReview comment:\n       ```suggestion\r\n           // Cast to a int32\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T04:06:25.625+0000",
                    "updated": "2020-10-29T04:06:25.625+0000",
                    "started": "2020-10-29T04:06:25.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506041",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r513983198\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -209,6 +209,61 @@ impl ArrayData {\n     }\n }\n \n+impl PartialEq for ArrayData {\n+    fn eq(&self, other: &Self) -> bool {\n+        assert_eq!(\n+            self.data_type(),\n+            other.data_type(),\n+            \"Data types not the same\"\n+        );\n+        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n+        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n+        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n+        assert_eq!(self.null_count(), other.null_count());\n+        // compare buffers excluding padding\n+        let self_buffers = self.buffers();\n+        let other_buffers = other.buffers();\n+        assert_eq!(self_buffers.len(), other_buffers.len());\n+        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n+            compare_buffer_regions(\n+                s,\n+                self.offset(), // TODO mul by data length\n+                o,\n+                other.offset(), // TODO mul by data len\n+            );\n+        });\n+        // assert_eq!(self.buffers(), other.buffers());\n+\n+        assert_eq!(self.child_data(), other.child_data());\n+        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+        if self.null_count() != 0 || other.null_count() != 0 {\n+            compare_buffer_regions(\n+                self.null_buffer().unwrap(),\n+                self.offset(),\n+                other.null_buffer().unwrap(),\n+                other.offset(),\n+            )\n+        }\n\nReview comment:\n       Hi @jorgecarleitao I introduced these changes in #8200 because we were failing on integration tests where:\r\n   \r\n   * We create an Arrow array which has no nulls from JSON, and don't allocate a null buffer (as it's optional http://arrow.apache.org/docs/format/Columnar.html#validity-bitmaps)\r\n   * When reading IPC files & streams, the C++ always has the null buffer allocated\r\n   \r\n   So without changing that to account for the above, both the Parquet roundtrips and integration tests were failing even though we were trying to compare logically correct data.\r\n   \r\n   On panics, there's a slight leakage of intention, in the sense that much of the equality was introduced to aid in testing, but because we don't yet have a logging mechanism, something like the below:\r\n   \r\n   ```rust\r\n   let a: Int32Array = ...;\r\n   let b: Int32Array = ..;;\r\n   // try compare in tests\r\n   assert_eq!(&a, &b);\r\n   ```\r\n   \r\n   Would fail with a panic on the assert if the arrays are unequal, but because the comparison would return a `bool`, one wouldn't know where the failure occurred.\r\n   So this becomes tough to see why tests are failing, and hence the practise (I'm fine with calling it bad as I still do it) of adding asserts.\r\n   I'll work with you on #8541 to find a solution that can benefit both us when testing, and downstream users if they want a panic-free `Array:Ref:equals(other: &ArrayRef) -> bool;` kind of interface.\r\n   \r\n   > If it is trying to achieve logical equality, then it has a lot of issues as buffer and child equality are not that simple.\r\n   \r\n   I appreciate this, and the intention is to achieve logical equality even with slices. I believe that the path that I took, while still incomplete, would help us to get there.\r\n   \r\n   The lack of offset handling from that `TODO` could have been motivation not to merge the parquet branch in, but with all the refactoring work happening elsewhere, it's really become very inconvenient to keep rebasing and handling merge conflicts every few other days.\r\n   \r\n   I checked that tests were passing on both branches before the merge, and in master after the merge.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T05:26:06.300+0000",
                    "updated": "2020-10-29T05:26:06.300+0000",
                    "started": "2020-10-29T05:26:06.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506062",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#issuecomment-718368564\n\n\n   > Cool improvements here. Thanks a lot for taking them on! I left some comments on the code.\r\n   > \r\n   > My main concern is the `PartialEq for ArrayData`, which IMO is not correct. All other comments are smaller improvements..\r\n   \r\n   Once rebased, this PR only removes 3 or 4 `#[ignore]`s in the parquet tests\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T05:28:03.576+0000",
                    "updated": "2020-10-29T05:28:03.576+0000",
                    "started": "2020-10-29T05:28:03.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506066",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#issuecomment-718369211\n\n\n   > > Cool improvements here. Thanks a lot for taking them on! I left some comments on the code.\r\n   > > My main concern is the `PartialEq for ArrayData`, which IMO is not correct. All other comments are smaller improvements..\r\n   > \r\n   > Once rebased, this PR only removes 3 or 4 `#[ignore]`s in the parquet tests\r\n   \r\n   Yeah, when I reviewed these, I though that the writer branch was still not merged in master, and thus ended up reviewing everything. My bad there.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T05:30:01.483+0000",
                    "updated": "2020-10-29T05:30:01.483+0000",
                    "started": "2020-10-29T05:30:01.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506067",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r513993661\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -209,6 +209,61 @@ impl ArrayData {\n     }\n }\n \n+impl PartialEq for ArrayData {\n+    fn eq(&self, other: &Self) -> bool {\n+        assert_eq!(\n+            self.data_type(),\n+            other.data_type(),\n+            \"Data types not the same\"\n+        );\n+        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n+        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n+        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n+        assert_eq!(self.null_count(), other.null_count());\n+        // compare buffers excluding padding\n+        let self_buffers = self.buffers();\n+        let other_buffers = other.buffers();\n+        assert_eq!(self_buffers.len(), other_buffers.len());\n+        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n+            compare_buffer_regions(\n+                s,\n+                self.offset(), // TODO mul by data length\n+                o,\n+                other.offset(), // TODO mul by data len\n+            );\n+        });\n+        // assert_eq!(self.buffers(), other.buffers());\n+\n+        assert_eq!(self.child_data(), other.child_data());\n+        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+        if self.null_count() != 0 || other.null_count() != 0 {\n+            compare_buffer_regions(\n+                self.null_buffer().unwrap(),\n+                self.offset(),\n+                other.null_buffer().unwrap(),\n+                other.offset(),\n+            )\n+        }\n\nReview comment:\n       I see. I would have written an utility function just for that, or use `debug_assert_eq`, so that the in release we do not assert those.\r\n   \r\n   My main concern is that `ArrayData` is public API, which means that users can now use `array_data1 == array_data2`. That now panics when the two data is not equal (under some definition of equal), which was my only concern.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T05:46:32.620+0000",
                    "updated": "2020-10-29T05:46:32.620+0000",
                    "started": "2020-10-29T05:46:32.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506072",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r513993661\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -209,6 +209,61 @@ impl ArrayData {\n     }\n }\n \n+impl PartialEq for ArrayData {\n+    fn eq(&self, other: &Self) -> bool {\n+        assert_eq!(\n+            self.data_type(),\n+            other.data_type(),\n+            \"Data types not the same\"\n+        );\n+        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n+        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n+        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n+        assert_eq!(self.null_count(), other.null_count());\n+        // compare buffers excluding padding\n+        let self_buffers = self.buffers();\n+        let other_buffers = other.buffers();\n+        assert_eq!(self_buffers.len(), other_buffers.len());\n+        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n+            compare_buffer_regions(\n+                s,\n+                self.offset(), // TODO mul by data length\n+                o,\n+                other.offset(), // TODO mul by data len\n+            );\n+        });\n+        // assert_eq!(self.buffers(), other.buffers());\n+\n+        assert_eq!(self.child_data(), other.child_data());\n+        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+        if self.null_count() != 0 || other.null_count() != 0 {\n+            compare_buffer_regions(\n+                self.null_buffer().unwrap(),\n+                self.offset(),\n+                other.null_buffer().unwrap(),\n+                other.offset(),\n+            )\n+        }\n\nReview comment:\n       I see. I would have written an utility function just for that, or use `debug_assert_eq`, so that the in release we do not assert those.\r\n   \r\n   My main concern is that `ArrayData` is public API, which means that users can now use `array_data1 == array_data2`. That now panics when the two data is not equal (under some definition of equal), which was my only concern.\r\n   \r\n   The test that would have failed in this case would be: \r\n   1. create `array_data1`\r\n   2. create `array_data2` with different values from `array_data1`\r\n   3. assert that equality between them is false\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T05:49:10.326+0000",
                    "updated": "2020-10-29T05:49:10.326+0000",
                    "started": "2020-10-29T05:49:10.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506073",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r513993661\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -209,6 +209,61 @@ impl ArrayData {\n     }\n }\n \n+impl PartialEq for ArrayData {\n+    fn eq(&self, other: &Self) -> bool {\n+        assert_eq!(\n+            self.data_type(),\n+            other.data_type(),\n+            \"Data types not the same\"\n+        );\n+        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n+        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n+        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n+        assert_eq!(self.null_count(), other.null_count());\n+        // compare buffers excluding padding\n+        let self_buffers = self.buffers();\n+        let other_buffers = other.buffers();\n+        assert_eq!(self_buffers.len(), other_buffers.len());\n+        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n+            compare_buffer_regions(\n+                s,\n+                self.offset(), // TODO mul by data length\n+                o,\n+                other.offset(), // TODO mul by data len\n+            );\n+        });\n+        // assert_eq!(self.buffers(), other.buffers());\n+\n+        assert_eq!(self.child_data(), other.child_data());\n+        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+        if self.null_count() != 0 || other.null_count() != 0 {\n+            compare_buffer_regions(\n+                self.null_buffer().unwrap(),\n+                self.offset(),\n+                other.null_buffer().unwrap(),\n+                other.offset(),\n+            )\n+        }\n\nReview comment:\n       I see. I would have written an utility function just for that, or use `debug_assert_eq`, so that the in release we do not assert those.\r\n   \r\n   `ArrayData` is public API, which means that users can now use `array_data1 == array_data2`. That now panics when the two data is not equal (under some definition of equal), which was my only concern.\r\n   \r\n   The test that would have failed in this case would be: \r\n   1. create `array_data1`\r\n   2. create `array_data2` with different values from `array_data1`\r\n   3. assert that equality between them is false\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T05:51:44.160+0000",
                    "updated": "2020-10-29T05:51:44.160+0000",
                    "started": "2020-10-29T05:51:44.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506074",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506078",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r514007477\n\n\n\n##########\nFile path: rust/parquet/src/arrow/schema.rs\n##########\n@@ -1194,6 +1372,17 @@ mod tests {\n             });\n     }\n \n+    #[test]\n+    #[should_panic(expected = \"Parquet does not support writing empty structs\")]\n+    fn test_empty_struct_field() {\n+        let arrow_fields = vec![Field::new(\"struct\", DataType::Struct(vec![]), false)];\n+        let arrow_schema = Schema::new(arrow_fields);\n+        let converted_arrow_schema = arrow_to_parquet_schema(&arrow_schema);\n+\n+        assert!(converted_arrow_schema.is_err());\n+        converted_arrow_schema.unwrap();\n+    }\n\nReview comment:\n       I'll fix what you've raised here in a follow up PR \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T06:13:32.757+0000",
                    "updated": "2020-10-29T06:13:32.757+0000",
                    "started": "2020-10-29T06:13:32.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506078",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r514007974\n\n\n\n##########\nFile path: rust/parquet/Cargo.toml\n##########\n@@ -40,6 +40,7 @@ zstd = { version = \"0.5\", optional = true }\n chrono = \"0.4\"\n num-bigint = \"0.3\"\n arrow = { path = \"../arrow\", version = \"3.0.0-SNAPSHOT\", optional = true }\n+base64 = { version = \"*\", optional = true }\n\nReview comment:\n       I'll bracket it.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T06:14:28.521+0000",
                    "updated": "2020-10-29T06:14:28.521+0000",
                    "started": "2020-10-29T06:14:28.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506079",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#discussion_r514008366\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -200,8 +200,7 @@ pub fn can_cast_types(from_type: &DataType, to_type: &DataType) -> bool {\n         (Timestamp(_, _), Date32(_)) => true,\n         (Timestamp(_, _), Date64(_)) => true,\n         // date64 to timestamp might not make sense,\n-\n-        // end temporal casts\n+        (Null, Int32) => true,\n\nReview comment:\n       Only needed Int32 for Parquet at the time\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T06:15:12.895+0000",
                    "updated": "2020-10-29T06:15:12.895+0000",
                    "started": "2020-10-29T06:15:12.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506080",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546#issuecomment-718775738\n\n\n   Rebased! Sorry for any confusion-- this PR should now just be removing some `#[ignore]`s :)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T14:06:14.420+0000",
                    "updated": "2020-10-29T14:06:14.420+0000",
                    "started": "2020-10-29T14:06:14.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506226",
                    "issueId": "13337679"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/worklog/506238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #8546:\nURL: https://github.com/apache/arrow/pull/8546\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T15:01:00.234+0000",
                    "updated": "2020-10-29T15:01:00.234+0000",
                    "started": "2020-10-29T15:01:00.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506238",
                    "issueId": "13337679"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2927983[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@211dbce8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b7701a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@47c106d2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51653ad0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@aee3524[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39271f90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@769f79f0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ed47e49[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@75683da2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74b27700[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@796fd09f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 29 15:00:42 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-29T15:00:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10413/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-10-28T14:09:36.000+0000",
        "updated": "2020-12-27T11:03:19.000+0000",
        "timeoriginalestimate": null,
        "description": "We had some roundtrip Parquet -> Arrow tests that were failing so we ignored them, but now there has been more work and they pass!",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Parquet] Unignore some roundtrip tests that are passing now",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337679/comment/17222938",
                    "id": "17222938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 8546\n[https://github.com/apache/arrow/pull/8546]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-29T15:00:42.473+0000",
                    "updated": "2020-10-29T15:00:42.473+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0k33s:",
        "customfield_12314139": null
    }
}