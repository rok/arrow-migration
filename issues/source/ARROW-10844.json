{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13344734",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734",
    "key": "ARROW-10844",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10844/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/522043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875\n\n\n   This PR is built on top of #8874 , and provides a modification to the `ExecutionContext` necessary to run joins where `register_table` is called between creation of `DataFrame`.\r\n   \r\n   The underlying issue is that the `ExecutionContextState` was not being shared between the `DataFrame`, thereby causing them to not share newly added tables.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-09T05:13:59.846+0000",
                    "updated": "2020-12-09T05:13:59.846+0000",
                    "started": "2020-12-09T05:13:59.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "522043",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/522045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875#issuecomment-741535928\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=h1) Report\n   > Merging [#8875](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=desc) (4dd056c) into [master](https://codecov.io/gh/apache/arrow/commit/7d509dce3cc684eb74b56a17048f2a2ed3f43dcd?el=desc) (7d509dc) will **increase** coverage by `0.01%`.\n   > The diff coverage is `0.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8875/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #8875      +/-   ##\n   ==========================================\n   + Coverage   52.90%   52.92%   +0.01%     \n   ==========================================\n     Files         171      172       +1     \n     Lines       30655    30711      +56     \n   ==========================================\n   + Hits        16218    16253      +35     \n   - Misses      14437    14458      +21     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/examples/flight\\_server.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL2ZsaWdodF9zZXJ2ZXIucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/filter.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2ZpbHRlci5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/sort.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3NvcnQucnM=) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/tests/custom\\_sources.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2N1c3RvbV9zb3VyY2VzLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `42.10% <0.00%> (\u00f8)` | |\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `90.82% <0.00%> (+0.20%)` | :arrow_up: |\n   | ... and [2 more](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=footer). Last update [6ba022f...4dd056c](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-09T05:25:19.202+0000",
                    "updated": "2020-12-09T05:25:19.202+0000",
                    "started": "2020-12-09T05:25:19.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "522045",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/522046",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875#issuecomment-741536605\n\n\n   https://issues.apache.org/jira/browse/ARROW-10844\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-09T05:27:33.916+0000",
                    "updated": "2020-12-09T05:27:33.916+0000",
                    "started": "2020-12-09T05:27:33.916+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "522046",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/522047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875#issuecomment-741535928\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=h1) Report\n   > Merging [#8875](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=desc) (925caf9) into [master](https://codecov.io/gh/apache/arrow/commit/7d509dce3cc684eb74b56a17048f2a2ed3f43dcd?el=desc) (7d509dc) will **increase** coverage by `23.44%`.\n   > The diff coverage is `0.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8875/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #8875       +/-   ##\n   ===========================================\n   + Coverage   52.90%   76.34%   +23.44%     \n   ===========================================\n     Files         171      176        +5     \n     Lines       30655    40452     +9797     \n   ===========================================\n   + Hits        16218    30884    +14666     \n   + Misses      14437     9568     -4869     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/examples/flight\\_server.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL2ZsaWdodF9zZXJ2ZXIucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/filter.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2ZpbHRlci5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/sort.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3NvcnQucnM=) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/tests/custom\\_sources.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2N1c3RvbV9zb3VyY2VzLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/parquet/src/util/test\\_common/file\\_util.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy91dGlsL3Rlc3RfY29tbW9uL2ZpbGVfdXRpbC5ycw==) | `77.77% <0.00%> (\u00f8)` | |\n   | [rust/parquet/src/util/hash\\_util.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy91dGlsL2hhc2hfdXRpbC5ycw==) | `95.77% <0.00%> (\u00f8)` | |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `42.10% <0.00%> (\u00f8)` | |\n   | ... and [53 more](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=footer). Last update [6ba022f...925caf9](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-09T05:33:06.122+0000",
                    "updated": "2020-12-09T05:33:06.122+0000",
                    "started": "2020-12-09T05:33:06.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "522047",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/522062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875#issuecomment-741535928\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=h1) Report\n   > Merging [#8875](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=desc) (70f48c3) into [master](https://codecov.io/gh/apache/arrow/commit/7d509dce3cc684eb74b56a17048f2a2ed3f43dcd?el=desc) (7d509dc) will **increase** coverage by `24.11%`.\n   > The diff coverage is `0.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8875/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #8875       +/-   ##\n   ===========================================\n   + Coverage   52.90%   77.01%   +24.11%     \n   ===========================================\n     Files         171      173        +2     \n     Lines       30655    40102     +9447     \n   ===========================================\n   + Hits        16218    30885    +14667     \n   + Misses      14437     9217     -5220     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/examples/flight\\_server.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL2ZsaWdodF9zZXJ2ZXIucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/filter.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2ZpbHRlci5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/sort.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3NvcnQucnM=) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/tests/custom\\_sources.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2N1c3RvbV9zb3VyY2VzLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ntegration-testing/src/bin/arrow-stream-to-file.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vYXJyb3ctc3RyZWFtLXRvLWZpbGUucnM=) | | |\n   | [...ion-testing/src/bin/arrow-json-integration-test.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vYXJyb3ctanNvbi1pbnRlZ3JhdGlvbi10ZXN0LnJz) | | |\n   | [...ntegration-testing/src/bin/arrow-file-to-stream.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vYXJyb3ctZmlsZS10by1zdHJlYW0ucnM=) | | |\n   | ... and [56 more](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=footer). Last update [6ba022f...70f48c3](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-09T06:02:00.366+0000",
                    "updated": "2020-12-09T06:02:00.366+0000",
                    "started": "2020-12-09T06:02:00.366+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "522062",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/523395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875#issuecomment-741535928\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=h1) Report\n   > Merging [#8875](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=desc) (80903b8) into [master](https://codecov.io/gh/apache/arrow/commit/38cfdc3c95c0066b7b6a9b7fb5a47494decf7805?el=desc) (38cfdc3) will **increase** coverage by `1.13%`.\n   > The diff coverage is `0.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8875/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #8875      +/-   ##\n   ==========================================\n   + Coverage   52.92%   54.06%   +1.13%     \n   ==========================================\n     Files         172      173       +1     \n     Lines       30710    31086     +376     \n   ==========================================\n   + Hits        16253    16806     +553     \n   + Misses      14457    14280     -177     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/examples/flight\\_server.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL2ZsaWdodF9zZXJ2ZXIucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/filter.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2ZpbHRlci5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/sort.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3NvcnQucnM=) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/tests/custom\\_sources.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2N1c3RvbV9zb3VyY2VzLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/arrow/src/array/cast.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvY2FzdC5ycw==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n   | [rust/arrow/src/array/equal/decimal.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvZXF1YWwvZGVjaW1hbC5ycw==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n   | [rust/arrow/src/array/transform/utils.rs](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL3V0aWxzLnJz) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n   | ... and [108 more](https://codecov.io/gh/apache/arrow/pull/8875/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=footer). Last update [38cfdc3...147aae4](https://codecov.io/gh/apache/arrow/pull/8875?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-12T12:11:02.088+0000",
                    "updated": "2020-12-12T12:11:02.088+0000",
                    "started": "2020-12-12T12:11:02.088+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523395",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/523556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #8875:\nURL: https://github.com/apache/arrow/pull/8875\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-13T09:04:32.187+0000",
                    "updated": "2020-12-13T09:04:32.187+0000",
                    "started": "2020-12-13T09:04:32.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523556",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/523838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #8911:\nURL: https://github.com/apache/arrow/pull/8911\n\n\n   This PR modifies to the `ExecutionContext` necessary to run joins where `register_table` is called between creation of DataFrame.\r\n   \r\n   The underlying issue is that the `ExecutionContextState` was not being shared between the `DataFrame`, thereby causing them to not share newly added tables.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T12:35:42.960+0000",
                    "updated": "2020-12-14T12:35:42.960+0000",
                    "started": "2020-12-14T12:35:42.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523838",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/523851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8911:\nURL: https://github.com/apache/arrow/pull/8911#issuecomment-744430320\n\n\n   https://issues.apache.org/jira/browse/ARROW-10844\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T13:12:42.416+0000",
                    "updated": "2020-12-14T13:12:42.416+0000",
                    "started": "2020-12-14T13:12:42.416+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523851",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/524087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8911:\nURL: https://github.com/apache/arrow/pull/8911#discussion_r542702983\n\n\n\n##########\nFile path: rust/datafusion/tests/dataframe.rs\n##########\n@@ -15,182 +15,64 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-use arrow::array::Int32Array;\n-use arrow::datatypes::{DataType, Field, Schema, SchemaRef};\n-use arrow::error::Result as ArrowResult;\n-use arrow::record_batch::RecordBatch;\n-\n-use datafusion::datasource::datasource::Statistics;\n-use datafusion::error::{DataFusionError, Result};\n-use datafusion::{datasource::TableProvider, physical_plan::collect};\n-\n-use datafusion::execution::context::ExecutionContext;\n-use datafusion::logical_plan::{col, LogicalPlan, LogicalPlanBuilder};\n-use datafusion::physical_plan::{\n-    ExecutionPlan, Partitioning, RecordBatchStream, SendableRecordBatchStream,\n-};\n-\n-use futures::stream::Stream;\n-use std::any::Any;\n-use std::pin::Pin;\n use std::sync::Arc;\n-use std::task::{Context, Poll};\n-\n-use async_trait::async_trait;\n-\n-//// Custom source dataframe tests ////\n \n-struct CustomTableProvider;\n-#[derive(Debug, Clone)]\n-struct CustomExecutionPlan {\n-    projection: Option<Vec<usize>>,\n-}\n-struct TestCustomRecordBatchStream {\n-    /// the nb of batches of TEST_CUSTOM_RECORD_BATCH generated\n-    nb_batch: i32,\n-}\n-macro_rules! TEST_CUSTOM_SCHEMA_REF {\n-    () => {\n-        Arc::new(Schema::new(vec![\n-            Field::new(\"c1\", DataType::Int32, false),\n-            Field::new(\"c2\", DataType::Int32, false),\n-        ]))\n-    };\n-}\n-macro_rules! TEST_CUSTOM_RECORD_BATCH {\n-    () => {\n-        RecordBatch::try_new(\n-            TEST_CUSTOM_SCHEMA_REF!(),\n-            vec![\n-                Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\n-                Arc::new(Int32Array::from(vec![2, 12, 12, 120])),\n-            ],\n-        )\n-    };\n-}\n-\n-impl RecordBatchStream for TestCustomRecordBatchStream {\n-    fn schema(&self) -> SchemaRef {\n-        TEST_CUSTOM_SCHEMA_REF!()\n-    }\n-}\n-\n-impl Stream for TestCustomRecordBatchStream {\n-    type Item = ArrowResult<RecordBatch>;\n-\n-    fn poll_next(\n-        self: Pin<&mut Self>,\n-        _cx: &mut Context<'_>,\n-    ) -> Poll<Option<Self::Item>> {\n-        if self.nb_batch > 0 {\n-            self.get_mut().nb_batch -= 1;\n-            Poll::Ready(Some(TEST_CUSTOM_RECORD_BATCH!()))\n-        } else {\n-            Poll::Ready(None)\n-        }\n-    }\n-}\n-\n-#[async_trait]\n-impl ExecutionPlan for CustomExecutionPlan {\n-    fn as_any(&self) -> &dyn Any {\n-        self\n-    }\n-    fn schema(&self) -> SchemaRef {\n-        let schema = TEST_CUSTOM_SCHEMA_REF!();\n-        match &self.projection {\n-            None => schema,\n-            Some(p) => Arc::new(Schema::new(\n-                p.iter().map(|i| schema.field(*i).clone()).collect(),\n-            )),\n-        }\n-    }\n-    fn output_partitioning(&self) -> Partitioning {\n-        Partitioning::UnknownPartitioning(1)\n-    }\n-    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n-        vec![]\n-    }\n-    fn with_new_children(\n-        &self,\n-        children: Vec<Arc<dyn ExecutionPlan>>,\n-    ) -> Result<Arc<dyn ExecutionPlan>> {\n-        if children.is_empty() {\n-            Ok(Arc::new(self.clone()))\n-        } else {\n-            Err(DataFusionError::Internal(\n-                \"Children cannot be replaced in CustomExecutionPlan\".to_owned(),\n-            ))\n-        }\n-    }\n-    async fn execute(&self, _partition: usize) -> Result<SendableRecordBatchStream> {\n-        Ok(Box::pin(TestCustomRecordBatchStream { nb_batch: 1 }))\n-    }\n-}\n-\n-impl TableProvider for CustomTableProvider {\n-    fn as_any(&self) -> &dyn Any {\n-        self\n-    }\n-\n-    fn schema(&self) -> SchemaRef {\n-        TEST_CUSTOM_SCHEMA_REF!()\n-    }\n+use arrow::datatypes::{DataType, Field, Schema};\n+use arrow::{\n+    array::{Int32Array, StringArray},\n+    record_batch::RecordBatch,\n+};\n \n-    fn scan(\n-        &self,\n-        projection: &Option<Vec<usize>>,\n-        _batch_size: usize,\n-    ) -> Result<Arc<dyn ExecutionPlan>> {\n-        Ok(Arc::new(CustomExecutionPlan {\n-            projection: projection.clone(),\n-        }))\n-    }\n+use datafusion::error::Result;\n+use datafusion::{datasource::MemTable, prelude::JoinType};\n \n-    fn statistics(&self) -> Statistics {\n-        Statistics::default()\n-    }\n-}\n+use datafusion::execution::context::ExecutionContext;\n \n #[tokio::test]\n-async fn custom_source_dataframe() -> Result<()> {\n+async fn join() -> Result<()> {\n+    let schema1 = Arc::new(Schema::new(vec![\n+        Field::new(\"a\", DataType::Utf8, false),\n+        Field::new(\"b\", DataType::Int32, false),\n+    ]));\n+    let schema2 = Arc::new(Schema::new(vec![\n+        Field::new(\"a\", DataType::Utf8, false),\n+        Field::new(\"c\", DataType::Int32, false),\n+    ]));\n+\n+    // define data.\n+    let batch1 = RecordBatch::try_new(\n+        schema1.clone(),\n+        vec![\n+            Arc::new(StringArray::from(vec![\"a\", \"b\", \"c\", \"d\"])),\n+            Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\n+        ],\n+    )?;\n+    // define data.\n+    let batch2 = RecordBatch::try_new(\n+        schema2.clone(),\n+        vec![\n+            Arc::new(StringArray::from(vec![\"a\", \"b\", \"c\", \"d\"])),\n+            Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\n+        ],\n+    )?;\n+\n     let mut ctx = ExecutionContext::new();\n \n-    let table = ctx.read_table(Arc::new(CustomTableProvider))?;\n-    let logical_plan = LogicalPlanBuilder::from(&table.to_logical_plan())\n-        .project(vec![col(\"c2\")])?\n-        .build()?;\n+    let table1 = MemTable::try_new(schema1, vec![vec![batch1]])?;\n+    let table2 = MemTable::try_new(schema2, vec![vec![batch2]])?;\n+\n+    ctx.register_table(\"aa\", Box::new(table1));\n \n-    let optimized_plan = ctx.optimize(&logical_plan)?;\n-    match &optimized_plan {\n-        LogicalPlan::Projection { input, .. } => match &**input {\n-            LogicalPlan::TableScan {\n-                table_schema,\n-                projected_schema,\n-                ..\n-            } => {\n-                assert_eq!(table_schema.fields().len(), 2);\n-                assert_eq!(projected_schema.fields().len(), 1);\n-            }\n-            _ => panic!(\"input to projection should be TableScan\"),\n-        },\n-        _ => panic!(\"expect optimized_plan to be projection\"),\n-    }\n+    let df1 = ctx.table(\"aa\")?;\n \n-    let expected = \"Projection: #c2\\\n-        \\n  TableScan: projection=Some([1])\";\n-    assert_eq!(format!(\"{:?}\", optimized_plan), expected);\n+    ctx.register_table(\"aaa\", Box::new(table2));\n\nReview comment:\n       Note for other reviewers: this is the key change -- namely that once you create a data frame from an ExecutionContext, the shared state can be changed and that change is seen across all objects that were created from the ExecutionContext (e.g register a table and have previously created data frames be able to use them)\r\n   \r\n   I recommend making an entirely separate test (`test_shared_context` or something) rather than re-using the join test (even if that new test is mostly copy paste). The rationale for a separate test is as documentation of the expected behavior to users and future developers --  That way it will be less likely that some future developer interprets this behavior (registering table after DF was made) as an unimportant implementation detail of the join test itself\n\n##########\nFile path: rust/datafusion/tests/custom_sources.rs\n##########\n@@ -0,0 +1,198 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       this test is \ud83d\udc4d Nice work @jorgecarleitao \n\n##########\nFile path: rust/datafusion/src/execution/context.rs\n##########\n@@ -92,7 +95,7 @@ use parquet::arrow::ArrowWriter;\n /// ```\n pub struct ExecutionContext {\n     /// Internal state for the context\n-    pub state: ExecutionContextState,\n+    pub state: Arc<Mutex<ExecutionContextState>>,\n\nReview comment:\n       ```suggestion\r\n       /// This state is shared by all DataFrame's created from\r\n       /// this context, and thus modifications (e.g. registering a new table) will be visible\r\n       /// to all such DataFrames\r\n       pub state: Arc<Mutex<ExecutionContextState>>,\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T19:54:57.372+0000",
                    "updated": "2020-12-14T19:54:57.372+0000",
                    "started": "2020-12-14T19:54:57.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524087",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/524309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8911:\nURL: https://github.com/apache/arrow/pull/8911#discussion_r543137903\n\n\n\n##########\nFile path: rust/datafusion/tests/dataframe.rs\n##########\n@@ -15,182 +15,64 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-use arrow::array::Int32Array;\n-use arrow::datatypes::{DataType, Field, Schema, SchemaRef};\n-use arrow::error::Result as ArrowResult;\n-use arrow::record_batch::RecordBatch;\n-\n-use datafusion::datasource::datasource::Statistics;\n-use datafusion::error::{DataFusionError, Result};\n-use datafusion::{datasource::TableProvider, physical_plan::collect};\n-\n-use datafusion::execution::context::ExecutionContext;\n-use datafusion::logical_plan::{col, LogicalPlan, LogicalPlanBuilder};\n-use datafusion::physical_plan::{\n-    ExecutionPlan, Partitioning, RecordBatchStream, SendableRecordBatchStream,\n-};\n-\n-use futures::stream::Stream;\n-use std::any::Any;\n-use std::pin::Pin;\n use std::sync::Arc;\n-use std::task::{Context, Poll};\n-\n-use async_trait::async_trait;\n-\n-//// Custom source dataframe tests ////\n \n-struct CustomTableProvider;\n-#[derive(Debug, Clone)]\n-struct CustomExecutionPlan {\n-    projection: Option<Vec<usize>>,\n-}\n-struct TestCustomRecordBatchStream {\n-    /// the nb of batches of TEST_CUSTOM_RECORD_BATCH generated\n-    nb_batch: i32,\n-}\n-macro_rules! TEST_CUSTOM_SCHEMA_REF {\n-    () => {\n-        Arc::new(Schema::new(vec![\n-            Field::new(\"c1\", DataType::Int32, false),\n-            Field::new(\"c2\", DataType::Int32, false),\n-        ]))\n-    };\n-}\n-macro_rules! TEST_CUSTOM_RECORD_BATCH {\n-    () => {\n-        RecordBatch::try_new(\n-            TEST_CUSTOM_SCHEMA_REF!(),\n-            vec![\n-                Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\n-                Arc::new(Int32Array::from(vec![2, 12, 12, 120])),\n-            ],\n-        )\n-    };\n-}\n-\n-impl RecordBatchStream for TestCustomRecordBatchStream {\n-    fn schema(&self) -> SchemaRef {\n-        TEST_CUSTOM_SCHEMA_REF!()\n-    }\n-}\n-\n-impl Stream for TestCustomRecordBatchStream {\n-    type Item = ArrowResult<RecordBatch>;\n-\n-    fn poll_next(\n-        self: Pin<&mut Self>,\n-        _cx: &mut Context<'_>,\n-    ) -> Poll<Option<Self::Item>> {\n-        if self.nb_batch > 0 {\n-            self.get_mut().nb_batch -= 1;\n-            Poll::Ready(Some(TEST_CUSTOM_RECORD_BATCH!()))\n-        } else {\n-            Poll::Ready(None)\n-        }\n-    }\n-}\n-\n-#[async_trait]\n-impl ExecutionPlan for CustomExecutionPlan {\n-    fn as_any(&self) -> &dyn Any {\n-        self\n-    }\n-    fn schema(&self) -> SchemaRef {\n-        let schema = TEST_CUSTOM_SCHEMA_REF!();\n-        match &self.projection {\n-            None => schema,\n-            Some(p) => Arc::new(Schema::new(\n-                p.iter().map(|i| schema.field(*i).clone()).collect(),\n-            )),\n-        }\n-    }\n-    fn output_partitioning(&self) -> Partitioning {\n-        Partitioning::UnknownPartitioning(1)\n-    }\n-    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n-        vec![]\n-    }\n-    fn with_new_children(\n-        &self,\n-        children: Vec<Arc<dyn ExecutionPlan>>,\n-    ) -> Result<Arc<dyn ExecutionPlan>> {\n-        if children.is_empty() {\n-            Ok(Arc::new(self.clone()))\n-        } else {\n-            Err(DataFusionError::Internal(\n-                \"Children cannot be replaced in CustomExecutionPlan\".to_owned(),\n-            ))\n-        }\n-    }\n-    async fn execute(&self, _partition: usize) -> Result<SendableRecordBatchStream> {\n-        Ok(Box::pin(TestCustomRecordBatchStream { nb_batch: 1 }))\n-    }\n-}\n-\n-impl TableProvider for CustomTableProvider {\n-    fn as_any(&self) -> &dyn Any {\n-        self\n-    }\n-\n-    fn schema(&self) -> SchemaRef {\n-        TEST_CUSTOM_SCHEMA_REF!()\n-    }\n+use arrow::datatypes::{DataType, Field, Schema};\n+use arrow::{\n+    array::{Int32Array, StringArray},\n+    record_batch::RecordBatch,\n+};\n \n-    fn scan(\n-        &self,\n-        projection: &Option<Vec<usize>>,\n-        _batch_size: usize,\n-    ) -> Result<Arc<dyn ExecutionPlan>> {\n-        Ok(Arc::new(CustomExecutionPlan {\n-            projection: projection.clone(),\n-        }))\n-    }\n+use datafusion::error::Result;\n+use datafusion::{datasource::MemTable, prelude::JoinType};\n \n-    fn statistics(&self) -> Statistics {\n-        Statistics::default()\n-    }\n-}\n+use datafusion::execution::context::ExecutionContext;\n \n #[tokio::test]\n-async fn custom_source_dataframe() -> Result<()> {\n+async fn join() -> Result<()> {\n+    let schema1 = Arc::new(Schema::new(vec![\n+        Field::new(\"a\", DataType::Utf8, false),\n+        Field::new(\"b\", DataType::Int32, false),\n+    ]));\n+    let schema2 = Arc::new(Schema::new(vec![\n+        Field::new(\"a\", DataType::Utf8, false),\n+        Field::new(\"c\", DataType::Int32, false),\n+    ]));\n+\n+    // define data.\n+    let batch1 = RecordBatch::try_new(\n+        schema1.clone(),\n+        vec![\n+            Arc::new(StringArray::from(vec![\"a\", \"b\", \"c\", \"d\"])),\n+            Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\n+        ],\n+    )?;\n+    // define data.\n+    let batch2 = RecordBatch::try_new(\n+        schema2.clone(),\n+        vec![\n+            Arc::new(StringArray::from(vec![\"a\", \"b\", \"c\", \"d\"])),\n+            Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\n+        ],\n+    )?;\n+\n     let mut ctx = ExecutionContext::new();\n \n-    let table = ctx.read_table(Arc::new(CustomTableProvider))?;\n-    let logical_plan = LogicalPlanBuilder::from(&table.to_logical_plan())\n-        .project(vec![col(\"c2\")])?\n-        .build()?;\n+    let table1 = MemTable::try_new(schema1, vec![vec![batch1]])?;\n+    let table2 = MemTable::try_new(schema2, vec![vec![batch2]])?;\n+\n+    ctx.register_table(\"aa\", Box::new(table1));\n \n-    let optimized_plan = ctx.optimize(&logical_plan)?;\n-    match &optimized_plan {\n-        LogicalPlan::Projection { input, .. } => match &**input {\n-            LogicalPlan::TableScan {\n-                table_schema,\n-                projected_schema,\n-                ..\n-            } => {\n-                assert_eq!(table_schema.fields().len(), 2);\n-                assert_eq!(projected_schema.fields().len(), 1);\n-            }\n-            _ => panic!(\"input to projection should be TableScan\"),\n-        },\n-        _ => panic!(\"expect optimized_plan to be projection\"),\n-    }\n+    let df1 = ctx.table(\"aa\")?;\n \n-    let expected = \"Projection: #c2\\\n-        \\n  TableScan: projection=Some([1])\";\n-    assert_eq!(format!(\"{:?}\", optimized_plan), expected);\n+    ctx.register_table(\"aaa\", Box::new(table2));\n\nReview comment:\n       So, this was not very obvious from the diff, but there was no test for joins. The `dataframe.rs` had a test for custom sources, which I moved to its own module, and wrote a new test from scratch for this issue alone, where we join two DataFrames. This issue is only observed when we use `join`, as otherwise there is never a scan for two separate tables, which is why I wrote it as a test using joins.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T08:24:00.469+0000",
                    "updated": "2020-12-15T08:24:00.469+0000",
                    "started": "2020-12-15T08:24:00.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524309",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/524856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #8911:\nURL: https://github.com/apache/arrow/pull/8911#issuecomment-745816515\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=h1) Report\n   > Merging [#8911](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=desc) (7283353) into [master](https://codecov.io/gh/apache/arrow/commit/26aef88b5e993ea64726e77cfa57e2a17031d934?el=desc) (26aef88) will **decrease** coverage by `0.00%`.\n   > The diff coverage is `70.76%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8911/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #8911      +/-   ##\n   ==========================================\n   - Coverage   83.26%   83.25%   -0.01%     \n   ==========================================\n     Files         195      196       +1     \n     Lines       48085    48116      +31     \n   ==========================================\n   + Hits        40036    40059      +23     \n   - Misses       8049     8057       +8     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/8911/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `89.95% <43.90%> (-1.93%)` | :arrow_down: |\n   | [rust/datafusion/tests/custom\\_sources.rs](https://codecov.io/gh/apache/arrow/pull/8911/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2N1c3RvbV9zb3VyY2VzLnJz) | `75.00% <75.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/8911/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `93.28% <100.00%> (+0.85%)` | :arrow_up: |\n   | [rust/datafusion/tests/dataframe.rs](https://codecov.io/gh/apache/arrow/pull/8911/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2RhdGFmcmFtZS5ycw==) | `100.00% <100.00%> (+25.00%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/record\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/8911/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9yZWNvcmRfcmVhZGVyLnJz) | `96.25% <0.00%> (+1.71%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=footer). Last update [3e71ea0...7283353](https://codecov.io/gh/apache/arrow/pull/8911?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-16T07:17:26.602+0000",
                    "updated": "2020-12-16T07:17:26.602+0000",
                    "started": "2020-12-16T07:17:26.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524856",
                    "issueId": "13344734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/worklog/525277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #8911:\nURL: https://github.com/apache/arrow/pull/8911\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-16T21:30:33.148+0000",
                    "updated": "2020-12-16T21:30:33.148+0000",
                    "started": "2020-12-16T21:30:33.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "525277",
                    "issueId": "13344734"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@59657c2c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fd6cd59[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74969052[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6db3379c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7493d9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6d7ce91[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4683da19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@32780a82[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1636ad4f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2e2d4a5e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76261e90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@47836cc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 16 21:30:26 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-12-16T21:30:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10844/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-12-08T07:36:18.000+0000",
        "updated": "2020-12-24T18:54:51.000+0000",
        "timeoriginalestimate": null,
        "description": "The complete failing test:\r\n\r\n\u00a0\r\n{code:java}\r\nuse std::sync::Arc;\r\n\r\nuse arrow::{array::{Int32Array, StringArray}, record_batch::RecordBatch};\r\nuse arrow::datatypes::{DataType, Field, Schema};\r\n\r\nuse datafusion::{datasource::MemTable, prelude::JoinType};\r\nuse datafusion::error::Result;\r\n\r\nuse datafusion::execution::context::ExecutionContext;\r\n\r\n#[tokio::test]\r\nasync fn join() -> Result<()> {\r\n    let schema1 = Arc::new(Schema::new(vec![\r\n        Field::new(\"a\", DataType::Utf8, false),\r\n        Field::new(\"b\", DataType::Int32, false),\r\n    ]));\r\n    let schema2 = Arc::new(Schema::new(vec![\r\n        Field::new(\"a\", DataType::Utf8, false),\r\n        Field::new(\"c\", DataType::Int32, false),\r\n    ]));\r\n\r\n    // define data.\r\n    let batch1 = RecordBatch::try_new(\r\n        schema1.clone(),\r\n        vec![\r\n            Arc::new(StringArray::from(vec![\"a\", \"b\", \"c\", \"d\"])),\r\n            Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\r\n        ],\r\n    )?;\r\n    // define data.\r\n    let batch2 = RecordBatch::try_new(\r\n        schema2.clone(),\r\n        vec![\r\n            Arc::new(StringArray::from(vec![\"a\", \"b\", \"c\", \"d\"])),\r\n            Arc::new(Int32Array::from(vec![1, 10, 10, 100])),\r\n        ],\r\n    )?;\r\n\r\n    let mut ctx = ExecutionContext::new();\r\n\r\n    let table1 = MemTable::new(schema1, vec![vec![batch1]])?;\r\n    let table2 = MemTable::new(schema2, vec![vec![batch2]])?;\r\n\r\n    ctx.register_table(\"aa\", Box::new(table1));\r\n\r\n    let df1 = ctx.table(\"aa\")?;\r\n\r\n    ctx.register_table(\"aaa\", Box::new(table2));\r\n\r\n    let df2 = ctx.table(\"aaa\")?;\r\n\r\n    let a = df1.join(df2, JoinType::Inner, &[\"a\"], &[\"a\"])?;\r\n\r\n    let batches = a.collect().await?;\r\n    assert_eq!(batches.len(), 1);\r\n\r\n    Ok(())\r\n}\r\n{code}\r\n\u00a0\r\n\r\nWhen the create dataframes via `ctx.table`, they receive a clone of the \\{{ExecutionContextState}} If at a later stage the context receives a new table, that table will not be part of the state on the first DataFrame. On a Join op, the left DataFrame's state is passed to the newly created DataFrame, which is then used in collect(). Because the right side has a table not in the state of the left, the execution fails.\r\n\r\n\u00a0\r\n\r\nWe may need an Arc<Mutex<{{ExecutionContextState}}>> to share a common mutable state across multiple DataFrames. Alternatively, not require tables to be registered in the context to be used by DataFrames.\r\n\r\nNote that the current example in `DataFrame::join` docs works because the table is registered for both DataFrames.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] join of two DataFrames is not possible",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/comment/17245717",
                    "id": "17245717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cc [~andygrove]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-12-08T07:43:20.826+0000",
                    "updated": "2020-12-08T07:43:20.826+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/comment/17246096",
                    "id": "17246096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "This is not a problem. I misunderstood the issue. Sorry for the confusion.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-12-08T19:16:44.433+0000",
                    "updated": "2020-12-08T19:16:44.433+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/comment/17246101",
                    "id": "17246101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I re-opened the issue with a complete example. There is indeed a problem of how we share context state between DataFrames. cc [~alamb] , as you probably get affected by this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-12-08T19:26:13.475+0000",
                    "updated": "2020-12-08T19:26:13.475+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344734/comment/17250649",
                    "id": "17250649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8911\n[https://github.com/apache/arrow/pull/8911]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-12-16T21:30:26.159+0000",
                    "updated": "2020-12-16T21:30:26.159+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0lakw:",
        "customfield_12314139": null
    }
}