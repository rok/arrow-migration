{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13358211",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211",
    "key": "ARROW-11599",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12619000",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12619000",
                "type": {
                    "id": "12310660",
                    "name": "Completes",
                    "inward": "is fixed by",
                    "outward": "fixes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310660"
                },
                "outwardIssue": {
                    "id": "13355026",
                    "key": "ARROW-11407",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355026",
                    "fields": {
                        "summary": "[Rust] Conditions that evaluate to an empty result set cause panics in DataFusion",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11599/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#issuecomment-777679480\n\n\n   https://issues.apache.org/jira/browse/ARROW-11599\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T17:58:33.161+0000",
                    "updated": "2021-02-11T17:58:33.161+0000",
                    "started": "2021-02-11T17:58:33.161+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551420",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574709598\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,174 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array with null slots of `length`\n+pub fn new_array_with_nulls(data_type: &DataType, length: usize) -> ArrayRef {\n\nReview comment:\n       Are we happy with this name, or should we use `new_null_array`?\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -409,4 +578,42 @@ mod tests {\n         assert_eq!(a.len(), 0);\n         assert_eq!(a.value_offsets()[0], 0i32);\n     }\n+\n+    #[test]\n+    fn test_null_boolean() {\n+        let array = new_array_with_nulls(&DataType::Boolean, 9);\n+        let a = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_primitive() {\n+        let array = new_array_with_nulls(&DataType::Int32, 9);\n+        let a = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_variable_sized() {\n+        let array = new_array_with_nulls(&DataType::Utf8, 9);\n+        let a = array.as_any().downcast_ref::<StringArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n+    }\n+\n+    #[test]\n+    fn test_null_list_primitive() {\n+        let data_type =\n+            DataType::List(Box::new(Field::new(\"item\", DataType::Int32, true)));\n\nReview comment:\n       There's a soundness hole here, that applies more for parquet. If I created this array as non-nullable, there wouldn't have been an error, even though this doesn't comply with the spec.\r\n   \r\n   @alamb @jorgecarleitao @dandandan should we panic, or should I change the signature to `Result<ArrayRef>` so I can validate this condition?\r\n   \r\n   I'm leaning to a panic, just like we panic on `impl From<ArrayDataRef> for {type}Array`. Wrapping a function that doesn't really error out, in a Result feels like assembing the Avengers for a single villain.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:01:27.162+0000",
                    "updated": "2021-02-11T18:01:27.162+0000",
                    "started": "2021-02-11T18:01:27.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551421",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574715077\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -409,4 +578,42 @@ mod tests {\n         assert_eq!(a.len(), 0);\n         assert_eq!(a.value_offsets()[0], 0i32);\n     }\n+\n+    #[test]\n+    fn test_null_boolean() {\n+        let array = new_array_with_nulls(&DataType::Boolean, 9);\n+        let a = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_primitive() {\n+        let array = new_array_with_nulls(&DataType::Int32, 9);\n+        let a = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_variable_sized() {\n+        let array = new_array_with_nulls(&DataType::Utf8, 9);\n+        let a = array.as_any().downcast_ref::<StringArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n+    }\n+\n+    #[test]\n+    fn test_null_list_primitive() {\n+        let data_type =\n+            DataType::List(Box::new(Field::new(\"item\", DataType::Int32, true)));\n\nReview comment:\n       I vote `panic` for now if you think it is a logic error that a user should be avoiding anyways.\r\n   \r\n   Or alternately, we can make it `panic` now and `Result` later if someone finds a need\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:04:49.254+0000",
                    "updated": "2021-02-11T18:04:49.254+0000",
                    "started": "2021-02-11T18:04:49.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551425",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574715774\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,174 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array with null slots of `length`\n+pub fn new_array_with_nulls(data_type: &DataType, length: usize) -> ArrayRef {\n\nReview comment:\n       what about `new_array_of_nulls` ? \r\n   \r\n   `new_null_array` might be confusing because it *might* be referring to `NullArray`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:05:55.676+0000",
                    "updated": "2021-02-11T18:05:55.676+0000",
                    "started": "2021-02-11T18:05:55.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551427",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574716119\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,174 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array with null slots of `length`\n+pub fn new_array_with_nulls(data_type: &DataType, length: usize) -> ArrayRef {\n\nReview comment:\n       I prefer `new_null_array`. The dataType arg makes it obvious that this is not the `NullArray`, but is a small thing.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:06:18.653+0000",
                    "updated": "2021-02-11T18:06:18.653+0000",
                    "started": "2021-02-11T18:06:18.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551428",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574716207\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,174 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array with null slots of `length`\n\nReview comment:\n       ```suggestion\r\n   /// Creates a new array of `data_type` of length `length` filled entirely of `NULL` values\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:06:31.643+0000",
                    "updated": "2021-02-11T18:06:31.643+0000",
                    "started": "2021-02-11T18:06:31.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551429",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574717129\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -409,4 +578,42 @@ mod tests {\n         assert_eq!(a.len(), 0);\n         assert_eq!(a.value_offsets()[0], 0i32);\n     }\n+\n+    #[test]\n+    fn test_null_boolean() {\n+        let array = new_array_with_nulls(&DataType::Boolean, 9);\n+        let a = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_primitive() {\n+        let array = new_array_with_nulls(&DataType::Int32, 9);\n+        let a = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_variable_sized() {\n+        let array = new_array_with_nulls(&DataType::Utf8, 9);\n+        let a = array.as_any().downcast_ref::<StringArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n+    }\n+\n+    #[test]\n+    fn test_null_list_primitive() {\n+        let data_type =\n+            DataType::List(Box::new(Field::new(\"item\", DataType::Int32, true)));\n\nReview comment:\n       yeah, that hole exists in so many places, unfortunately. Since `ArrayData` has a `null_count`, we have been relying on it for this.\r\n   \r\n   Technically, this goes back to the issue that we are not performing any validation whether the datatype is consistent with the array's content. :(\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:07:59.712+0000",
                    "updated": "2021-02-11T18:07:59.712+0000",
                    "started": "2021-02-11T18:07:59.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551432",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551447",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574729324\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,174 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array with null slots of `length`\n+pub fn new_array_with_nulls(data_type: &DataType, length: usize) -> ArrayRef {\n\nReview comment:\n       I'll go with `new_null_array` as it's also similar to `new_empty_array`. Thanks\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T18:26:07.526+0000",
                    "updated": "2021-02-11T18:26:07.526+0000",
                    "started": "2021-02-11T18:26:07.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551447",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574760259\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,167 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array of `data_type` of length `length` filled entirely of `NULL` values\n+pub fn new_null_array(data_type: &DataType, length: usize) -> ArrayRef {\n+    match data_type {\n+        DataType::Null => Arc::new(NullArray::new(length)),\n+        DataType::Boolean => {\n+            let null_buf: Buffer = MutableBuffer::new_null(length).into();\n+            make_array(Arc::new(ArrayData::new(\n+                data_type.clone(),\n+                length,\n+                Some(length),\n+                Some(null_buf.clone()),\n+                0,\n+                vec![null_buf],\n+                vec![],\n+            )))\n+        }\n+        DataType::Int8 | DataType::UInt8 => {\n+            new_null_sized_array::<Int8Type>(data_type, length)\n+        }\n+        DataType::Int16 | DataType::UInt16 => {\n+            new_null_sized_array::<Int16Type>(data_type, length)\n+        }\n+        DataType::Float16 => unreachable!(),\n+        DataType::Int32\n+        | DataType::UInt32\n+        | DataType::Float32\n+        | DataType::Date32\n+        | DataType::Time32(_) => new_null_sized_array::<Int32Type>(data_type, length),\n+        DataType::Int64\n+        | DataType::UInt64\n+        | DataType::Float64\n+        | DataType::Date64\n+        | DataType::Timestamp(_, _)\n+        | DataType::Time64(_)\n+        | DataType::Duration(_) => new_null_sized_array::<Int64Type>(data_type, length),\n+        DataType::Interval(unit) => match unit {\n+            IntervalUnit::YearMonth => {\n+                new_null_sized_array::<Int32Type>(data_type, length)\n+            }\n+            IntervalUnit::DayTime => new_null_sized_array::<Int64Type>(data_type, length),\n+        },\n+        DataType::FixedSizeBinary(value_len) => make_array(Arc::new(ArrayData::new(\n+            data_type.clone(),\n+            length,\n+            Some(length),\n+            Some(MutableBuffer::new_null(length).into()),\n+            0,\n+            vec![Buffer::from(vec![0u8; *value_len as usize * length])],\n+            vec![],\n+        ))),\n+        DataType::Binary | DataType::Utf8 => {\n+            new_null_binary_array::<i32>(data_type, length)\n+        }\n+        DataType::LargeBinary | DataType::LargeUtf8 => {\n+            new_null_binary_array::<i64>(data_type, length)\n+        }\n+        DataType::List(field) => {\n+            new_null_list_array::<i32>(data_type, field.data_type(), length)\n+        }\n+        DataType::LargeList(field) => {\n+            new_null_list_array::<i64>(data_type, field.data_type(), length)\n+        }\n+        DataType::FixedSizeList(field, value_len) => {\n+            make_array(Arc::new(ArrayData::new(\n+                data_type.clone(),\n+                length,\n+                Some(length),\n+                Some(MutableBuffer::new_null(length).into()),\n+                0,\n+                vec![],\n+                vec![\n+                    new_null_array(field.data_type(), *value_len as usize * length)\n+                        .data(),\n+                ],\n+            )))\n+        }\n+        DataType::Struct(fields) => make_array(Arc::new(ArrayData::new(\n+            data_type.clone(),\n+            length,\n+            Some(length),\n+            Some(MutableBuffer::new_null(length).into()),\n+            0,\n+            vec![],\n+            fields\n+                .iter()\n+                .map(|field| Arc::new(ArrayData::new_empty(field.data_type())))\n+                .collect(),\n+        ))),\n+        DataType::Union(_) => {\n+            unimplemented!(\"Creating null Union array not yet supported\")\n+        }\n+        DataType::Dictionary(_, value) => {\n+            make_array(Arc::new(ArrayData::new(\n+                data_type.clone(),\n+                length,\n+                Some(length),\n+                Some(MutableBuffer::new_null(length).into()),\n+                0,\n+                vec![MutableBuffer::new(0).into()], // keys are empty\n\nReview comment:\n       ```suggestion\r\n                   vec![MutableBuffer::new(0).into()], // values are empty\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T19:14:26.889+0000",
                    "updated": "2021-02-11T19:14:26.889+0000",
                    "started": "2021-02-11T19:14:26.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551474",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551477",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574762596\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -409,4 +571,42 @@ mod tests {\n         assert_eq!(a.len(), 0);\n         assert_eq!(a.value_offsets()[0], 0i32);\n     }\n+\n+    #[test]\n+    fn test_null_boolean() {\n+        let array = new_null_array(&DataType::Boolean, 9);\n+        let a = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_primitive() {\n+        let array = new_null_array(&DataType::Int32, 9);\n+        let a = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_variable_sized() {\n+        let array = new_null_array(&DataType::Utf8, 9);\n+        let a = array.as_any().downcast_ref::<StringArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n\nReview comment:\n       ```suggestion\r\n           assert_eq!(a.value_offsets()[9], 0i32);\r\n           for i in 0..9 {\r\n               assert!(a.is_null(i));\r\n           }\r\n   ```\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,167 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array of `data_type` of length `length` filled entirely of `NULL` values\n+pub fn new_null_array(data_type: &DataType, length: usize) -> ArrayRef {\n+    match data_type {\n+        DataType::Null => Arc::new(NullArray::new(length)),\n+        DataType::Boolean => {\n+            let null_buf: Buffer = MutableBuffer::new_null(length).into();\n+            make_array(Arc::new(ArrayData::new(\n+                data_type.clone(),\n+                length,\n+                Some(length),\n+                Some(null_buf.clone()),\n+                0,\n+                vec![null_buf],\n+                vec![],\n+            )))\n+        }\n+        DataType::Int8 | DataType::UInt8 => {\n+            new_null_sized_array::<Int8Type>(data_type, length)\n+        }\n+        DataType::Int16 | DataType::UInt16 => {\n+            new_null_sized_array::<Int16Type>(data_type, length)\n+        }\n+        DataType::Float16 => unreachable!(),\n+        DataType::Int32\n+        | DataType::UInt32\n\nReview comment:\n       While it is probably ok, it took me a while to convince myself that `new_null_sized_array::<Int32Type>` was ok to use for different types like `Float32`\r\n   \r\n   I wonder if it would be better to explicitly list out the types here \r\n   ```\r\n    DataType::Float32 => new_null_sized_array::<Float32Type>(data_type, length),\r\n    DataType::Date32 => new_null_sized_array::<Int32Type>(data_type, length),\r\n   ...\r\n   ```\r\n   \n\n##########\nFile path: rust/datafusion/src/scalar.rs\n##########\n@@ -218,99 +205,90 @@ impl ScalarValue {\n                 Some(value) => {\n                     Arc::new(Float64Array::from_iter_values(repeat(*value).take(size)))\n                 }\n-                None => Arc::new(repeat(None).take(size).collect::<Float64Array>()),\n\nReview comment:\n       this is a nice cleanup\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -409,4 +571,42 @@ mod tests {\n         assert_eq!(a.len(), 0);\n         assert_eq!(a.value_offsets()[0], 0i32);\n     }\n+\n+    #[test]\n+    fn test_null_boolean() {\n+        let array = new_null_array(&DataType::Boolean, 9);\n+        let a = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_primitive() {\n+        let array = new_null_array(&DataType::Int32, 9);\n+        let a = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_variable_sized() {\n+        let array = new_null_array(&DataType::Utf8, 9);\n+        let a = array.as_any().downcast_ref::<StringArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n+    }\n+\n+    #[test]\n+    fn test_null_list_primitive() {\n+        let data_type =\n+            DataType::List(Box::new(Field::new(\"item\", DataType::Int32, true)));\n+        let array = new_null_array(&data_type, 9);\n+        let a = array.as_any().downcast_ref::<ListArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n+    }\n\nReview comment:\n       ```suggestion\r\n       }\r\n       \r\n       #[test]\r\n       fn test_null_dictionary() {\r\n           let values = vec![\r\n               None, None, None, None, None, None, None, None, None\r\n           ] as Vec<Option<&str>>;\r\n   \r\n           let array : DictionaryArray<Int8Type> = values.into_iter().collect();\r\n           let array = Arc::new(array) as ArrayRef;\r\n   \r\n           let null_array = new_null_array(array.data_type(), 9);\r\n           assert_eq!(&array, &null_array);\r\n       }\r\n   \r\n   ```\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -409,4 +571,42 @@ mod tests {\n         assert_eq!(a.len(), 0);\n         assert_eq!(a.value_offsets()[0], 0i32);\n     }\n+\n+    #[test]\n+    fn test_null_boolean() {\n+        let array = new_null_array(&DataType::Boolean, 9);\n+        let a = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_primitive() {\n+        let array = new_null_array(&DataType::Int32, 9);\n+        let a = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        for i in 0..9 {\n+            assert!(a.is_null(i));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_null_variable_sized() {\n+        let array = new_null_array(&DataType::Utf8, 9);\n+        let a = array.as_any().downcast_ref::<StringArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n+    }\n+\n+    #[test]\n+    fn test_null_list_primitive() {\n+        let data_type =\n+            DataType::List(Box::new(Field::new(\"item\", DataType::Int32, true)));\n+        let array = new_null_array(&data_type, 9);\n+        let a = array.as_any().downcast_ref::<ListArray>().unwrap();\n+        assert_eq!(a.len(), 9);\n+        assert_eq!(a.value_offsets()[9], 0i32);\n\nReview comment:\n       ```suggestion\r\n           assert_eq!(a.value_offsets()[9], 0i32);\r\n           for i in 0..9 {\r\n               assert!(a.is_null(i));\r\n           }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T19:31:57.695+0000",
                    "updated": "2021-02-11T19:31:57.695+0000",
                    "started": "2021-02-11T19:31:57.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551477",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574794038\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,167 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array of `data_type` of length `length` filled entirely of `NULL` values\n+pub fn new_null_array(data_type: &DataType, length: usize) -> ArrayRef {\n+    match data_type {\n+        DataType::Null => Arc::new(NullArray::new(length)),\n+        DataType::Boolean => {\n+            let null_buf: Buffer = MutableBuffer::new_null(length).into();\n+            make_array(Arc::new(ArrayData::new(\n+                data_type.clone(),\n+                length,\n+                Some(length),\n+                Some(null_buf.clone()),\n+                0,\n+                vec![null_buf],\n+                vec![],\n+            )))\n+        }\n+        DataType::Int8 | DataType::UInt8 => {\n+            new_null_sized_array::<Int8Type>(data_type, length)\n+        }\n+        DataType::Int16 | DataType::UInt16 => {\n+            new_null_sized_array::<Int16Type>(data_type, length)\n+        }\n+        DataType::Float16 => unreachable!(),\n+        DataType::Int32\n+        | DataType::UInt32\n\nReview comment:\n       I can change them, seemed tedious though because f32 and i32 use the same underlying size. I was looking for a convenient way of getting the byte size\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T20:09:03.002+0000",
                    "updated": "2021-02-11T20:09:03.002+0000",
                    "started": "2021-02-11T20:09:03.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551489",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/551550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#discussion_r574865169\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -326,6 +327,167 @@ pub fn new_empty_array(data_type: &DataType) -> ArrayRef {\n     let data = ArrayData::new_empty(data_type);\n     make_array(Arc::new(data))\n }\n+/// Creates a new array of `data_type` of length `length` filled entirely of `NULL` values\n+pub fn new_null_array(data_type: &DataType, length: usize) -> ArrayRef {\n+    match data_type {\n+        DataType::Null => Arc::new(NullArray::new(length)),\n+        DataType::Boolean => {\n+            let null_buf: Buffer = MutableBuffer::new_null(length).into();\n+            make_array(Arc::new(ArrayData::new(\n+                data_type.clone(),\n+                length,\n+                Some(length),\n+                Some(null_buf.clone()),\n+                0,\n+                vec![null_buf],\n+                vec![],\n+            )))\n+        }\n+        DataType::Int8 | DataType::UInt8 => {\n+            new_null_sized_array::<Int8Type>(data_type, length)\n+        }\n+        DataType::Int16 | DataType::UInt16 => {\n+            new_null_sized_array::<Int16Type>(data_type, length)\n+        }\n+        DataType::Float16 => unreachable!(),\n+        DataType::Int32\n+        | DataType::UInt32\n\nReview comment:\n       FWIW, imo we have been doing this incorrectly all along. We currently have one `PrimitiveArray` per logical type (e.g. `Date32`, `Int32`) because there is a one-to-one correspondence between `ArrowPrimitiveType` and `DataType`. This implies that we will never be able to support `Timestamp(_,X)` with `PrimitiveArray`, as that type has many variations (one per time zone).\r\n   \r\n   Having one array type per logical type also makes the whole code less maintainable, because we have to downcast for every variation of the `DataType`, instead of for every variation of the underlying physical type.\r\n   \r\n   IMO we should have 1 `PrimitiveArray` per _physical_ type. I.e. `PrimitiveArray<i32>`, `PrimitiveArray<i64>`, etc. The `DataType` just denotes how the physical values are to be interpreted (logical), not their layout in memory nor any safety considerations (e.g. `&str` vs `&[u8]`).\r\n   \r\n   More generally, a generic parameter `T` represents a variation of the underlying physical / memory layout, and we have been using `PrimitiveArray<T>` to represent the same layout but different logical representations.\r\n   \r\n   This is one of the main changes in the proposal I wrote, on which a primitive array is defined by its physical representation, `PrimitiveArray<i64>` and its logical representation (`DataType`), on which the datatype is a many to one to a physical representation (e.g. `Date32`, `Time32` and `Int32` all map to `i32`).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-11T22:17:27.754+0000",
                    "updated": "2021-02-11T22:17:27.754+0000",
                    "started": "2021-02-11T22:17:27.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551550",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/552123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#issuecomment-778569205\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=h1) Report\n   > Merging [#9469](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=desc) (8c45e47) into [master](https://codecov.io/gh/apache/arrow/commit/7660a22090fcf1d0230ca1e700a4b98f647b0c48?el=desc) (7660a22) will **decrease** coverage by `0.03%`.\n   > The diff coverage is `56.86%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9469/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9469      +/-   ##\n   ==========================================\n   - Coverage   82.31%   82.28%   -0.04%     \n   ==========================================\n     Files         234      234              \n     Lines       54482    54594     +112     \n   ==========================================\n   + Hits        44849    44920      +71     \n   - Misses       9633     9674      +41     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9469/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `56.73% <15.00%> (+1.04%)` | :arrow_up: |\n   | [rust/arrow/src/array/array.rs](https://codecov.io/gh/apache/arrow/pull/9469/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXkucnM=) | `75.50% <62.99%> (-13.03%)` | :arrow_down: |\n   | [rust/arrow/src/array/null.rs](https://codecov.io/gh/apache/arrow/pull/9469/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvbnVsbC5ycw==) | `87.50% <66.66%> (-5.10%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9469/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `88.05% <66.66%> (-0.06%)` | :arrow_down: |\n   | [rust/arrow/src/array/equal/utils.rs](https://codecov.io/gh/apache/arrow/pull/9469/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvZXF1YWwvdXRpbHMucnM=) | `76.47% <0.00%> (+0.98%)` | :arrow_up: |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9469/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `84.21% <0.00%> (+5.26%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=footer). Last update [7660a22...8c45e47](https://codecov.io/gh/apache/arrow/pull/9469?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T06:00:13.713+0000",
                    "updated": "2021-02-13T06:00:13.713+0000",
                    "started": "2021-02-13T06:00:13.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552123",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/552195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#issuecomment-778633075\n\n\n   @alamb you can merge this so it unblocks your work. If there are further questions, I'm happy to address them in a follow-up PR\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T15:19:45.024+0000",
                    "updated": "2021-02-13T15:19:45.024+0000",
                    "started": "2021-02-13T15:19:45.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552195",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/552228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#issuecomment-778679971\n\n\n   Thanks @nevi-me  -- I think this is ready to go then. Thanks again!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T21:22:14.729+0000",
                    "updated": "2021-02-13T21:22:14.729+0000",
                    "started": "2021-02-13T21:22:14.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552228",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/552229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T21:22:47.666+0000",
                    "updated": "2021-02-13T21:22:47.666+0000",
                    "started": "2021-02-13T21:22:47.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552229",
                    "issueId": "13358211"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/worklog/552230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9469:\nURL: https://github.com/apache/arrow/pull/9469#issuecomment-778680108\n\n\n   FYI @maxburke \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T21:23:10.854+0000",
                    "updated": "2021-02-13T21:23:10.854+0000",
                    "started": "2021-02-13T21:23:10.853+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552230",
                    "issueId": "13358211"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6ff2d7b8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3046bd59[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@784acba9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7d631d8c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f6d8728[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5aed2eb7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74d4b1c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@11be4dab[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42b9cc73[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7112da05[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20992f56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4329edfb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Feb 13 21:22:45 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-13T21:22:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11599/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-02-11T17:55:36.000+0000",
        "updated": "2021-07-11T12:40:29.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add function to create array with all nulls",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13358211/comment/17284289",
                    "id": "17284289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9469\n[https://github.com/apache/arrow/pull/9469]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-13T21:22:45.706+0000",
                    "updated": "2021-02-13T21:22:45.706+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nlvc:",
        "customfield_12314139": null
    }
}