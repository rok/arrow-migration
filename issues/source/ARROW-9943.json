{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13326503",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503",
    "key": "ARROW-9943",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9943/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#issuecomment-704421003\n\n\n   https://issues.apache.org/jira/browse/ARROW-9943\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T17:10:12.307+0000",
                    "updated": "2020-10-06T17:10:12.307+0000",
                    "started": "2020-10-06T17:10:12.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496034",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500552098\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,73 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+using NestedFieldRewrapper = std::function<Status(FieldVector, SchemaField*)>;\n+\n+Status RewrapStructField(FieldVector new_children, SchemaField* inferred) {\n+  inferred->field = inferred->field->WithType(::arrow::struct_(std::move(new_children)));\n+  return Status::OK();\n+}\n+\n+Status RewrapListField(FieldVector new_children, SchemaField* inferred) {\n+  DCHECK_EQ(new_children.size(), 1);\n+  inferred->field = inferred->field->WithType(::arrow::list(new_children[0]));\n+  return Status::OK();\n+}\n+\n+// XXX Perhaps add a DataType::WithFields method?\n+NestedFieldRewrapper GetNestedFieldRewrapper(const ArrowType& origin_type,\n+                                             const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return RewrapStructField;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return RewrapListField;\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n\nReview comment:\n       IMHO it's more natural to provide a factory for data types:\r\n   ```suggestion\r\n   std::function<std::shared_ptr<DataType>(FieldVector)> GetNestedFactory(\r\n       const ArrowType& origin_type, const ArrowType& inferred_type) {\r\n     switch (inferred_type.id()) {\r\n       case ::arrow::Type::STRUCT:\r\n         if (origin_type.id() == ::arrow::Type::STRUCT) {\r\n           return ::arrow::struct_;\r\n         }\r\n         break;\r\n       case ::arrow::Type::LIST:\r\n         // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\r\n         if (origin_type.id() == ::arrow::Type::LIST) {\r\n           return [](FieldVector fields) { return ::arrow::list(std::move(fields[0])); };\r\n         }\r\n         break;\r\n       default:\r\n         break;\r\n     }\r\n     return {};\r\n   }\r\n   ```\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,73 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+using NestedFieldRewrapper = std::function<Status(FieldVector, SchemaField*)>;\n+\n+Status RewrapStructField(FieldVector new_children, SchemaField* inferred) {\n+  inferred->field = inferred->field->WithType(::arrow::struct_(std::move(new_children)));\n+  return Status::OK();\n+}\n+\n+Status RewrapListField(FieldVector new_children, SchemaField* inferred) {\n+  DCHECK_EQ(new_children.size(), 1);\n+  inferred->field = inferred->field->WithType(::arrow::list(new_children[0]));\n+  return Status::OK();\n+}\n+\n+// XXX Perhaps add a DataType::WithFields method?\n+NestedFieldRewrapper GetNestedFieldRewrapper(const ArrowType& origin_type,\n+                                             const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return RewrapStructField;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return RewrapListField;\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n+\n+Result<bool> ApplyOriginalStorageMetadata(const Field& origin_field,\n+                                          SchemaField* inferred) {\n+  bool modified = false;\n+\n   auto origin_type = origin_field.type();\n   auto inferred_type = inferred->field->type();\n \n+  const int num_children = inferred_type->num_fields();\n+\n+  if (num_children > 0 && origin_type->num_fields() == num_children) {\n+    DCHECK_EQ(static_cast<int>(inferred->children.size()), num_children);\n+    const auto nested_rewrapper = GetNestedFieldRewrapper(*origin_type, *inferred_type);\n+    if (nested_rewrapper) {\n+      // Apply original metadata recursively to children\n+      for (int i = 0; i < inferred_type->num_fields(); ++i) {\n+        ARROW_ASSIGN_OR_RAISE(\n+            const bool child_modified,\n+            ApplyOriginalMetadata(*origin_type->field(i), &inferred->children[i]));\n+        modified |= child_modified;\n+      }\n+      if (modified) {\n+        // Recreate this field using the modified child fields\n+        ::arrow::FieldVector modified_children(inferred_type->num_fields());\n+        for (int i = 0; i < inferred_type->num_fields(); ++i) {\n+          modified_children[i] = inferred->children[i].field;\n+        }\n+        RETURN_NOT_OK(nested_rewrapper(std::move(modified_children), inferred));\n+      }\n+    }\n\nReview comment:\n       ```suggestion\r\n       const auto nested_factory = GetNestedFactory(*origin_type, *inferred_type);\r\n       if (nested_factory) {\r\n         // Apply original metadata recursively to children\r\n         for (int i = 0; i < inferred_type->num_fields(); ++i) {\r\n           ARROW_ASSIGN_OR_RAISE(\r\n               const bool child_modified,\r\n               ApplyOriginalMetadata(*origin_type->field(i), &inferred->children[i]));\r\n           modified |= child_modified;\r\n         }\r\n         if (modified) {\r\n           // Recreate this field using the modified child fields\r\n           ::arrow::FieldVector modified_children(inferred_type->num_fields());\r\n           for (int i = 0; i < inferred_type->num_fields(); ++i) {\r\n             modified_children[i] = inferred->children[i].field;\r\n           }\r\n           inferred.field = inferred.field->WithType(nested_factory(std::move(modified_children)));\r\n         }\r\n       }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T19:53:52.809+0000",
                    "updated": "2020-10-06T19:53:52.809+0000",
                    "started": "2020-10-06T19:53:52.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496143",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500568316\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,73 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+using NestedFieldRewrapper = std::function<Status(FieldVector, SchemaField*)>;\n+\n+Status RewrapStructField(FieldVector new_children, SchemaField* inferred) {\n+  inferred->field = inferred->field->WithType(::arrow::struct_(std::move(new_children)));\n+  return Status::OK();\n+}\n+\n+Status RewrapListField(FieldVector new_children, SchemaField* inferred) {\n+  DCHECK_EQ(new_children.size(), 1);\n+  inferred->field = inferred->field->WithType(::arrow::list(new_children[0]));\n+  return Status::OK();\n+}\n+\n+// XXX Perhaps add a DataType::WithFields method?\n+NestedFieldRewrapper GetNestedFieldRewrapper(const ArrowType& origin_type,\n+                                             const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return RewrapStructField;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return RewrapListField;\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n+\n+Result<bool> ApplyOriginalStorageMetadata(const Field& origin_field,\n+                                          SchemaField* inferred) {\n+  bool modified = false;\n+\n   auto origin_type = origin_field.type();\n   auto inferred_type = inferred->field->type();\n \n+  const int num_children = inferred_type->num_fields();\n+\n+  if (num_children > 0 && origin_type->num_fields() == num_children) {\n+    DCHECK_EQ(static_cast<int>(inferred->children.size()), num_children);\n+    const auto nested_rewrapper = GetNestedFieldRewrapper(*origin_type, *inferred_type);\n+    if (nested_rewrapper) {\n+      // Apply original metadata recursively to children\n+      for (int i = 0; i < inferred_type->num_fields(); ++i) {\n+        ARROW_ASSIGN_OR_RAISE(\n+            const bool child_modified,\n+            ApplyOriginalMetadata(*origin_type->field(i), &inferred->children[i]));\n+        modified |= child_modified;\n+      }\n+      if (modified) {\n+        // Recreate this field using the modified child fields\n+        ::arrow::FieldVector modified_children(inferred_type->num_fields());\n+        for (int i = 0; i < inferred_type->num_fields(); ++i) {\n+          modified_children[i] = inferred->children[i].field;\n+        }\n+        RETURN_NOT_OK(nested_rewrapper(std::move(modified_children), inferred));\n+      }\n+    }\n\nReview comment:\n       Do you want to try and make this change?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T20:13:59.953+0000",
                    "updated": "2020-10-06T20:13:59.953+0000",
                    "started": "2020-10-06T20:13:59.952+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496154",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500589253\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,73 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+using NestedFieldRewrapper = std::function<Status(FieldVector, SchemaField*)>;\n+\n+Status RewrapStructField(FieldVector new_children, SchemaField* inferred) {\n+  inferred->field = inferred->field->WithType(::arrow::struct_(std::move(new_children)));\n+  return Status::OK();\n+}\n+\n+Status RewrapListField(FieldVector new_children, SchemaField* inferred) {\n+  DCHECK_EQ(new_children.size(), 1);\n+  inferred->field = inferred->field->WithType(::arrow::list(new_children[0]));\n+  return Status::OK();\n+}\n+\n+// XXX Perhaps add a DataType::WithFields method?\n+NestedFieldRewrapper GetNestedFieldRewrapper(const ArrowType& origin_type,\n+                                             const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return RewrapStructField;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return RewrapListField;\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n+\n+Result<bool> ApplyOriginalStorageMetadata(const Field& origin_field,\n+                                          SchemaField* inferred) {\n+  bool modified = false;\n+\n   auto origin_type = origin_field.type();\n   auto inferred_type = inferred->field->type();\n \n+  const int num_children = inferred_type->num_fields();\n+\n+  if (num_children > 0 && origin_type->num_fields() == num_children) {\n+    DCHECK_EQ(static_cast<int>(inferred->children.size()), num_children);\n+    const auto nested_rewrapper = GetNestedFieldRewrapper(*origin_type, *inferred_type);\n+    if (nested_rewrapper) {\n+      // Apply original metadata recursively to children\n+      for (int i = 0; i < inferred_type->num_fields(); ++i) {\n+        ARROW_ASSIGN_OR_RAISE(\n+            const bool child_modified,\n+            ApplyOriginalMetadata(*origin_type->field(i), &inferred->children[i]));\n+        modified |= child_modified;\n+      }\n+      if (modified) {\n+        // Recreate this field using the modified child fields\n+        ::arrow::FieldVector modified_children(inferred_type->num_fields());\n+        for (int i = 0; i < inferred_type->num_fields(); ++i) {\n+          modified_children[i] = inferred->children[i].field;\n+        }\n+        RETURN_NOT_OK(nested_rewrapper(std::move(modified_children), inferred));\n+      }\n+    }\n\nReview comment:\n       Sure, I'll push a commit\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T20:53:58.432+0000",
                    "updated": "2020-10-06T20:53:58.432+0000",
                    "started": "2020-10-06T20:53:58.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496172",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500742385\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -688,32 +688,21 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n \n Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n \n-using NestedFieldRewrapper = std::function<Status(FieldVector, SchemaField*)>;\n-\n-Status RewrapStructField(FieldVector new_children, SchemaField* inferred) {\n-  inferred->field = inferred->field->WithType(::arrow::struct_(std::move(new_children)));\n-  return Status::OK();\n-}\n-\n-Status RewrapListField(FieldVector new_children, SchemaField* inferred) {\n-  DCHECK_EQ(new_children.size(), 1);\n-  inferred->field = inferred->field->WithType(::arrow::list(new_children[0]));\n-  return Status::OK();\n-}\n-\n-// XXX Perhaps add a DataType::WithFields method?\n-NestedFieldRewrapper GetNestedFieldRewrapper(const ArrowType& origin_type,\n-                                             const ArrowType& inferred_type) {\n+std::function<std::shared_ptr<::arrow::DataType>(FieldVector)> GetNestedFactory(\n+    const ArrowType& origin_type, const ArrowType& inferred_type) {\n   switch (inferred_type.id()) {\n     case ::arrow::Type::STRUCT:\n       if (origin_type.id() == ::arrow::Type::STRUCT) {\n-        return RewrapStructField;\n+        return ::arrow::struct_;\n       }\n       break;\n     case ::arrow::Type::LIST:\n       // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n       if (origin_type.id() == ::arrow::Type::LIST) {\n-        return RewrapListField;\n+        return [](FieldVector fields) {\n+          DCHECK_EQ(fields.size(), 1);\n\nReview comment:\n       Can a schema be deserialized that has more then 1 field? i.e. should this return a user space error instead?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T05:16:23.431+0000",
                    "updated": "2020-10-07T05:16:23.431+0000",
                    "started": "2020-10-07T05:16:23.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496298",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500742727\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       remove the docs also?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T05:17:46.708+0000",
                    "updated": "2020-10-07T05:17:46.708+0000",
                    "started": "2020-10-07T05:17:46.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496299",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500744423\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,62 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+std::function<std::shared_ptr<::arrow::DataType>(FieldVector)> GetNestedFactory(\n+    const ArrowType& origin_type, const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return ::arrow::struct_;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return [](FieldVector fields) {\n+          DCHECK_EQ(fields.size(), 1);\n+          return ::arrow::list(std::move(fields[0]));\n+        };\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n+\n+Result<bool> ApplyOriginalStorageMetadata(const Field& origin_field,\n+                                          SchemaField* inferred) {\n+  bool modified = false;\n+\n   auto origin_type = origin_field.type();\n   auto inferred_type = inferred->field->type();\n \n+  const int num_children = inferred_type->num_fields();\n+\n+  if (num_children > 0 && origin_type->num_fields() == num_children) {\n+    DCHECK_EQ(static_cast<int>(inferred->children.size()), num_children);\n+    if (auto factory = GetNestedFactory(*origin_type, *inferred_type)) {\n\nReview comment:\n       nit: auto here is a little bit hard for me to read.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T05:24:01.586+0000",
                    "updated": "2020-10-07T05:24:01.586+0000",
                    "started": "2020-10-07T05:24:01.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496302",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500745029\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -725,23 +778,18 @@ Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* infe\n       field_metadata = field_metadata->Merge(*inferred->field->metadata());\n     }\n     inferred->field = inferred->field->WithMetadata(field_metadata);\n-  }\n-\n-  if (origin_type->id() == ::arrow::Type::EXTENSION) {\n-    // Restore extension type, if the storage type is as read from Parquet\n-    const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n-    if (ex_type.storage_type()->Equals(*inferred_type)) {\n-      inferred->field = inferred->field->WithType(origin_type);\n-    }\n+    modified = true;\n   }\n \n   // TODO Should apply metadata recursively to children, but for that we need\n\nReview comment:\n       remove comment?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T05:26:17.966+0000",
                    "updated": "2020-10-07T05:26:17.966+0000",
                    "started": "2020-10-07T05:26:17.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496304",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500745907\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       Alos, just want to double check that we can always get the raw underlying type from the extension types?  One place where this code could cause some issues is if a leaf column is filtered out but the extension type requires all columns. (this doesn't necessarily apply to this code review as i think this was potentially and already existng bug).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T05:29:34.646+0000",
                    "updated": "2020-10-07T05:29:34.646+0000",
                    "started": "2020-10-07T05:29:34.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496306",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500861539\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -688,32 +688,21 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n \n Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n \n-using NestedFieldRewrapper = std::function<Status(FieldVector, SchemaField*)>;\n-\n-Status RewrapStructField(FieldVector new_children, SchemaField* inferred) {\n-  inferred->field = inferred->field->WithType(::arrow::struct_(std::move(new_children)));\n-  return Status::OK();\n-}\n-\n-Status RewrapListField(FieldVector new_children, SchemaField* inferred) {\n-  DCHECK_EQ(new_children.size(), 1);\n-  inferred->field = inferred->field->WithType(::arrow::list(new_children[0]));\n-  return Status::OK();\n-}\n-\n-// XXX Perhaps add a DataType::WithFields method?\n-NestedFieldRewrapper GetNestedFieldRewrapper(const ArrowType& origin_type,\n-                                             const ArrowType& inferred_type) {\n+std::function<std::shared_ptr<::arrow::DataType>(FieldVector)> GetNestedFactory(\n+    const ArrowType& origin_type, const ArrowType& inferred_type) {\n   switch (inferred_type.id()) {\n     case ::arrow::Type::STRUCT:\n       if (origin_type.id() == ::arrow::Type::STRUCT) {\n-        return RewrapStructField;\n+        return ::arrow::struct_;\n       }\n       break;\n     case ::arrow::Type::LIST:\n       // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n       if (origin_type.id() == ::arrow::Type::LIST) {\n-        return RewrapListField;\n+        return [](FieldVector fields) {\n+          DCHECK_EQ(fields.size(), 1);\n\nReview comment:\n       Normally no, because we already checked that `origin_type->num_fields() == inferred_type->num_fields()`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T09:16:50.599+0000",
                    "updated": "2020-10-07T09:16:50.599+0000",
                    "started": "2020-10-07T09:16:50.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496402",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500862082\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,62 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+std::function<std::shared_ptr<::arrow::DataType>(FieldVector)> GetNestedFactory(\n+    const ArrowType& origin_type, const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return ::arrow::struct_;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return [](FieldVector fields) {\n+          DCHECK_EQ(fields.size(), 1);\n+          return ::arrow::list(std::move(fields[0]));\n+        };\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n+\n+Result<bool> ApplyOriginalStorageMetadata(const Field& origin_field,\n+                                          SchemaField* inferred) {\n+  bool modified = false;\n+\n   auto origin_type = origin_field.type();\n   auto inferred_type = inferred->field->type();\n \n+  const int num_children = inferred_type->num_fields();\n+\n+  if (num_children > 0 && origin_type->num_fields() == num_children) {\n+    DCHECK_EQ(static_cast<int>(inferred->children.size()), num_children);\n+    if (auto factory = GetNestedFactory(*origin_type, *inferred_type)) {\n\nReview comment:\n       What would you prefer? Avoid combining `if` and assignment?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T09:17:35.866+0000",
                    "updated": "2020-10-07T09:17:35.866+0000",
                    "started": "2020-10-07T09:17:35.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496403",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500862229\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -725,23 +778,18 @@ Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* infe\n       field_metadata = field_metadata->Merge(*inferred->field->metadata());\n     }\n     inferred->field = inferred->field->WithMetadata(field_metadata);\n-  }\n-\n-  if (origin_type->id() == ::arrow::Type::EXTENSION) {\n-    // Restore extension type, if the storage type is as read from Parquet\n-    const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n-    if (ex_type.storage_type()->Equals(*inferred_type)) {\n-      inferred->field = inferred->field->WithType(origin_type);\n-    }\n+    modified = true;\n   }\n \n   // TODO Should apply metadata recursively to children, but for that we need\n\nReview comment:\n       Oops, yes.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T09:17:49.898+0000",
                    "updated": "2020-10-07T09:17:49.898+0000",
                    "started": "2020-10-07T09:17:49.897+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496404",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500863193\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       Ah, yes, will remove, sorry.\r\n   You may be right about the issue, though I'm not sure how one would filter out a column from an extension's storage type.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T09:19:23.353+0000",
                    "updated": "2020-10-07T09:19:23.353+0000",
                    "started": "2020-10-07T09:19:23.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496405",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r500875953\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -689,10 +686,62 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n \n-Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n+Result<bool> ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred);\n+\n+std::function<std::shared_ptr<::arrow::DataType>(FieldVector)> GetNestedFactory(\n+    const ArrowType& origin_type, const ArrowType& inferred_type) {\n+  switch (inferred_type.id()) {\n+    case ::arrow::Type::STRUCT:\n+      if (origin_type.id() == ::arrow::Type::STRUCT) {\n+        return ::arrow::struct_;\n+      }\n+      break;\n+    case ::arrow::Type::LIST:\n+      // TODO also allow LARGE_LIST and FIXED_SIZE_LIST\n+      if (origin_type.id() == ::arrow::Type::LIST) {\n+        return [](FieldVector fields) {\n+          DCHECK_EQ(fields.size(), 1);\n+          return ::arrow::list(std::move(fields[0]));\n+        };\n+      }\n+      break;\n+    default:\n+      break;\n+  }\n+  return {};\n+}\n+\n+Result<bool> ApplyOriginalStorageMetadata(const Field& origin_field,\n+                                          SchemaField* inferred) {\n+  bool modified = false;\n+\n   auto origin_type = origin_field.type();\n   auto inferred_type = inferred->field->type();\n \n+  const int num_children = inferred_type->num_fields();\n+\n+  if (num_children > 0 && origin_type->num_fields() == num_children) {\n+    DCHECK_EQ(static_cast<int>(inferred->children.size()), num_children);\n+    if (auto factory = GetNestedFactory(*origin_type, *inferred_type)) {\n\nReview comment:\n       I've put the assignment on its own line.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T09:39:46.165+0000",
                    "updated": "2020-10-07T09:39:46.165+0000",
                    "started": "2020-10-07T09:39:46.164+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496419",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#issuecomment-704819253\n\n\n   Will merge if CI green. Thank you for the reviews!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T09:39:59.263+0000",
                    "updated": "2020-10-07T09:39:59.263+0000",
                    "started": "2020-10-07T09:39:59.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496420",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/496516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T11:49:34.741+0000",
                    "updated": "2020-10-07T11:49:34.741+0000",
                    "started": "2020-10-07T11:49:34.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496516",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/497080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r501446625\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       To provide more context https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/reader.cc#L791 GetReader can return a nullptr for a reader, and for struct fields the Types can change if a specific one is filtered https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/reader.cc#L840\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-08T04:50:56.110+0000",
                    "updated": "2020-10-08T04:50:56.110+0000",
                    "started": "2020-10-08T04:50:56.110+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "497080",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/497174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r501548523\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       It would be nice if you could open a JIRA with a reproducer, or at least guidance as to how this can be reproduced.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-08T08:43:53.601+0000",
                    "updated": "2020-10-08T08:43:53.601+0000",
                    "started": "2020-10-08T08:43:53.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "497174",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/498052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r501446625\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       To provide more context https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/reader.cc#L791 GetReader can return a nullptr for a reader, and for struct fields the Types can change if a specific one is filtered https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/reader.cc#L840\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-09T13:32:05.423+0000",
                    "updated": "2020-10-09T13:32:05.423+0000",
                    "started": "2020-10-09T13:32:05.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498052",
                    "issueId": "13326503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/worklog/498065",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8366:\nURL: https://github.com/apache/arrow/pull/8366#discussion_r501548523\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.h\n##########\n@@ -91,7 +91,6 @@ struct PARQUET_EXPORT SchemaField {\n   std::shared_ptr<::arrow::Field> field;\n   // If field has an extension type, an equivalent field with the storage type,\n\nReview comment:\n       It would be nice if you could open a JIRA with a reproducer, or at least guidance as to how this can be reproduced.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-09T13:36:58.356+0000",
                    "updated": "2020-10-09T13:36:58.356+0000",
                    "started": "2020-10-09T13:36:58.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498065",
                    "issueId": "13326503"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@18f3a9a7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3daf861f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fe60483[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1eb8fe1e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4631ec2e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@75586e56[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a75ae62[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@43e4eb3c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a7d3ff2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c61ca35[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bd07565[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6f89d228[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 07 11:51:26 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-07T11:51:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9943/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-09-08T14:31:59.000+0000",
        "updated": "2020-10-09T13:36:59.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, {{ApplyOriginalMetadata}} in {{src/parquet/arrow/schema.cc}} is only applied for the top-level node of each schema field. Nested metadata (such as dicts-inside-lists, etc.) will not be applied.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Arrow metadata not applied recursively when reading Parquet file",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/comment/17207976",
                    "id": "17207976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~emkornfield] Are you working on this already? Otherwise I may try to do it before 2.0.0.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-10-05T10:13:40.413+0000",
                    "updated": "2020-10-05T10:13:40.413+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/comment/17208108",
                    "id": "17208108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Please go ahead and pick this up.  I think getting it into 2.0 will be good because it enables things like reading LargeList/FixedSizeList as nested elements.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-05T14:32:19.364+0000",
                    "updated": "2020-10-05T14:32:19.364+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/comment/17208110",
                    "id": "17208110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "If you could do it based off of https://github.com/emkornfield/arrow/tree/read_most_types that could save me some merge conflicts.  The branch is my work in progress for ARROW-7960 (I need to add tests to verify my code for maps works, but other round trips seems to ework, I had to fix some bugs for FixedSizeList)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-05T14:36:06.555+0000",
                    "updated": "2020-10-05T14:36:06.555+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/comment/17208147",
                    "id": "17208147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Well... ideally we start the release process by the end of the week, so I don't think that's workable.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-10-05T15:49:36.084+0000",
                    "updated": "2020-10-05T15:49:36.084+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326503/comment/17209496",
                    "id": "17209496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 8366\n[https://github.com/apache/arrow/pull/8366]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-10-07T11:51:26.825+0000",
                    "updated": "2020-10-07T11:51:26.825+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0if68:",
        "customfield_12314139": null
    }
}