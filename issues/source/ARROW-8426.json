{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13298048",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048",
    "key": "ARROW-8426",
    "fields": {
        "parent": {
            "id": "13298042",
            "key": "ARROW-8421",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13298042",
            "fields": {
                "summary": "[Rust] [Parquet] Implement parquet writer",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=carols10cents",
            "name": "carols10cents",
            "key": "carols10cents",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=carols10cents&avatarId=44235",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=carols10cents&avatarId=44235",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=carols10cents&avatarId=44235",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=carols10cents&avatarId=44235"
            },
            "displayName": "Carol Nichols",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8426/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 47,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/492116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents opened a new pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291\n\n\n   In this commit, I:\r\n   \r\n   - Extracted a `build_field` function for some code shared between\r\n   `schema_to_fb` and `schema_to_fb_offset` that needed to change\r\n   \r\n   - Uncommented the dictionary field from the Arrow schema roundtrip test\r\n   and add a dictionary field to the IPC roundtrip test\r\n   \r\n   - If a field is a dictionary field, call `add_dictionary` with the\r\n   dictionary field information on the flatbuffer field, building the\r\n   dictionary as [the C++ code does][cpp-dictionary] and describe with the\r\n   same comment\r\n   \r\n   - When getting the field type for a dictionary field, use the `value_type`\r\n   as [the C++ code does][cpp-value-type] and describe with the same\r\n   comment\r\n   \r\n   The tests pass because the Parquet -> Arrow conversion for dictionaries\r\n   is [already supported][parquet-to-arrow].\r\n   \r\n   [cpp-dictionary]: https://github.com/apache/arrow/blob/477c1021ac013f22389baf9154fb9ad0cf814bec/cpp/src/arrow/ipc/metadata_internal.cc#L426-L440\r\n   [cpp-value-type]: https://github.com/apache/arrow/blob/477c1021ac013f22389baf9154fb9ad0cf814bec/cpp/src/arrow/ipc/metadata_internal.cc#L662-L667\r\n   [parquet-to-arrow]: https://github.com/apache/arrow/blob/477c1021ac013f22389baf9154fb9ad0cf814bec/rust/arrow/src/ipc/convert.rs#L120-L127\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-28T19:01:12.281+0000",
                    "updated": "2020-09-28T19:01:12.281+0000",
                    "started": "2020-09-28T19:01:12.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "492116",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/492122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-700224359\n\n\n   https://issues.apache.org/jira/browse/ARROW-8426\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-28T19:05:57.036+0000",
                    "updated": "2020-09-28T19:05:57.036+0000",
                    "started": "2020-09-28T19:05:57.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "492122",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/492125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-700232219\n\n\n   Aaaand I see now that the ticket includes writing the dictionary *data*, while this PR only writes the dictionary *schema*. Well, this is part of the work needed anyway... getting to the rest of it now \ud83e\udd26\u200d\u2640\ufe0f \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-28T19:22:29.939+0000",
                    "updated": "2020-09-28T19:22:29.939+0000",
                    "started": "2020-09-28T19:22:29.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "492125",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/493105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#discussion_r497137450\n\n\n\n##########\nFile path: rust/arrow/src/ipc/convert.rs\n##########\n@@ -609,10 +621,45 @@ pub(crate) fn get_fb_field_type<'a: 'b, 'b>(\n                 children: Some(fbb.create_vector(&children[..])),\n             }\n         }\n+        Dictionary(_, value_type) => {\n+            // In this library, the dictionary \"type\" is a logical construct. Here we\n+            // pass through to the value type, as we've already captured the index\n+            // type in the DictionaryEncoding metadata in the parent field\n+            get_fb_field_type(value_type, fbb)\n+        }\n         t => unimplemented!(\"Type {:?} not supported\", t),\n     }\n }\n \n+/// Create an IPC dictionary encoding\n+pub(crate) fn get_fb_dictionary<'a: 'b, 'b>(\n+    index_type: &DataType,\n+    dict_id: i64,\n+    dict_is_ordered: bool,\n+    fbb: &mut FlatBufferBuilder<'a>,\n+) -> WIPOffset<ipc::DictionaryEncoding<'b>> {\n+    // We assume that the dictionary index type (as an integer) has already been\n+    // validated elsewhere, and can safely assume we are dealing with signed\n+    // integers\n+    let mut index_builder = ipc::IntBuilder::new(fbb);\n+    index_builder.add_is_signed(true);\n\nReview comment:\n       Although signed indices are preferred, we do support unsigned dictionary indices in the data types, so we might need to populate this based on the `index_type`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-30T18:33:51.509+0000",
                    "updated": "2020-09-30T18:33:51.509+0000",
                    "started": "2020-09-30T18:33:51.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "493105",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/493153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-701609481\n\n\n   Oops, I... thought I knew what I was doing a little bit, and I clearly don't at all \ud83d\ude05 \r\n   \r\n   I think I went down this path because rust/parquet/src/arrow/schema.rs had the commented-out dictionary field [that was added to this branch](https://github.com/apache/arrow/compare/rust-parquet-arrow-writer#diff-b1d078f4cb4841c220e8a274543ef616R1399) in this test:\r\n   \r\n   ```\r\n   #[test]\r\n       fn test_arrow_schema_roundtrip() -> Result<()> {\r\n           // This tests the roundtrip of an Arrow schema\r\n           // Fields that are commented out fail roundtrip tests or are unsupported by the writer\r\n   ```\r\n   \r\n   and I thought \"the writer\" in this comment and exercised by this test meant the Arrow -> Parquet writer. But it's the changes in rust/arrow/src/ipc/convert.rs that get this test to pass, so I'm not sure where I got turned around...\r\n   \r\n   Am I at least correct that adding dictionary support will involve adding support for the dictionary schema as well as the dictionary data? And that neither of those are done yet?\r\n   \r\n   I'm also unclear about what I should do with this PR based on your comment; should I close it for now or fix the signed index type issue and reopen it against master?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-30T19:53:08.393+0000",
                    "updated": "2020-09-30T19:53:08.393+0000",
                    "started": "2020-09-30T19:53:08.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "493153",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/493161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-701614109\n\n\n   > Am I at least correct that adding dictionary support will involve adding support for the dictionary schema as well as the dictionary data?\r\n   \r\n   Ok well I just found https://github.com/apache/arrow/compare/rust-parquet-arrow-writer#diff-b1d078f4cb4841c220e8a274543ef616R356-R360 which seems to indicate no, there isn't actually schema conversion that needs to be done :(\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-30T20:02:22.190+0000",
                    "updated": "2020-09-30T20:02:22.190+0000",
                    "started": "2020-09-30T20:02:22.190+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "493161",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/493176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-701648619\n\n\n   @nevi-me Regarding\r\n   \r\n   > We might not be merging the changes on this branch into the main branch in time for 2.0.0 (est October 9)\r\n   \r\n   How can I best help with getting the rust-parquet-arrow-writer branch ready to be merged into master? I see you're concerned about test coverage, and I think writing more tests would help me to understand all the things I clearly don't \ud83d\ude05 What parts need test coverage the most, in your opinion?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-30T21:11:58.734+0000",
                    "updated": "2020-09-30T21:11:58.734+0000",
                    "started": "2020-09-30T21:11:58.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "493176",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/494210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-703011014\n\n\n   Hi @carols10cents, my apologies for the delay.\r\n   \r\n   > Am I at least correct that adding dictionary support will involve adding support for the dictionary schema as well as the dictionary data? And that neither of those are done yet?\r\n   \r\n   The Parquet format's dictionary semantics are in my understanding different to Arrow, in that we could have a `StringArray` in Arrow that gets saved with Parquet's dictionary encoding. I'm still going through the rest of the Rust Parquet codebase though, so I'm not speaking from any authority.\r\n   \r\n   My comment was more in passing, and generally around dictionary support in IPC, in that beyond serializing an `arrow::datatypes::Schema` to `arrow::ipc::Schema`, there might be little in relation between the file formats.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-03T00:21:21.036+0000",
                    "updated": "2020-10-03T00:21:21.036+0000",
                    "started": "2020-10-03T00:21:21.036+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "494210",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/494211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-703013274\n\n\n   > How can I best help with getting the rust-parquet-arrow-writer branch ready to be merged into master?\r\n   \r\n   The main blocker right now is computing nested definition and repetition levels for deeply nested arrays (see https://github.com/apache/arrow/tree/master/cpp/src/parquet/arrow for the CPP implementation). I've been working on that on and off, due to time constraints (and the need to spend a good chunk of time per session; which I haven't had much of).\r\n   \r\n   Perhaps I can commit my work so you can have a look at that. I'll also open more JIRAs for work I believe we'd need to cover.\r\n   \r\n   Writing more test cases will also def help us. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-03T00:32:40.671+0000",
                    "updated": "2020-10-03T00:32:40.671+0000",
                    "started": "2020-10-03T00:32:40.671+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "494211",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/494213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#discussion_r499097627\n\n\n\n##########\nFile path: rust/arrow/src/ipc/convert.rs\n##########\n@@ -609,10 +621,45 @@ pub(crate) fn get_fb_field_type<'a: 'b, 'b>(\n                 children: Some(fbb.create_vector(&children[..])),\n             }\n         }\n+        Dictionary(_, value_type) => {\n+            // In this library, the dictionary \"type\" is a logical construct. Here we\n+            // pass through to the value type, as we've already captured the index\n+            // type in the DictionaryEncoding metadata in the parent field\n+            get_fb_field_type(value_type, fbb)\n+        }\n         t => unimplemented!(\"Type {:?} not supported\", t),\n     }\n }\n \n+/// Create an IPC dictionary encoding\n+pub(crate) fn get_fb_dictionary<'a: 'b, 'b>(\n+    index_type: &DataType,\n+    dict_id: i64,\n+    dict_is_ordered: bool,\n+    fbb: &mut FlatBufferBuilder<'a>,\n+) -> WIPOffset<ipc::DictionaryEncoding<'b>> {\n+    // We assume that the dictionary index type (as an integer) has already been\n+    // validated elsewhere, and can safely assume we are dealing with signed\n+    // integers\n+    let mut index_builder = ipc::IntBuilder::new(fbb);\n+    index_builder.add_is_signed(true);\n\nReview comment:\n       @carols10cents we can address this in future, I'm merging this\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-03T00:33:27.189+0000",
                    "updated": "2020-10-03T00:33:27.189+0000",
                    "started": "2020-10-03T00:33:27.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "494213",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/494215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-03T00:43:24.738+0000",
                    "updated": "2020-10-03T00:43:24.738+0000",
                    "started": "2020-10-03T00:43:24.738+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "494215",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/494216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8291:\nURL: https://github.com/apache/arrow/pull/8291#issuecomment-703014936\n\n\n   Merged\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-03T00:43:27.779+0000",
                    "updated": "2020-10-03T00:43:27.779+0000",
                    "started": "2020-10-03T00:43:27.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "494216",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/497548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents opened a new pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402\n\n\n   This adds more support for:\r\n   \r\n   - When converting Arrow -> Parquet containing an Arrow Dictionary,\r\n   materialize the Dictionary values and send to Parquet to be encoded with\r\n   a dictionary or not according to the Parquet settings (not supported:\r\n   converting an Arrow Dictionary directly to Parquet DictEncoding, also\r\n   only supports Int32 index types in this commit, also removes NULLs)\r\n   - When converting Parquet -> Arrow, noticing that the Arrow schema\r\n   metadata in a Parquet file has a Dictionary type and converting the data\r\n   to an Arrow dictionary (right now this only supports String dictionaries\r\n   \r\n   I'm not sure if this is in a good enough state to merge or not yet, please let me know @nevi-me !\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-08T19:48:46.851+0000",
                    "updated": "2020-10-08T19:48:46.851+0000",
                    "started": "2020-10-08T19:48:46.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "497548",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/497558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402#issuecomment-705795175\n\n\n   https://issues.apache.org/jira/browse/ARROW-8426\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-08T20:07:16.315+0000",
                    "updated": "2020-10-08T20:07:16.315+0000",
                    "started": "2020-10-08T20:07:16.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "497558",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/498026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402#issuecomment-705795175\n\n\n   https://issues.apache.org/jira/browse/ARROW-8426\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-09T13:28:39.789+0000",
                    "updated": "2020-10-09T13:28:39.789+0000",
                    "started": "2020-10-09T13:28:39.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498026",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/498253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents opened a new pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402\n\n\n   This adds more support for:\r\n   \r\n   - When converting Arrow -> Parquet containing an Arrow Dictionary,\r\n   materialize the Dictionary values and send to Parquet to be encoded with\r\n   a dictionary or not according to the Parquet settings (not supported:\r\n   converting an Arrow Dictionary directly to Parquet DictEncoding, also\r\n   only supports Int32 index types in this commit, also removes NULLs)\r\n   - When converting Parquet -> Arrow, noticing that the Arrow schema\r\n   metadata in a Parquet file has a Dictionary type and converting the data\r\n   to an Arrow dictionary (right now this only supports String dictionaries\r\n   \r\n   I'm not sure if this is in a good enough state to merge or not yet, please let me know @nevi-me !\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-09T13:52:22.331+0000",
                    "updated": "2020-10-09T13:52:22.331+0000",
                    "started": "2020-10-09T13:52:22.331+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498253",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/498933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402#issuecomment-706556497\n\n\n   Parquet's dictionary encoding is a complexity on its own. My understanding's that after a certain size, the dictionary no longer grows, but the additional values are stored the normal way. I'm still to spend more time on parquet-mr and the format.\r\n   I think the approach of not forcing Arrow dictionaries to have Parquet dictionary encoding is good.\r\n   \r\n   > also only supports Int32 index types in this commit, also removes NULLs\r\n   \r\n   Do you want to work on other index types and supporting primitive Arrow dictionaries? We could keep this PR open for longer; as long as it's not blocking any additional unit of work.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-10T14:20:40.088+0000",
                    "updated": "2020-10-10T14:20:40.088+0000",
                    "started": "2020-10-10T14:20:40.088+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498933",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/499008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402#discussion_r502831824\n\n\n\n##########\nFile path: rust/parquet/src/arrow/converter.rs\n##########\n@@ -253,6 +256,34 @@ impl Converter<Vec<Option<ByteArray>>, LargeBinaryArray> for LargeBinaryArrayCon\n     }\n }\n \n+pub struct DictionaryArrayConverter {}\n+\n+impl<K: ArrowDictionaryKeyType> Converter<Vec<Option<ByteArray>>, DictionaryArray<K>>\n+    for DictionaryArrayConverter\n+{\n+    fn convert(&self, source: Vec<Option<ByteArray>>) -> Result<DictionaryArray<K>> {\n+        let data_size = source\n+            .iter()\n+            .map(|x| x.as_ref().map(|b| b.len()).unwrap_or(0))\n+            .sum();\n+\n+        let keys_builder = PrimitiveBuilder::<K>::new(source.len());\n+        let values_builder = StringBuilder::with_capacity(source.len(), data_size);\n+\n+        let mut builder = StringDictionaryBuilder::new(keys_builder, values_builder);\n+        for v in source {\n+            match v {\n+                Some(array) => {\n+                    builder.append(array.as_utf8()?)?;\n\nReview comment:\n       ```suggestion\r\n                       let _ = builder.append(array.as_utf8()?)?;\r\n   ```\n\n##########\nFile path: rust/parquet/src/arrow/arrow_writer.rs\n##########\n@@ -175,15 +175,61 @@ fn write_leaves(\n             }\n             Ok(())\n         }\n+        ArrowDataType::Dictionary(k, v) => {\n+            // Materialize the packed dictionary and let the writer repack it\n+            let any_array = array.as_any();\n+            let (k2, v2) = match &**k {\n+                ArrowDataType::Int32 => {\n+                    let typed_array = any_array\n+                        .downcast_ref::<arrow_array::Int32DictionaryArray>()\n+                        .expect(\"Unable to get dictionary array\");\n+\n+                    (typed_array.keys(), typed_array.values())\n+                }\n+                o => unimplemented!(\"Unknown key type {:?}\", o),\n+            };\n+\n+            let k3 = k2;\n+            let v3 = v2\n+                .as_any()\n+                .downcast_ref::<arrow_array::StringArray>()\n+                .unwrap();\n+\n+            // TODO: This removes NULL values; what _should_ be done?\n+            // FIXME: Don't use `as`\n+            let materialized: Vec<_> = k3\n+                .flatten()\n+                .map(|k| v3.value(k as usize))\n+                .map(ByteArray::from)\n+                .collect();\n+            //\n\nReview comment:\n       It seems like it is ignored in the branch this PR opened against:\r\n   \r\n   ```\r\n   /// Get the underlying numeric array slice, skipping any null values.\r\n   /// If there are no null values, it might be quicker to get the slice directly instead of\r\n   /// calling this function.\r\n   fn get_numeric_array_slice<T, A>(array: &arrow_array::PrimitiveArray<A>) -> Vec<T::T>\r\n   where\r\n       T: DataType,\r\n       A: arrow::datatypes::ArrowNumericType,\r\n       T::T: From<A::Native>,\r\n   {\r\n       let mut values = Vec::with_capacity(array.len() - array.null_count());\r\n       for i in 0..array.len() {\r\n           if array.is_valid(i) {\r\n               values.push(array.value(i).into())\r\n           }\r\n       }\r\n       values\r\n   }\r\n   ```\r\n   \r\n   Thou other implementations are appending null values. We need some changes to adapt in Rust impl., which means ByteArray should have `From` implementation for `Vec<Option<u8>>` and `Option<&'a str>` then the aforementioned method should be adapted to nulls.\r\n   \r\n   Related impl. in Cxx: https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/path_internal.cc#L51-L73\n\n##########\nFile path: rust/parquet/src/arrow/arrow_writer.rs\n##########\n@@ -175,15 +175,61 @@ fn write_leaves(\n             }\n             Ok(())\n         }\n+        ArrowDataType::Dictionary(k, v) => {\n+            // Materialize the packed dictionary and let the writer repack it\n+            let any_array = array.as_any();\n+            let (k2, v2) = match &**k {\n+                ArrowDataType::Int32 => {\n\nReview comment:\n       Can you write a macro for generating other key types implemented by `ArrowDictionaryKeyType`:\r\n   https://docs.rs/arrow/1.0.1/arrow/datatypes/trait.ArrowDictionaryKeyType.html\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -894,6 +896,60 @@ impl<'a> ArrayReaderBuilder {\n                         >::new(\n                             page_iterator, column_desc, converter\n                         )?))\n+                    } else if let Some(ArrowType::Dictionary(index_type, _)) = arrow_type\n\nReview comment:\n       ```suggestion\r\n                       } else if let Some(ArrowType::Dictionary(key_type, _)) = arrow_type\r\n   ```\r\n   The key type is a better name for dictionaries. Since they are not directly representing indices in the generic terminology. Even though other implementations are using this term for it.\n\n##########\nFile path: rust/parquet/src/arrow/arrow_writer.rs\n##########\n@@ -175,15 +175,61 @@ fn write_leaves(\n             }\n             Ok(())\n         }\n+        ArrowDataType::Dictionary(k, v) => {\n+            // Materialize the packed dictionary and let the writer repack it\n+            let any_array = array.as_any();\n+            let (k2, v2) = match &**k {\n+                ArrowDataType::Int32 => {\n+                    let typed_array = any_array\n+                        .downcast_ref::<arrow_array::Int32DictionaryArray>()\n+                        .expect(\"Unable to get dictionary array\");\n+\n+                    (typed_array.keys(), typed_array.values())\n+                }\n+                o => unimplemented!(\"Unknown key type {:?}\", o),\n+            };\n+\n+            let k3 = k2;\n+            let v3 = v2\n+                .as_any()\n+                .downcast_ref::<arrow_array::StringArray>()\n+                .unwrap();\n+\n+            // TODO: This removes NULL values; what _should_ be done?\n+            // FIXME: Don't use `as`\n+            let materialized: Vec<_> = k3\n+                .flatten()\n+                .map(|k| v3.value(k as usize))\n+                .map(ByteArray::from)\n+                .collect();\n+            //\n+\n+            let mut col_writer = get_col_writer(&mut row_group_writer)?;\n+            let levels = levels.pop().unwrap();\n\nReview comment:\n       ```suggestion\r\n               let levels = levels.pop().expect(\"Levels exhausted\");\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-10T22:11:35.053+0000",
                    "updated": "2020-10-10T22:11:35.053+0000",
                    "started": "2020-10-10T22:11:35.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "499008",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/500024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402#issuecomment-707705023\n\n\n   > Do you want to work on other index types and supporting primitive Arrow dictionaries? We could keep this PR open for longer; as long as it's not blocking any additional unit of work.\r\n   \r\n   Yup, I'm happy to do that! I'll be rebasing, addressing feedback, and adding to this on Wednesday.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-13T12:28:44.795+0000",
                    "updated": "2020-10-13T12:28:44.795+0000",
                    "started": "2020-10-13T12:28:44.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "500024",
                    "issueId": "13298048"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/worklog/500825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on a change in pull request #8402:\nURL: https://github.com/apache/arrow/pull/8402#discussion_r504931448\n\n\n\n##########\nFile path: rust/parquet/src/arrow/converter.rs\n##########\n@@ -253,6 +256,34 @@ impl Converter<Vec<Option<ByteArray>>, LargeBinaryArray> for LargeBinaryArrayCon\n     }\n }\n \n+pub struct DictionaryArrayConverter {}\n+\n+impl<K: ArrowDictionaryKeyType> Converter<Vec<Option<ByteArray>>, DictionaryArray<K>>\n+    for DictionaryArrayConverter\n+{\n+    fn convert(&self, source: Vec<Option<ByteArray>>) -> Result<DictionaryArray<K>> {\n+        let data_size = source\n+            .iter()\n+            .map(|x| x.as_ref().map(|b| b.len()).unwrap_or(0))\n+            .sum();\n+\n+        let keys_builder = PrimitiveBuilder::<K>::new(source.len());\n+        let values_builder = StringBuilder::with_capacity(source.len(), data_size);\n+\n+        let mut builder = StringDictionaryBuilder::new(keys_builder, values_builder);\n+        for v in source {\n+            match v {\n+                Some(array) => {\n+                    builder.append(array.as_utf8()?)?;\n\nReview comment:\n       Do you mean make this one line again, like:\r\n   \r\n   `Some(array) => let _ = builder.append(array.as_utf8()?)?,`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-14T19:48:53.545+0000",
                    "updated": "2020-10-14T19:48:53.545+0000",
                    "started": "2020-10-14T19:48:53.544+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "500825",
                    "issueId": "13298048"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 28200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5b28f9a0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f28898a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d4d3a28[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@46828ad2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2288b38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@520e6d2a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56969139[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4904523[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42a77fc2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@63612d81[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11c778d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@72383d0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 28200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 03 00:35:42 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-03T00:35:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8426/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-04-13T14:38:46.000+0000",
        "updated": "2021-01-20T04:13:08.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 28200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Parquet] Add support for writing dictionary types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298048/comment/17206573",
                    "id": "17206573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 8291\n[https://github.com/apache/arrow/pull/8291]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-10-03T00:35:42.658+0000",
                    "updated": "2020-10-03T00:35:42.658+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0dkqw:",
        "customfield_12314139": null
    }
}