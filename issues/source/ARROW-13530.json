{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393112",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112",
    "key": "ARROW-13530",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "good-second-issue",
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12642237",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12642237",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13452328",
                    "key": "ARROW-16865",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13452328",
                    "fields": {
                        "summary": "[C++] Implement cumulative product, max, and min compute functions",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jabaribooker",
            "name": "jabaribooker",
            "key": "JIRAUSER281295",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Jabari Booker",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 86400,
            "total": 86400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 86400,
            "total": 86400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13530/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 144,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/729420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "JabariBooker opened a new pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460\n\n\n   Creating new compute function to perform a cumulative sum on a given array/vector.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T04:54:31.626+0000",
                    "updated": "2022-02-18T04:54:31.626+0000",
                    "started": "2022-02-18T04:54:31.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729420",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/729421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1043887139\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T04:54:54.187+0000",
                    "updated": "2022-02-18T04:54:54.187+0000",
                    "started": "2022-02-18T04:54:54.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729421",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/729833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1045113057\n\n\n   I thought we can't implement this until we decide how to handle ordering within the query engine? CC @westonpace I may not have the context\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T20:05:58.504+0000",
                    "updated": "2022-02-18T20:05:58.504+0000",
                    "started": "2022-02-18T20:05:58.504+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729833",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/729834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1045113630\n\n\n   Oh, or it can just be a vector function, which is fine, though not usable within the query engine.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T20:06:21.021+0000",
                    "updated": "2022-02-18T20:06:21.021+0000",
                    "started": "2022-02-18T20:06:21.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729834",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/729837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1045127916\n\n\n   I think we can write the scalar function for users calling into compute directly.  I agree it would be somewhat meaningless today if applied in, for example, a project expression.\r\n   \r\n   Can we have it take a starting value as one of the function options?\r\n   \r\n   Then we can use this whenever we get around to implementing the feature in the execution engine.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T20:19:35.038+0000",
                    "updated": "2022-02-18T20:19:35.038+0000",
                    "started": "2022-02-18T20:19:35.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729837",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#discussion_r818175519\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n+  CType sum = start;\n+  CType* data = checked_cast<CType*>(input->data()->buffers[1]->data());\n+  CType* out_values = checked_cast<CType*>(output->buffers[1]->mutable_data());\n+  for (size_t i = input->offset; i < input->length; ++i) {\n+    if (input->IsValid(i)) {\n+      sum += data[i];\n+      out_values[i] = sum;\n+    }\n+  }\n+\n+  return sum;\n+}\n+\n+template <typename Type>\n+struct CumulativeSumFunctor {\n+  using CType = TypeTraits<Type>::CType;\n+\n+  Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const NumericScalar& start_scalar =\n+        checked_cast<const NumericScalar&>(*batch[1].scalar());\n+    CType start = start_scalar.value;\n+\n+    switch (batch[0].kind()) {\n+      case Datum::ARRAY:\n+        std::shared_ptr<Array> input = batch[0].make_array();\n+        ArrayData* output = out->array().get();\n+\n+        output->length = input->data()->length;\n+        *output->type = std::move(input->type());\n+        uint8_t* out_bitmap = output->buffers[0]->mutable_data();\n+        int64_t out_offset = input->offset();\n+\n+        if (input->data()->MayHaveNulls()) {\n+          arrow::internal::CopyBitmap(input->null_bitmap_data(), input->offset(),\n+                                      input->length(), out_bitmap, out_offset);\n+          output->null_count = input->null_count();\n+        } else {\n+          bit_util::SetBitsTo(out_bitmap, out_offset, input->length(), true);\n+          output->null_count = 0;\n+        }\n+\n+        CumulativeSum(input, output, start);\n+        return Status::OK();\n+      case Datum::CHUNKED_ARRAY:\n+        const auto& input = batch[0].chunked_array();\n+\n+        ArrayVector out_chunks;\n+        for (const auto& chunk : input->chunks()) {\n+          auto out_chunk = std::make_shared<ArrayData>(\n+              chunk->type(), chunk->length(), chunk->null_count(), chunk->offset());\n+\n+          uint8_t* out_chunk_bitmap = out_chunk->buffers[0]->mutable_data();\n+          if (chunk->data()->MayHaveNulls()) {\n+            arrow::internal::CopyBitmap(chunk->null_bitmap_data(), chunk->offset(),\n+                                        chunk->length(), out_chunk_bitmap,\n+                                        out_chunk->offset());\n+            out_chunk->null_count = chunk->null_count();\n+          } else {\n+            bit_util::SetBitsTo(out_chunk_bitmap, out_chunk->offset(), chunk->length(),\n+                                true);\n+            out_chunk->null_count = 0;\n+          }\n+\n+          CType last_value = CumulativeSum(chunk, out_chunk, start);\n+          start = last_value;\n+          out_chunks.push_back(MakeArray(std::move(out_chunk)));\n+        }\n+\n+        *out->chunked_array() = ChunkedArray(out_chunks, input->type());\n+        return Status::OK();\n+      default:\n+        return Status::NotImplemented(\n+            \"Unsupported input type for function 'cumulative_sum': \",\n+            batch[0].ToString());\n+    }\n+  }\n+\n+  static std::shared_ptr<KernelSignature> GetSignature(detail::GetTypeId get_id) {\n+    return KernelSignature::Make(\n+        {InputType::Array(get_id.id), InputType::Scalar(get_id.id)},\n+        OutputType(FirstType));\n+  }\n+};\n+\n+const FunctionDoc cumulative_sum_doc(\n+    \"Compute the cumulative sum over an array of numbers\",\n+    (\"`values` must be an array of numeric type values.\\n\"\n+     \"`start` is a single value of the same type.\\n\"\n+     \"Return an array which is the cumulative sum computed over `values`\\n\"\n+     \"`start` is an optional starting sum of computation.\"),\n+    {\"values\", \"start\"});\n+\n+void RegisterVectorCumulativeSum(FunctionRegistry* registry) {\n+  auto add_kernel = [&](detail::GetTypeId get_id, ArrayKernelExec exec,\n+                        std::shared_ptr<ScalarFunction> func) {\n+    ScalarKernel kernel;\n+    kernel.mem_allocation = MemAllocation::type::PREALLOCATE;\n+    kernel.signature = CumulativeSumFunctor<NumberType>::GetSignature(get_id.id);\n+    kernel.exec = std::move(exec);\n+    DCHECK_OK(func->AddKernel(std::move(kernel)));\n+  };\n+\n+  auto cumulative_sum = std::make_shared<ScalarFunction>(\n+      \"cumulative_sum\", Arity::Binary(), &cumulative_sum_doc);\n+\n+  for (auto ty : NumericTypes()) {\n+    add_kernel(ty, GenerateTypeAgnosticPrimitive<CumulativeSumFunctor>(ty),\n\nReview comment:\n       We can also sum types that use a physical integer representation (e.g, Duration, Timestamp, etc.)\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n+  CType sum = start;\n+  CType* data = checked_cast<CType*>(input->data()->buffers[1]->data());\n+  CType* out_values = checked_cast<CType*>(output->buffers[1]->mutable_data());\n+  for (size_t i = input->offset; i < input->length; ++i) {\n+    if (input->IsValid(i)) {\n+      sum += data[i];\n+      out_values[i] = sum;\n+    }\n+  }\n+\n+  return sum;\n+}\n+\n+template <typename Type>\n+struct CumulativeSumFunctor {\n+  using CType = TypeTraits<Type>::CType;\n+\n+  Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const NumericScalar& start_scalar =\n+        checked_cast<const NumericScalar&>(*batch[1].scalar());\n+    CType start = start_scalar.value;\n\nReview comment:\n       I think the `start` argument could have a default value of 0 instead of being a mandatory argument. For this to work, then `start` would be a `FunctionOption` and this kernel would be unary.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n+  CType sum = start;\n+  CType* data = checked_cast<CType*>(input->data()->buffers[1]->data());\n+  CType* out_values = checked_cast<CType*>(output->buffers[1]->mutable_data());\n+  for (size_t i = input->offset; i < input->length; ++i) {\n+    if (input->IsValid(i)) {\n+      sum += data[i];\n+      out_values[i] = sum;\n+    }\n+  }\n+\n+  return sum;\n+}\n+\n+template <typename Type>\n+struct CumulativeSumFunctor {\n+  using CType = TypeTraits<Type>::CType;\n+\n+  Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const NumericScalar& start_scalar =\n+        checked_cast<const NumericScalar&>(*batch[1].scalar());\n+    CType start = start_scalar.value;\n+\n+    switch (batch[0].kind()) {\n+      case Datum::ARRAY:\n+        std::shared_ptr<Array> input = batch[0].make_array();\n+        ArrayData* output = out->array().get();\n+\n+        output->length = input->data()->length;\n+        *output->type = std::move(input->type());\n+        uint8_t* out_bitmap = output->buffers[0]->mutable_data();\n+        int64_t out_offset = input->offset();\n+\n+        if (input->data()->MayHaveNulls()) {\n+          arrow::internal::CopyBitmap(input->null_bitmap_data(), input->offset(),\n+                                      input->length(), out_bitmap, out_offset);\n+          output->null_count = input->null_count();\n+        } else {\n+          bit_util::SetBitsTo(out_bitmap, out_offset, input->length(), true);\n+          output->null_count = 0;\n+        }\n+\n+        CumulativeSum(input, output, start);\n+        return Status::OK();\n+      case Datum::CHUNKED_ARRAY:\n+        const auto& input = batch[0].chunked_array();\n+\n+        ArrayVector out_chunks;\n+        for (const auto& chunk : input->chunks()) {\n+          auto out_chunk = std::make_shared<ArrayData>(\n+              chunk->type(), chunk->length(), chunk->null_count(), chunk->offset());\n+\n+          uint8_t* out_chunk_bitmap = out_chunk->buffers[0]->mutable_data();\n+          if (chunk->data()->MayHaveNulls()) {\n+            arrow::internal::CopyBitmap(chunk->null_bitmap_data(), chunk->offset(),\n+                                        chunk->length(), out_chunk_bitmap,\n+                                        out_chunk->offset());\n+            out_chunk->null_count = chunk->null_count();\n+          } else {\n+            bit_util::SetBitsTo(out_chunk_bitmap, out_chunk->offset(), chunk->length(),\n+                                true);\n+            out_chunk->null_count = 0;\n+          }\n+\n+          CType last_value = CumulativeSum(chunk, out_chunk, start);\n+          start = last_value;\n+          out_chunks.push_back(MakeArray(std::move(out_chunk)));\n+        }\n+\n+        *out->chunked_array() = ChunkedArray(out_chunks, input->type());\n+        return Status::OK();\n+      default:\n+        return Status::NotImplemented(\n+            \"Unsupported input type for function 'cumulative_sum': \",\n+            batch[0].ToString());\n+    }\n+  }\n+\n+  static std::shared_ptr<KernelSignature> GetSignature(detail::GetTypeId get_id) {\n+    return KernelSignature::Make(\n+        {InputType::Array(get_id.id), InputType::Scalar(get_id.id)},\n+        OutputType(FirstType));\n+  }\n+};\n+\n+const FunctionDoc cumulative_sum_doc(\n+    \"Compute the cumulative sum over an array of numbers\",\n+    (\"`values` must be an array of numeric type values.\\n\"\n+     \"`start` is a single value of the same type.\\n\"\n+     \"Return an array which is the cumulative sum computed over `values`\\n\"\n+     \"`start` is an optional starting sum of computation.\"),\n+    {\"values\", \"start\"});\n\nReview comment:\n       Also, include a statement of how null values are handled.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n+  CType sum = start;\n+  CType* data = checked_cast<CType*>(input->data()->buffers[1]->data());\n+  CType* out_values = checked_cast<CType*>(output->buffers[1]->mutable_data());\n+  for (size_t i = input->offset; i < input->length; ++i) {\n+    if (input->IsValid(i)) {\n+      sum += data[i];\n+      out_values[i] = sum;\n+    }\n+  }\n+\n+  return sum;\n+}\n+\n+template <typename Type>\n+struct CumulativeSumFunctor {\n+  using CType = TypeTraits<Type>::CType;\n+\n+  Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const NumericScalar& start_scalar =\n+        checked_cast<const NumericScalar&>(*batch[1].scalar());\n+    CType start = start_scalar.value;\n+\n+    switch (batch[0].kind()) {\n+      case Datum::ARRAY:\n+        std::shared_ptr<Array> input = batch[0].make_array();\n+        ArrayData* output = out->array().get();\n+\n+        output->length = input->data()->length;\n+        *output->type = std::move(input->type());\n+        uint8_t* out_bitmap = output->buffers[0]->mutable_data();\n\nReview comment:\n       bitmap can be nullptr\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n\nReview comment:\n       This can be included as a method of `CumulativeSumFunctor` as `Sum`. Any particular reason why it stands alone?\r\n   \r\n   I suggest renaming `CumulativeSumFunctor` to `CumulativeSum`.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n\nReview comment:\n       Why use an anonymous namespace here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T23:26:28.666+0000",
                    "updated": "2022-03-02T23:26:28.666+0000",
                    "started": "2022-03-02T23:26:28.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735654",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#discussion_r818189287\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n+  CType sum = start;\n+  CType* data = checked_cast<CType*>(input->data()->buffers[1]->data());\n+  CType* out_values = checked_cast<CType*>(output->buffers[1]->mutable_data());\n+  for (size_t i = input->offset; i < input->length; ++i) {\n+    if (input->IsValid(i)) {\n+      sum += data[i];\n\nReview comment:\n       The `Add` kernel uses a \"safe-add\" for signed integers, maybe we can invoke the `Add` kernel directly here to handle the different types in the same manner.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T23:29:14.344+0000",
                    "updated": "2022-03-02T23:29:14.344+0000",
                    "started": "2022-03-02T23:29:14.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735655",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#discussion_r818192426\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cumulative_sum.cc\n##########\n@@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/array/array_base.h\"\n+#include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/visit_type_inline.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace internal {\n+namespace {\n+\n+template <typename CType>\n+CType CumulativeSum(std::shared_ptr<Array>& input, ArrayData* output, CType start) {\n+  CType sum = start;\n+  CType* data = checked_cast<CType*>(input->data()->buffers[1]->data());\n+  CType* out_values = checked_cast<CType*>(output->buffers[1]->mutable_data());\n+  for (size_t i = input->offset; i < input->length; ++i) {\n+    if (input->IsValid(i)) {\n+      sum += data[i];\n+      out_values[i] = sum;\n+    }\n+  }\n+\n+  return sum;\n+}\n+\n+template <typename Type>\n+struct CumulativeSumFunctor {\n+  using CType = TypeTraits<Type>::CType;\n+\n+  Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const NumericScalar& start_scalar =\n+        checked_cast<const NumericScalar&>(*batch[1].scalar());\n+    CType start = start_scalar.value;\n+\n+    switch (batch[0].kind()) {\n+      case Datum::ARRAY:\n+        std::shared_ptr<Array> input = batch[0].make_array();\n+        ArrayData* output = out->array().get();\n+\n+        output->length = input->data()->length;\n+        *output->type = std::move(input->type());\n+        uint8_t* out_bitmap = output->buffers[0]->mutable_data();\n+        int64_t out_offset = input->offset();\n+\n+        if (input->data()->MayHaveNulls()) {\n+          arrow::internal::CopyBitmap(input->null_bitmap_data(), input->offset(),\n+                                      input->length(), out_bitmap, out_offset);\n+          output->null_count = input->null_count();\n+        } else {\n+          bit_util::SetBitsTo(out_bitmap, out_offset, input->length(), true);\n+          output->null_count = 0;\n+        }\n+\n+        CumulativeSum(input, output, start);\n+        return Status::OK();\n+      case Datum::CHUNKED_ARRAY:\n+        const auto& input = batch[0].chunked_array();\n+\n+        ArrayVector out_chunks;\n+        for (const auto& chunk : input->chunks()) {\n+          auto out_chunk = std::make_shared<ArrayData>(\n+              chunk->type(), chunk->length(), chunk->null_count(), chunk->offset());\n+\n+          uint8_t* out_chunk_bitmap = out_chunk->buffers[0]->mutable_data();\n+          if (chunk->data()->MayHaveNulls()) {\n+            arrow::internal::CopyBitmap(chunk->null_bitmap_data(), chunk->offset(),\n+                                        chunk->length(), out_chunk_bitmap,\n+                                        out_chunk->offset());\n+            out_chunk->null_count = chunk->null_count();\n+          } else {\n+            bit_util::SetBitsTo(out_chunk_bitmap, out_chunk->offset(), chunk->length(),\n+                                true);\n+            out_chunk->null_count = 0;\n+          }\n+\n+          CType last_value = CumulativeSum(chunk, out_chunk, start);\n+          start = last_value;\n+          out_chunks.push_back(MakeArray(std::move(out_chunk)));\n+        }\n+\n+        *out->chunked_array() = ChunkedArray(out_chunks, input->type());\n+        return Status::OK();\n+      default:\n+        return Status::NotImplemented(\n+            \"Unsupported input type for function 'cumulative_sum': \",\n+            batch[0].ToString());\n+    }\n+  }\n+\n+  static std::shared_ptr<KernelSignature> GetSignature(detail::GetTypeId get_id) {\n+    return KernelSignature::Make(\n+        {InputType::Array(get_id.id), InputType::Scalar(get_id.id)},\n+        OutputType(FirstType));\n+  }\n+};\n+\n+const FunctionDoc cumulative_sum_doc(\n+    \"Compute the cumulative sum over an array of numbers\",\n+    (\"`values` must be an array of numeric type values.\\n\"\n+     \"`start` is a single value of the same type.\\n\"\n+     \"Return an array which is the cumulative sum computed over `values`\\n\"\n+     \"`start` is an optional starting sum of computation.\"),\n+    {\"values\", \"start\"});\n+\n+void RegisterVectorCumulativeSum(FunctionRegistry* registry) {\n+  auto add_kernel = [&](detail::GetTypeId get_id, ArrayKernelExec exec,\n+                        std::shared_ptr<ScalarFunction> func) {\n+    ScalarKernel kernel;\n+    kernel.mem_allocation = MemAllocation::type::PREALLOCATE;\n+    kernel.signature = CumulativeSumFunctor<NumberType>::GetSignature(get_id.id);\n+    kernel.exec = std::move(exec);\n+    DCHECK_OK(func->AddKernel(std::move(kernel)));\n+  };\n+\n+  auto cumulative_sum = std::make_shared<ScalarFunction>(\n\nReview comment:\n       cumulative sum should be implemented as a [`VectorFunction`](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/function.h#L177-L180), not `ScalarFunction`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T23:35:40.127+0000",
                    "updated": "2022-03-02T23:35:40.127+0000",
                    "started": "2022-03-02T23:35:40.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735659",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057520554\n\n\n   @JabariBooker The following are the main actions to complete when adding a compute function to C++, including Python bindings:\r\n   \r\n   * Implement function/kernels in C++ .cc file\r\n   * [Add function declaration to C++ public API](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/api_vector.h#L293-L296)\r\n   * [Add function to C++ docs](https://github.com/apache/arrow/blob/master/docs/source/cpp/compute.rst)\r\n   * Only applicable if new `FunctionOptions` are defined:\r\n      * [Declare](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/api_vector.h#L36) and [define](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/api_vector.cc) C++ `XXXOptions`\r\n      * [Cython header binding for options pyarrow/includes/libarrow.pxd](https://github.com/apache/arrow/blob/master/python/pyarrow/includes/libarrow.pxd)\r\n      * [Cython/Python definitions for options pyarrow/_compute.pyx](https://github.com/apache/arrow/blob/master/python/pyarrow/_compute.pyx)\r\n      * [Python test for `XXXOptions`](https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_compute.py)\r\n   * [Python tests for compute function](https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_compute.py)\r\n   * [Add function to Python docs](https://github.com/apache/arrow/blob/master/docs/source/python/api/compute.rst)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T00:00:26.225+0000",
                    "updated": "2022-03-03T00:00:26.225+0000",
                    "started": "2022-03-03T00:00:26.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735667",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057521694\n\n\n   > I think we can write the scalar function for users calling into compute directly. I agree it would be somewhat meaningless today if applied in, for example, a project expression.\r\n   \r\n   @westonpace Why a `ScalarFunction` and not a `VectorFunction`? I understand the ordering issue, but...\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T00:02:16.480+0000",
                    "updated": "2022-03-03T00:02:16.480+0000",
                    "started": "2022-03-03T00:02:16.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735668",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce edited a comment on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057521694\n\n\n   > I think we can write the scalar function for users calling into compute directly. I agree it would be somewhat meaningless today if applied in, for example, a project expression.\r\n   \r\n   @westonpace Why a `ScalarFunction` and not a `VectorFunction`? I understand the ordering issue, but...\r\n   \r\n   An `Array` can be:\r\n   * summed up into a single total sum\r\n   * cumulative sum resulting in an `Array` with partial sums\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T00:05:11.370+0000",
                    "updated": "2022-03-03T00:05:11.370+0000",
                    "started": "2022-03-03T00:05:11.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735669",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057562475\n\n\n   > @westonpace Why a `ScalarFunction` and not a `VectorFunction`? I understand the ordering issue, but...\r\n   > \r\n   > An `Array` can be:\r\n   > \r\n   >     * summed up into a single total sum\r\n   \r\n   This would be a vector function but we already have this with `sum` right?\r\n   \r\n   > \r\n   >     * cumulative sum resulting in an `Array` with partial sums\r\n   \r\n   Isn't this a scalar function?  I may be misunderstanding the term.  My current interpretation is \"each row has a single output value\".\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:15:09.145+0000",
                    "updated": "2022-03-03T01:15:09.145+0000",
                    "started": "2022-03-03T01:15:09.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735695",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace edited a comment on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057562475\n\n\n   @edponce \r\n   > @westonpace Why a `ScalarFunction` and not a `VectorFunction`? I understand the ordering issue, but...\r\n   > \r\n   > An `Array` can be:\r\n   > \r\n   >     * summed up into a single total sum\r\n   \r\n   This would be a vector function but we already have this with `sum` right?\r\n   \r\n   > \r\n   >     * cumulative sum resulting in an `Array` with partial sums\r\n   \r\n   Isn't this a scalar function?  I may be misunderstanding the term.  My current interpretation is \"each row has a single output value\".\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:15:21.597+0000",
                    "updated": "2022-03-03T01:15:21.597+0000",
                    "started": "2022-03-03T01:15:21.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735696",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057567792\n\n\n   @westonpace Oops! I forgot that `sum` existed.\r\n   A `ScalarFunction` can operate independently on each element of the Array, but a cumulative sum requires the sum of the previous element to compute the next one (or the entire Array, depends on impl.), so this pattern conforms more to `VectorFunction`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:25:40.067+0000",
                    "updated": "2022-03-03T01:25:40.067+0000",
                    "started": "2022-03-03T01:25:40.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735699",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce edited a comment on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057567792\n\n\n   @westonpace Oops! I forgot that `sum` existed.\r\n   A `ScalarFunction` can operate independently on each element of the Array, but a cumulative sum requires the sum of the previous element to compute the next one (or the entire Array, depends on impl.), so this pattern I think conforms more to a `VectorFunction`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:30:49.590+0000",
                    "updated": "2022-03-03T01:30:49.590+0000",
                    "started": "2022-03-03T01:30:49.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735701",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057572087\n\n\n   > A ScalarFunction can operate independently on each element of the Array\r\n   \r\n   Given that definition I agree this is a vector function.  I was thinking only of the shape of the return value and not the statefull-ness of the function.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:34:32.769+0000",
                    "updated": "2022-03-03T01:34:32.769+0000",
                    "started": "2022-03-03T01:34:32.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735703",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057575945\n\n\n   ...well..., I just noticed that my definition is not exactly [the definition stated in the source code](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/function.h#L171-L180), so it would be great to have other opinions on this.\r\n   cc @lidavidm @pitrou \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:43:12.477+0000",
                    "updated": "2022-03-03T01:43:12.477+0000",
                    "started": "2022-03-03T01:43:12.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735708",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057576527\n\n\n   This sounds like a function \"whose behavior depends on the values of the entire arrays passed\", no?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:44:25.422+0000",
                    "updated": "2022-03-03T01:44:25.422+0000",
                    "started": "2022-03-03T01:44:25.422+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735709",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057577362\n\n\n   @lidavidm I agree.\r\n   Also, a ScalarFunction should conform to [this iteration pattern](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/codegen_internal.h#L610-L617), and cumulative sum does not, so it is a `VectorFunction`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:46:19.460+0000",
                    "updated": "2022-03-03T01:46:19.460+0000",
                    "started": "2022-03-03T01:46:19.460+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735710",
                    "issueId": "13393112"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/worklog/735715",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12460:\nURL: https://github.com/apache/arrow/pull/12460#issuecomment-1057580161\n\n\n   From a consumption standpoint the concept of \"scalar expression\" is pretty important:\r\n   \r\n   Oracle: https://docs.oracle.com/cd/B19306_01/server.102/b14200/expressions010.htm\r\n   CockroachDb: https://www.cockroachlabs.com/docs/stable/scalar-expressions.html\r\n   Substrait: https://substrait.io/expressions/scalar_functions/\r\n   \r\n   For example, only a scalar expression can be used in a project expression.  These are contrasted with \"table expressions\" which can return multiple rows for each execution.\r\n   \r\n   If Arrow wants to have a concept of \"scalar function\" and \"vector function\" that is different then I think that is \"ok but confusing\".  For example, to validate a plan, we can inspect the return value of the function, and ensure that it is scalar, to decide if an expression is a \"scalar expression\" regardless of whether it is a \"scalar function\".\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:52:54.159+0000",
                    "updated": "2022-03-03T01:52:54.159+0000",
                    "started": "2022-03-03T01:52:54.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735715",
                    "issueId": "13393112"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 86400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7f35e8a7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57009a86[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4803aa56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1b04cd7a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d8e2337[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1de4eb92[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4860a362[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7532c809[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1949da03[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@23cb1ac3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e7dd66b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@d6c392d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 86400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue May 31 13:23:20 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-05-31T13:23:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13530/watchers",
            "watchCount": 8,
            "isWatching": false
        },
        "created": "2021-08-02T15:48:40.000+0000",
        "updated": "2022-06-21T04:07:29.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "24h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 86400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement cumulative sum compute function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17391668",
                    "id": "17391668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~icook]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-02T15:49:03.907+0000",
                    "updated": "2021-08-02T15:49:03.907+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17508409",
                    "id": "17508409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The cumulative sum API for other libraries/languages are:\r\n* [pandas: {{cumsum(values, skipna=True)}}|https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.cumsum.html] - By default skips nulls/NaNs while the sum progresses\r\n* [R: {{cumsum(values)}}|https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cumsum] - Always propagates null/NaN after the first one is encountered\r\n* [numpy: {{cumsum(values)}}|https://numpy.org/doc/stable/reference/generated/numpy.cumsum.html] - Always propagates null/NaN after the first one is encountered\r\n\r\nBased on the combinations above, I think Arrow's cumulative sum should provide an option to handle nulls/NaNs ({{skip_nulls}}). What should be the default behavior: pandas or R/numpy?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-03-17T20:09:02.462+0000",
                    "updated": "2022-03-17T20:12:07.717+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17508421",
                    "id": "17508421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Also, if we plan on adding other cumulative functions, such as `cumprod`, `cummin`, `cummax` (no JIRAs for these), then we should only need generic code that can iterate through data and accumulate while using the existing `sum/min/max/multiply` kernels to execute the actual calculations.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-03-17T20:37:09.229+0000",
                    "updated": "2022-03-17T20:37:09.229+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17516180",
                    "id": "17516180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Different cumsum implementations have different behaviors wrt to nested inputs.\r\n # Which one should Arrow's cumsum follow?\r\n # Should a ChunkedArray input output a ChunkedArray of same shape or output a flattened Array?\r\n\r\n * *Pandas*\r\n{code:python}\r\n# Performs a \"cumulative concatenate\" operation for all nested lists\r\n>>> d = pd.Series([[1,2],[3,4]])\r\n>>> d.cumsum()\r\n0          [1, 2]\r\n1    [1, 2, 3, 4]\r\ndtype: object\r\n\r\n>>> d = pd.Series([[1,2,[3,4]],[[5,6],7],[8,9]])\r\n>>> d.cumsum(axis=0)\r\n0                     [1, 2, [3, 4]]\r\n1          [1, 2, [3, 4], [5, 6], 7]\r\n2    [1, 2, [3, 4], [5, 6], 7, 8, 9]\r\ndtype: object\r\n{code}\r\n\r\n * *Numpy*\r\n{code:python}\r\n#   Case 1: If all of the array elements have the same nested depth, then it flattens the array and applies cumsum.\r\n>>> d = np.array([[1,2],[3,4]])\r\n>>> d.cumsum()\r\narray([ 1,  3,  6, 10])\r\n\r\n#   Case 2: If array contains different nested depths, then cumsum represents a \"cumulative concatenate\" operation\r\n>>> d = np.array([[1,2,[3,4]],[[5,6],7],[8,9]])\r\n>>> d.cumsum()\r\narray([list([1, 2, [3, 4]]), list([1, 2, [3, 4], [5, 6], 7]),\r\n       list([1, 2, [3, 4], [5, 6], 7, 8, 9])], dtype=object)\r\n{code}\r\n\r\n * *R*\r\n\r\n # \r\n{code:r}\r\n# Flattens the nested list, then applies a cumsum\r\n> cumsum(c(c(1,2),c(3,4)))\r\n[1]  1  3  6 10\r\n\r\n> cumsum(c(c(1,2,c(3,4)),c(c(5,6),7),c(8,9)))\r\n[1]  1  3  6 10 15 21 28 36 45\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-04-02T00:44:52.844+0000",
                    "updated": "2022-04-02T00:48:52.833+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17516188",
                    "id": "17516188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "How about option 3) Report as an invalid operation.\r\n\r\nWe don't really support nested<->nested arithmetic elsewhere do we?\r\n\r\n{noformat}\r\n>>> a = pa.array([[1, 2, 3], [4, 5, 6]])\r\n>>> b = pa.scalar([1, 1, 1])\r\n>>> c = pa.scalar(5)\r\n>>> pc.add(a, b)\r\n# pyarrow.lib.ArrowNotImplementedError: Function 'add' has no kernel matching input types (array[list<item: int64>], scalar[list<item: int64>])\r\n>>> pc.add(a, a)\r\n# pyarrow.lib.ArrowNotImplementedError: Function 'add' has no kernel matching input types (array[list<item: int64>], array[list<item: int64>])\r\n>>> c = pa.scalar(5)\r\npyarrow.lib.ArrowNotImplementedError: Function 'add' has no kernel matching input types (array[list<item: int64>], scalar[int64])\r\n{noformat}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-04-02T01:24:57.892+0000",
                    "updated": "2022-04-02T01:24:57.892+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17516193",
                    "id": "17516193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Correct, arithmetic functions do not work on nested types, only scalar, arrays, and chunked arrays.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-04-02T02:05:11.838+0000",
                    "updated": "2022-04-02T02:05:11.838+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17516908",
                    "id": "17516908",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Here is the current behavior of {{{}cumulative_sum{}}}:\r\n{code:python}\r\n# Valid values\r\n>>> pc.cumulative_sum([1,2,3,4,5])\r\n<pyarrow.lib.Int64Array object at 0x12622c7c0>\r\n[\r\n  1,\r\n  3,\r\n  6,\r\n  10,\r\n  15\r\n]\r\n\r\n# Nulls and values\r\n>>> pc.cumulative_sum([1,2,None,3,None,5], skip_nulls=True)\r\n<pyarrow.lib.Int64Array object at 0x12622c760>\r\n[\r\n  1,\r\n  3,\r\n  null,\r\n  6,\r\n  null,\r\n  11\r\n]\r\n>>> pc.cumulative_sum([1,2,None,3,None,5], skip_nulls=False)\r\n<pyarrow.lib.Int64Array object at 0x12622c700>\r\n[\r\n  1,\r\n  3,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]\r\n\r\n# NaN followed by nulls and values\r\n>>> pc.cumulative_sum([1,np.nan,None,3,None,5], skip_nulls=True)\r\n<pyarrow.lib.DoubleArray object at 0x12622c640>\r\n[\r\n  1,\r\n  nan,\r\n  null,\r\n  nan,\r\n  null,\r\n  nan\r\n]\r\n>>> pc.cumulative_sum([1,np.nan,None,3,None,5], skip_nulls=False)\r\n<pyarrow.lib.DoubleArray object at 0x12622c700>\r\n[\r\n  1,\r\n  nan,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]\r\n {code}\r\n\r\nBehavior of {{cumsum}} with nulls and {{NaNs}}:\r\n* Numpy does not supports {{None}} values and behaves the same with {{NaNs}}\r\n* Pandas converts {{None}} to {{NaN}}, and behaves the same with {{NaNs}}. Has option to toggle {{NaN}} propagation.\r\n* R propagates both {{NA}} and {{NaNs}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-04-04T15:44:20.039+0000",
                    "updated": "2022-04-04T15:54:28.002+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17525986",
                    "id": "17525986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Postponing to 9.0. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-04-21T18:54:57.529+0000",
                    "updated": "2022-04-21T18:54:57.529+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393112/comment/17544380",
                    "id": "17544380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12460\n[https://github.com/apache/arrow/pull/12460]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-31T13:23:20.312+0000",
                    "updated": "2022-05-31T13:23:20.312+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tji0:",
        "customfield_12314139": null
    }
}