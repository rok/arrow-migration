{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13321699",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699",
    "key": "ARROW-9678",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9678/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/468341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919\n\n\n   This PR makes the projection optimizer remove any projection or aggregation that is not used down the plan, thus improving speed and convenience.\r\n   \r\n   This is worked on top of #7879 and only the last commit is specific to this PR.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-09T17:30:54.291+0000",
                    "updated": "2020-08-09T17:30:54.291+0000",
                    "started": "2020-08-09T17:30:54.290+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468341",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/468342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#issuecomment-671079606\n\n\n   https://issues.apache.org/jira/browse/ARROW-9678\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-09T17:32:07.832+0000",
                    "updated": "2020-08-09T17:32:07.832+0000",
                    "started": "2020-08-09T17:32:07.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468342",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/470582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#discussion_r470420151\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -45,116 +48,12 @@ impl ProjectionPushDown {\n     pub fn new() -> Self {\n         Self {}\n     }\n-\n-    fn optimize_plan(\n\nReview comment:\n       This just moves the function to outside `ProjectionPushDown`, since it does not really depend on the state of `ProjectionPushDown`, i.e. it can be written as a normal function.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T05:38:45.072+0000",
                    "updated": "2020-08-14T05:38:45.072+0000",
                    "started": "2020-08-14T05:38:45.071+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470582",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/470583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#discussion_r470420151\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -45,116 +48,12 @@ impl ProjectionPushDown {\n     pub fn new() -> Self {\n         Self {}\n     }\n-\n-    fn optimize_plan(\n\nReview comment:\n       This change is just a copy to outside `ProjectionPushDown`, since it does not really depend on the state of `ProjectionPushDown`, i.e. it can be written as a normal function.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T05:39:08.231+0000",
                    "updated": "2020-08-14T05:39:08.231+0000",
                    "started": "2020-08-14T05:39:08.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470583",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/470584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#issuecomment-673895968\n\n\n   FYI @andygrove and @alamb\r\n   \r\n   Again, this is useful mostly to the `table` API. SQL statements parsed into an optimized plan AFAIK.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T05:41:25.846+0000",
                    "updated": "2020-08-14T05:41:25.846+0000",
                    "started": "2020-08-14T05:41:25.843+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470584",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/470585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#issuecomment-673895968\n\n\n   FYI @andygrove and @alamb\r\n   \r\n   Again, this is useful mostly to the `table` API. SQL statements are parsed into an optimized plan AFAIK.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T05:41:39.787+0000",
                    "updated": "2020-08-14T05:41:39.787+0000",
                    "started": "2020-08-14T05:41:39.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470585",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/471071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#discussion_r470974242\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -196,12 +95,213 @@ fn get_projected_schema(\n     // create the projected schema\n     let mut projected_fields: Vec<Field> = Vec::with_capacity(projection.len());\n     for i in &projection {\n-        projected_fields.push(table_schema.fields()[*i].clone());\n+        projected_fields.push(schema.fields()[*i].clone());\n     }\n \n     Ok((projection, Schema::new(projected_fields)))\n }\n \n+/// Recursively transverses the logical plan removing expressions and that are not needed.\n+fn optimize_plan(\n+    plan: &LogicalPlan,\n+    required_columns: &HashSet<String>, // set of columns required up to this step\n+    has_projection: bool,\n+) -> Result<LogicalPlan> {\n+    match plan {\n+        LogicalPlan::Projection {\n+            input,\n+            expr,\n+            schema,\n+        } => {\n+            // projection:\n+            // * remove any expression that is not required\n+            // * construct the new set of required columns\n+\n+            let mut new_expr = Vec::new();\n+            let mut new_fields = Vec::new();\n+            let mut new_required_columns = HashSet::new();\n+\n+            // re-write schema and expressions removing un-used columns\n\nReview comment:\n       ```suggestion\r\n               // Gather all columns needed for expressions in this Projection\r\n   ```\r\n   I don't think the schema is being modified here\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -196,12 +95,213 @@ fn get_projected_schema(\n     // create the projected schema\n     let mut projected_fields: Vec<Field> = Vec::with_capacity(projection.len());\n     for i in &projection {\n-        projected_fields.push(table_schema.fields()[*i].clone());\n+        projected_fields.push(schema.fields()[*i].clone());\n     }\n \n     Ok((projection, Schema::new(projected_fields)))\n }\n \n+/// Recursively transverses the logical plan removing expressions and that are not needed.\n+fn optimize_plan(\n+    plan: &LogicalPlan,\n+    required_columns: &HashSet<String>, // set of columns required up to this step\n+    has_projection: bool,\n+) -> Result<LogicalPlan> {\n+    match plan {\n+        LogicalPlan::Projection {\n+            input,\n+            expr,\n+            schema,\n+        } => {\n+            // projection:\n+            // * remove any expression that is not required\n+            // * construct the new set of required columns\n+\n+            let mut new_expr = Vec::new();\n+            let mut new_fields = Vec::new();\n+            let mut new_required_columns = HashSet::new();\n+\n+            // re-write schema and expressions removing un-used columns\n+            schema\n+                .fields()\n+                .iter()\n+                .enumerate()\n+                .map(|(i, field)| {\n+                    if required_columns.contains(field.name()) {\n+                        new_expr.push(expr[i].clone());\n+                        new_fields.push(field.clone());\n+\n+                        // gather the new set of required columns\n+                        utils::expr_to_column_names(&expr[i], &mut new_required_columns)\n+                    } else {\n+                        Ok(())\n+                    }\n+                })\n+                .collect::<Result<()>>()?;\n+\n+            let new_input = optimize_plan(&input, &new_required_columns, true)?;\n+            if new_fields.len() == 0 {\n+                // no need for an expression at all\n+                Ok(new_input)\n+            } else {\n+                Ok(LogicalPlan::Projection {\n+                    expr: new_expr,\n+                    input: Box::new(new_input),\n+                    schema: Box::new(Schema::new(new_fields)),\n+                })\n+            }\n+        }\n+        LogicalPlan::Aggregate {\n+            schema,\n+            input,\n+            group_expr,\n+            aggr_expr,\n+            ..\n+        } => {\n+            // aggregate:\n+            // * remove any aggregate expression that is not required\n+            // * construct the new set of required columns\n+\n+            let mut new_required_columns = HashSet::new();\n+            utils::exprlist_to_column_names(group_expr, &mut new_required_columns)?;\n+\n+            // re-write schema and expressions removing un-used columns\n+            let mut new_aggr_expr = Vec::new();\n+            let mut new_fields = Vec::new();\n+            aggr_expr\n+                .iter()\n+                .map(|expr| {\n+                    let name = &expr.name(&schema)?;\n+                    let field = schema.field_with_name(name)?;\n+\n+                    if required_columns.contains(name) {\n+                        new_aggr_expr.push(expr.clone());\n+                        new_fields.push(field.clone());\n+\n+                        // add to the new set of required columns\n+                        utils::expr_to_column_names(expr, &mut new_required_columns)\n+                    } else {\n+                        Ok(())\n+                    }\n+                })\n+                .collect::<Result<()>>()?;\n+            let new_schema = Schema::new(new_fields);\n+\n+            Ok(LogicalPlan::Aggregate {\n+                group_expr: group_expr.clone(),\n+                aggr_expr: new_aggr_expr,\n+                input: Box::new(optimize_plan(&input, &new_required_columns, true)?),\n+                schema: Box::new(new_schema),\n+            })\n+        }\n+        // scans:\n+        // * remove un-used columns from the scan projection\n+        LogicalPlan::TableScan {\n+            schema_name,\n+            table_name,\n+            table_schema,\n+            projection,\n+            ..\n+        } => {\n+            let (projection, projected_schema) = get_projected_schema(\n+                &table_schema,\n+                projection,\n+                required_columns,\n+                has_projection,\n+            )?;\n+\n+            // return the table scan with projection\n+            Ok(LogicalPlan::TableScan {\n+                schema_name: schema_name.to_string(),\n+                table_name: table_name.to_string(),\n+                table_schema: table_schema.clone(),\n+                projection: Some(projection),\n+                projected_schema: Box::new(projected_schema),\n+            })\n+        }\n+        LogicalPlan::InMemoryScan {\n+            data,\n+            schema,\n+            projection,\n+            ..\n+        } => {\n+            let (projection, projected_schema) = get_projected_schema(\n+                &schema,\n+                projection,\n+                required_columns,\n+                has_projection,\n+            )?;\n+            Ok(LogicalPlan::InMemoryScan {\n+                data: data.clone(),\n+                schema: schema.clone(),\n+                projection: Some(projection),\n+                projected_schema: Box::new(projected_schema),\n+            })\n+        }\n+        LogicalPlan::CsvScan {\n+            path,\n+            has_header,\n+            delimiter,\n+            schema,\n+            projection,\n+            ..\n+        } => {\n+            let (projection, projected_schema) = get_projected_schema(\n+                &schema,\n+                projection,\n+                required_columns,\n+                has_projection,\n+            )?;\n+\n+            Ok(LogicalPlan::CsvScan {\n+                path: path.to_owned(),\n+                has_header: *has_header,\n+                schema: schema.clone(),\n+                delimiter: *delimiter,\n+                projection: Some(projection),\n+                projected_schema: Box::new(projected_schema),\n+            })\n+        }\n+        LogicalPlan::ParquetScan {\n+            path,\n+            schema,\n+            projection,\n+            ..\n+        } => {\n+            let (projection, projected_schema) = get_projected_schema(\n+                &schema,\n+                projection,\n+                required_columns,\n+                has_projection,\n+            )?;\n+\n+            Ok(LogicalPlan::ParquetScan {\n+                path: path.to_owned(),\n+                schema: schema.clone(),\n+                projection: Some(projection),\n+                projected_schema: Box::new(projected_schema),\n+            })\n+        }\n+        // all other nodes:\n+        // * gather all used columns as required columns\n+        _ => {\n+            let expr = utils::expressions(plan);\n\nReview comment:\n       This is a nice fallback here -- aka to default to the safe path and keep all expressions. \r\n   \r\n   I wonder what you would think about explicitly listing out the LogicalPlan types here (rather than using `_`) -- the rationale would be that then anyone who was adding a new LogicalPlan type would be told by the compiler they should consider how the project_push_down optimization should be applied to their new operator\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T12:55:12.847+0000",
                    "updated": "2020-08-15T12:55:12.847+0000",
                    "started": "2020-08-15T12:55:12.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471071",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/471103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#discussion_r471010910\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -196,12 +95,213 @@ fn get_projected_schema(\n     // create the projected schema\n     let mut projected_fields: Vec<Field> = Vec::with_capacity(projection.len());\n     for i in &projection {\n-        projected_fields.push(table_schema.fields()[*i].clone());\n+        projected_fields.push(schema.fields()[*i].clone());\n     }\n \n     Ok((projection, Schema::new(projected_fields)))\n }\n \n+/// Recursively transverses the logical plan removing expressions and that are not needed.\n+fn optimize_plan(\n+    plan: &LogicalPlan,\n+    required_columns: &HashSet<String>, // set of columns required up to this step\n+    has_projection: bool,\n+) -> Result<LogicalPlan> {\n+    match plan {\n+        LogicalPlan::Projection {\n+            input,\n+            expr,\n+            schema,\n+        } => {\n+            // projection:\n+            // * remove any expression that is not required\n+            // * construct the new set of required columns\n+\n+            let mut new_expr = Vec::new();\n+            let mut new_fields = Vec::new();\n+            let mut new_required_columns = HashSet::new();\n+\n+            // re-write schema and expressions removing un-used columns\n\nReview comment:\n       Fixed\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T16:24:07.352+0000",
                    "updated": "2020-08-15T16:24:07.352+0000",
                    "started": "2020-08-15T16:24:07.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471103",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/473557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#issuecomment-678659297\n\n\n   @andygrove , is there anything we need to work this further?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T16:10:45.413+0000",
                    "updated": "2020-08-22T16:10:45.413+0000",
                    "started": "2020-08-22T16:10:45.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473557",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/473562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#issuecomment-678662753\n\n\n   I do have a nagging concern that the logic may not work if the query plan contains aliases that rename columns, but we can address that as a follow up if/when that becomes an issue.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T16:40:45.802+0000",
                    "updated": "2020-08-22T16:40:45.802+0000",
                    "started": "2020-08-22T16:40:45.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473562",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/473563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T16:41:59.024+0000",
                    "updated": "2020-08-22T16:41:59.024+0000",
                    "started": "2020-08-22T16:41:59.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473563",
                    "issueId": "13321699"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/worklog/473566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7919:\nURL: https://github.com/apache/arrow/pull/7919#issuecomment-678665344\n\n\n   Thank you, @andygrove ! I encapsulated that thought on ARROW-9830, with issue type \"Test\". :)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T17:01:14.986+0000",
                    "updated": "2020-08-22T17:01:14.986+0000",
                    "started": "2020-08-22T17:01:14.985+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473566",
                    "issueId": "13321699"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6f4b2fe8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f9e15c2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6063029[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@69d9152e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ddc2f47[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@e2658df[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3916a64a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@18c7a423[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@649d166b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@58414a87[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54698333[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@71aac321[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 22 16:41:50 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-22T16:41:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9678/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-08-09T16:45:33.000+0000",
        "updated": "2020-08-22T17:01:16.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, the projection push down only removes columns that are never referenced in the plan. However, sometimes a projection declares columns that themselves are never used.\r\n\r\nThis issue is about improving the projection push-down to remove any column that is not logically required by the plan.\r\n\r\nFailing unit-test with the idea:\r\n\r\n{code:java}\r\n    #[test]\r\n    fn table_unused_column() -> Result<()> {\r\n        let table_scan = test_table_scan()?;\r\n        assert_eq!(3, table_scan.schema().fields().len());\r\n        assert_fields_eq(&table_scan, vec![\"a\", \"b\", \"c\"]);\r\n\r\n        // we never use \"b\" in the first projection => remove it\r\n        let plan = LogicalPlanBuilder::from(&table_scan)\r\n            .project(vec![col(\"c\"), col(\"a\"), col(\"b\")])?\r\n            .filter(col(\"c\").gt(&lit(1)))?\r\n            .project(vec![col(\"c\"), col(\"a\")])?\r\n            .build()?;\r\n\r\n        assert_fields_eq(&plan, vec![\"c\", \"a\"]);\r\n\r\n        let expected = \"\\\r\n        Projection: #c, #a\\\r\n        \\n  Selection: #c Gt Int32(1)\\\r\n        \\n    Projection: #c, #a\\\r\n        \\n      TableScan: test projection=Some([0, 2])\";\r\n\r\n        assert_optimized_plan_eq(&plan, expected);\r\n\r\n        Ok(())\r\n    }\r\n{code}\r\n\r\nThis issue was firstly identified by [~andygrove] [here|https://github.com/ballista-compute/ballista/issues/320].\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Improve projection push down to remove unused columns",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321699/comment/17182425",
                    "id": "17182425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 7919\n[https://github.com/apache/arrow/pull/7919]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-22T16:41:50.464+0000",
                    "updated": "2020-08-22T16:41:50.464+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hll4:",
        "customfield_12314139": null
    }
}