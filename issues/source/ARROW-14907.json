{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13414343",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343",
    "key": "ARROW-14907",
    "fields": {
        "parent": {
            "id": "13414334",
            "key": "ARROW-14902",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13414334",
            "fields": {
                "summary": "[R] Update write_csv_arrow() to support all args of readr::write_csv()",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cwidanage",
            "name": "cwidanage",
            "key": "cwidanage",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cwidanage&avatarId=47397",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cwidanage&avatarId=47397",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cwidanage&avatarId=47397",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cwidanage&avatarId=47397"
            },
            "displayName": "Chathura Widanage",
            "active": true,
            "timeZone": "Asia/Colombo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14907/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/690619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#issuecomment-986185897\n\n\n   https://issues.apache.org/jira/browse/ARROW-14907\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-05T08:16:19.635+0000",
                    "updated": "2021-12-05T08:16:19.635+0000",
                    "started": "2021-12-05T08:16:19.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690619",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/690788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r762735204\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -392,21 +397,24 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n       header_length += col_name.size();\n       header_length += CountEscapes(col_name);\n     }\n-    return header_length + (kQuoteDelimiterCount * schema_->num_fields());\n+    // header_length + ([quotes + ','] * schema_->num_fields()) + (eol - ',')\n+    return header_length + (kQuoteDelimiterCount * schema_->num_fields()) +\n+           (options_.eol.size() - 1);\n   }\n \n   Status WriteHeader() {\n     // Only called once, as part of initialization\n     RETURN_NOT_OK(data_buffer_->Resize(CalculateHeaderSize(), /*shrink_to_fit=*/false));\n-    char* next =\n-        reinterpret_cast<char*>(data_buffer_->mutable_data() + data_buffer_->size() - 1);\n+    char* next = reinterpret_cast<char*>(data_buffer_->mutable_data() +\n+                                         data_buffer_->size() - options_.eol.size());\n     for (int col = schema_->num_fields() - 1; col >= 0; col--) {\n\nReview comment:\n       @emkornfield Unrelated to this PR, but Chathura and I were looking at this last week and I was curious what the advantage was for writing the header backwards in this way.  Is there something we gain from this?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T06:38:42.167+0000",
                    "updated": "2021-12-06T06:38:42.167+0000",
                    "started": "2021-12-06T06:38:42.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690788",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/690789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r762737338\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -392,21 +397,24 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n       header_length += col_name.size();\n       header_length += CountEscapes(col_name);\n     }\n-    return header_length + (kQuoteDelimiterCount * schema_->num_fields());\n+    // header_length + ([quotes + ','] * schema_->num_fields()) + (eol - ',')\n+    return header_length + (kQuoteDelimiterCount * schema_->num_fields()) +\n+           (options_.eol.size() - 1);\n   }\n \n   Status WriteHeader() {\n     // Only called once, as part of initialization\n     RETURN_NOT_OK(data_buffer_->Resize(CalculateHeaderSize(), /*shrink_to_fit=*/false));\n-    char* next =\n-        reinterpret_cast<char*>(data_buffer_->mutable_data() + data_buffer_->size() - 1);\n+    char* next = reinterpret_cast<char*>(data_buffer_->mutable_data() +\n+                                         data_buffer_->size() - options_.eol.size());\n     for (int col = schema_->num_fields() - 1; col >= 0; col--) {\n\nReview comment:\n       I don't recall 100% we might still do validation here to make sure it gets back to the start of the buffer?  At least it allows for only a single escape method.   instead of having to do it beginning and forward.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T06:44:20.810+0000",
                    "updated": "2021-12-06T06:44:20.810+0000",
                    "started": "2021-12-06T06:44:20.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690789",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/691229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r762737338\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -392,21 +397,24 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n       header_length += col_name.size();\n       header_length += CountEscapes(col_name);\n     }\n-    return header_length + (kQuoteDelimiterCount * schema_->num_fields());\n+    // header_length + ([quotes + ','] * schema_->num_fields()) + (eol - ',')\n+    return header_length + (kQuoteDelimiterCount * schema_->num_fields()) +\n+           (options_.eol.size() - 1);\n   }\n \n   Status WriteHeader() {\n     // Only called once, as part of initialization\n     RETURN_NOT_OK(data_buffer_->Resize(CalculateHeaderSize(), /*shrink_to_fit=*/false));\n-    char* next =\n-        reinterpret_cast<char*>(data_buffer_->mutable_data() + data_buffer_->size() - 1);\n+    char* next = reinterpret_cast<char*>(data_buffer_->mutable_data() +\n+                                         data_buffer_->size() - options_.eol.size());\n     for (int col = schema_->num_fields() - 1; col >= 0; col--) {\n\nReview comment:\n       I don't recall 100% we might still do validation here to make sure it gets back to the start of the buffer?  At least it allows for only a single escape method.   instead of having to have one for both backwards and forwards building.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T17:24:30.292+0000",
                    "updated": "2021-12-06T17:24:30.292+0000",
                    "started": "2021-12-06T17:24:30.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691229",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/691302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r763293547\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -159,19 +160,22 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     VisitArrayDataInline<StringType>(\n         *casted_array_->data(),\n         [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+          int32_t next_column_offset = static_cast<int32_t>(\n+              s.length() + /*end_chars(, or eol)*/ end_chars_.size());\n\nReview comment:\n       This inline comment is probably not needed anymore.  Before it was explaining the significance of the `1` but since it is `end_chars_.size()` now it should be pretty obvious.\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -184,9 +188,9 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n // a quote character (\") and escaping is done my adding another quote.\n class QuotedColumnPopulator : public ColumnPopulator {\n  public:\n-  QuotedColumnPopulator(MemoryPool* pool, char end_char,\n+  QuotedColumnPopulator(MemoryPool* pool, std::string& end_chars,\n                         std::shared_ptr<Buffer> null_string)\n-      : ColumnPopulator(pool, end_char, std::move(null_string)) {}\n+      : ColumnPopulator(pool, end_chars, std::move(null_string)) {}\n\nReview comment:\n       Same as above.  Const reference or move-construct\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -159,19 +160,22 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     VisitArrayDataInline<StringType>(\n         *casted_array_->data(),\n         [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+          int32_t next_column_offset = static_cast<int32_t>(\n+              s.length() + /*end_chars(, or eol)*/ end_chars_.size());\n           memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n+          memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n+                 end_chars_.size());\n+          *offsets -= static_cast<int32_t>(next_column_offset);\n           offsets++;\n         },\n         [&]() {\n           // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+          int32_t next_column_offset = static_cast<int32_t>(\n+              null_string_->size() + /*end_chars(, or eol)*/ end_chars_.size());\n\nReview comment:\n       Again, can drop the inline comment.\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,20 +287,20 @@ struct PopulatorFactory {\n                   is_null_type<TypeClass>::value || is_temporal_type<TypeClass>::value,\n               Status>\n   Visit(const TypeClass& type) {\n-    populator = new UnquotedColumnPopulator(pool, end_char, null_string);\n+    populator = new UnquotedColumnPopulator(pool, end_chars, null_string);\n     return Status::OK();\n   }\n \n-  char end_char;\n+  std::string end_chars;\n   std::shared_ptr<Buffer> null_string;\n   MemoryPool* pool;\n   ColumnPopulator* populator;\n };\n \n Result<std::unique_ptr<ColumnPopulator>> MakePopulator(\n-    const Field& field, char end_char, std::shared_ptr<Buffer> null_string,\n+    const Field& field, std::string& end_chars, std::shared_ptr<Buffer> null_string,\n     MemoryPool* pool) {\n-  PopulatorFactory factory{end_char, std::move(null_string), pool, nullptr};\n+  PopulatorFactory factory{end_chars, std::move(null_string), pool, nullptr};\n\nReview comment:\n       Same as above, const reference or move copy\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -318,9 +323,9 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n \n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n-      char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n+      std::string end_chars = col < schema->num_fields() - 1 ? \",\" : options.eol;\n\nReview comment:\n       ```suggestion\r\n         const std::string& end_chars = col < schema->num_fields() - 1 ? \",\" : options.eol;\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -159,19 +160,22 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     VisitArrayDataInline<StringType>(\n         *casted_array_->data(),\n         [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+          int32_t next_column_offset = static_cast<int32_t>(\n+              s.length() + /*end_chars(, or eol)*/ end_chars_.size());\n           memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n+          memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n+                 end_chars_.size());\n+          *offsets -= static_cast<int32_t>(next_column_offset);\n\nReview comment:\n       Why is this cast needed?  `next_column_offset` should be `int32_t`\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -142,9 +143,9 @@ char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n // from a cast does not require quoting or escaping.\n class UnquotedColumnPopulator : public ColumnPopulator {\n  public:\n-  explicit UnquotedColumnPopulator(MemoryPool* memory_pool, char end_char,\n+  explicit UnquotedColumnPopulator(MemoryPool* memory_pool, std::string& end_chars,\n                                    std::shared_ptr<Buffer> null_string_)\n-      : ColumnPopulator(memory_pool, end_char, std::move(null_string_)) {}\n+      : ColumnPopulator(memory_pool, end_chars, std::move(null_string_)) {}\n\nReview comment:\n       Either change `end_chars` to be a `const std::string&` or take away the `&` here and use `std::move`.\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -223,25 +227,26 @@ class QuotedColumnPopulator : public ColumnPopulator {\n             memcpy(row_end - next_column_offset + /*quote_offset=*/1, s.data(),\n                    s.length());\n           } else {\n-            // Adjust row_end by 3: 1 quote char, 1 end char and 1 to position at the\n-            // first position to write to.\n-            next_column_offset =\n-                static_cast<int32_t>(row_end - EscapeReverse(s, row_end - 3));\n+            // Adjust row_end by 2 + end_chars_.size(): 1 quote char, end_chars_.size()\n+            // and 1 to position at the first position to write to.\n+            next_column_offset = static_cast<int32_t>(\n+                row_end - EscapeReverse(s, row_end - 2 - end_chars_.size()));\n           }\n           *(row_end - next_column_offset) = '\"';\n-          *(row_end - 2) = '\"';\n-          *(row_end - 1) = end_char_;\n+          *(row_end - end_chars_.size() - 1) = '\"';\n+          memcpy(row_end - end_chars_.size(), end_chars_.data(), end_chars_.length());\n           *offsets -= next_column_offset;\n           offsets++;\n           needs_escaping++;\n         },\n         [&]() {\n           // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+          int32_t next_column_offset = static_cast<int32_t>(\n+              null_string_->size() + /*end_chars(, or eol)*/ end_chars_.size());\n\nReview comment:\n       ```suggestion\r\n                 null_string_->size() + end_chars_.size());\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -87,8 +87,9 @@ constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, char end_char, std::shared_ptr<Buffer> null_string)\n-      : end_char_(end_char), null_string_(std::move(null_string)), pool_(pool) {}\n+  ColumnPopulator(MemoryPool* pool, std::string end_chars,\n+                  std::shared_ptr<Buffer> null_string)\n+      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n\nReview comment:\n       ```suggestion\r\n         : end_chars_(std::move(end_chars)), null_string_(std::move(null_string)), pool_(pool) {}\r\n   ```\r\n   Nit: I'd guess most of the time this is going to be a no-op as the string is interned but just from a consistency standpoint it's probably good to have.\r\n   \r\n   However, the easiest thing to do might be to make `end_chars_` a `const std::string&`\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -423,10 +431,13 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n       RETURN_NOT_OK(\n           column_populators_[col]->UpdateRowLengths(*batch.column(col), offsets_.data()));\n     }\n-    // Calculate cumulalative offsets for each row (including delimiters).\n-    offsets_[0] += batch.num_columns();\n+    // Calculate cumulative offsets for each row (including delimiters).\n+    // ',' * num_columns - 1(last column doesn't have ,) + eol\n+    int32_t delimiters_length =\n+        static_cast<int32_t>(batch.num_columns() - 1 + options_.eol.size());\n+    offsets_[0] += delimiters_length;\n     for (int64_t row = 1; row < batch.num_rows(); row++) {\n-      offsets_[row] += offsets_[row - 1] + /*delimiter lengths*/ batch.num_columns();\n+      offsets_[row] += offsets_[row - 1] + /*delimiter lengths*/ delimiters_length;\n\nReview comment:\n       ```suggestion\r\n         offsets_[row] += offsets_[row - 1] + delimiters_length;\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -318,9 +323,9 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n \n     std::vector<std::unique_ptr<ColumnPopulator>> populators(schema->num_fields());\n     for (int col = 0; col < schema->num_fields(); col++) {\n-      char end_char = col < schema->num_fields() - 1 ? ',' : '\\n';\n+      std::string end_chars = col < schema->num_fields() - 1 ? \",\" : options.eol;\n\nReview comment:\n       If you go the route of making the string a const reference in the populators you might need to move this `\",\"` to a file-scoped static constant.\n\n##########\nFile path: cpp/src/arrow/csv/writer_test.cc\n##########\n@@ -46,14 +46,29 @@ void PrintTo(const WriterTestParams& p, std::ostream* os) {\n   *os << \"WriterTestParams(\" << reinterpret_cast<const void*>(&p) << \")\";\n }\n \n-WriteOptions DefaultTestOptions(bool include_header, const std::string& null_string) {\n+WriteOptions DefaultTestOptions(bool include_header, const std::string& null_string,\n+                                const std::string eol = \"\\n\") {\n   WriteOptions options;\n   options.batch_size = 5;\n   options.include_header = include_header;\n   options.null_string = null_string;\n+  options.eol = eol;\n   return options;\n }\n \n+std::string UtilGetExpectedWithEOL(std::string eol) {\n\nReview comment:\n       ```suggestion\r\n   std::string UtilGetExpectedWithEOL(const std::string& eol) {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer_test.cc\n##########\n@@ -46,14 +46,29 @@ void PrintTo(const WriterTestParams& p, std::ostream* os) {\n   *os << \"WriterTestParams(\" << reinterpret_cast<const void*>(&p) << \")\";\n }\n \n-WriteOptions DefaultTestOptions(bool include_header, const std::string& null_string) {\n+WriteOptions DefaultTestOptions(bool include_header, const std::string& null_string,\n+                                const std::string eol = \"\\n\") {\n\nReview comment:\n       ```suggestion\r\n                                   const std::string& eol = \"\\n\") {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T19:16:07.133+0000",
                    "updated": "2021-12-06T19:16:07.133+0000",
                    "started": "2021-12-06T19:16:07.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691302",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/692074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#issuecomment-988275125\n\n\n   This will need rebase (I think some other changes were made to the CSV writer)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T21:28:19.116+0000",
                    "updated": "2021-12-07T21:28:19.116+0000",
                    "started": "2021-12-07T21:28:19.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692074",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/692268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r764588115\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,15 +80,17 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n+static const std::string& str_comma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, char end_char, std::shared_ptr<Buffer> null_string)\n-      : end_char_(end_char), null_string_(std::move(null_string)), pool_(pool) {}\n+  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+                  std::shared_ptr<Buffer> null_string)\n+      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n\nReview comment:\n       I think I may have muddied the waters with my earlier comments.  There are generally two approaches we can take:\r\n   \r\n   ```\r\n   class ColumnPopulator {\r\n     \r\n     ColumnPopulator(const std::string& end_chars) : end_chars_(end_chars) {}\r\n   \r\n   protected:\r\n     const std::string& end_chars_;\r\n   }\r\n   ```\r\n   \r\n   Or...\r\n   \r\n   ```\r\n   class ColumnPopulator {\r\n     ColumnPopulator(std::string end_chars) : end_chars_(std::move(end_chars)) {}\r\n   \r\n   protected:\r\n     const std::string end_chars_;\r\n   }\r\n   ```\r\n   \r\n   Your implementation is still kind of in between the two approaches.  Also, when I originally gave feedback I thought it would be ok to use either approach.  Now that I am looking more closely I can see that the first approach will not work (I can explain more on this if you want).  So we should aim for the second approach:\r\n   \r\n   ```suggestion\r\n     ColumnPopulator(MemoryPool* pool, std::string end_chars,\r\n                     std::shared_ptr<Buffer> null_string)\r\n         : end_chars_(std::move(end_chars)), null_string_(std::move(null_string)), pool_(pool) {}\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -146,10 +148,10 @@ char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n // compliance with RFC4180 section 2.5.\n class UnquotedColumnPopulator : public ColumnPopulator {\n  public:\n-  explicit UnquotedColumnPopulator(MemoryPool* memory_pool, char end_char,\n+  explicit UnquotedColumnPopulator(MemoryPool* memory_pool, const std::string& end_chars,\n                                    std::shared_ptr<Buffer> null_string_,\n                                    bool reject_values_with_quotes)\n-      : ColumnPopulator(memory_pool, end_char, std::move(null_string_)),\n+      : ColumnPopulator(memory_pool, end_chars, std::move(null_string_)),\n\nReview comment:\n       ```suggestion\r\n         : ColumnPopulator(memory_pool, std::move(end_chars), std::move(null_string_)),\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -146,10 +148,10 @@ char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n // compliance with RFC4180 section 2.5.\n class UnquotedColumnPopulator : public ColumnPopulator {\n  public:\n-  explicit UnquotedColumnPopulator(MemoryPool* memory_pool, char end_char,\n+  explicit UnquotedColumnPopulator(MemoryPool* memory_pool, const std::string& end_chars,\n                                    std::shared_ptr<Buffer> null_string_,\n                                    bool reject_values_with_quotes)\n\nReview comment:\n       ```suggestion\r\n     explicit UnquotedColumnPopulator(MemoryPool* memory_pool, std::string end_chars,\r\n                                      std::shared_ptr<Buffer> null_string_,\r\n                                      bool reject_values_with_quotes)\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -350,27 +355,27 @@ struct PopulatorFactory {\n         // is None.\n       case QuotingStyle::None:\n       case QuotingStyle::Needed:\n-        populator = new UnquotedColumnPopulator(pool, end_char, null_string,\n+        populator = new UnquotedColumnPopulator(pool, end_chars, null_string,\n                                                 /*reject_values_with_quotes=*/false);\n         break;\n       case QuotingStyle::AllValid:\n-        populator = new QuotedColumnPopulator(pool, end_char, null_string);\n+        populator = new QuotedColumnPopulator(pool, end_chars, null_string);\n         break;\n     }\n     return Status::OK();\n   }\n \n-  char end_char;\n+  std::string end_chars;\n   std::shared_ptr<Buffer> null_string;\n   const QuotingStyle quoting_style;\n   MemoryPool* pool;\n   ColumnPopulator* populator;\n };\n \n Result<std::unique_ptr<ColumnPopulator>> MakePopulator(\n-    const Field& field, char end_char, std::shared_ptr<Buffer> null_string,\n+    const Field& field, const std::string& end_chars, std::shared_ptr<Buffer> null_string,\n\nReview comment:\n       ```suggestion\r\n       const Field& field, std::string end_chars, std::shared_ptr<Buffer> null_string,\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,15 +80,17 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n+static const std::string& str_comma = \",\";\n\nReview comment:\n       ```suggestion\r\n   static const std::string kDefaultSeparator = \",\";\r\n   ```\r\n   \r\n   The naming convention for constants is kVariableName.\r\n   \r\n   Arrow follows the Google C++ style guide which is a good resource for these kinds of tidbits: https://google.github.io/styleguide/cppguide.html#Constant_Names\r\n   \r\n   Some code will also use ALL_CAPS_STYLE but that should be avoided if you can (sometimes we cannot due to interoperability with other libs).\r\n   \r\n   Also, for a constant string we don't need the `&`\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -227,9 +231,9 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n // a quote character (\") and escaping is done my adding another quote.\n class QuotedColumnPopulator : public ColumnPopulator {\n  public:\n-  QuotedColumnPopulator(MemoryPool* pool, char end_char,\n+  QuotedColumnPopulator(MemoryPool* pool, std::string& end_chars,\n                         std::shared_ptr<Buffer> null_string)\n-      : ColumnPopulator(pool, end_char, std::move(null_string)) {}\n+      : ColumnPopulator(pool, end_chars, std::move(null_string)) {}\n\nReview comment:\n       ```suggestion\r\n         : ColumnPopulator(pool, std::move(end_chars), std::move(null_string)) {}\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -227,9 +231,9 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n // a quote character (\") and escaping is done my adding another quote.\n class QuotedColumnPopulator : public ColumnPopulator {\n  public:\n-  QuotedColumnPopulator(MemoryPool* pool, char end_char,\n+  QuotedColumnPopulator(MemoryPool* pool, std::string& end_chars,\n\nReview comment:\n       ```suggestion\r\n     QuotedColumnPopulator(MemoryPool* pool, std::string end_chars,\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -350,27 +355,27 @@ struct PopulatorFactory {\n         // is None.\n       case QuotingStyle::None:\n       case QuotingStyle::Needed:\n-        populator = new UnquotedColumnPopulator(pool, end_char, null_string,\n+        populator = new UnquotedColumnPopulator(pool, end_chars, null_string,\n                                                 /*reject_values_with_quotes=*/false);\n         break;\n       case QuotingStyle::AllValid:\n-        populator = new QuotedColumnPopulator(pool, end_char, null_string);\n+        populator = new QuotedColumnPopulator(pool, end_chars, null_string);\n         break;\n     }\n     return Status::OK();\n   }\n \n-  char end_char;\n+  std::string end_chars;\n   std::shared_ptr<Buffer> null_string;\n   const QuotingStyle quoting_style;\n   MemoryPool* pool;\n   ColumnPopulator* populator;\n };\n \n Result<std::unique_ptr<ColumnPopulator>> MakePopulator(\n-    const Field& field, char end_char, std::shared_ptr<Buffer> null_string,\n+    const Field& field, const std::string& end_chars, std::shared_ptr<Buffer> null_string,\n     QuotingStyle quoting_style, MemoryPool* pool) {\n-  PopulatorFactory factory{end_char, std::move(null_string), quoting_style, pool,\n+  PopulatorFactory factory{end_chars, std::move(null_string), quoting_style, pool,\n\nReview comment:\n       ```suggestion\r\n     PopulatorFactory factory{std::move(end_chars), std::move(null_string), quoting_style, pool,\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T07:13:59.913+0000",
                    "updated": "2021-12-08T07:13:59.913+0000",
                    "started": "2021-12-08T07:13:59.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692268",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/692317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#issuecomment-988615758\n\n\n   Update this comment?\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/csv/writer.h#L38\r\n   ```\r\n   //  - LF (\\n) is always used as a line ending.\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T08:52:40.716+0000",
                    "updated": "2021-12-08T08:52:40.716+0000",
                    "started": "2021-12-08T08:52:40.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692317",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage commented on pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#issuecomment-989607752\n\n\n   What could be the reason for converting null_string to a Buffer here?\r\n   \r\n   https://github.com/apache/arrow/blob/f0110cf26af3cc8f4bcb94da7fafd01974bbbfd2/cpp/src/arrow/csv/writer.cc#L391\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T08:08:05.436+0000",
                    "updated": "2021-12-09T08:08:05.436+0000",
                    "started": "2021-12-09T08:08:05.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693024",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage edited a comment on pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#issuecomment-989607752\n\n\n   What could be the reason for converting null_string to a Buffer here before passing it around?\r\n   \r\n   https://github.com/apache/arrow/blob/f0110cf26af3cc8f4bcb94da7fafd01974bbbfd2/cpp/src/arrow/csv/writer.cc#L391\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T08:08:21.181+0000",
                    "updated": "2021-12-09T08:08:21.181+0000",
                    "started": "2021-12-09T08:08:21.181+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693026",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765581649\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       Should remove the `const`, otherwise there will be data copying.\r\n   But first, why removing the reference?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T09:21:33.530+0000",
                    "updated": "2021-12-09T09:21:33.530+0000",
                    "started": "2021-12-09T09:21:33.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693067",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765581649\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       Should remove the `const`, otherwise there will be data copying.\r\n   But first, why removing the reference? The life time of end_chars may ends early?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T09:27:36.542+0000",
                    "updated": "2021-12-09T09:27:36.542+0000",
                    "started": "2021-12-09T09:27:36.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693072",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765797726\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       Wouldn't it copy end_chars anyway even if const is removed? Does having const or removing const make any difference?\r\n   \r\n   Yes. The lifetime of end_chars could end early, so as the lifetime of options?\r\n   \r\n   https://github.com/apache/arrow/blob/ec62a45fd65104191385e58d308d6b3c027b7a4c/cpp/src/arrow/csv/writer.cc#L406\r\n   \r\n   \r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T13:40:58.712+0000",
                    "updated": "2021-12-09T13:40:58.712+0000",
                    "started": "2021-12-09T13:40:58.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693242",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765797726\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       Does having const or removing const make any difference? Wouldn't it make a copy anyway?\r\n   \r\n   Yes. The lifetime of end_chars could end early, so as the lifetime of options?\r\n   \r\n   https://github.com/apache/arrow/blob/ec62a45fd65104191385e58d308d6b3c027b7a4c/cpp/src/arrow/csv/writer.cc#L406\r\n   \r\n   \r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T13:41:30.430+0000",
                    "updated": "2021-12-09T13:41:30.430+0000",
                    "started": "2021-12-09T13:41:30.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693244",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765822515\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       Here's a simple test code to compare moving an object with&without `const`: https://onlinegdb.com/tnYfwgQ5s\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T14:08:46.182+0000",
                    "updated": "2021-12-09T14:08:46.182+0000",
                    "started": "2021-12-09T14:08:46.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693266",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765826017\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       Thanks. I'll remove const. Found an article that summarizes all.\r\n   \r\n   https://www.nextptr.com/tutorial/ta1211389378/beware-of-using-stdmove-on-a-const-lvalue\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T14:12:29.545+0000",
                    "updated": "2021-12-09T14:12:29.545+0000",
                    "started": "2021-12-09T14:12:29.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693269",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765856524\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       @cyb70289 I am getting some weird outputs with strings.\r\n   \r\n   https://www.onlinegdb.com/fork/tnYfwgQ5s\r\n   \r\n   va = 0x7ffead064240\r\n   A(no const): 0x7ffead0642c0, 0x7ffead064260\r\n   vb = 0x7ffead064280\r\n   B(const): 0x7ffead0642c0, 0x7ffead0642a0\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T14:44:20.181+0000",
                    "updated": "2021-12-09T14:44:20.181+0000",
                    "started": "2021-12-09T14:44:20.181+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693295",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chathurawidanage commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r765856524\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       @cyb70289 I am getting some weird outputs with strings.\r\n   \r\n   https://onlinegdb.com/XGehxp3G7\r\n   \r\n   va = 0x7ffead064240\r\n   A(no const): 0x7ffead0642c0, 0x7ffead064260\r\n   vb = 0x7ffead064280\r\n   B(const): 0x7ffead0642c0, 0x7ffead0642a0\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T14:49:05.154+0000",
                    "updated": "2021-12-09T14:49:05.154+0000",
                    "started": "2021-12-09T14:49:05.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693297",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r766102031\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,15 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n+constexpr char const* kStrComma = \",\";\n\nReview comment:\n       ```suggestion\r\n   constexpr const char * kStrComma = \",\";\r\n   ```\r\n   \r\n   See: https://medium.com/@samathy_barratt/constantly-confusing-c-const-and-constexpr-pointer-behaviour-7eddb041e15a\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T19:49:43.475+0000",
                    "updated": "2021-12-09T19:49:43.475+0000",
                    "started": "2021-12-09T19:49:43.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693519",
                    "issueId": "13414343"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/worklog/693649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11857:\nURL: https://github.com/apache/arrow/pull/11857#discussion_r766260151\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -80,17 +80,19 @@ int64_t CountQuotes(util::string_view s) {\n // Matching quote pair character length.\n constexpr int64_t kQuoteCount = 2;\n constexpr int64_t kQuoteDelimiterCount = kQuoteCount + /*end_char*/ 1;\n-static const std::string& str_comma = \",\";\n+constexpr char const* kStrComma = \",\";\n \n // Interface for generating CSV data per column.\n // The intended usage is to iteratively call UpdateRowLengths for a column and\n // then PopulateColumns. PopulateColumns must be called in the reverse order of the\n // populators (it populates data backwards).\n class ColumnPopulator {\n  public:\n-  ColumnPopulator(MemoryPool* pool, const std::string& end_chars,\n+  ColumnPopulator(MemoryPool* pool, const std::string end_chars,\n                   std::shared_ptr<Buffer> null_string)\n-      : end_chars_(end_chars), null_string_(std::move(null_string)), pool_(pool) {}\n+      : end_chars_(std::move(end_chars)),\n\nReview comment:\n       std::string has may tricks to improve performance, e.g., short string optimization (SSO) to allocate short strings directly inside the object, not in a separated buffer. So short strings are not movable.\r\n   You will see expected behaviour if you print string.size(). If it becomes 0, the string is moved, though the underlying buffer may be not freed in case it may be used again soon.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-10T00:38:50.279+0000",
                    "updated": "2021-12-10T00:38:50.279+0000",
                    "started": "2021-12-10T00:38:50.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693649",
                    "issueId": "13414343"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5a7f5f2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1674b558[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5aa57736[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6948d74f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@398c2167[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@61f60aeb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@109bcd24[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3f4682d7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67190b41[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@36e9f41b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7855ed0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@738e88e8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 10 19:51:24 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-10T19:51:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14907/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-11-29T16:05:08.000+0000",
        "updated": "2021-12-12T06:02:11.000+0000",
        "timeoriginalestimate": null,
        "description": "We would use this for alignment with {{readr::write_csv()}}. There the {{eol}} argument controls the end of line character to use. Most commonly either \"\\n\" for Unix style newlines, or \"\\r\\n\" for Windows style newlines.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Enable CSV Writer to control end-of-line character",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/comment/17451361",
                    "id": "17451361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "For reference it appears we currently always write \\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-11-30T21:18:54.279+0000",
                    "updated": "2021-11-30T21:18:54.279+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/comment/17452292",
                    "id": "17452292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
                        "name": "dragosmg",
                        "key": "dragosmg",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
                        },
                        "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "{{\\n}} is also the default used\u00a0by {{readr::write_csv()}} in R. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
                        "name": "dragosmg",
                        "key": "dragosmg",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
                        },
                        "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-02T10:24:29.133+0000",
                    "updated": "2021-12-02T10:24:29.133+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414343/comment/17457341",
                    "id": "17457341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 11857\n[https://github.com/apache/arrow/pull/11857]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-12-10T19:51:24.489+0000",
                    "updated": "2021-12-10T19:51:24.489+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0x6b4:",
        "customfield_12314139": null
    }
}