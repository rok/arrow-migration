{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13069841",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841",
    "key": "ARROW-969",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
            "name": "1xuepanchen1",
            "key": "1xuepanchen1",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
            },
            "displayName": "Panchen Xue",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-969/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6258b3b2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7733a99d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@678bcd68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@d9eef45[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e82d08a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@477d3cbd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e2449b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4ba65f1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c64e36c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@72d2b489[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ee73295[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@79a55f55[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 13 06:29:00 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-13T06:20:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-969/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-05-07T23:50:55.000+0000",
        "updated": "2018-02-13T06:29:00.000+0000",
        "timeoriginalestimate": null,
        "description": "Analogous to the Table equivalents",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] Add add/remove field functions for RecordBatch",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16355847",
                    "id": "16355847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen opened a new pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574\n \n \n   Add AddColumn and RemoveColumn methods for RecordBatch, as well as test cases\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T18:23:59.657+0000",
                    "updated": "2018-02-07T18:23:59.657+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16355969",
                    "id": "16355969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#issuecomment-363890696\n \n \n   Will review when I can, thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T19:55:19.771+0000",
                    "updated": "2018-02-07T19:55:19.771+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357431",
                    "id": "16357431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167036590\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -78,6 +79,52 @@ class SimpleRecordBatch : public RecordBatch {\n \n   std::shared_ptr<ArrayData> column_data(int i) const override { return columns_[i]; }\n \n+  Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                   const std::shared_ptr<ArrayData>& column,\n+                   std::shared_ptr<RecordBatch>* out) const override {\n+    if (i < 0 || i > num_columns() + 1) {\n \n Review comment:\n   I think this should be `i > num_columns()`. This is also a bug in `SimpleTable::AddColumn`. Can you add a test where `i == num_columns()`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:37.665+0000",
                    "updated": "2018-02-08T19:12:37.665+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357432",
                    "id": "16357432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167036916\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -78,6 +79,52 @@ class SimpleRecordBatch : public RecordBatch {\n \n   std::shared_ptr<ArrayData> column_data(int i) const override { return columns_[i]; }\n \n+  Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                   const std::shared_ptr<ArrayData>& column,\n+                   std::shared_ptr<RecordBatch>* out) const override {\n+    if (i < 0 || i > num_columns() + 1) {\n+      return Status::Invalid(\"Invalid column index\");\n+    }\n+    if (field == nullptr) {\n+      std::stringstream ss;\n+      ss << \"Field \" << i << \" was null\";\n+      return Status::Invalid(ss.str());\n+    }\n+    if (column == nullptr) {\n+      std::stringstream ss;\n+      ss << \"Column \" << i << \" was null\";\n+      return Status::Invalid(ss.str());\n+    }\n \n Review comment:\n   I think these should both be `DCHECK`, since null would indicate a problem with application logic, so should be a \"can't fail\"\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:37.737+0000",
                    "updated": "2018-02-08T19:12:37.737+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357434",
                    "id": "16357434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167037375\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -78,6 +79,52 @@ class SimpleRecordBatch : public RecordBatch {\n \n   std::shared_ptr<ArrayData> column_data(int i) const override { return columns_[i]; }\n \n+  Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                   const std::shared_ptr<ArrayData>& column,\n+                   std::shared_ptr<RecordBatch>* out) const override {\n+    if (i < 0 || i > num_columns() + 1) {\n+      return Status::Invalid(\"Invalid column index\");\n+    }\n+    if (field == nullptr) {\n+      std::stringstream ss;\n+      ss << \"Field \" << i << \" was null\";\n+      return Status::Invalid(ss.str());\n+    }\n+    if (column == nullptr) {\n+      std::stringstream ss;\n+      ss << \"Column \" << i << \" was null\";\n+      return Status::Invalid(ss.str());\n+    }\n+    if (!field->type()->Equals(column->type)) {\n+      std::stringstream ss;\n+      ss << \"Column data type \" << field->type()->name()\n+         << \" does not match field data type \" << column->type->name();\n+      return Status::Invalid(ss.str());\n+    }\n+    if (column->length != num_rows_) {\n+      std::stringstream ss;\n+      ss << \"Added column's length must match record batch's length. Expected length \"\n+         << num_rows_ << \" but got length \" << column->length;\n+      return Status::Invalid(ss.str());\n+    }\n+\n+    std::shared_ptr<Schema> new_schema;\n+    RETURN_NOT_OK(schema_->AddField(i, field, &new_schema));\n \n Review comment:\n   We could leave the boundschecking above to `Schema::AddField` -- could you also check whether that function has the issues described above?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:37.990+0000",
                    "updated": "2018-02-08T19:12:37.990+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357435",
                    "id": "16357435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167037500\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.h\n ##########\n @@ -96,6 +96,14 @@ class ARROW_EXPORT RecordBatch {\n   /// \\return an internal ArrayData object\n   virtual std::shared_ptr<ArrayData> column_data(int i) const = 0;\n \n+  /// \\brief Add column to the record batch, producing a new RecordBatch\n+  virtual Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                           const std::shared_ptr<ArrayData>& column,\n+                           std::shared_ptr<RecordBatch>* out) const = 0;\n+\n+  /// \\brief Remove column from the record batch, producing a new RecordBatch\n+  virtual Status RemoveColumn(int i, std::shared_ptr<RecordBatch>* out) const = 0;\n \n Review comment:\n   Can you document the parameters for these functions?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:37.992+0000",
                    "updated": "2018-02-08T19:12:37.992+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357436",
                    "id": "16357436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167037985\n \n \n\n ##########\n File path: cpp/src/arrow/table-test.cc\n ##########\n @@ -588,6 +588,101 @@ TEST_F(TestRecordBatch, Slice) {\n   }\n }\n \n+TEST_F(TestRecordBatch, AddColumn) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", uint8());\n+  auto field3 = field(\"f3\", int16());\n+\n+  auto schema1 = ::arrow::schema({field1, field2});\n+  auto schema2 = ::arrow::schema({field2, field3});\n+  auto schema3 = ::arrow::schema({field2});\n+\n+  auto array1 = MakeRandomArray<Int32Array>(length);\n+  auto array2 = MakeRandomArray<UInt8Array>(length);\n+  auto array3 = MakeRandomArray<Int16Array>(length);\n+\n+  auto batch1 = RecordBatch::Make(schema1, length, {array1, array2});\n+  auto batch2 = RecordBatch::Make(schema2, length, {array2, array3});\n+  auto batch3 = RecordBatch::Make(schema3, length, {array2});\n+\n+  const RecordBatch& batch = *batch3;\n+  std::shared_ptr<RecordBatch> result;\n+\n+  // Negative tests with invalid index\n+  Status status = batch.AddColumn(5, field1, array1->data(), &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+  status = batch.AddColumn(-1, field1, array1->data(), &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  // Negative test with wrong length\n+  auto longer_col = MakeRandomArray<Int32Array>(length + 1);\n+  status = batch.AddColumn(0, field1, longer_col->data(), &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  // Negative test with mismatch type\n+  status = batch.AddColumn(0, field1, array2->data(), &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  ASSERT_OK(batch.AddColumn(0, field1, array1->data(), &result));\n+  ASSERT_TRUE(result->Equals(*batch1));\n+\n+  ASSERT_OK(batch.AddColumn(1, field3, array3->data(), &result));\n+  ASSERT_TRUE(result->Equals(*batch2));\n+}\n+\n+TEST_F(TestRecordBatch, RemoveColumn) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", uint8());\n+  auto field3 = field(\"f3\", int16());\n+\n+  auto schema1 = ::arrow::schema({field1, field2, field3});\n+  auto schema2 = ::arrow::schema({field2, field3});\n+  auto schema3 = ::arrow::schema({field1, field3});\n+  auto schema4 = ::arrow::schema({field1, field2});\n+\n+  auto array1 = MakeRandomArray<Int32Array>(length);\n+  auto array2 = MakeRandomArray<UInt8Array>(length);\n+  auto array3 = MakeRandomArray<Int16Array>(length);\n+\n+  auto batch1 = RecordBatch::Make(schema1, length, {array1, array2, array3});\n+  auto batch2 = RecordBatch::Make(schema2, length, {array2, array3});\n+  auto batch3 = RecordBatch::Make(schema3, length, {array1, array3});\n+  auto batch4 = RecordBatch::Make(schema4, length, {array1, array2});\n+\n+  const RecordBatch& batch = *batch1;\n+  std::shared_ptr<RecordBatch> result;\n+\n+  ASSERT_OK(batch.RemoveColumn(0, &result));\n+  ASSERT_TRUE(result->Equals(*batch2));\n+\n+  ASSERT_OK(batch.RemoveColumn(1, &result));\n+  ASSERT_TRUE(result->Equals(*batch3));\n+\n+  ASSERT_OK(batch.RemoveColumn(2, &result));\n+  ASSERT_TRUE(result->Equals(*batch4));\n \n Review comment:\n   Add a test for removing an out of bounds index\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:38.081+0000",
                    "updated": "2018-02-08T19:12:38.081+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357437",
                    "id": "16357437",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167037093\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -78,6 +79,52 @@ class SimpleRecordBatch : public RecordBatch {\n \n   std::shared_ptr<ArrayData> column_data(int i) const override { return columns_[i]; }\n \n+  Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                   const std::shared_ptr<ArrayData>& column,\n \n Review comment:\n   Pass `Array` here instead, since that's more likely to be what the user has \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:38.084+0000",
                    "updated": "2018-02-08T19:12:38.084+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357438",
                    "id": "16357438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167037896\n \n \n\n ##########\n File path: cpp/src/arrow/table-test.cc\n ##########\n @@ -588,6 +588,101 @@ TEST_F(TestRecordBatch, Slice) {\n   }\n }\n \n+TEST_F(TestRecordBatch, AddColumn) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", uint8());\n+  auto field3 = field(\"f3\", int16());\n+\n+  auto schema1 = ::arrow::schema({field1, field2});\n+  auto schema2 = ::arrow::schema({field2, field3});\n+  auto schema3 = ::arrow::schema({field2});\n+\n+  auto array1 = MakeRandomArray<Int32Array>(length);\n+  auto array2 = MakeRandomArray<UInt8Array>(length);\n+  auto array3 = MakeRandomArray<Int16Array>(length);\n+\n+  auto batch1 = RecordBatch::Make(schema1, length, {array1, array2});\n+  auto batch2 = RecordBatch::Make(schema2, length, {array2, array3});\n+  auto batch3 = RecordBatch::Make(schema3, length, {array2});\n+\n+  const RecordBatch& batch = *batch3;\n+  std::shared_ptr<RecordBatch> result;\n+\n+  // Negative tests with invalid index\n+  Status status = batch.AddColumn(5, field1, array1->data(), &result);\n \n Review comment:\n   Add a test for `batch.AddColumn(2, ...)` to address the edge case in the implementation. We probably need a corresponding test for `Table` (and maybe also `Schema`). \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:12:38.114+0000",
                    "updated": "2018-02-08T19:12:38.114+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16357439",
                    "id": "16357439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#discussion_r167038477\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -78,6 +79,52 @@ class SimpleRecordBatch : public RecordBatch {\n \n   std::shared_ptr<ArrayData> column_data(int i) const override { return columns_[i]; }\n \n+  Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                   const std::shared_ptr<ArrayData>& column,\n+                   std::shared_ptr<RecordBatch>* out) const override {\n+    if (i < 0 || i > num_columns() + 1) {\n+      return Status::Invalid(\"Invalid column index\");\n+    }\n+    if (field == nullptr) {\n+      std::stringstream ss;\n+      ss << \"Field \" << i << \" was null\";\n+      return Status::Invalid(ss.str());\n+    }\n+    if (column == nullptr) {\n+      std::stringstream ss;\n+      ss << \"Column \" << i << \" was null\";\n+      return Status::Invalid(ss.str());\n+    }\n \n Review comment:\n   I took a look at `SimpleTable::AddColumn`; there `col` is being null-checked -- I think that should also be a DCHECK\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T19:13:26.802+0000",
                    "updated": "2018-02-08T19:13:26.802+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16361874",
                    "id": "16361874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#issuecomment-365162629\n \n \n   Merging, thanks @xuepanchen! @trxcllnt @TheNeuralBit odd unrelated JS failure here, in case you want to have a look\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-13T06:20:19.209+0000",
                    "updated": "2018-02-13T06:20:19.209+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16361875",
                    "id": "16361875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1574\n[https://github.com/apache/arrow/pull/1574]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-13T06:20:35.281+0000",
                    "updated": "2018-02-13T06:20:35.281+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16361876",
                    "id": "16361876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/record_batch.cc b/cpp/src/arrow/record_batch.cc\nindex d418cc4a2..f295b864c 100644\n--- a/cpp/src/arrow/record_batch.cc\n+++ b/cpp/src/arrow/record_batch.cc\n@@ -21,15 +21,24 @@\n #include <cstdlib>\n #include <memory>\n #include <sstream>\n+#include <string>\n #include <utility>\n \n #include \"arrow/array.h\"\n #include \"arrow/status.h\"\n #include \"arrow/type.h\"\n #include \"arrow/util/logging.h\"\n+#include \"arrow/util/stl.h\"\n \n namespace arrow {\n \n+Status RecordBatch::AddColumn(int i, const std::string& field_name,\n+                              const std::shared_ptr<Array>& column,\n+                              std::shared_ptr<RecordBatch>* out) const {\n+  auto field = ::arrow::field(field_name, column->type());\n+  return AddColumn(i, field, column, out);\n+}\n+\n /// \\class SimpleRecordBatch\n /// \\brief A basic, non-lazy in-memory record batch\n class SimpleRecordBatch : public RecordBatch {\n@@ -78,6 +87,42 @@ class SimpleRecordBatch : public RecordBatch {\n \n   std::shared_ptr<ArrayData> column_data(int i) const override { return columns_[i]; }\n \n+  Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                   const std::shared_ptr<Array>& column,\n+                   std::shared_ptr<RecordBatch>* out) const override {\n+    DCHECK(field != nullptr);\n+    DCHECK(column != nullptr);\n+\n+    if (!field->type()->Equals(column->type())) {\n+      std::stringstream ss;\n+      ss << \"Column data type \" << field->type()->name()\n+         << \" does not match field data type \" << column->type()->name();\n+      return Status::Invalid(ss.str());\n+    }\n+    if (column->length() != num_rows_) {\n+      std::stringstream ss;\n+      ss << \"Added column's length must match record batch's length. Expected length \"\n+         << num_rows_ << \" but got length \" << column->length();\n+      return Status::Invalid(ss.str());\n+    }\n+\n+    std::shared_ptr<Schema> new_schema;\n+    RETURN_NOT_OK(schema_->AddField(i, field, &new_schema));\n+\n+    *out = RecordBatch::Make(new_schema, num_rows_,\n+                             internal::AddVectorElement(columns_, i, column->data()));\n+    return Status::OK();\n+  }\n+\n+  Status RemoveColumn(int i, std::shared_ptr<RecordBatch>* out) const override {\n+    std::shared_ptr<Schema> new_schema;\n+    RETURN_NOT_OK(schema_->RemoveField(i, &new_schema));\n+\n+    *out = RecordBatch::Make(new_schema, num_rows_,\n+                             internal::DeleteVectorElement(columns_, i));\n+    return Status::OK();\n+  }\n+\n   std::shared_ptr<RecordBatch> ReplaceSchemaMetadata(\n       const std::shared_ptr<const KeyValueMetadata>& metadata) const override {\n     auto new_schema = schema_->AddMetadata(metadata);\ndiff --git a/cpp/src/arrow/record_batch.h b/cpp/src/arrow/record_batch.h\nindex b2c4c76b3..6fb747c40 100644\n--- a/cpp/src/arrow/record_batch.h\n+++ b/cpp/src/arrow/record_batch.h\n@@ -96,6 +96,35 @@ class ARROW_EXPORT RecordBatch {\n   /// \\return an internal ArrayData object\n   virtual std::shared_ptr<ArrayData> column_data(int i) const = 0;\n \n+  /// \\brief Add column to the record batch, producing a new RecordBatch\n+  ///\n+  /// \\param[in] i field index, which will be boundschecked\n+  /// \\param[in] field field to be added\n+  /// \\param[in] column column to be added\n+  /// \\param[out] out record batch with column added\n+  virtual Status AddColumn(int i, const std::shared_ptr<Field>& field,\n+                           const std::shared_ptr<Array>& column,\n+                           std::shared_ptr<RecordBatch>* out) const = 0;\n+\n+  /// \\brief Add new nullable column to the record batch, producing a new\n+  /// RecordBatch.\n+  ///\n+  /// For non-nullable columns, use the Field-based version of this method.\n+  ///\n+  /// \\param[in] i field index, which will be boundschecked\n+  /// \\param[in] field_name name of field to be added\n+  /// \\param[in] column column to be added\n+  /// \\param[out] out record batch with column added\n+  virtual Status AddColumn(int i, const std::string& field_name,\n+                           const std::shared_ptr<Array>& column,\n+                           std::shared_ptr<RecordBatch>* out) const;\n+\n+  /// \\brief Remove column from the record batch, producing a new RecordBatch\n+  ///\n+  /// \\param[in] i field index, does boundscheck\n+  /// \\param[out] out record batch with column removed\n+  virtual Status RemoveColumn(int i, std::shared_ptr<RecordBatch>* out) const = 0;\n+\n   virtual std::shared_ptr<RecordBatch> ReplaceSchemaMetadata(\n       const std::shared_ptr<const KeyValueMetadata>& metadata) const = 0;\n \ndiff --git a/cpp/src/arrow/table-test.cc b/cpp/src/arrow/table-test.cc\nindex 99e4dd5db..af7441682 100644\n--- a/cpp/src/arrow/table-test.cc\n+++ b/cpp/src/arrow/table-test.cc\n@@ -466,6 +466,8 @@ TEST_F(TestTable, AddColumn) {\n   // Some negative tests with invalid index\n   Status status = table.AddColumn(10, columns_[0], &result);\n   ASSERT_TRUE(status.IsInvalid());\n+  status = table.AddColumn(4, columns_[0], &result);\n+  ASSERT_TRUE(status.IsInvalid());\n   status = table.AddColumn(-1, columns_[0], &result);\n   ASSERT_TRUE(status.IsInvalid());\n \n@@ -588,6 +590,115 @@ TEST_F(TestRecordBatch, Slice) {\n   }\n }\n \n+TEST_F(TestRecordBatch, AddColumn) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", uint8());\n+  auto field3 = field(\"f3\", int16());\n+\n+  auto schema1 = ::arrow::schema({field1, field2});\n+  auto schema2 = ::arrow::schema({field2, field3});\n+  auto schema3 = ::arrow::schema({field2});\n+\n+  auto array1 = MakeRandomArray<Int32Array>(length);\n+  auto array2 = MakeRandomArray<UInt8Array>(length);\n+  auto array3 = MakeRandomArray<Int16Array>(length);\n+\n+  auto batch1 = RecordBatch::Make(schema1, length, {array1, array2});\n+  auto batch2 = RecordBatch::Make(schema2, length, {array2, array3});\n+  auto batch3 = RecordBatch::Make(schema3, length, {array2});\n+\n+  const RecordBatch& batch = *batch3;\n+  std::shared_ptr<RecordBatch> result;\n+\n+  // Negative tests with invalid index\n+  Status status = batch.AddColumn(5, field1, array1, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+  status = batch.AddColumn(2, field1, array1, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+  status = batch.AddColumn(-1, field1, array1, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  // Negative test with wrong length\n+  auto longer_col = MakeRandomArray<Int32Array>(length + 1);\n+  status = batch.AddColumn(0, field1, longer_col, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  // Negative test with mismatch type\n+  status = batch.AddColumn(0, field1, array2, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  ASSERT_OK(batch.AddColumn(0, field1, array1, &result));\n+  ASSERT_TRUE(result->Equals(*batch1));\n+\n+  ASSERT_OK(batch.AddColumn(1, field3, array3, &result));\n+  ASSERT_TRUE(result->Equals(*batch2));\n+\n+  std::shared_ptr<RecordBatch> result2;\n+  ASSERT_OK(batch.AddColumn(1, \"f3\", array3, &result2));\n+  ASSERT_TRUE(result2->Equals(*result));\n+\n+  ASSERT_TRUE(result2->schema()->field(1)->nullable());\n+}\n+\n+TEST_F(TestRecordBatch, RemoveColumn) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", uint8());\n+  auto field3 = field(\"f3\", int16());\n+\n+  auto schema1 = ::arrow::schema({field1, field2, field3});\n+  auto schema2 = ::arrow::schema({field2, field3});\n+  auto schema3 = ::arrow::schema({field1, field3});\n+  auto schema4 = ::arrow::schema({field1, field2});\n+\n+  auto array1 = MakeRandomArray<Int32Array>(length);\n+  auto array2 = MakeRandomArray<UInt8Array>(length);\n+  auto array3 = MakeRandomArray<Int16Array>(length);\n+\n+  auto batch1 = RecordBatch::Make(schema1, length, {array1, array2, array3});\n+  auto batch2 = RecordBatch::Make(schema2, length, {array2, array3});\n+  auto batch3 = RecordBatch::Make(schema3, length, {array1, array3});\n+  auto batch4 = RecordBatch::Make(schema4, length, {array1, array2});\n+\n+  const RecordBatch& batch = *batch1;\n+  std::shared_ptr<RecordBatch> result;\n+\n+  // Negative tests with invalid index\n+  Status status = batch.RemoveColumn(3, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+  status = batch.RemoveColumn(-1, &result);\n+  ASSERT_TRUE(status.IsInvalid());\n+\n+  ASSERT_OK(batch.RemoveColumn(0, &result));\n+  ASSERT_TRUE(result->Equals(*batch2));\n+\n+  ASSERT_OK(batch.RemoveColumn(1, &result));\n+  ASSERT_TRUE(result->Equals(*batch3));\n+\n+  ASSERT_OK(batch.RemoveColumn(2, &result));\n+  ASSERT_TRUE(result->Equals(*batch4));\n+}\n+\n+TEST_F(TestRecordBatch, RemoveColumnEmpty) {\n+  const int length = 10;\n+\n+  auto field1 = field(\"f1\", int32());\n+  auto schema1 = ::arrow::schema({field1});\n+  auto array1 = MakeRandomArray<Int32Array>(length);\n+  auto batch1 = RecordBatch::Make(schema1, length, {array1});\n+\n+  std::shared_ptr<RecordBatch> empty;\n+  ASSERT_OK(batch1->RemoveColumn(0, &empty));\n+  ASSERT_EQ(batch1->num_rows(), empty->num_rows());\n+\n+  std::shared_ptr<RecordBatch> added;\n+  ASSERT_OK(empty->AddColumn(0, field1, array1, &added));\n+  ASSERT_TRUE(added->Equals(*batch1));\n+}\n+\n class TestTableBatchReader : public TestBase {};\n \n TEST_F(TestTableBatchReader, ReadNext) {\ndiff --git a/cpp/src/arrow/table.cc b/cpp/src/arrow/table.cc\nindex 8cfd67fae..62ea32a8d 100644\n--- a/cpp/src/arrow/table.cc\n+++ b/cpp/src/arrow/table.cc\n@@ -234,14 +234,8 @@ class SimpleTable : public Table {\n \n   Status AddColumn(int i, const std::shared_ptr<Column>& col,\n                    std::shared_ptr<Table>* out) const override {\n-    if (i < 0 || i > num_columns() + 1) {\n-      return Status::Invalid(\"Invalid column index.\");\n-    }\n-    if (col == nullptr) {\n-      std::stringstream ss;\n-      ss << \"Column \" << i << \" was null\";\n-      return Status::Invalid(ss.str());\n-    }\n+    DCHECK(col != nullptr);\n+\n     if (col->length() != num_rows_) {\n       std::stringstream ss;\n       ss << \"Added column's length must match table's length. Expected length \"\ndiff --git a/cpp/src/arrow/type.cc b/cpp/src/arrow/type.cc\nindex 0a2889f04..836a2aa93 100644\n--- a/cpp/src/arrow/type.cc\n+++ b/cpp/src/arrow/type.cc\n@@ -293,8 +293,9 @@ int64_t Schema::GetFieldIndex(const std::string& name) const {\n \n Status Schema::AddField(int i, const std::shared_ptr<Field>& field,\n                         std::shared_ptr<Schema>* out) const {\n-  DCHECK_GE(i, 0);\n-  DCHECK_LE(i, this->num_fields());\n+  if (i < 0 || i > this->num_fields()) {\n+    return Status::Invalid(\"Invalid column index to add field.\");\n+  }\n \n   *out =\n       std::make_shared<Schema>(internal::AddVectorElement(fields_, i, field), metadata_);\n@@ -323,8 +324,9 @@ std::shared_ptr<Schema> Schema::RemoveMetadata() const {\n }\n \n Status Schema::RemoveField(int i, std::shared_ptr<Schema>* out) const {\n-  DCHECK_GE(i, 0);\n-  DCHECK_LT(i, this->num_fields());\n+  if (i < 0 || i >= this->num_fields()) {\n+    return Status::Invalid(\"Invalid column index to remove field.\");\n+  }\n \n   *out = std::make_shared<Schema>(internal::DeleteVectorElement(fields_, i), metadata_);\n   return Status::OK();\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-13T06:20:38.307+0000",
                    "updated": "2018-02-13T06:20:38.307+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13069841/comment/16361882",
                    "id": "16361882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on issue #1574: ARROW-969: [C++] Add add/remove field functions for RecordBatch\nURL: https://github.com/apache/arrow/pull/1574#issuecomment-365163973\n \n \n   @wesm looks like noise, but ping me if you see it again.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-13T06:29:00.808+0000",
                    "updated": "2018-02-13T06:29:00.808+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|i3elxj:",
        "customfield_12314139": null
    }
}