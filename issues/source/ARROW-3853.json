{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13200094",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094",
    "key": "ARROW-3853",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3853/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:12:25.043+0000",
                    "updated": "2018-11-28T15:12:25.043+0000",
                    "started": "2018-11-28T15:12:25.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170244",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#issuecomment-442481857\n \n \n   Micro-benchmark (AMD Ryzen 7, gcc 7.3.0):\r\n   ```\r\n   -----------------------------------------------------------------------------\r\n   Benchmark                                      Time           CPU Iterations\r\n   -----------------------------------------------------------------------------\r\n   BM_IntegerParsing<Int8Type>                 2977 ns       2976 ns     234204    320.41M items/s\r\n   BM_IntegerParsing<Int16Type>                3227 ns       3226 ns     216686   295.581M items/s\r\n   BM_IntegerParsing<Int32Type>                3907 ns       3906 ns     177879   244.144M items/s\r\n   BM_IntegerParsing<Int64Type>                5989 ns       5988 ns     112958   159.264M items/s\r\n   BM_IntegerParsing<UInt8Type>                1810 ns       1809 ns     379162   527.129M items/s\r\n   BM_IntegerParsing<UInt16Type>               2007 ns       2006 ns     350245   475.319M items/s\r\n   BM_IntegerParsing<UInt32Type>               2400 ns       2399 ns     292529   397.491M items/s\r\n   BM_IntegerParsing<UInt64Type>               3672 ns       3671 ns     188921   259.795M items/s\r\n   BM_FloatParsing<FloatType>                 66782 ns      66771 ns      10158   14.2829M items/s\r\n   BM_FloatParsing<DoubleType>                41465 ns      41458 ns      16674   23.0033M items/s\r\n   BM_TimestampParsing<TimeUnit::SECOND>      13649 ns      13646 ns      50778   69.8856M items/s\r\n   BM_TimestampParsing<TimeUnit::MILLI>       13952 ns      13950 ns      49803    68.364M items/s\r\n   BM_TimestampParsing<TimeUnit::MICRO>       13736 ns      13733 ns      49687   69.4425M items/s\r\n   BM_TimestampParsing<TimeUnit::NANO>        14019 ns      14017 ns      50912   68.0377M items/s\r\n   \r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:13:38.814+0000",
                    "updated": "2018-11-28T15:13:38.814+0000",
                    "started": "2018-11-28T15:13:38.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170245",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237135351\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -1056,6 +1056,37 @@ TEST_F(TestCast, StringToNumberErrors) {\n   CheckFails<StringType, std::string>(utf8(), {\"z\"}, is_valid, float32(), options);\n }\n \n+TEST_F(TestCast, StringToTimestamp) {\n+  CastOptions options;\n+\n+  vector<bool> is_valid = {true, false, true, true};\n \n Review comment:\n   Does not match `strings` size. Worth adding a DCHECK in ArrayFromVector.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:50:25.942+0000",
                    "updated": "2018-11-28T15:50:25.942+0000",
                    "started": "2018-11-28T15:50:25.941+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170260",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237131804\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n \n Review comment:\n   Why does it need to copy?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:50:26.121+0000",
                    "updated": "2018-11-28T15:50:26.121+0000",
                    "started": "2018-11-28T15:50:26.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170261",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237132616\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n \n Review comment:\n   Should you push a null to out_data?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:50:26.147+0000",
                    "updated": "2018-11-28T15:50:26.147+0000",
                    "started": "2018-11-28T15:50:26.141+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170262",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237134166\n \n \n\n ##########\n File path: cpp/src/arrow/util/parsing.h\n ##########\n @@ -419,8 +419,9 @@ class StringConverter<TimestampType> {\n         *out = std::chrono::duration_cast<std::chrono::nanoseconds>(duration).count();\n         return true;\n     }\n-    // Unreachable\n+    // Unreachable, but suppress compiler warning\n     assert(0);\n+    *out = 0;\n \n Review comment:\n   I'd set this in the `default` case, this is a bit friendlier to callers if they don't check the result.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:50:26.160+0000",
                    "updated": "2018-11-28T15:50:26.160+0000",
                    "started": "2018-11-28T15:50:26.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170263",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237136398\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n+      }\n+\n+      auto str = input_array.GetView(i);\n+      if (!converter(str.data(), str.length(), out_data)) {\n \n Review comment:\n   I think you need to set the is valid bit.\u00a0\r\n   \r\n   I would add a way to skip errors (safe/unsafe) as opposed to bork. This become very annoying in huge \r\n   (always broken in some way) datasets.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:50:26.272+0000",
                    "updated": "2018-11-28T15:50:26.272+0000",
                    "started": "2018-11-28T15:50:26.272+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170264",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237131345\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n \n Review comment:\n   Leftover.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T15:50:26.303+0000",
                    "updated": "2018-11-28T15:50:26.303+0000",
                    "started": "2018-11-28T15:50:26.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170265",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237152597\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n \n Review comment:\n   Right, thank you.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:11:12.805+0000",
                    "updated": "2018-11-28T16:11:12.805+0000",
                    "started": "2018-11-28T16:11:12.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170277",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237152955\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n \n Review comment:\n   This is a shallow copy (it doesn't copy the underlying data, just duplicate the containers). But good question. I took it from the other casting implementations. Perhaps constructing an Array may mutate the underlying ArrayData and we don't want that? @wesm \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:12:06.465+0000",
                    "updated": "2018-11-28T16:12:06.465+0000",
                    "started": "2018-11-28T16:12:06.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170278",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237153378\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n \n Review comment:\n   I think nulls are simply copied as a separate pass.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:13:06.852+0000",
                    "updated": "2018-11-28T16:13:06.852+0000",
                    "started": "2018-11-28T16:13:06.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170279",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237153465\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n \n Review comment:\n   NB: the copy is shallow / the memory buffers are not copied (I am not sure why it is needed though)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:13:18.098+0000",
                    "updated": "2018-11-28T16:13:18.098+0000",
                    "started": "2018-11-28T16:13:18.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170280",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237153979\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n+      }\n+\n+      auto str = input_array.GetView(i);\n+      if (!converter(str.data(), str.length(), out_data)) {\n \n Review comment:\n   I wouldn't be surprised if there's already a JIRA open for a \"nulls on errors\" option :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:14:24.183+0000",
                    "updated": "2018-11-28T16:14:24.183+0000",
                    "started": "2018-11-28T16:14:24.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170282",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237154323\n \n \n\n ##########\n File path: cpp/src/arrow/util/parsing.h\n ##########\n @@ -419,8 +419,9 @@ class StringConverter<TimestampType> {\n         *out = std::chrono::duration_cast<std::chrono::nanoseconds>(duration).count();\n         return true;\n     }\n-    // Unreachable\n+    // Unreachable, but suppress compiler warning\n     assert(0);\n+    *out = 0;\n \n Review comment:\n   Hmm... what do you mean? It should do the same in the end.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:15:13.942+0000",
                    "updated": "2018-11-28T16:15:13.942+0000",
                    "started": "2018-11-28T16:15:13.941+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170283",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237155739\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n+      }\n+\n+      auto str = input_array.GetView(i);\n+      if (!converter(str.data(), str.length(), out_data)) {\n \n Review comment:\n   Some casts do it.\r\n   \r\n   I'd also propose to simplify the whole CastOptions, to\r\n   \r\n   - Toggling stop on errors (safe vs unsafe), call it \"allow_truncation\".\r\n   - Truncation mode: set bit to null _or_ default to a defined value, e.g. `0` or `INT64_MIN`, \"NA\", etc.\r\n   \r\n    @wesm what do you think?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:18:19.114+0000",
                    "updated": "2018-11-28T16:18:19.114+0000",
                    "started": "2018-11-28T16:18:19.114+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170285",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170287",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237157169\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -1056,6 +1056,37 @@ TEST_F(TestCast, StringToNumberErrors) {\n   CheckFails<StringType, std::string>(utf8(), {\"z\"}, is_valid, float32(), options);\n }\n \n+TEST_F(TestCast, StringToTimestamp) {\n+  CastOptions options;\n+\n+  vector<bool> is_valid = {true, false, true, true};\n \n Review comment:\n   Hmm, good catch.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:21:17.121+0000",
                    "updated": "2018-11-28T16:21:17.121+0000",
                    "started": "2018-11-28T16:21:17.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170287",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170288",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237158311\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n \n Review comment:\n   In `AllocateIfNotPreallocated`, I should have known, spent a part of last week in that code :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:23:51.100+0000",
                    "updated": "2018-11-28T16:23:51.100+0000",
                    "started": "2018-11-28T16:23:51.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170288",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237159212\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n \n Review comment:\n   I think it's a way to cast to StringArray in order to expose the `GetView` method?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:25:48.942+0000",
                    "updated": "2018-11-28T16:25:48.942+0000",
                    "started": "2018-11-28T16:25:48.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170289",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237159743\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n+      }\n+\n+      auto str = input_array.GetView(i);\n+      if (!converter(str.data(), str.length(), out_data)) {\n \n Review comment:\n   Well there are different kinds of errors:\r\n   * input data is entirely invalid (e.g. \"xxx\" isn't a valid integer at all)\r\n   * input data triggers truncation when converting (e.g. converting \"1e100\" to int64): this could be a) treated as error b) result in saturation c) result in type-specific truncation (probably simply by not detecting it at all)\r\n   * input data triggers precision loss (e.g. converting \"1.5\" to int64)\r\n   \r\n   It would be quite reasonable to allow e.g. precision loss but not bogus input.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:26:57.069+0000",
                    "updated": "2018-11-28T16:26:57.069+0000",
                    "started": "2018-11-28T16:26:57.068+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170290",
                    "issueId": "13200094"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/worklog/170291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3044: ARROW-3853: [C++] Implement string to timestamp cast\nURL: https://github.com/apache/arrow/pull/3044#discussion_r237159743\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -980,6 +980,36 @@ struct CastFunctor<O, StringType,\n   }\n };\n \n+// ----------------------------------------------------------------------\n+// String to Timestamp\n+\n+template <>\n+struct CastFunctor<TimestampType, StringType> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    //     const auto& out_type = checked_cast<const TimestampType&>(*output->type);\n+    using out_type = TimestampType::c_type;\n+\n+    StringArray input_array(input.Copy());\n+    auto out_data = output->GetMutableValues<out_type>(1);\n+    internal::StringConverter<TimestampType> converter(output->type);\n+\n+    for (int64_t i = 0; i < input.length; ++i, ++out_data) {\n+      if (input_array.IsNull(i)) {\n+        continue;\n+      }\n+\n+      auto str = input_array.GetView(i);\n+      if (!converter(str.data(), str.length(), out_data)) {\n \n Review comment:\n   Well there are different kinds of errors:\r\n   * input data is entirely invalid (e.g. \"xxx\" isn't a valid integer at all)\r\n   * input data triggers truncation when converting (e.g. converting 1e100 to int64): this could be a) treated as error b) result in saturation c) result in type-specific truncation (probably simply by not detecting it at all)\r\n   * input data triggers precision loss (e.g. converting 1.5 to int64)\r\n   \r\n   It would be quite reasonable to allow e.g. precision loss but not bogus input.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:27:28.653+0000",
                    "updated": "2018-11-28T16:27:28.653+0000",
                    "started": "2018-11-28T16:27:28.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170291",
                    "issueId": "13200094"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4fa219e8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b53096b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6dfc8754[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6e67c3d1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@225fdc99[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@657bee3b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c3403e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3c9d2cfb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60fa84e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5a4aa4f7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@162dbf62[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4302b3a8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Dec 03 13:50:22 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-03T13:50:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3853/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-22T14:55:32.000+0000",
        "updated": "2018-12-03T13:50:35.000+0000",
        "timeoriginalestimate": null,
        "description": "Companion work to ARROW-3738",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement string to timestamp cast",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200094/comment/16707221",
                    "id": "16707221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3044\n[https://github.com/apache/arrow/pull/3044]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-03T13:50:22.427+0000",
                    "updated": "2018-12-03T13:50:22.427+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00s4w:",
        "customfield_12314139": null
    }
}