{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13407264",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264",
    "key": "ARROW-14374",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12625788",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12625788",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13382084",
                    "key": "ARROW-12965",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382084",
                    "fields": {
                        "summary": "[Java] Java implementation of Arrow C data interface",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tomersolomon",
            "name": "tomersolomon",
            "key": "tomersolomon",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tomersolomon&avatarId=48092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tomersolomon&avatarId=48092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tomersolomon&avatarId=48092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tomersolomon&avatarId=48092"
            },
            "displayName": "Tomer Solomon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tomersolomon",
            "name": "tomersolomon",
            "key": "tomersolomon",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tomersolomon&avatarId=48092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tomersolomon&avatarId=48092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tomersolomon&avatarId=48092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tomersolomon&avatarId=48092"
            },
            "displayName": "Tomer Solomon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tomersolomon",
            "name": "tomersolomon",
            "key": "tomersolomon",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tomersolomon&avatarId=48092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tomersolomon&avatarId=48092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tomersolomon&avatarId=48092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tomersolomon&avatarId=48092"
            },
            "displayName": "Tomer Solomon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14374/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/670054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tomersolomon1 opened a new pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543\n\n\n   Integration tests for the C data Interface implementation for Java, following [ARROW-14374](https://issues.apache.org/jira/browse/ARROW-14374)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-26T12:50:36.396+0000",
                    "updated": "2021-10-26T12:50:36.396+0000",
                    "started": "2021-10-26T12:50:36.396+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670054",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/670055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#issuecomment-951906706\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-26T12:51:00.428+0000",
                    "updated": "2021-10-26T12:51:00.428+0000",
                    "started": "2021-10-26T12:51:00.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670055",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/674582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r741897046\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       I don't think you _need_ to build Arrow C++ and PyArrow from scratch. You should be able to just `pip install` a recent binary wheel. Did you try to do that?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T12:41:44.927+0000",
                    "updated": "2021-11-03T12:41:44.927+0000",
                    "started": "2021-11-03T12:41:44.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674582",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/674787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#issuecomment-959761518\n\n\n   @amol- This should interest you, especially the bridge here: https://github.com/apache/arrow/pull/11543/files#diff-386b108c1492f76426f3ea17399c681593a8cc86b34daeb1b451d4da600863e8R56\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:31:24.468+0000",
                    "updated": "2021-11-03T17:31:24.468+0000",
                    "started": "2021-11-03T17:31:24.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674787",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/674791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r742181786\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       Incidentally, this is what Go does for a similar purpose: https://github.com/apache/arrow/blob/master/ci/docker/debian-10-go-cgo-python.dockerfile#L23-L36\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:34:48.226+0000",
                    "updated": "2021-11-03T17:34:48.226+0000",
                    "started": "2021-11-03T17:34:48.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674791",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/674856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "roee88 commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r742250034\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       @pitrou the reason was to do the integration test against the code in the main branch for cases where related fixes are made to the python/C++ implementation. It seems like this is what conda-python-jpype does. If undesired then we can switch to just `pip install` (which was @tomersolomon1's original intent, so my bad)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T19:05:49.795+0000",
                    "updated": "2021-11-03T19:05:49.795+0000",
                    "started": "2021-11-03T19:05:49.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674856",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/674860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r742255022\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       As you prefer, though this certainly makes the CI and docker run slower than installing a binary.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T19:12:53.893+0000",
                    "updated": "2021-11-03T19:12:53.893+0000",
                    "started": "2021-11-03T19:12:53.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674860",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/675321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#issuecomment-959761518\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:39:19.543+0000",
                    "updated": "2021-11-04T00:39:19.543+0000",
                    "started": "2021-11-04T00:39:19.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675321",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/675352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "roee88 commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r742250034\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       @pitrou the reason was to do the integration test against the code in the main branch for cases where related fixes are made to the python/C++ implementation. It seems like this is what conda-python-jpype does. If undesired then we can switch to just `pip install` (which was @tomersolomon1's original intent, so my bad)\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       @pitrou the reason was to do the integration test against the code in the main branch for cases where related fixes are made to the python/C++ implementation. It seems like this is what conda-python-jpype does. If undesired then we can switch to just `pip install` (which was @tomersolomon1's original intent, so my bad)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:42:19.520+0000",
                    "updated": "2021-11-04T00:42:19.520+0000",
                    "started": "2021-11-04T00:42:19.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675352",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/675413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r741897046\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       I don't think you _need_ to build Arrow C++ and PyArrow from scratch. You should be able to just `pip install` a recent binary wheel. Did you try to do that?\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       Incidentally, this is what Go does for a similar purpose: https://github.com/apache/arrow/blob/master/ci/docker/debian-10-go-cgo-python.dockerfile#L23-L36\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       As you prefer, though this certainly makes the CI and docker run slower than installing a binary.\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       I don't think you _need_ to build Arrow C++ and PyArrow from scratch. You should be able to just `pip install` a recent binary wheel. Did you try to do that?\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       Incidentally, this is what Go does for a similar purpose: https://github.com/apache/arrow/blob/master/ci/docker/debian-10-go-cgo-python.dockerfile#L23-L36\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       As you prefer, though this certainly makes the CI and docker run slower than installing a binary.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:49:05.004+0000",
                    "updated": "2021-11-04T00:49:05.004+0000",
                    "started": "2021-11-04T00:49:05.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675413",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/675823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "roee88 commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r742250034\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       @pitrou the reason was to do the integration test against the code in the main branch for cases where related fixes are made to the python/C++ implementation. It seems like this is what conda-python-jpype does. If undesired then we can switch to just `pip install` (which was @tomersolomon1's original intent, so my bad)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:31:52.885+0000",
                    "updated": "2021-11-04T01:31:52.885+0000",
                    "started": "2021-11-04T01:31:52.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675823",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/676064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r741897046\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       I don't think you _need_ to build Arrow C++ and PyArrow from scratch. You should be able to just `pip install` a recent binary wheel. Did you try to do that?\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       Incidentally, this is what Go does for a similar purpose: https://github.com/apache/arrow/blob/master/ci/docker/debian-10-go-cgo-python.dockerfile#L23-L36\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       As you prefer, though this certainly makes the CI and docker run slower than installing a binary.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:55:43.788+0000",
                    "updated": "2021-11-04T01:55:43.788+0000",
                    "started": "2021-11-04T01:55:43.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676064",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/676080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#issuecomment-959761518\n\n\n   @amol- This should interest you, especially the bridge here: https://github.com/apache/arrow/pull/11543/files#diff-386b108c1492f76426f3ea17399c681593a8cc86b34daeb1b451d4da600863e8R56\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:57:30.113+0000",
                    "updated": "2021-11-04T01:57:30.113+0000",
                    "started": "2021-11-04T01:57:30.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676080",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/676284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#issuecomment-960594918\n\n\n   > @amol- This should interest you, especially the bridge here: https://github.com/apache/arrow/pull/11543/files#diff-386b108c1492f76426f3ea17399c681593a8cc86b34daeb1b451d4da600863e8R56\r\n   \r\n   Yes, I was reading it, there are some useful helpers. Some of those should probably live in `pyarrow.jvm` so that you have to deal with the whole `ffi.*` machinery manually? Also those helpers could probably take care of `ffi.release` for you using context managers.\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T09:39:33.884+0000",
                    "updated": "2021-11-04T09:39:33.884+0000",
                    "started": "2021-11-04T09:39:33.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676284",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/676285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r742674243\n\n\n\n##########\nFile path: java/c/src/test/python/integration_tests.py\n##########\n@@ -0,0 +1,223 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import decimal\n+import gc\n+import os\n+import sys\n+import unittest\n+import xml.etree.ElementTree as ET\n+\n+import jpype\n+import pyarrow as pa\n+from pyarrow.cffi import ffi\n+\n+\n+def setup_jvm():\n+    # This test requires Arrow Java to be built in the same source tree\n+    try:\n+        arrow_dir = os.environ[\"ARROW_SOURCE_DIR\"]\n+    except KeyError:\n+        arrow_dir = os.path.join(os.path.dirname(\n+            __file__), '..', '..', '..', '..', '..')\n+    pom_path = os.path.join(arrow_dir, 'java', 'pom.xml')\n+    tree = ET.parse(pom_path)\n+    version = tree.getroot().find(\n+        'POM:version',\n+        namespaces={\n+            'POM': 'http://maven.apache.org/POM/4.0.0'\n+        }).text\n+    jar_path = os.path.join(\n+        arrow_dir, 'java', 'tools', 'target',\n+        'arrow-tools-{}-jar-with-dependencies.jar'.format(version))\n+    jar_path = os.getenv(\"ARROW_TOOLS_JAR\", jar_path)\n+    jar_path += \":{}\".format(os.path.join(arrow_dir,\n+                                          \"java\", \"c/target/arrow-c-data-{}.jar\".format(version)))\n+    kwargs = {}\n+    # This will be the default behaviour in jpype 0.8+\n+    kwargs['convertStrings'] = False\n+    jpype.startJVM(jpype.getDefaultJVMPath(), \"-Djava.class.path=\" + jar_path, **kwargs)\n+\n+\n+class Bridge:\n+    def __init__(self):\n+        self.allocator = jpype.JPackage(\n+            \"org\").apache.arrow.memory.RootAllocator(sys.maxsize)\n+        self.jc = jpype.JPackage(\"org\").apache.arrow.c\n\nReview comment:\n       Minor suggestion, I feel it might help us when we will come back to this codebase in 6 months to be a bit more explicit about when we are invoking Python things and when we are invoking Java things. Given that both of them appear as Python codebase as jpype is proxying Java calls too it's not as explicit as it could be.\r\n   \r\n   Probably naming `self.java_allocator` and `self.java_c` would make a bit more obvious that we are dealing with Java methods there and not with Python things.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T09:43:14.352+0000",
                    "updated": "2021-11-04T09:43:14.352+0000",
                    "started": "2021-11-04T09:43:14.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676285",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/679003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tomersolomon1 commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r745561155\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n+    volumes:\n+      - .:/arrow:delegated\n+      - ${DOCKER_VOLUME_PREFIX}maven-cache:/root/.m2:delegated\n+      - ${DOCKER_VOLUME_PREFIX}debian-ccache:/ccache:delegated\n+    command:\n+      [ \"/arrow/ci/scripts/cpp_build.sh /arrow /build &&\n+          /arrow/ci/scripts/python_build.sh /arrow /build &&\n\nReview comment:\n       I think I prefer to keep it this way b/c of the reasons @roee88 mentioned, and also this lowers the risk of introducing new inconsistencies between the implementations.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-09T12:17:11.829+0000",
                    "updated": "2021-11-09T12:17:11.829+0000",
                    "started": "2021-11-09T12:17:11.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "679003",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/679025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r745600906\n\n\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -993,6 +994,39 @@ services:\n         /arrow/ci/scripts/java_build.sh /arrow /build &&\n         /arrow/ci/scripts/python_test.sh /arrow\"]\n \n+  conda-python-java-integration:\n+    # Usage:\n+    #   docker-compose build conda\n+    #   docker-compose build conda-cpp\n+    #   docker-compose build conda-python\n+    #   docker-compose build conda-python-java-integration\n+    #   docker-compose run --rm conda-python-java-integration\n+    image: ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+    build:\n+      context: .\n+      dockerfile: ci/docker/conda-python-jpype.dockerfile\n+      cache_from:\n+        - ${REPO}:${ARCH}-conda-python-${PYTHON}-java-integration\n+      args:\n+        repo: ${REPO}\n+        arch: ${ARCH}\n+        python: ${PYTHON}\n+        llvm: ${LLVM}\n+    shm_size: *shm-size\n+    environment:\n+      <<: *ccache\n+      ARROW_JAVA_CDATA: \"ON\"\n\nReview comment:\n       To minimize build times, one can disable unnecessary C++ components:\r\n   \r\n   ```suggestion\r\n         ARROW_DATASET: \"OFF\"\r\n         ARROW_FLIGHT: \"OFF\"\r\n         ARROW_GANDIVA: \"OFF\"\r\n         ARROW_JAVA_CDATA: \"ON\"\r\n         ARROW_ORC: \"OFF\"\r\n         ARROW_PARQUET: \"OFF\"\r\n         ARROW_PLASMA: \"OFF\"\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-09T13:11:31.338+0000",
                    "updated": "2021-11-09T13:11:31.338+0000",
                    "started": "2021-11-09T13:11:31.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "679025",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/679402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "roee88 commented on a change in pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#discussion_r746167454\n\n\n\n##########\nFile path: java/c/src/test/python/integration_tests.py\n##########\n@@ -0,0 +1,223 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import decimal\n+import gc\n+import os\n+import sys\n+import unittest\n+import xml.etree.ElementTree as ET\n+\n+import jpype\n+import pyarrow as pa\n+from pyarrow.cffi import ffi\n+\n+\n+def setup_jvm():\n+    # This test requires Arrow Java to be built in the same source tree\n+    try:\n+        arrow_dir = os.environ[\"ARROW_SOURCE_DIR\"]\n+    except KeyError:\n+        arrow_dir = os.path.join(os.path.dirname(\n+            __file__), '..', '..', '..', '..', '..')\n+    pom_path = os.path.join(arrow_dir, 'java', 'pom.xml')\n+    tree = ET.parse(pom_path)\n+    version = tree.getroot().find(\n+        'POM:version',\n+        namespaces={\n+            'POM': 'http://maven.apache.org/POM/4.0.0'\n+        }).text\n+    jar_path = os.path.join(\n+        arrow_dir, 'java', 'tools', 'target',\n+        'arrow-tools-{}-jar-with-dependencies.jar'.format(version))\n+    jar_path = os.getenv(\"ARROW_TOOLS_JAR\", jar_path)\n+    jar_path += \":{}\".format(os.path.join(arrow_dir,\n+                                          \"java\", \"c/target/arrow-c-data-{}.jar\".format(version)))\n+    kwargs = {}\n+    # This will be the default behaviour in jpype 0.8+\n+    kwargs['convertStrings'] = False\n+    jpype.startJVM(jpype.getDefaultJVMPath(), \"-Djava.class.path=\" + jar_path, **kwargs)\n+\n+\n+class Bridge:\n+    def __init__(self):\n+        self.java_allocator = jpype.JPackage(\n+            \"org\").apache.arrow.memory.RootAllocator(sys.maxsize)\n+        self.java_c = jpype.JPackage(\"org\").apache.arrow.c\n+\n+    def java_to_python_field(self, jfield):\n+        c_schema = ffi.new(\"struct ArrowSchema*\")\n+        ptr_schema = int(ffi.cast(\"uintptr_t\", c_schema))\n+        self.java_c.Data.exportField(self.java_allocator, jfield, None,\n+                                     self.java_c.ArrowSchema.wrap(ptr_schema))\n+        return pa.Field._import_from_c(ptr_schema)\n+\n+    def java_to_python_array(self, vector, dictionary_provider=None):\n+        c_schema = ffi.new(\"struct ArrowSchema*\")\n+        ptr_schema = int(ffi.cast(\"uintptr_t\", c_schema))\n+        c_array = ffi.new(\"struct ArrowArray*\")\n+        ptr_array = int(ffi.cast(\"uintptr_t\", c_array))\n+        self.java_c.Data.exportVector(self.java_allocator, vector, dictionary_provider, self.java_c.ArrowArray.wrap(\n+            ptr_array), self.java_c.ArrowSchema.wrap(ptr_schema))\n+        return pa.Array._import_from_c(ptr_array, ptr_schema)\n+\n+    def java_to_python_record_batch(self, root):\n+        c_schema = ffi.new(\"struct ArrowSchema*\")\n+        ptr_schema = int(ffi.cast(\"uintptr_t\", c_schema))\n+        c_array = ffi.new(\"struct ArrowArray*\")\n+        ptr_array = int(ffi.cast(\"uintptr_t\", c_array))\n+        self.java_c.Data.exportVectorSchemaRoot(self.java_allocator, root, None, self.java_c.ArrowArray.wrap(\n+            ptr_array), self.java_c.ArrowSchema.wrap(ptr_schema))\n+        return pa.RecordBatch._import_from_c(ptr_array, ptr_schema)\n+\n+    def python_to_java_field(self, field):\n+        c_schema = self.java_c.ArrowSchema.allocateNew(self.java_allocator)\n+        field._export_to_c(c_schema.memoryAddress())\n+        return self.java_c.Data.importField(self.java_allocator, c_schema, None)\n+\n+    def python_to_java_array(self, array, dictionary_provider=None):\n+        c_schema = self.java_c.ArrowSchema.allocateNew(self.java_allocator)\n+        c_array = self.java_c.ArrowArray.allocateNew(self.java_allocator)\n+        array._export_to_c(c_array.memoryAddress(), c_schema.memoryAddress())\n+        return self.java_c.Data.importVector(self.java_allocator, c_array, c_schema, dictionary_provider)\n+\n+    def python_to_java_record_batch(self, record_batch):\n+        c_schema = self.java_c.ArrowSchema.allocateNew(self.java_allocator)\n+        c_array = self.java_c.ArrowArray.allocateNew(self.java_allocator)\n+        record_batch._export_to_c(\n+            c_array.memoryAddress(), c_schema.memoryAddress())\n+        return self.java_c.Data.importVectorSchemaRoot(self.java_allocator, c_array, c_schema, None)\n+\n+    def close(self):\n+        self.java_allocator.close()\n+\n+\n+class TestPythonIntegration(unittest.TestCase):\n+    def setUp(self):\n+        gc.collect()\n+        self.old_allocated_python = pa.total_allocated_bytes()\n+        self.bridge = Bridge()\n+\n+    def tearDown(self):\n+        self.bridge.close()\n+        gc.collect()\n+        diff_python = pa.total_allocated_bytes() - self.old_allocated_python\n+        self.assertEqual(\n+            pa.total_allocated_bytes(), self.old_allocated_python,\n+            f\"PyArrow memory was not adequately released: {diff_python} bytes lost\")\n+\n+    def round_trip_field(self, field_generator):\n+        original_field = field_generator()\n+        java_field = self.bridge.python_to_java_field(original_field)\n+        del original_field\n+        new_field = self.bridge.java_to_python_field(java_field)\n+        del java_field\n+\n+        expected = field_generator()\n+        self.assertEqual(expected, new_field)\n+\n+    def round_trip_array(self, array_generator, expected_diff=None):\n+        original_arr = array_generator()\n+        with self.bridge.java_c.CDataDictionaryProvider() as dictionary_provider, \\\n+                self.bridge.python_to_java_array(original_arr, dictionary_provider) as vector:\n+            del original_arr\n+            new_array = self.bridge.java_to_python_array(vector, dictionary_provider)\n+\n+        expected = array_generator()\n+        if expected_diff:\n+            self.assertEqual(expected, new_array.view(expected.type))\n+        self.assertEqual(expected.diff(new_array), expected_diff or '')\n+\n+    def round_trip_record_batch(self, rb_generator):\n+        original_rb = rb_generator()\n+        with self.bridge.python_to_java_record_batch(original_rb) as root:\n+            del original_rb\n+            new_rb = self.bridge.java_to_python_record_batch(root)\n+\n+        expected = rb_generator()\n+        self.assertEqual(expected, new_rb)\n+\n+    def test_string_array(self):\n+        self.round_trip_array(lambda: pa.array([None, \"a\", \"bb\", \"ccc\"]))\n+\n+    def test_decimal_array(self):\n+        data = [\n+            round(decimal.Decimal(722.82), 2),\n+            round(decimal.Decimal(-934.11), 2),\n+            None,\n+        ]\n+        self.round_trip_array(lambda: pa.array(data, pa.decimal128(5, 2)))\n+\n+    def test_int_array(self):\n+        self.round_trip_array(lambda: pa.array([1, 2, 3], type=pa.int32()))\n+\n+    def test_list_array(self):\n+        self.round_trip_array(lambda: pa.array(\n+            [[], [0], [1, 2], [4, 5, 6]], pa.list_(pa.int64())\n+        ), \"# Array types differed: list<item: int64> vs list<$data$: int64>\\n\")\n+\n+    def test_struct_array(self):\n+        fields = [\n+            (\"f1\", pa.int32()),\n+            (\"f2\", pa.string()),\n+        ]\n+        data = [\n+            {\"f1\": 1, \"f2\": \"a\"},\n+            None,\n+            {\"f1\": 3, \"f2\": None},\n+            {\"f1\": None, \"f2\": \"d\"},\n+            {\"f1\": None, \"f2\": None},\n+        ]\n+        self.round_trip_array(lambda: pa.array(data, type=pa.struct(fields)))\n+\n+    def test_dict(self):\n+        self.round_trip_array(\n+            lambda: pa.array([\"a\", \"b\", None, \"d\"], pa.dictionary(pa.int64(), pa.utf8())))\n+\n+    def test_map(self):\n+        offsets = [0, None, 2, 6]\n+        pykeys = [b\"a\", b\"b\", b\"c\", b\"d\", b\"e\", b\"f\"]\n+        pyitems = [1, 2, 3, None, 4, 5]\n+        keys = pa.array(pykeys, type=\"binary\")\n+        items = pa.array(pyitems, type=\"i4\")\n+        self.round_trip_array(\n+            lambda: pa.MapArray.from_arrays(offsets, keys, items))\n+\n+    def test_field(self):\n+        self.round_trip_field(lambda: pa.field(\"aa\", pa.bool_()))\n+\n+    def test_field_nested(self):\n+        self.round_trip_field(lambda: pa.field(\n+            \"test\", pa.list_(pa.int32()), nullable=True))\n+\n+    def test_field_metadata(self):\n+        self.round_trip_field(lambda: pa.field(\"aa\", pa.bool_(), {\"a\": \"b\"}))\n+\n+    def test_record_batch_with_list(self):\n+        data = [\n+            pa.array([[1], [2], [3], [4, 5, 6]]),\n+            pa.array([1, 2, 3, 4]),\n+            pa.array(['foo', 'bar', 'baz', None]),\n+            pa.array([True, None, False, True])\n+        ]\n+        self.round_trip_record_batch(\n+            lambda: pa.RecordBatch.from_arrays(data, ['f0', 'f1', 'f2', 'f3']))\n+\n+\n+if __name__ == '__main__':\n+    setup_jvm()\n+    unittest.main(verbosity=2)\n\nReview comment:\n       Same formatting issue here\n\n##########\nFile path: ci/scripts/java_cdata_integration.sh\n##########\n@@ -0,0 +1,29 @@\n+#!/usr/bin/env bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+set -ex\n+\n+arrow_dir=${1}\n+export ARROW_SOURCE_DIR=${arrow_dir}\n+\n+pushd ${arrow_dir}/java/c/src/test/python\n+\n+python integration_tests.py\n+\n+popd\n\nReview comment:\n       Formatting (missing new line at end of file) \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-10T01:09:32.281+0000",
                    "updated": "2021-11-10T01:09:32.281+0000",
                    "started": "2021-11-10T01:09:32.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "679402",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/679636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-10T14:05:17.068+0000",
                    "updated": "2021-11-10T14:05:17.068+0000",
                    "started": "2021-11-10T14:05:17.068+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "679636",
                    "issueId": "13407264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/worklog/679637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11543:\nURL: https://github.com/apache/arrow/pull/11543#issuecomment-965220031\n\n\n   Benchmark runs are scheduled for baseline = 3c1f702e0542290c089b94bdf24e8315e1f95655 and contender = bb776d8984aa9d47eaa125917d1b39f70503c6af. bb776d8984aa9d47eaa125917d1b39f70503c6af is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/fbf5ce4aff3c4efabeff619fd30f449d...6534cdc3c1714a6c8780ed65232ebd31/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/6c77f74992144b15b77746189950c26b...05b3717d5f2a4e1fa1d0c16a8bce52fc/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/553c3156a5b245378e3c5ea40887e9de...8a6b755bf78147a6aa91bf32b3e72cc5/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-10T14:05:29.866+0000",
                    "updated": "2021-11-10T14:05:29.866+0000",
                    "started": "2021-11-10T14:05:29.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "679637",
                    "issueId": "13407264"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
            "id": "6",
            "description": "A new unit, integration or system test.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
            "name": "Test",
            "subtask": false
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@323508c5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@291a9a6e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@669a8806[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1baeb751[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3def37e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5f5ddc09[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6db5a55c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3cf9384[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@475bcc07[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@76d7ed71[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@360839b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@49a4df44[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 10 14:05:12 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-10T14:05:12.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14374/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-10-19T10:41:12.000+0000",
        "updated": "2021-11-11T01:46:31.000+0000",
        "timeoriginalestimate": null,
        "description": "Integration tests for the C data interface implementation for java ARROW-12965.\r\n\r\nThe integration is against pyarrow.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Integration tests for the C data Interface implementation for Java",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/comment/17430467",
                    "id": "17430467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tomersolomon",
                        "name": "tomersolomon",
                        "key": "tomersolomon",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tomersolomon&avatarId=48092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tomersolomon&avatarId=48092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tomersolomon&avatarId=48092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tomersolomon&avatarId=48092"
                        },
                        "displayName": "Tomer Solomon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou] {color:#1d1c1d}Can you please assign me?{color}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tomersolomon",
                        "name": "tomersolomon",
                        "key": "tomersolomon",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tomersolomon&avatarId=48092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tomersolomon&avatarId=48092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tomersolomon&avatarId=48092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tomersolomon&avatarId=48092"
                        },
                        "displayName": "Tomer Solomon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-19T10:44:39.965+0000",
                    "updated": "2021-10-19T12:16:47.275+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407264/comment/17441757",
                    "id": "17441757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11543\n[https://github.com/apache/arrow/pull/11543]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-10T14:05:12.166+0000",
                    "updated": "2021-11-10T14:05:12.166+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vys0:",
        "customfield_12314139": null
    }
}