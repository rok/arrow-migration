{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13281375",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375",
    "key": "ARROW-7670",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7670/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 29,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6268: ARROW-7670: [Python][Dataset] Better ergonomics for the filter expressions\nURL: https://github.com/apache/arrow/pull/6268#issuecomment-578116722\n \n \n   https://issues.apache.org/jira/browse/ARROW-7670\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T12:46:37.376+0000",
                    "updated": "2020-01-24T12:46:37.376+0000",
                    "started": "2020-01-24T12:46:37.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376819",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6268: ARROW-7670: [Python][Dataset] Better ergonomics for the filter expressions\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370616933\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -585,17 +588,17 @@ cdef class Source:\n         return pyarrow_wrap_schema(self.source.schema())\n \n     @property\n-    def partition_expression(self):\n+    def partition_Expr(self):\n \n Review comment:\n   Renaming error.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T12:48:49.857+0000",
                    "updated": "2020-01-24T12:48:49.857+0000",
                    "started": "2020-01-24T12:48:49.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376820",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6268: ARROW-7670: [Python][Dataset] Better ergonomics for the filter expressions\nURL: https://github.com/apache/arrow/pull/6268#issuecomment-578124956\n \n \n   TODO: add the two new functions to the apidoc\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T13:14:30.273+0000",
                    "updated": "2020-01-24T13:14:30.273+0000",
                    "started": "2020-01-24T13:14:30.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376828",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#issuecomment-578196591\n \n \n   I thought that R already uses Expr.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T16:15:11.663+0000",
                    "updated": "2020-01-24T16:15:11.663+0000",
                    "started": "2020-01-24T16:15:11.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376892",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#issuecomment-578196591\n \n \n   I thought that R already uses Expr, reverted.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T16:15:21.330+0000",
                    "updated": "2020-01-24T16:15:21.330+0000",
                    "started": "2020-01-24T16:15:21.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376893",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370749401\n \n \n\n ##########\n File path: python/pyarrow/dataset.py\n ##########\n @@ -328,3 +326,37 @@ def dataset(sources, filesystem=None, partitioning=None, format=None):\n     discovery = sources[0]\n     inspected_schema = discovery.inspect()\n     return Dataset([discovery.finish()], inspected_schema)\n+\n+\n+def field(name):\n+    \"\"\"References a named column of the dataset.\n+\n+    Stores only the field's name, type and other information is known only when\n+    the expression is applied on a dataset having an explicit scheme.\n+\n+    Parameters\n+    ----------\n+    name : string\n+        The name of the field the expression references to.\n+\n+    Returns\n+    -------\n+    field_expr : FieldExpression\n+    \"\"\"\n+    return FieldExpression(name)\n+\n+\n+def scalar(value):\n+    \"\"\"Expressionession representing a scalar value.\n \n Review comment:\n   ```suggestion\r\n       \"\"\"Expression representing a scalar value.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:29:26.675+0000",
                    "updated": "2020-01-24T17:29:26.675+0000",
                    "started": "2020-01-24T17:29:26.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376925",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370752125\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -639,28 +624,28 @@ cdef class FileSystemSource(Source):\n         ----------\n         schema : Schema\n             Schema for resulting Source\n-        source_partition : Expression\n+        source_partition : Expr\n         file_format : FileFormat\n         filesystem : FileSystem\n             FileSystem which will be explored to discover data files.\n         paths_or_selector : Union[FileSelector, List[FileStats]]\n             The file stats object can be queried by the\n             filesystem.get_target_stats method.\n-        partitions : List[Expression]\n+        partitions : List[Expr]\n \n Review comment:\n   ```suggestion\r\n           partitions : List[Expression]\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:29:26.826+0000",
                    "updated": "2020-01-24T17:29:26.826+0000",
                    "started": "2020-01-24T17:29:26.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376926",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370750611\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -816,163 +833,75 @@ cdef class ScanTask:\n                 yield pyarrow_wrap_batch(record_batch)\n \n \n-cdef class InMemoryScanTask(ScanTask):\n-    \"\"\"A trivial ScanTask that yields the RecordBatch of an array.\"\"\"\n-\n-    cdef:\n-        CInMemoryScanTask* in_memory_task\n-\n-    cdef init(self, shared_ptr[CScanTask]& sp):\n-        ScanTask.init(self, sp)\n-        self.in_memory_task = <CInMemoryScanTask*> sp.get()\n-\n-\n-cdef class ScannerBuilder:\n-    \"\"\"Factory class to construct a Scanner.\n+cdef class Scanner:\n+    \"\"\"A materialized scan operation with context and options bound.\n \n-    It is used to pass information, notably a potential filter expression and a\n-    subset of columns to materialize.\n+    A scanner is the class that glues the scan tasks, data fragments and data\n+    sources together.\n \n     Parameters\n     ----------\n-    dataset : Dataset\n+    dataset : Dataset instance\n         The dataset to scan.\n+    columns : list of strings, default None\n+        List of projectable columns during the scan operation. Order and\n+        duplicates will be preserved.\n+        This subset will be passed down to Sources and corresponding data\n+        fragments. The goal is to avoid loading, copying, and deserializing\n+        columns that will not be required further down the compute chain.\n+        By default all available columns will be projected.\n+    filter : Expr, default None\n+        Scan will return only the rows matching the filter.\n+        The predicate will be passed down to Sources and corresponding\n+        data fragments to exploit predicate pushdown if possible using\n+        partition information or internal metadata, e.g. Parquet statistics.\n+        Otherwise filters the loaded RecordBatches before yielding them.\n+    use_threads : bool, default True\n+        Set whether the Scanner should make use of the thread pool.\n     memory_pool : MemoryPool, default None\n         For memory allocations, if required. If not specified, uses the\n         default pool.\n     \"\"\"\n \n     cdef:\n-        shared_ptr[CScannerBuilder] wrapped\n-        CScannerBuilder* builder\n+        shared_ptr[CScanner] wrapped\n+        CScanner* scanner\n \n-    def __init__(self, Dataset dataset not None, MemoryPool memory_pool=None):\n+    def __init__(self, Dataset dataset, list columns=None, Expression filter=None,\n \n Review comment:\n   Style failure https://github.com/apache/arrow/pull/6268/checks?check_run_id=407444654#step:5:55\r\n   ```\r\n   autopep8 --global-config=.flake8.cython -i pyarrow/_dataset.pyx\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:29:26.872+0000",
                    "updated": "2020-01-24T17:29:26.872+0000",
                    "started": "2020-01-24T17:29:26.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376927",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370752242\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -733,26 +718,58 @@ cdef class Dataset:\n     cdef inline shared_ptr[CDataset] unwrap(self) nogil:\n         return self.wrapped\n \n-    def new_scan(self, MemoryPool memory_pool=None):\n-        \"\"\"\n-        Begin to build a new Scan operation against this Dataset.\n+    def scan(self, columns=None, filter=None, use_threads=None,\n+             MemoryPool memory_pool=None):\n+        \"\"\"Read the dataset as materialized record batches.\n+\n+        Builds and executes a scan operation against the dataset. It poduces\n+        a stream of RecordBatches, so\n+\n+        The Scanner object can be instantiated manually, see the Scanner class.\n \n         Parameters\n         ----------\n-        memory_pool : MemoryPool, default None\n-            For memory allocations, if required. If not specified, uses the\n-            default pool.\n+        columns : list of str, default None\n+            List of columns to project. Order and duplicates will be preserved.\n+            The goal is to avoid loading, copying, and deserializing columns\n+            that will not be required further down the compute chain.\n+            By default all of the available columns are projected, raises\n+            an exception if any of the referenced column names does not exist\n+            in the dataset's Schema.\n+        filter : Expr, default None\n \n Review comment:\n   ```suggestion\r\n           filter : Expression, default None\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:29:27.025+0000",
                    "updated": "2020-01-24T17:29:27.025+0000",
                    "started": "2020-01-24T17:29:27.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376928",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370751954\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -639,28 +624,28 @@ cdef class FileSystemSource(Source):\n         ----------\n         schema : Schema\n             Schema for resulting Source\n-        source_partition : Expression\n+        source_partition : Expr\n \n Review comment:\n   ```suggestion\r\n           source_partition : Expression\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:29:27.028+0000",
                    "updated": "2020-01-24T17:29:27.028+0000",
                    "started": "2020-01-24T17:29:27.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376929",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/376930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370752434\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -816,163 +833,75 @@ cdef class ScanTask:\n                 yield pyarrow_wrap_batch(record_batch)\n \n \n-cdef class InMemoryScanTask(ScanTask):\n-    \"\"\"A trivial ScanTask that yields the RecordBatch of an array.\"\"\"\n-\n-    cdef:\n-        CInMemoryScanTask* in_memory_task\n-\n-    cdef init(self, shared_ptr[CScanTask]& sp):\n-        ScanTask.init(self, sp)\n-        self.in_memory_task = <CInMemoryScanTask*> sp.get()\n-\n-\n-cdef class ScannerBuilder:\n-    \"\"\"Factory class to construct a Scanner.\n+cdef class Scanner:\n+    \"\"\"A materialized scan operation with context and options bound.\n \n-    It is used to pass information, notably a potential filter expression and a\n-    subset of columns to materialize.\n+    A scanner is the class that glues the scan tasks, data fragments and data\n+    sources together.\n \n     Parameters\n     ----------\n-    dataset : Dataset\n+    dataset : Dataset instance\n         The dataset to scan.\n+    columns : list of strings, default None\n+        List of projectable columns during the scan operation. Order and\n+        duplicates will be preserved.\n+        This subset will be passed down to Sources and corresponding data\n+        fragments. The goal is to avoid loading, copying, and deserializing\n+        columns that will not be required further down the compute chain.\n+        By default all available columns will be projected.\n+    filter : Expr, default None\n \n Review comment:\n   ```suggestion\r\n       filter : Expression, default None\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:29:27.048+0000",
                    "updated": "2020-01-24T17:29:27.048+0000",
                    "started": "2020-01-24T17:29:27.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376930",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370933172\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -733,30 +721,120 @@ cdef class Dataset:\n     cdef inline shared_ptr[CDataset] unwrap(self) nogil:\n         return self.wrapped\n \n-    def new_scan(self, MemoryPool memory_pool=None):\n+    def scan(self, columns=None, filter=None, MemoryPool memory_pool=None):\n+        \"\"\"Builds a scan operation against the dataset.\n+\n+        It poduces a stream of ScanTasks which is meant to be a unit of work to\n+        be dispatched. The tasks are not executed automatically, the user is\n+        responsible to execute and dispatch the individual tasks, so custom\n+        local task scheduling can be implemented.\n+\n+        Parameters\n+        ----------\n+        columns : list of str, default None\n+            List of columns to project. Order and duplicates will be preserved.\n+            The columns will be passed down to Sources and corresponding data\n+            fragments to avoid loading, copying, and deserializing columns\n+            that will not be required further down the compute chain.\n+            By default all of the available columns are projected. Raises\n+            an exception if any of the referenced column names does not exist\n+            in the dataset's Schema.\n+        filter : Expression, default None\n+            Scan will return only the rows matching the filter.\n+            If possible the predicate will be pushed down to exploit the\n+            partition information or internal metadata found in the data\n+            source, e.g. Parquet statistics. Otherwise filters the loaded\n+            RecordBatches before yielding them.\n+        memory_pool : MemoryPool, default None\n+            For memory allocations, if required. If not specified, uses the\n+            default pool.\n+\n+        Returns\n+        -------\n+        scan_tasks : iterator of ScanTask\n         \"\"\"\n-        Begin to build a new Scan operation against this Dataset.\n+        scanner = Scanner(self, columns=columns, filter=filter,\n+                          memory_pool=memory_pool)\n+        return scanner.scan()\n+\n+    def to_batches(self, columns=None, filter=None,\n+                   MemoryPool memory_pool=None):\n+        \"\"\"Read the dataset as materialized record batches.\n+\n+        Builds a scan operation against the dataset and sequentially executes\n+        the ScanTasks as the returned generator gets consumed.\n \n         Parameters\n         ----------\n+        columns : list of str, default None\n+            List of columns to project. Order and duplicates will be preserved.\n+            The columns will be passed down to Sources and corresponding data\n+            fragments to avoid loading, copying, and deserializing columns\n+            that will not be required further down the compute chain.\n+            By default all of the available columns are projected. Raises\n+            an exception if any of the referenced column names does not exist\n+            in the dataset's Schema.\n+        filter : Expression, default None\n+            Scan will return only the rows matching the filter.\n+            If possible the predicate will be pushed down to exploit the\n+            partition information or internal metadata found in the data\n+            source, e.g. Parquet statistics. Otherwise filters the loaded\n+            RecordBatches before yielding them.\n         memory_pool : MemoryPool, default None\n             For memory allocations, if required. If not specified, uses the\n             default pool.\n \n         Returns\n         -------\n-        ScannerBuilder\n+        record_batches : iterator of RecordBatch\n         \"\"\"\n-        cdef:\n-            shared_ptr[CScanContext] context = make_shared[CScanContext]()\n-            CResult[shared_ptr[CScannerBuilder]] result\n-        context.get().pool = maybe_unbox_memory_pool(memory_pool)\n-        result = self.dataset.NewScanWithContext(context)\n-        return ScannerBuilder.wrap(GetResultValue(result))\n+        scanner = Scanner(self, columns=columns, filter=filter,\n+                          memory_pool=memory_pool)\n+        for task in scanner.scan():\n+            for batch in task.execute():\n+                yield batch\n+\n+    def to_table(self, columns=None, filter=None, use_threads=True,\n+                 MemoryPool memory_pool=None):\n+        \"\"\"Read the dataset to an arrow table.\n+\n+        Note, that this method reads all the selected data from the dataset\n \n Review comment:\n   ```suggestion\r\n           Note that this method reads all the selected data from the dataset\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.363+0000",
                    "updated": "2020-01-25T13:43:41.363+0000",
                    "started": "2020-01-25T13:43:41.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377193",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370933117\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -733,30 +721,120 @@ cdef class Dataset:\n     cdef inline shared_ptr[CDataset] unwrap(self) nogil:\n         return self.wrapped\n \n-    def new_scan(self, MemoryPool memory_pool=None):\n+    def scan(self, columns=None, filter=None, MemoryPool memory_pool=None):\n+        \"\"\"Builds a scan operation against the dataset.\n+\n+        It poduces a stream of ScanTasks which is meant to be a unit of work to\n+        be dispatched. The tasks are not executed automatically, the user is\n+        responsible to execute and dispatch the individual tasks, so custom\n+        local task scheduling can be implemented.\n+\n+        Parameters\n+        ----------\n+        columns : list of str, default None\n+            List of columns to project. Order and duplicates will be preserved.\n+            The columns will be passed down to Sources and corresponding data\n+            fragments to avoid loading, copying, and deserializing columns\n+            that will not be required further down the compute chain.\n+            By default all of the available columns are projected. Raises\n+            an exception if any of the referenced column names does not exist\n+            in the dataset's Schema.\n+        filter : Expression, default None\n+            Scan will return only the rows matching the filter.\n+            If possible the predicate will be pushed down to exploit the\n+            partition information or internal metadata found in the data\n+            source, e.g. Parquet statistics. Otherwise filters the loaded\n+            RecordBatches before yielding them.\n+        memory_pool : MemoryPool, default None\n+            For memory allocations, if required. If not specified, uses the\n+            default pool.\n+\n+        Returns\n+        -------\n+        scan_tasks : iterator of ScanTask\n         \"\"\"\n-        Begin to build a new Scan operation against this Dataset.\n+        scanner = Scanner(self, columns=columns, filter=filter,\n+                          memory_pool=memory_pool)\n+        return scanner.scan()\n \n Review comment:\n   An option is also to return the `scanner` object itself? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.372+0000",
                    "updated": "2020-01-25T13:43:41.372+0000",
                    "started": "2020-01-25T13:43:41.372+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377194",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370932881\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -806,173 +884,88 @@ cdef class ScanTask:\n             CRecordBatchIterator iterator\n             shared_ptr[CRecordBatch] record_batch\n \n-        iterator = move(GetResultValue(move(self.task.Execute())))\n-\n-        while True:\n-            record_batch = GetResultValue(iterator.Next())\n-            if record_batch.get() == nullptr:\n-                raise StopIteration()\n-            else:\n-                yield pyarrow_wrap_batch(record_batch)\n-\n-\n-cdef class InMemoryScanTask(ScanTask):\n-    \"\"\"A trivial ScanTask that yields the RecordBatch of an array.\"\"\"\n-\n-    cdef:\n-        CInMemoryScanTask* in_memory_task\n+        with nogil:\n+            iterator = move(GetResultValue(move(self.task.Execute())))\n \n-    cdef init(self, shared_ptr[CScanTask]& sp):\n-        ScanTask.init(self, sp)\n-        self.in_memory_task = <CInMemoryScanTask*> sp.get()\n+            while True:\n+                record_batch = GetResultValue(iterator.Next())\n+                if record_batch.get() == nullptr:\n+                    raise StopIteration()\n+                else:\n+                    with gil:\n+                        yield pyarrow_wrap_batch(record_batch)\n \n \n-cdef class ScannerBuilder:\n-    \"\"\"Factory class to construct a Scanner.\n+cdef class Scanner:\n+    \"\"\"A materialized scan operation with context and options bound.\n \n-    It is used to pass information, notably a potential filter expression and a\n-    subset of columns to materialize.\n+    A scanner is the class that glues the scan tasks, data fragments and data\n+    sources together.\n \n     Parameters\n     ----------\n-    dataset : Dataset\n-        The dataset to scan.\n \n Review comment:\n   it still takes the dataset as first argument?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.445+0000",
                    "updated": "2020-01-25T13:43:41.445+0000",
                    "started": "2020-01-25T13:43:41.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377195",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370933862\n \n \n\n ##########\n File path: python/pyarrow/includes/libarrow_dataset.pxd\n ##########\n @@ -300,10 +300,6 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n     cdef cppclass CPartitioningFactory \"arrow::dataset::PartitioningFactory\":\n         pass\n \n-    cdef cppclass CDefaultPartitioning \\\n-            \"arrow::dataset::DefaultPartitioning\"(CPartitioning):\n-        CDefaultPartitioning()\n-\n \n Review comment:\n   You can probably remove `InMemoryScanTask` from this file as well\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.528+0000",
                    "updated": "2020-01-25T13:43:41.528+0000",
                    "started": "2020-01-25T13:43:41.528+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377196",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370934064\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1071,21 +1087,57 @@ cdef class Expression:\n         return self.wrapped\n \n     def equals(self, Expression other):\n-        return self.expression.Equals(other.unwrap())\n+        return self.expr.Equals(other.unwrap())\n \n     def __str__(self):\n-        return frombytes(self.expression.ToString())\n+        return frombytes(self.expr.ToString())\n \n     def validate(self, Schema schema not None):\n         cdef:\n             shared_ptr[CSchema] sp_schema\n             CResult[shared_ptr[CDataType]] result\n         sp_schema = pyarrow_unwrap_schema(schema)\n-        result = self.expression.Validate(deref(sp_schema))\n+        result = self.expr.Validate(deref(sp_schema))\n         return pyarrow_wrap_data_type(GetResultValue(result))\n \n     def assume(self, Expression given):\n-        return Expression.wrap(self.expression.Assume(given.unwrap()))\n+        return Expression.wrap(self.expr.Assume(given.unwrap()))\n+\n+    def __invert__(self):\n+        return NotExpression(self)\n+\n+    def __richcmp__(self, other, int op):\n+        operator_mapping = {\n+            Py_EQ: CompareOperator.Equal,\n+            Py_NE: CompareOperator.NotEqual,\n+            Py_GT: CompareOperator.Greater,\n+            Py_GE: CompareOperator.GreaterEqual,\n+            Py_LT: CompareOperator.Less,\n+            Py_LE: CompareOperator.LessEqual\n+        }\n+\n+        if not isinstance(other, Expression):\n+            try:\n+                other = ScalarExpression(other)\n+            except TypeError:\n+                return NotImplemented\n+\n+        return ComparisonExpression(operator_mapping[op], self, other)\n+\n+    def __and__(self, other):\n+        return _binop(AndExpression, self, other)\n+\n+    def __or__(self, other):\n+        return _binop(OrExpression, self, other)\n+\n+    def is_valid(self):\n+        return IsValidExpression(self)\n+\n+    def cast(self, type, bint safe=True):\n+        return CastExpression(self, to=ensure_type(type), safe=safe)\n+\n+    def isin(self, values):\n+        return InExpression(self, pa.array(values))\n \n Review comment:\n   Should this (and `cast` above) only be defined on a FieldExpression? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.532+0000",
                    "updated": "2020-01-25T13:43:41.532+0000",
                    "started": "2020-01-25T13:43:41.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377197",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370934014\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1071,21 +1087,57 @@ cdef class Expression:\n         return self.wrapped\n \n     def equals(self, Expression other):\n-        return self.expression.Equals(other.unwrap())\n+        return self.expr.Equals(other.unwrap())\n \n     def __str__(self):\n-        return frombytes(self.expression.ToString())\n+        return frombytes(self.expr.ToString())\n \n     def validate(self, Schema schema not None):\n         cdef:\n             shared_ptr[CSchema] sp_schema\n             CResult[shared_ptr[CDataType]] result\n         sp_schema = pyarrow_unwrap_schema(schema)\n-        result = self.expression.Validate(deref(sp_schema))\n+        result = self.expr.Validate(deref(sp_schema))\n         return pyarrow_wrap_data_type(GetResultValue(result))\n \n     def assume(self, Expression given):\n-        return Expression.wrap(self.expression.Assume(given.unwrap()))\n+        return Expression.wrap(self.expr.Assume(given.unwrap()))\n+\n+    def __invert__(self):\n+        return NotExpression(self)\n+\n+    def __richcmp__(self, other, int op):\n+        operator_mapping = {\n+            Py_EQ: CompareOperator.Equal,\n+            Py_NE: CompareOperator.NotEqual,\n+            Py_GT: CompareOperator.Greater,\n+            Py_GE: CompareOperator.GreaterEqual,\n+            Py_LT: CompareOperator.Less,\n+            Py_LE: CompareOperator.LessEqual\n+        }\n+\n+        if not isinstance(other, Expression):\n+            try:\n+                other = ScalarExpression(other)\n+            except TypeError:\n+                return NotImplemented\n+\n+        return ComparisonExpression(operator_mapping[op], self, other)\n+\n+    def __and__(self, other):\n+        return _binop(AndExpression, self, other)\n+\n+    def __or__(self, other):\n+        return _binop(OrExpression, self, other)\n+\n+    def is_valid(self):\n+        return IsValidExpression(self)\n \n Review comment:\n   Is this about being not null?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.532+0000",
                    "updated": "2020-01-25T13:43:41.532+0000",
                    "started": "2020-01-25T13:43:41.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377198",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370933614\n \n \n\n ##########\n File path: python/pyarrow/dataset.py\n ##########\n @@ -328,3 +326,37 @@ def dataset(sources, filesystem=None, partitioning=None, format=None):\n     discovery = sources[0]\n     inspected_schema = discovery.inspect()\n     return Dataset([discovery.finish()], inspected_schema)\n+\n+\n+def field(name):\n+    \"\"\"References a named column of the dataset.\n+\n+    Stores only the field's name, type and other information is known only when\n \n Review comment:\n   ```suggestion\r\n       Stores only the field's name. Type and other information is known only when\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T13:43:41.561+0000",
                    "updated": "2020-01-25T13:43:41.561+0000",
                    "started": "2020-01-25T13:43:41.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377199",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#issuecomment-578410303\n \n \n   @jorisvandenbossche did you use python threading? Because the gil is released now in ScanTask.execute()\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T14:23:55.653+0000",
                    "updated": "2020-01-25T14:23:55.653+0000",
                    "started": "2020-01-25T14:23:55.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377208",
                    "issueId": "13281375"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/worklog/377209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6268: ARROW-7670: [Python][Dataset] More ergonomical API\nURL: https://github.com/apache/arrow/pull/6268#discussion_r370936267\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1071,21 +1087,57 @@ cdef class Expression:\n         return self.wrapped\n \n     def equals(self, Expression other):\n-        return self.expression.Equals(other.unwrap())\n+        return self.expr.Equals(other.unwrap())\n \n     def __str__(self):\n-        return frombytes(self.expression.ToString())\n+        return frombytes(self.expr.ToString())\n \n     def validate(self, Schema schema not None):\n         cdef:\n             shared_ptr[CSchema] sp_schema\n             CResult[shared_ptr[CDataType]] result\n         sp_schema = pyarrow_unwrap_schema(schema)\n-        result = self.expression.Validate(deref(sp_schema))\n+        result = self.expr.Validate(deref(sp_schema))\n         return pyarrow_wrap_data_type(GetResultValue(result))\n \n     def assume(self, Expression given):\n-        return Expression.wrap(self.expression.Assume(given.unwrap()))\n+        return Expression.wrap(self.expr.Assume(given.unwrap()))\n+\n+    def __invert__(self):\n+        return NotExpression(self)\n+\n+    def __richcmp__(self, other, int op):\n+        operator_mapping = {\n+            Py_EQ: CompareOperator.Equal,\n+            Py_NE: CompareOperator.NotEqual,\n+            Py_GT: CompareOperator.Greater,\n+            Py_GE: CompareOperator.GreaterEqual,\n+            Py_LT: CompareOperator.Less,\n+            Py_LE: CompareOperator.LessEqual\n+        }\n+\n+        if not isinstance(other, Expression):\n+            try:\n+                other = ScalarExpression(other)\n+            except TypeError:\n+                return NotImplemented\n+\n+        return ComparisonExpression(operator_mapping[op], self, other)\n+\n+    def __and__(self, other):\n+        return _binop(AndExpression, self, other)\n+\n+    def __or__(self, other):\n+        return _binop(OrExpression, self, other)\n+\n+    def is_valid(self):\n+        return IsValidExpression(self)\n+\n+    def cast(self, type, bint safe=True):\n+        return CastExpression(self, to=ensure_type(type), safe=safe)\n+\n+    def isin(self, values):\n+        return InExpression(self, pa.array(values))\n \n Review comment:\n   It makes sense on scalars, like `ds.scalar(1.0).cast('int64').isin([1, 2, 3])`\r\n   But indeed, in the future we'll need to restrict certain operations on specific expression types, like in ibis [1](https://github.com/ibis-project/ibis/blob/master/ibis/expr/api.py#L1085), [2](https://github.com/ibis-project/ibis/blob/master/ibis/expr/api.py#L1436), [3](https://github.com/ibis-project/ibis/blob/master/ibis/expr/api.py#L2590), etc.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T14:28:05.096+0000",
                    "updated": "2020-01-25T14:28:05.096+0000",
                    "started": "2020-01-25T14:28:05.095+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377209",
                    "issueId": "13281375"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5fc5ef2d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ad7d219[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3718ea62[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@432ba182[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39ad920[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@62661d38[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@125da0ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@ce43494[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5962aff1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@bbff638[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@741a6d63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@59f7a7e0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Jan 26 18:43:41 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-01-26T18:43:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7670/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-01-24T12:44:26.000+0000",
        "updated": "2020-01-26T18:43:41.000+0000",
        "timeoriginalestimate": null,
        "description": "The current expression API is rather verbose, so let's have a bit more ergonomical API.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Dataset] Better ergonomics for the filter expressions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281375/comment/17023899",
                    "id": "17023899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 6268\n[https://github.com/apache/arrow/pull/6268]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-01-26T18:43:41.091+0000",
                    "updated": "2020-01-26T18:43:41.091+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0atx4:",
        "customfield_12314139": null
    }
}