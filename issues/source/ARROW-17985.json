{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13485635",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635",
    "key": "ARROW-17985",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12650829",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12650829",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13494600",
                    "key": "ARROW-18238",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13494600",
                    "fields": {
                        "summary": "[Python] Improve docs for S3FileSystem / bucket region resolution",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
            "name": "milesgranger",
            "key": "JIRAUSER293894",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Miles Granger",
            "active": true,
            "timeZone": "Europe/Oslo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vroomerify",
            "name": "vroomerify",
            "key": "JIRAUSER296617",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Vedant Roy",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vroomerify",
            "name": "vroomerify",
            "key": "JIRAUSER296617",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Vedant Roy",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17985/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/823873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger opened a new pull request, #14601:\nURL: https://github.com/apache/arrow/pull/14601\n\n   Will fix [ARROW-17985](https://issues.apache.org/jira/browse/ARROW-17985)\n\n\n",
                    "created": "2022-11-07T11:08:36.462+0000",
                    "updated": "2022-11-07T11:08:36.462+0000",
                    "started": "2022-11-07T11:08:36.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "823873",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/823874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#issuecomment-1305448625\n\n   https://issues.apache.org/jira/browse/ARROW-17985\n\n\n",
                    "created": "2022-11-07T11:09:00.322+0000",
                    "updated": "2022-11-07T11:09:00.322+0000",
                    "started": "2022-11-07T11:09:00.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "823874",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#issuecomment-1306851400\n\n   The code looks good to me!\r\n   \r\n   AppVeyor is having some trouble though, `AWS Error NETWORK_CONNECTION` in `test_s3fs_wrong_region()`:\r\n   \r\n   ```python\r\n   ___________________________ test_s3fs_wrong_region ____________________________\r\n       def test_s3fs_wrong_region():\r\n           from pyarrow.fs import S3FileSystem\r\n       \r\n           # wrong region for bucket\r\n           fs = S3FileSystem(region='eu-north-1')\r\n       \r\n           msg = (\"When getting information for bucket 'voltrondata-labs-datasets': \"\r\n                  \"Looks like the configured region is 'eu-north-1' while the \"\r\n                  \"bucket is located in 'us-east-2': *\")\r\n           with pytest.raises(OSError, match=msg):\r\n   >           fs.get_file_info(\"voltrondata-labs-datasets\")\r\n   pyarrow\\tests\\test_fs.py:1329: \r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   >   info = GetResultValue(self.fs.GetFileInfo(path))\r\n   pyarrow\\_fs.pyx:571: \r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   >   return check_status(status)\r\n   pyarrow\\error.pxi:144: \r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   >   raise IOError(message)\r\n   E   OSError: When resolving region for bucket 'voltrondata-labs-datasets': AWS Error NETWORK_CONNECTION during HeadBucket operation: Encountered network error when sending http request\r\n   pyarrow\\error.pxi:115: OSError\r\n   During handling of the above exception, another exception occurred:\r\n       def test_s3fs_wrong_region():\r\n           from pyarrow.fs import S3FileSystem\r\n       \r\n           # wrong region for bucket\r\n           fs = S3FileSystem(region='eu-north-1')\r\n       \r\n           msg = (\"When getting information for bucket 'voltrondata-labs-datasets': \"\r\n                  \"Looks like the configured region is 'eu-north-1' while the \"\r\n                  \"bucket is located in 'us-east-2': *\")\r\n           with pytest.raises(OSError, match=msg):\r\n   >           fs.get_file_info(\"voltrondata-labs-datasets\")\r\n   E           AssertionError: Regex pattern did not match.\r\n   E            Regex: \"When getting information for bucket 'voltrondata-labs-datasets': Looks like the configured region is 'eu-north-1' while the bucket is located in 'us-east-2': *\"\r\n   E            Input: \"When resolving region for bucket 'voltrondata-labs-datasets': AWS Error NETWORK_CONNECTION during HeadBucket operation: Encountered network error when sending http request\"\r\n   pyarrow\\tests\\test_fs.py:1329: AssertionError\r\n   ```\r\n   \r\n   I will re-run the build to see if it helps.\n\n\n",
                    "created": "2022-11-08T08:54:27.037+0000",
                    "updated": "2022-11-08T08:54:27.037+0000",
                    "started": "2022-11-08T08:54:27.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824153",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#issuecomment-1306857822\n\n   Thanks @AlenkaF, is there a way to mark tests as flaky or otherwise try a couple times?\n\n\n",
                    "created": "2022-11-08T09:00:10.809+0000",
                    "updated": "2022-11-08T09:00:10.809+0000",
                    "started": "2022-11-08T09:00:10.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824157",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824158",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#issuecomment-1306865753\n\n   > Thanks @AlenkaF, is there a way to mark tests as flaky or otherwise try a couple times?\r\n   \r\n   Hm, not sure about that. \r\n   Looking at the code base for PyArrow, flaky tests seem to be commented out, example:\r\n   https://github.com/apache/arrow/blob/a02a3369da4c9f9df4d1dbb3c22af046a72d907a/python/pyarrow/tests/test_plasma.py#L1032\r\n   \r\n   > Edit: Also noticed I missed the s3 pytest marker.\r\n   \ud83d\udc4d \r\n   \n\n\n",
                    "created": "2022-11-08T09:06:08.886+0000",
                    "updated": "2022-11-08T09:06:08.886+0000",
                    "started": "2022-11-08T09:06:08.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824158",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#issuecomment-1308551898\n\n   Can you rebase or merge master to see if we get a green CI?\n\n\n",
                    "created": "2022-11-09T10:39:03.574+0000",
                    "updated": "2022-11-09T10:39:03.574+0000",
                    "started": "2022-11-09T10:39:03.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824510",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019203778\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   This will issue an additional API call. I'm not sure it's desirable to do this ourselves, rather than simply enhance the original error message with a clue as to the possible cause?\r\n   \r\n   For example:\r\n   > When getting information for bucket 'XXX' (perhaps you configured the wrong region?): ...\r\n   \n\n\n\n",
                    "created": "2022-11-10T14:26:38.106+0000",
                    "updated": "2022-11-10T14:26:38.106+0000",
                    "started": "2022-11-10T14:26:38.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824947",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019208468\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   Another possibility would be to condition this on the HTTP status code, which seems to be 301 in case the bucket exists in another region.\n\n\n\n",
                    "created": "2022-11-10T14:30:28.307+0000",
                    "updated": "2022-11-10T14:30:28.307+0000",
                    "started": "2022-11-10T14:30:28.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824948",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019209543\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   But in general I think it's a bad idea to issue this additional API call, especially as HeadBucket fails fast, while region resolution can be slow (~400 ms here).\n\n\n\n",
                    "created": "2022-11-10T14:31:23.459+0000",
                    "updated": "2022-11-10T14:31:23.459+0000",
                    "started": "2022-11-10T14:31:23.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824949",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019242095\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   Note that we only do this extra API call if there is an error (so it doesn't impact code that doesn't error), and also only if the bucket exists (because if it doesn't exist (eg a typo), we return FileType::NotFound). So that might already limit the cases where this extra call would actually be a problem.\r\n   \r\n   Another option could be to only check for this is the AWS Error is UNKNOWN (since it doesn't seem to have a specific error code for \"buckets exists but not on this region\")\n\n\n\n",
                    "created": "2022-11-10T14:57:30.168+0000",
                    "updated": "2022-11-10T14:57:30.168+0000",
                    "started": "2022-11-10T14:57:30.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824951",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019242095\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   Note that we only do this extra API call if there is an error (so it doesn't impact code that doesn't error), and also only if the bucket exists (because if it doesn't exist (eg a typo), we return FileType::NotFound). So that might already limit the cases where this extra call would actually be a problem.\r\n   \r\n   Another option could be to only check for this is the AWS Error is UNKNOWN (since it doesn't seem to have a specific error code for \"buckets exists but not on this region\"). That would avoid doing the check if it is another know error like a network connection or unknown host.\n\n\n\n",
                    "created": "2022-11-10T14:58:34.858+0000",
                    "updated": "2022-11-10T14:58:34.858+0000",
                    "started": "2022-11-10T14:58:34.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824954",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019246048\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   \"UNKNOWN\" is not really specific enough. However, the HTTP status code may be a better clue.\n\n\n\n",
                    "created": "2022-11-10T15:00:39.944+0000",
                    "updated": "2022-11-10T15:00:39.944+0000",
                    "started": "2022-11-10T15:00:39.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824957",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019247304\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   Also, perhaps you can try inspecting the headers of the HeadBucket error response? The answer might be there already.\n\n\n\n",
                    "created": "2022-11-10T15:01:40.011+0000",
                    "updated": "2022-11-10T15:01:40.011+0000",
                    "started": "2022-11-10T15:01:40.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824958",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/824959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019247898\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   Last thing: ideally we do not do this only for HeadBucket, but for all similar operations (such as HeadObject).\n\n\n\n",
                    "created": "2022-11-10T15:02:10.413+0000",
                    "updated": "2022-11-10T15:02:10.413+0000",
                    "started": "2022-11-10T15:02:10.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "824959",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/825005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019430511\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2303,10 +2303,14 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     auto outcome = impl_->client_->HeadBucket(req);\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n-        return ErrorToStatus(\n-            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\n-                                  \"': \"),\n-            \"HeadBucket\", outcome.GetError());\n+        auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+        // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n+        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n\nReview Comment:\n   Ah, it was in the headers after all. :+1: https://github.com/apache/arrow/pull/14601/commits/eccb0b521b7281c6ec09d9793ab2cee3137130bd\n\n\n\n",
                    "created": "2022-11-10T17:33:40.627+0000",
                    "updated": "2022-11-10T17:33:40.627+0000",
                    "started": "2022-11-10T17:33:40.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "825005",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/825016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1019444516\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2304,11 +2304,16 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n         auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+\n         // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n-        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n-        if (region != impl_->options().region) {\n-          msg += \"Looks like the configured region is '\" + impl_->options().region +\n-                 \"' while the bucket is located in '\" + region + \"': \";\n+        const auto headers = outcome.GetError().GetResponseHeaders();\n+        const auto it = headers.find(\"x-amz-bucket-region\");\n+        if (it != headers.end()) {\n+          const std::string region(it->second.begin(), it->second.end());\n+          if (region != impl_->options().region) {\n+            msg += \"Looks like the configured region is '\" + impl_->options().region +\n+                   \"' while the bucket is located in '\" + region + \"': \";\n+          }\n\nReview Comment:\n   Can we factor this out somehow and reuse it in other places where there could be a similar error?\r\n   (`HeadObject` below is an obvious candidate IMHO)\n\n\n\n",
                    "created": "2022-11-10T17:48:57.300+0000",
                    "updated": "2022-11-10T17:48:57.300+0000",
                    "started": "2022-11-10T17:48:57.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "825016",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/825217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1020060039\n\n\n##########\ncpp/src/arrow/filesystem/s3fs.cc:\n##########\n@@ -2304,11 +2304,16 @@ Result<FileInfo> S3FileSystem::GetFileInfo(const std::string& s) {\n     if (!outcome.IsSuccess()) {\n       if (!IsNotFound(outcome.GetError())) {\n         auto msg = \"When getting information for bucket '\" + path.bucket + \"': \";\n+\n         // Bucket exists, but failed to call HeadBucket, perhaps wrong region?\n-        ARROW_ASSIGN_OR_RAISE(auto region, impl_->client_->GetBucketRegion(path.bucket));\n-        if (region != impl_->options().region) {\n-          msg += \"Looks like the configured region is '\" + impl_->options().region +\n-                 \"' while the bucket is located in '\" + region + \"': \";\n+        const auto headers = outcome.GetError().GetResponseHeaders();\n+        const auto it = headers.find(\"x-amz-bucket-region\");\n+        if (it != headers.end()) {\n+          const std::string region(it->second.begin(), it->second.end());\n+          if (region != impl_->options().region) {\n+            msg += \"Looks like the configured region is '\" + impl_->options().region +\n+                   \"' while the bucket is located in '\" + region + \"': \";\n+          }\n\nReview Comment:\n   Added my initial impressions on factoring it out into `ErrorToStatus` but required callers to send in the current region as `impl_` wasn't available. https://github.com/apache/arrow/pull/14601/commits/be3af79e1efe2d9d4c14d3ad5506eeddaef7edda\r\n   \r\n   If this is okay, then I will press on finding other places which might also want to pass in region when calling `ErrorToStatus`.\n\n\n\n",
                    "created": "2022-11-11T09:54:30.027+0000",
                    "updated": "2022-11-11T09:54:30.027+0000",
                    "started": "2022-11-11T09:54:30.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "825217",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/826049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1022526260\n\n\n##########\ncpp/src/arrow/filesystem/s3_internal.h:\n##########\n@@ -158,6 +170,13 @@ Status ErrorToStatus(const std::string& prefix, const std::string& operation,\n   if (error_type == Aws::S3::S3Errors::UNKNOWN) {\n     ss << \" (HTTP status \" << static_cast<int>(error.GetResponseCode()) << \")\";\n   }\n+  const auto maybe_region = BucketRegionFromError(error);\n+  if (maybe_region.has_value() && region.has_value()) {\n\nReview Comment:\n   Only do this when a region was passed to start with? (so moving `region.has_value()` before `BucketRegionFromError`)\n\n\n\n",
                    "created": "2022-11-15T09:12:56.469+0000",
                    "updated": "2022-11-15T09:12:56.469+0000",
                    "started": "2022-11-15T09:12:56.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826049",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/826055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1022536661\n\n\n##########\ncpp/src/arrow/filesystem/s3_internal.h:\n##########\n@@ -158,6 +170,13 @@ Status ErrorToStatus(const std::string& prefix, const std::string& operation,\n   if (error_type == Aws::S3::S3Errors::UNKNOWN) {\n     ss << \" (HTTP status \" << static_cast<int>(error.GetResponseCode()) << \")\";\n   }\n+  const auto maybe_region = BucketRegionFromError(error);\n+  if (maybe_region.has_value() && region.has_value()) {\n+    if (maybe_region.value() != region.value()) {\n+      ss << \" Looks like the configured region is '\" + region.value() +\n\nReview Comment:\n   Could we add this additional context fully at the end of the error message? \r\n   \r\n   Right now the AWS part gives something like \"AWS Error UNKNOWN (HTTP status 301) during HeadObject operation: No response body.\", which sounds like a logical sentence, and this additional sentence is adding there somewhere in the middle.\n\n\n\n",
                    "created": "2022-11-15T09:20:57.246+0000",
                    "updated": "2022-11-15T09:20:57.246+0000",
                    "started": "2022-11-15T09:20:57.245+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826055",
                    "issueId": "13485635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/worklog/826058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14601:\nURL: https://github.com/apache/arrow/pull/14601#discussion_r1022552474\n\n\n##########\ncpp/src/arrow/filesystem/s3_internal.h:\n##########\n@@ -158,6 +170,13 @@ Status ErrorToStatus(const std::string& prefix, const std::string& operation,\n   if (error_type == Aws::S3::S3Errors::UNKNOWN) {\n     ss << \" (HTTP status \" << static_cast<int>(error.GetResponseCode()) << \")\";\n   }\n+  const auto maybe_region = BucketRegionFromError(error);\n+  if (maybe_region.has_value() && region.has_value()) {\n\nReview Comment:\n   https://github.com/apache/arrow/pull/14601/commits/d1b6471570d7fc1f82ca1a885c8d96ad664f528f\n\n\n\n##########\ncpp/src/arrow/filesystem/s3_internal.h:\n##########\n@@ -158,6 +170,13 @@ Status ErrorToStatus(const std::string& prefix, const std::string& operation,\n   if (error_type == Aws::S3::S3Errors::UNKNOWN) {\n     ss << \" (HTTP status \" << static_cast<int>(error.GetResponseCode()) << \")\";\n   }\n+  const auto maybe_region = BucketRegionFromError(error);\n+  if (maybe_region.has_value() && region.has_value()) {\n+    if (maybe_region.value() != region.value()) {\n+      ss << \" Looks like the configured region is '\" + region.value() +\n\nReview Comment:\n   https://github.com/apache/arrow/pull/14601/commits/6c476ca1c386d215d68375b9ef33c0475aea9292\n\n\n\n",
                    "created": "2022-11-15T09:34:23.745+0000",
                    "updated": "2022-11-15T09:34:23.745+0000",
                    "started": "2022-11-15T09:34:23.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826058",
                    "issueId": "13485635"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@137a77cd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b56752d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49c4721d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@71838915[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71221793[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7d291ed0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1797cff2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7a312734[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bce396e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2ea47b59[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e5d920[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@741e566f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 03 14:55:11 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17985/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-10-11T10:38:15.000+0000",
        "updated": "2022-11-15T09:34:23.000+0000",
        "timeoriginalestimate": null,
        "description": "A few odd things are going on with the Python bindings:\r\n # Statefulness. I ran the following code:\r\n\r\n{code:java}\r\nimport os\r\nimport pyarrow.fs as arrow_fs\r\ndef fs_():\r\n\u00a0 \u00a0 s3_fs = arrow_fs.S3FileSystem(\r\n\u00a0 \u00a0 \u00a0 \u00a0 access_key=\"<token>\",\r\n\u00a0 \u00a0 \u00a0 \u00a0 secret_key=\"<token>\",\r\n\u00a0 \u00a0 \u00a0 \u00a0 endpoint_override=\"<cloudflare r2 url>\",\r\n\u00a0 \u00a0 )\r\n\u00a0 \u00a0 return s3_fs\r\nfs = fs_()\r\nprint(fs.get_file_info(\"data\"))\r\n{code}\r\nand it worked on one machine but not the other. Only setting\r\n{code:java}\r\nregion=\"auto\"\r\n{code}\r\n allowed the code to work consistently on both computers.\r\nFurthermore, the error message is very opaque:\r\n\r\n{code:java}\r\nTraceback (most recent call last):\r\n  File \"cluster_scripts/test_s3.py\", line 51, in <module>\r\n    print(fs.get_file_info(\"data\"))\r\n  File \"pyarrow/_fs.pyx\", line 439, in pyarrow._fs.FileSystem.get_file_info\r\n  File \"pyarrow/error.pxi\", line 143, in pyarrow.lib.pyarrow_internal_check_status\r\n  File \"pyarrow/error.pxi\", line 114, in pyarrow.lib.check_status\r\nOSError: When getting information for bucket 'data': AWS Error [code 100]: No response body.\r\n{code}\r\n\r\nGoogling this error gives no information whatsoever. I managed to figure out the issue by switching from Cloudflare to S3, and when the issue was still going on, I explicitly set a region, but the experience was pretty painful.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][C++] Opaque error code ([code: 100]), when not setting region",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/comment/17624393",
                    "id": "17624393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
                        "name": "milesgranger",
                        "key": "JIRAUSER293894",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
                        },
                        "displayName": "Miles Granger",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "body": "Pretty uncomfortable indeed. :(\u00a0\r\n\r\nIt appears the relevant code here in [s3fs.cc |https://github.com/apache/arrow/blob/7f6c5aeb5388936709642e48aed6419d1e2144a6/cpp/src/arrow/filesystem/s3fs.cc#L2305] has determined that the bucket exists, but some other error has happened and doesn't appear it does anything to obfuscate it. Infact the ``GetError`` is right from AWS' C++ library: [Outcome.h | https://github.com/aws/aws-sdk-cpp/blob/b469499e96b957c478d121086272ea496c9b92e8/aws-cpp-sdk-core/include/aws/core/utils/Outcome.h#L147] Maybe just bad error code from AWS? \r\n\r\nSuggest maybe opening an issue with them, feel free to link to this issue/comment here in case I'm mistaken. :) ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
                        "name": "milesgranger",
                        "key": "JIRAUSER293894",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
                        },
                        "displayName": "Miles Granger",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "created": "2022-10-26T11:48:03.886+0000",
                    "updated": "2022-10-26T11:48:03.886+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/comment/17628361",
                    "id": "17628361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
                        "name": "milesgranger",
                        "key": "JIRAUSER293894",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
                        },
                        "displayName": "Miles Granger",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "body": "[~vroomerify] I'm a bit curious how {{region=\"auto\"}} worked for you, or if that's a mistake?\r\n\r\nI don't see it documented anywhere, and when trying locally with that I get the same error as saying {{region=\"foobar\"}} which is\u00a0\r\n\r\n_AWS Error [code 99]: Couldn't resolve host name_\r\n\r\nI'll make a PR to better document this, but on can use [resolve_s3_region |https://arrow.apache.org/docs/python/generated/pyarrow.fs.resolve_s3_region.html]\u00a0to figure out the region of the bucket, or [S3FileSystem.from_uri |https://arrow.apache.org/docs/python/generated/pyarrow.fs.S3FileSystem.html#pyarrow.fs.S3FileSystem.from_uri]\u00a0which is slightly better documented (what the URI can be) in the [R docs |https://arrow.apache.org/docs/r/articles/fs.html#uris]\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
                        "name": "milesgranger",
                        "key": "JIRAUSER293894",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
                        },
                        "displayName": "Miles Granger",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "created": "2022-11-03T14:44:20.716+0000",
                    "updated": "2022-11-03T14:45:05.225+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485635/comment/17628366",
                    "id": "17628366",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "In addition to better docs (ARROW-18238), we could maybe try to improve the error message by specifically checking for the case of a mismatching bucket when listing the bucket gives an error. \r\nThe current code is basically the following (with my suggestion added in comments):\r\n\r\n{code:cpp}\r\n    auto outcome = impl_->client_->HeadBucket(req);\r\n    if (!outcome.IsSuccess()) {\r\n      if (!IsNotFound(outcome.GetError())) {\r\n        // <--- here, if we are going to raise an error, we could check impl_->client_->GetBucketRegion(..) \r\n        //      with impl_->options().region and if not matching, adapt the error message to hint at this?\r\n        return ErrorToStatus(\r\n            std::forward_as_tuple(\"When getting information for bucket '\", path.bucket,\r\n                                  \"': \"),\r\n            \"HeadBucket\", outcome.GetError());\r\n      }\r\n      info.set_type(FileType::NotFound);\r\n      return info;\r\n    }\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-11-03T14:55:11.355+0000",
                    "updated": "2022-11-03T14:55:38.192+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z1997s:",
        "customfield_12314139": null
    }
}