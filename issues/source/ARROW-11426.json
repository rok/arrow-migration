{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13355414",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414",
    "key": "ARROW-11426",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11426/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan opened a new pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359\n\n\n   This PR starts implementing support for the expression, to retrieve date parts (hours, minutes, days, etc.) from temporal data types:\r\n   \r\n   `EXTRACT (HOUR from dt)` \r\n   \r\n   \r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T10:47:20.846+0000",
                    "updated": "2021-01-29T10:47:20.846+0000",
                    "started": "2021-01-29T10:47:20.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544199",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#issuecomment-769729658\n\n\n   https://issues.apache.org/jira/browse/ARROW-11426\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T10:47:44.206+0000",
                    "updated": "2021-01-29T10:47:44.206+0000",
                    "started": "2021-01-29T10:47:44.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544200",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#issuecomment-769847991\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=h1) Report\n   > Merging [#9359](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=desc) (dbbb647) into [master](https://codecov.io/gh/apache/arrow/commit/71dab27098775228340ecb4e8a15870967d7cf91?el=desc) (71dab27) will **decrease** coverage by `0.02%`.\n   > The diff coverage is `63.01%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9359/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9359      +/-   ##\n   ==========================================\n   - Coverage   81.98%   81.96%   -0.03%     \n   ==========================================\n     Files         216      217       +1     \n     Lines       53299    53366      +67     \n   ==========================================\n   + Hits        43699    43743      +44     \n   - Misses       9600     9623      +23     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/logical\\_plan/temporal.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vdGVtcG9yYWwucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `48.26% <0.00%> (-0.76%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvdXRpbHMucnM=) | `38.88% <0.00%> (-0.55%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `78.68% <54.16%> (-1.27%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `78.61% <75.00%> (-0.03%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `84.02% <75.00%> (-0.13%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/expressions.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zLnJz) | `81.03% <82.35%> (+0.01%)` | :arrow_up: |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.84% <100.00%> (+<0.01%)` | :arrow_up: |\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `60.15% <0.00%> (+1.19%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=footer). Last update [71dab27...dbbb647](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T14:47:30.316+0000",
                    "updated": "2021-01-29T14:47:30.316+0000",
                    "started": "2021-01-29T14:47:30.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544293",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544326",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#issuecomment-769847991\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=h1) Report\n   > Merging [#9359](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=desc) (a471f57) into [master](https://codecov.io/gh/apache/arrow/commit/71dab27098775228340ecb4e8a15870967d7cf91?el=desc) (71dab27) will **decrease** coverage by `0.02%`.\n   > The diff coverage is `63.21%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9359/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9359      +/-   ##\n   ==========================================\n   - Coverage   81.98%   81.96%   -0.03%     \n   ==========================================\n     Files         216      217       +1     \n     Lines       53299    53380      +81     \n   ==========================================\n   + Hits        43699    43753      +54     \n   - Misses       9600     9627      +27     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `48.26% <0.00%> (-0.76%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvdXRpbHMucnM=) | `38.88% <0.00%> (-0.55%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/temporal.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vdGVtcG9yYWwucnM=) | `50.00% <50.00%> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `78.91% <58.33%> (-1.05%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/expressions.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zLnJz) | `80.71% <64.51%> (-0.31%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `78.61% <75.00%> (-0.03%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `84.02% <75.00%> (-0.13%)` | :arrow_down: |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.84% <100.00%> (+<0.01%)` | :arrow_up: |\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `60.55% <0.00%> (+1.59%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=footer). Last update [71dab27...5de73f6](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T15:55:40.478+0000",
                    "updated": "2021-01-29T15:55:40.478+0000",
                    "started": "2021-01-29T15:55:40.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544326",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r566951425\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       Alternatively, this could use `ScalarFunction` e.g. using \"date_part\" (which is also supported by PostgreSQL) to avoid an extra enum option, and convert the extract sql syntax to this `ScalarFunction`. I am not sure which is better?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T16:44:15.998+0000",
                    "updated": "2021-01-29T16:44:15.998+0000",
                    "started": "2021-01-29T16:44:15.997+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544348",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#issuecomment-769918230\n\n\n   This is ready for review now.  @alamb @nevi-me tagging you, because I think you would be interested in more temporal support.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T16:46:51.587+0000",
                    "updated": "2021-01-29T16:46:51.587+0000",
                    "started": "2021-01-29T16:46:51.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544349",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#issuecomment-769847991\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=h1) Report\n   > Merging [#9359](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=desc) (7ce35ab) into [master](https://codecov.io/gh/apache/arrow/commit/71dab27098775228340ecb4e8a15870967d7cf91?el=desc) (71dab27) will **decrease** coverage by `0.05%`.\n   > The diff coverage is `65.11%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9359/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9359      +/-   ##\n   ==========================================\n   - Coverage   81.98%   81.93%   -0.06%     \n   ==========================================\n     Files         216      217       +1     \n     Lines       53299    53426     +127     \n   ==========================================\n   + Hits        43699    43773      +74     \n   - Misses       9600     9653      +53     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `48.26% <0.00%> (-0.76%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvdXRpbHMucnM=) | `38.88% <0.00%> (-0.55%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/temporal.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vdGVtcG9yYWwucnM=) | `50.00% <50.00%> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `78.91% <58.33%> (-1.05%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/expressions.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zLnJz) | `80.81% <68.96%> (-0.21%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `78.61% <75.00%> (-0.03%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `84.02% <75.00%> (-0.13%)` | :arrow_down: |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.84% <100.00%> (+<0.01%)` | :arrow_up: |\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `57.85% <0.00%> (-1.11%)` | :arrow_down: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `94.86% <0.00%> (-0.20%)` | :arrow_down: |\n   | ... and [1 more](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=footer). Last update [71dab27...0cad90f](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T16:55:00.979+0000",
                    "updated": "2021-01-29T16:55:00.979+0000",
                    "started": "2021-01-29T16:55:00.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544354",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567202041\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       I have been trying to move them to the `ScalarFunction` to avoid having many variants around, mostly because adding a new item to an enum is backward incompatible and thus it may be beneficial to reserve that for operations that cannot be described by `ScalarFunction`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T05:40:48.913+0000",
                    "updated": "2021-01-30T05:40:48.913+0000",
                    "started": "2021-01-30T05:40:48.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544669",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567202684\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -237,6 +245,25 @@ impl Expr {\n             Expr::Wildcard => Err(DataFusionError::Internal(\n                 \"Wildcard expressions are not valid in a logical query plan\".to_owned(),\n             )),\n+            Expr::Extract {\n+                date_part: DatePart::Hour,\n+                expr,\n+            } => {\n+                let inner = expr.get_type(schema)?;\n+                match inner {\n+                    DataType::Date32(_)\n+                    | DataType::Date64(_)\n+                    | DataType::Time32(_)\n+                    | DataType::Time64(_)\n+                    | DataType::Timestamp(arrow::datatypes::TimeUnit::Nanosecond, None) => {\n\nReview comment:\n       Is there a particular reason to only support `Timestamp(Nanosecond)`? `Millisecond,Second,Microsecond` should also work, no?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T05:48:48.797+0000",
                    "updated": "2021-01-30T05:48:48.797+0000",
                    "started": "2021-01-30T05:48:48.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544676",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567235809\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -237,6 +245,25 @@ impl Expr {\n             Expr::Wildcard => Err(DataFusionError::Internal(\n                 \"Wildcard expressions are not valid in a logical query plan\".to_owned(),\n             )),\n+            Expr::Extract {\n+                date_part: DatePart::Hour,\n+                expr,\n+            } => {\n+                let inner = expr.get_type(schema)?;\n+                match inner {\n+                    DataType::Date32(_)\n+                    | DataType::Date64(_)\n+                    | DataType::Time32(_)\n+                    | DataType::Time64(_)\n+                    | DataType::Timestamp(arrow::datatypes::TimeUnit::Nanosecond, None) => {\n\nReview comment:\n       I wasn't convinced yet the `hour` kernel was working correctly, and it's currently a bit hard to test from DataFusion. But I am convinced now that it should work as expected. I think it can use some more tests at the Arrow side as well.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T11:44:39.886+0000",
                    "updated": "2021-01-30T11:44:39.886+0000",
                    "started": "2021-01-30T11:44:39.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544724",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#issuecomment-769847991\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=h1) Report\n   > Merging [#9359](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=desc) (dc67999) into [master](https://codecov.io/gh/apache/arrow/commit/f05b49bb08c0a4cc0cbfcfb07103dcf374c7fd38?el=desc) (f05b49b) will **decrease** coverage by `0.03%`.\n   > The diff coverage is `57.89%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9359/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9359      +/-   ##\n   ==========================================\n   - Coverage   81.94%   81.91%   -0.04%     \n   ==========================================\n     Files         231      233       +2     \n     Lines       53374    53464      +90     \n   ==========================================\n   + Hits        43739    43794      +55     \n   - Misses       9635     9670      +35     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `48.26% <0.00%> (-0.76%)` | :arrow_down: |\n   | [...st/datafusion/src/physical\\_plan/expressions/mod.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zL21vZC5ycw==) | `90.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/utils.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvdXRpbHMucnM=) | `38.88% <0.00%> (-0.55%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/temporal.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vdGVtcG9yYWwucnM=) | `50.00% <50.00%> (\u00f8)` | |\n   | [...atafusion/src/physical\\_plan/expressions/extract.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zL2V4dHJhY3QucnM=) | `52.50% <52.50%> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `78.91% <58.33%> (-1.05%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `78.61% <75.00%> (-0.03%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `84.02% <75.00%> (-0.13%)` | :arrow_down: |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.84% <100.00%> (+<0.01%)` | :arrow_up: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `94.86% <0.00%> (-0.20%)` | :arrow_down: |\n   | ... and [3 more](https://codecov.io/gh/apache/arrow/pull/9359/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=footer). Last update [f05b49b...dc67999](https://codecov.io/gh/apache/arrow/pull/9359?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T13:57:28.899+0000",
                    "updated": "2021-01-30T13:57:28.899+0000",
                    "started": "2021-01-30T13:57:28.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544741",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567253020\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       I just looked into this. The downside currently is w.r.t. performance and being able to utilize Arrow kernels. The `ScalarFunction` repeats scalar values, the date part, e.g. 'HOUR' for `date_part('HOUR', dt)` will be for repeated for each row.\r\n   In PostgreSQL, expressions are not allowed for `date_part` / `extract`, `date_trunc` etc. :\r\n   \r\n   https://www.postgresql.org/docs/13/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\r\n   \r\n   > Note that here the field parameter needs to be a string value, not a name. The valid field names for date_part are the same as for extract. \r\n   \r\n   This is also happening with the existing `date_trunc` function where currently the date part (as string) is repeated / matched against for each row and also evaluated per row (see below). That won't work with the `hour` kernel for obvious reasons.\r\n   \r\n   ```rust\r\n       let result = range\r\n           .map(|i| {\r\n               if array.is_null(i) {\r\n                   Ok(0_i64)\r\n               } else {\r\n                   let date_time = match granularity_array.value(i) {\r\n                       \"second\" => array\r\n                           .value_as_datetime(i)\r\n                           .and_then(|d| d.with_nanosecond(0)),\r\n                       \"minute\" => array\r\n                           .value_as_datetime(i)\r\n                           .and_then(|d| d.with_nanosecond(0))\r\n                           .and_then(|d| d.with_second(0)),\r\n   [...]\r\n   ```\r\n   So I think here we have a few options:\r\n   \r\n   * Refactor/Optimize `ScalarFunction` to also allow for scalar values, be able to check on them + support literals (I guess it should use `ColumnarValue` instead of just `Array`s).\r\n   * Have a similar (inefficient) implementation for extract from / date_part to compute as currently `date_trunc`. I think that \r\n   * Refactor/Optimize `ScalarFunction` later and keep the Extract as is for now.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T14:35:21.980+0000",
                    "updated": "2021-01-30T14:35:21.980+0000",
                    "started": "2021-01-30T14:35:21.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544743",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567253020\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       I just looked into this. The downside currently is w.r.t. performance and being able to utilize Arrow kernels. The `ScalarFunction` implementation repeats scalar values, the date part, e.g. 'HOUR' for `date_part('HOUR', dt)` will be for repeated for each row.\r\n   In PostgreSQL, expressions are not allowed for `date_part` / `extract`, `date_trunc` etc. :\r\n   \r\n   https://www.postgresql.org/docs/13/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\r\n   \r\n   > Note that here the field parameter needs to be a string value, not a name. The valid field names for date_part are the same as for extract. \r\n   \r\n   This is also happening with the existing `date_trunc` function where currently the date part (as string) is repeated / matched against for each row and also evaluated per row (see below). That won't work with the `hour` kernel for obvious reasons.\r\n   \r\n   ```rust\r\n       let result = range\r\n           .map(|i| {\r\n               if array.is_null(i) {\r\n                   Ok(0_i64)\r\n               } else {\r\n                   let date_time = match granularity_array.value(i) {\r\n                       \"second\" => array\r\n                           .value_as_datetime(i)\r\n                           .and_then(|d| d.with_nanosecond(0)),\r\n                       \"minute\" => array\r\n                           .value_as_datetime(i)\r\n                           .and_then(|d| d.with_nanosecond(0))\r\n                           .and_then(|d| d.with_second(0)),\r\n   [...]\r\n   ```\r\n   So I think here we have a few options:\r\n   \r\n   * Refactor/Optimize `ScalarFunction` to also allow for scalar values, be able to check on them + support literals (I guess it should use `ColumnarValue` instead of just `Array`s).\r\n   * Have a similar (inefficient) implementation for extract from / date_part to compute as currently `date_trunc`. I think that \r\n   * Refactor/Optimize `ScalarFunction` later and keep the Extract as is for now.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T14:35:46.864+0000",
                    "updated": "2021-01-30T14:35:46.864+0000",
                    "started": "2021-01-30T14:35:46.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544744",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567302576\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       hold my beer: #9376 :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T19:31:46.726+0000",
                    "updated": "2021-01-30T19:31:46.726+0000",
                    "started": "2021-01-30T19:31:46.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544767",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567304269\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       \ud83c\udf7a awesome! \ud83d\ude0e\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-30T19:40:02.962+0000",
                    "updated": "2021-01-30T19:40:02.962+0000",
                    "started": "2021-01-30T19:40:02.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544768",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567411606\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -1964,6 +1964,20 @@ async fn crypto_expressions() -> Result<()> {\n     Ok(())\n }\n \n+#[tokio::test]\n+async fn extract_date_part() -> Result<()> {\n+    let mut ctx = ExecutionContext::new();\n+    let sql = \"SELECT\n+        EXTRACT(HOUR FROM CAST('2020-01-01' AS DATE)),\n+        EXTRACT(HOUR FROM to_timestamp('2020-09-08T12:00:00+00:00'))\n\nReview comment:\n       I think adding coverage for the other date parts would be valuable here (even if they error)\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       I also agree (belatedly) that having a more efficient implementation of constant function arguments (e.g. #9376) is the way to go!\r\n   \r\n   In terms of adding variants to `Expr` I think it will need be done when the semantics of whatever expression is being added can't realistically be expressed as a function (e.g. CASE). \r\n   \r\n   So in this case, given @jorgecarleitao is cranking along with #9376 it seems like perhaps this PR should perhaps try and translate `EXTRACT` into a function.\n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions/extract.rs\n##########\n@@ -0,0 +1,115 @@\n+use crate::error::Result;\n+use core::fmt;\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::{\n+    array::{\n+        Date32Array, Date64Array, TimestampMicrosecondArray, TimestampMillisecondArray,\n+        TimestampNanosecondArray, TimestampSecondArray,\n+    },\n+    compute::hour,\n+    datatypes::{DataType, Schema, TimeUnit},\n+    record_batch::RecordBatch,\n+};\n+\n+use crate::{\n+    error::DataFusionError,\n+    logical_plan::DatePart,\n+    physical_plan::{ColumnarValue, PhysicalExpr},\n+};\n+\n+impl fmt::Display for Extract {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"EXTRACT({} AS {:?})\", self.date_part, self.expr)\n+    }\n+}\n+\n+/// Extract\n+#[derive(Debug)]\n+pub struct Extract {\n+    date_part: DatePart,\n+    expr: Arc<dyn PhysicalExpr>,\n+}\n+\n+impl Extract {\n+    /// Create new Extract expression\n+    pub fn new(date_part: DatePart, expr: Arc<dyn PhysicalExpr>) -> Self {\n+        Self { date_part, expr }\n+    }\n+}\n+\n+impl PhysicalExpr for Extract {\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn data_type(&self, _input_schema: &Schema) -> Result<DataType> {\n+        Ok(DataType::Int32)\n+    }\n+\n+    fn nullable(&self, input_schema: &Schema) -> Result<bool> {\n+        self.expr.nullable(input_schema)\n+    }\n+\n+    fn evaluate(&self, batch: &RecordBatch) -> Result<ColumnarValue> {\n+        let value = self.expr.evaluate(batch)?;\n+        let data_type = value.data_type();\n+        let array = match value {\n+            ColumnarValue::Array(array) => array,\n+            ColumnarValue::Scalar(scalar) => scalar.to_array(),\n+        };\n+\n+        match data_type {\n+            DataType::Date32 => {\n+                let array = array.as_any().downcast_ref::<Date32Array>().unwrap();\n+                Ok(ColumnarValue::Array(Arc::new(hour(array)?)))\n\nReview comment:\n       I find it confusing that `date_part` is passed all the way down in the Exprs / trees only to be ignored in the actual implementation which directly calls `hour. I can see that the expr seems to always be made with `DatePart::Hour` but I am not 100% sure. \r\n   \r\n   I am fine with not supporting all the various date parts initially, but I would recommend the following as a way of documenting through code / safe guard against future bugs:\r\n   \r\n   1. Add a test for `EXTRACT DAY from timestamp` and show that it generates a useful error\r\n   2. Add a check in this function for `date_part != DataPart::Hour` and throw an error\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-31T11:30:31.699+0000",
                    "updated": "2021-01-31T11:30:31.699+0000",
                    "started": "2021-01-31T11:30:31.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544848",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567414429\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions/extract.rs\n##########\n@@ -0,0 +1,115 @@\n+use crate::error::Result;\n+use core::fmt;\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::{\n+    array::{\n+        Date32Array, Date64Array, TimestampMicrosecondArray, TimestampMillisecondArray,\n+        TimestampNanosecondArray, TimestampSecondArray,\n+    },\n+    compute::hour,\n+    datatypes::{DataType, Schema, TimeUnit},\n+    record_batch::RecordBatch,\n+};\n+\n+use crate::{\n+    error::DataFusionError,\n+    logical_plan::DatePart,\n+    physical_plan::{ColumnarValue, PhysicalExpr},\n+};\n+\n+impl fmt::Display for Extract {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"EXTRACT({} AS {:?})\", self.date_part, self.expr)\n+    }\n+}\n+\n+/// Extract\n+#[derive(Debug)]\n+pub struct Extract {\n+    date_part: DatePart,\n+    expr: Arc<dyn PhysicalExpr>,\n+}\n+\n+impl Extract {\n+    /// Create new Extract expression\n+    pub fn new(date_part: DatePart, expr: Arc<dyn PhysicalExpr>) -> Self {\n+        Self { date_part, expr }\n+    }\n+}\n+\n+impl PhysicalExpr for Extract {\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn data_type(&self, _input_schema: &Schema) -> Result<DataType> {\n+        Ok(DataType::Int32)\n+    }\n+\n+    fn nullable(&self, input_schema: &Schema) -> Result<bool> {\n+        self.expr.nullable(input_schema)\n+    }\n+\n+    fn evaluate(&self, batch: &RecordBatch) -> Result<ColumnarValue> {\n+        let value = self.expr.evaluate(batch)?;\n+        let data_type = value.data_type();\n+        let array = match value {\n+            ColumnarValue::Array(array) => array,\n+            ColumnarValue::Scalar(scalar) => scalar.to_array(),\n+        };\n+\n+        match data_type {\n+            DataType::Date32 => {\n+                let array = array.as_any().downcast_ref::<Date32Array>().unwrap();\n+                Ok(ColumnarValue::Array(Arc::new(hour(array)?)))\n\nReview comment:\n       There is no other datepart for now in the enum, so I guess that might generate some clippy warnings. But we could match directly on the datepart. The warning should be generated elsewhere already (when building the logical plan), agree makes sense to add a test for that \ud83d\udc4d.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-31T11:53:28.546+0000",
                    "updated": "2021-01-31T11:53:28.546+0000",
                    "started": "2021-01-31T11:53:28.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544856",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567415842\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -169,6 +170,13 @@ pub enum Expr {\n     },\n     /// Represents a reference to all fields in a schema.\n     Wildcard,\n+    /// Extract date parts (day, hour, minute) from a date / time expression\n+    Extract {\n\nReview comment:\n       Yes, I think it is worth it to wait for the other PR to land and convert it to use the scalar function. Then we could also add the function alias `date_part` easily next to the `extract` syntax, which are both supported by PostgreSQL.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-31T12:04:18.100+0000",
                    "updated": "2021-01-31T12:04:18.100+0000",
                    "started": "2021-01-31T12:04:18.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544862",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/544867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567414429\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions/extract.rs\n##########\n@@ -0,0 +1,115 @@\n+use crate::error::Result;\n+use core::fmt;\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::{\n+    array::{\n+        Date32Array, Date64Array, TimestampMicrosecondArray, TimestampMillisecondArray,\n+        TimestampNanosecondArray, TimestampSecondArray,\n+    },\n+    compute::hour,\n+    datatypes::{DataType, Schema, TimeUnit},\n+    record_batch::RecordBatch,\n+};\n+\n+use crate::{\n+    error::DataFusionError,\n+    logical_plan::DatePart,\n+    physical_plan::{ColumnarValue, PhysicalExpr},\n+};\n+\n+impl fmt::Display for Extract {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"EXTRACT({} AS {:?})\", self.date_part, self.expr)\n+    }\n+}\n+\n+/// Extract\n+#[derive(Debug)]\n+pub struct Extract {\n+    date_part: DatePart,\n+    expr: Arc<dyn PhysicalExpr>,\n+}\n+\n+impl Extract {\n+    /// Create new Extract expression\n+    pub fn new(date_part: DatePart, expr: Arc<dyn PhysicalExpr>) -> Self {\n+        Self { date_part, expr }\n+    }\n+}\n+\n+impl PhysicalExpr for Extract {\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn data_type(&self, _input_schema: &Schema) -> Result<DataType> {\n+        Ok(DataType::Int32)\n+    }\n+\n+    fn nullable(&self, input_schema: &Schema) -> Result<bool> {\n+        self.expr.nullable(input_schema)\n+    }\n+\n+    fn evaluate(&self, batch: &RecordBatch) -> Result<ColumnarValue> {\n+        let value = self.expr.evaluate(batch)?;\n+        let data_type = value.data_type();\n+        let array = match value {\n+            ColumnarValue::Array(array) => array,\n+            ColumnarValue::Scalar(scalar) => scalar.to_array(),\n+        };\n+\n+        match data_type {\n+            DataType::Date32 => {\n+                let array = array.as_any().downcast_ref::<Date32Array>().unwrap();\n+                Ok(ColumnarValue::Array(Arc::new(hour(array)?)))\n\nReview comment:\n       There is no other datepart for now in the enum, so I guess that might generate some clippy warnings. But we could match directly on the datepart. The errorshould be generated elsewhere already (when building the logical plan), agree makes sense to add a test for that \ud83d\udc4d.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-31T12:45:42.796+0000",
                    "updated": "2021-01-31T12:45:42.796+0000",
                    "started": "2021-01-31T12:45:42.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544867",
                    "issueId": "13355414"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/worklog/545601",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9359:\nURL: https://github.com/apache/arrow/pull/9359#discussion_r567411585\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions/extract.rs\n##########\n@@ -0,0 +1,115 @@\n+use crate::error::Result;\n+use core::fmt;\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::{\n+    array::{\n+        Date32Array, Date64Array, TimestampMicrosecondArray, TimestampMillisecondArray,\n+        TimestampNanosecondArray, TimestampSecondArray,\n+    },\n+    compute::hour,\n+    datatypes::{DataType, Schema, TimeUnit},\n+    record_batch::RecordBatch,\n+};\n+\n+use crate::{\n+    error::DataFusionError,\n+    logical_plan::DatePart,\n+    physical_plan::{ColumnarValue, PhysicalExpr},\n+};\n+\n+impl fmt::Display for Extract {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"EXTRACT({} AS {:?})\", self.date_part, self.expr)\n+    }\n+}\n+\n+/// Extract\n+#[derive(Debug)]\n+pub struct Extract {\n+    date_part: DatePart,\n+    expr: Arc<dyn PhysicalExpr>,\n+}\n+\n+impl Extract {\n+    /// Create new Extract expression\n+    pub fn new(date_part: DatePart, expr: Arc<dyn PhysicalExpr>) -> Self {\n+        Self { date_part, expr }\n+    }\n+}\n+\n+impl PhysicalExpr for Extract {\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn data_type(&self, _input_schema: &Schema) -> Result<DataType> {\n+        Ok(DataType::Int32)\n+    }\n+\n+    fn nullable(&self, input_schema: &Schema) -> Result<bool> {\n+        self.expr.nullable(input_schema)\n+    }\n+\n+    fn evaluate(&self, batch: &RecordBatch) -> Result<ColumnarValue> {\n+        let value = self.expr.evaluate(batch)?;\n+        let data_type = value.data_type();\n+        let array = match value {\n+            ColumnarValue::Array(array) => array,\n+            ColumnarValue::Scalar(scalar) => scalar.to_array(),\n+        };\n+\n+        match data_type {\n+            DataType::Date32 => {\n+                let array = array.as_any().downcast_ref::<Date32Array>().unwrap();\n+                Ok(ColumnarValue::Array(Arc::new(hour(array)?)))\n\nReview comment:\n       I find it confusing that `date_part` is passed all the way down in the Exprs / trees only to be ignored in the actual implementation which directly calls `hour`. I can see that the expr seems to always be made with `DatePart::Hour` but I am not 100% sure. \r\n   \r\n   I am fine with not supporting all the various date parts initially, but I would recommend the following as a way of documenting through code / safe guard against future bugs:\r\n   \r\n   1. Add a test for `EXTRACT DAY from timestamp` and show that it generates a useful error\r\n   2. Add a check in this function for `date_part != DataPart::Hour` and throw an error\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-01T21:27:55.040+0000",
                    "updated": "2021-02-01T21:27:55.040+0000",
                    "started": "2021-02-01T21:27:55.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545601",
                    "issueId": "13355414"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 24000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6578f033[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4088d5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62d15639[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@66536c96[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e04d0f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@28e36115[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40eb8aae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3d2179f9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@253aa5f4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1662938f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a40d517[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3c989b17[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 24000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 22 11:55:45 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-22T11:55:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11426/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-01-29T10:43:33.000+0000",
        "updated": "2021-02-22T11:55:45.000+0000",
        "timeoriginalestimate": null,
        "description": "Add support for\r\n EXTRACT(HOUR FROM dt)\u00a0\r\n\r\nand all the rest of the date parts.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 24000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] EXTRACT support",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355414/comment/17288343",
                    "id": "17288343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9359\n[https://github.com/apache/arrow/pull/9359]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-22T11:55:45.716+0000",
                    "updated": "2021-02-22T11:55:45.716+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0n4mo:",
        "customfield_12314139": null
    }
}