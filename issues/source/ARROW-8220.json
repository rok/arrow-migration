{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13293908",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908",
    "key": "ARROW-8220",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8220/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/409821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720\n \n \n   Also did some refactoring for a more pleasant user API.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T20:56:10.401+0000",
                    "updated": "2020-03-25T20:56:10.401+0000",
                    "started": "2020-03-25T20:56:10.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409821",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/409826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604085664\n \n \n   https://issues.apache.org/jira/browse/ARROW-8220\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T21:02:17.017+0000",
                    "updated": "2020-03-25T21:02:17.017+0000",
                    "started": "2020-03-25T21:02:17.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409826",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604318549\n \n \n   > Also did some refactoring for a more pleasant user API.\r\n   \r\n   I also don't like the `ParquetFileFormatReaderOptions` very much as user API, but, I am not sure we can just pass them all to `ParquetFileFormat`, since we are going to use that for both reading and writing, and mixing keywords for those all in a single constructor is going to get confusing.\r\n   \r\n   I think we should rather give a better API in a parquet / reading specific API like `parquet.read_table` or `ParquetDataset`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T09:20:44.070+0000",
                    "updated": "2020-03-26T09:20:44.070+0000",
                    "started": "2020-03-26T09:20:44.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410163",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604367605\n \n \n   @jorisvandenbossche agree. May we defer your suggestion to a follow-up?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T11:07:14.105+0000",
                    "updated": "2020-03-26T11:07:14.105+0000",
                    "started": "2020-03-26T11:07:14.104+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410204",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604367605\n \n \n   @jorisvandenbossche Agreed. May we defer your suggestion to a follow-up?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T11:07:46.939+0000",
                    "updated": "2020-03-26T11:07:46.939+0000",
                    "started": "2020-03-26T11:07:46.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410205",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604368892\n \n \n   Well, my comment is kind of: we need to keep `ParquetFileFormatReaderOptions`, so since you are removing that, I would rather not defer that to a follow-up (but you don't need to agree with keeping it, of course :-))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T11:09:58.509+0000",
                    "updated": "2020-03-26T11:09:58.509+0000",
                    "started": "2020-03-26T11:09:58.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410207",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604370944\n \n \n   `ParquetFileFormatReaderOptions` was still bound to the `ParquetFormat`, your proposal is more about making the reader and writer options independent from the ParquetFormat. So this PR doesn't change that dependency.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T11:14:25.960+0000",
                    "updated": "2020-03-26T11:14:25.960+0000",
                    "started": "2020-03-26T11:14:25.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410210",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604372308\n \n \n   I can wire these options, but it's not entirely clear because we don't have a read() method on the datasets. Once we add support for writing we can refine the API.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T11:17:32.235+0000",
                    "updated": "2020-03-26T11:17:32.235+0000",
                    "started": "2020-03-26T11:17:32.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410212",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604408162\n \n \n   > ParquetFileFormatReaderOptions was still bound to the ParquetFormat, your proposal is more about making the reader and writer options independent from the ParquetFormat. So this PR doesn't change that dependency.\r\n   \r\n   Yes, it is still bound to the format, but it splits its keywords in two groups:\r\n   \r\n   ```\r\n   format = ParquetFileFormat(reader_options=dict(...), writer_options=dict(...))\r\n   ```\r\n   \r\n   >  it's not entirely clear because we don't have a read() method on the datasets\r\n   \r\n   I think `to_table` is the \"read\" method?\r\n   \r\n   > Once we add support for writing we can refine the API.\r\n   \r\n   Yeah, I fully agree much of this discussion is a bit \"up in the air\", since we don't yet have writing, so don't yet know how we would want to make the API for writing. \r\n   But it's for that reason that I commented to keep it as is, as there is also no clear reason yet for changing IMO, since we don't know the final API with writing (but it was an explicit decision, at least on the C++ side, to have this a separate set of options instead of direct ParquetFileFormat options). But OK, since it is easy to put it back later, I won't block removing it if you prefer that :)\r\n   \r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T12:40:10.327+0000",
                    "updated": "2020-03-26T12:40:10.327+0000",
                    "started": "2020-03-26T12:40:10.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410237",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r398542109\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,96 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n-\n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n-\n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+cdef class ParquetFileFormat(FileFormat):\n+    \"\"\"\n+    Format and options for reading Parquet files.\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+    def __init__(self, bint use_buffered_stream=False,\n+                 int buffer_size=8192, dictionary_columns=None):\n \n Review comment:\n   I would maybe have a default of None for buffer_size, which would mean the default? Because now this default is defined in C++, but also hardcoded here (so in case we would change that, we need to change it here as well)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T12:44:12.339+0000",
                    "updated": "2020-03-26T12:44:12.339+0000",
                    "started": "2020-03-26T12:44:12.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410238",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#issuecomment-604437381\n \n \n   @jorisvandenbossche updated as you requested\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T13:41:00.106+0000",
                    "updated": "2020-03-26T13:41:00.106+0000",
                    "started": "2020-03-26T13:41:00.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410264",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r398582628\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,101 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n+cdef class ParquetReadOptions:\n+    \"\"\"\n+    Parquet format specific options for reading.\n \n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+    cdef public:\n+        bint use_buffered_stream\n+        uint32_t buffer_size\n+        set dictionary_columns\n+\n+    def __init__(self, bint use_buffered_stream=False, buffer_size=8192,\n+                 dictionary_columns=None):\n+        self.use_buffered_stream = use_buffered_stream\n+        self.buffer_size = buffer_size\n+        self.dictionary_columns = set(dictionary_columns or set())\n+\n+    def equals(self, ParquetReadOptions other):\n+        return (\n+            self.use_buffered_stream == other.use_buffered_stream and\n+            self.buffer_size == other.buffer_size and\n+            self.dictionary_columns == other.dictionary_columns\n+        )\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n+            return False\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+cdef class ParquetFileFormat(FileFormat):\n \n-    @property\n-    def dict_columns(self):\n-        \"\"\"Names of columns which should be read as dictionaries.\"\"\"\n-        return self.options.dict_columns\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @dict_columns.setter\n-    def dict_columns(self, values):\n-        self.options.dict_columns.clear()\n-        for value in set(values):\n-            self.options.dict_columns.insert(tobytes(value))\n+    def __init__(self, ParquetReadOptions read_options=None):\n \n Review comment:\n   Can we keep the option to pass a dict here? (if it is a dict, it should just be a passthrough to the ParquetReadOptions constructor I think)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T13:47:14.620+0000",
                    "updated": "2020-03-26T13:47:14.620+0000",
                    "started": "2020-03-26T13:47:14.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410272",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r398584199\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,101 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n+cdef class ParquetReadOptions:\n+    \"\"\"\n+    Parquet format specific options for reading.\n \n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+    cdef public:\n+        bint use_buffered_stream\n+        uint32_t buffer_size\n+        set dictionary_columns\n+\n+    def __init__(self, bint use_buffered_stream=False, buffer_size=8192,\n \n Review comment:\n   Hmm, see my earlier comment about this default. But when setting it like this on the options class, it becomes more difficult to do that (unless not typing the attribute as an uint)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T13:47:14.624+0000",
                    "updated": "2020-03-26T13:47:14.624+0000",
                    "started": "2020-03-26T13:47:14.623+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410273",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399175443\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,96 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n-\n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n-\n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+cdef class ParquetFileFormat(FileFormat):\n+    \"\"\"\n+    Format and options for reading Parquet files.\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+    def __init__(self, bint use_buffered_stream=False,\n+                 int buffer_size=8192, dictionary_columns=None):\n \n Review comment:\n   Updating. Note that we'll still need to update the docstring.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T10:41:42.170+0000",
                    "updated": "2020-03-27T10:41:42.170+0000",
                    "started": "2020-03-27T10:41:42.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410980",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399175443\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,96 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n-\n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n-\n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+cdef class ParquetFileFormat(FileFormat):\n+    \"\"\"\n+    Format and options for reading Parquet files.\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+    def __init__(self, bint use_buffered_stream=False,\n+                 int buffer_size=8192, dictionary_columns=None):\n \n Review comment:\n   Note that we would still need to update the docstring.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T10:52:45.818+0000",
                    "updated": "2020-03-27T10:52:45.818+0000",
                    "started": "2020-03-27T10:52:45.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410987",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399181267\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,101 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n+cdef class ParquetReadOptions:\n+    \"\"\"\n+    Parquet format specific options for reading.\n \n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+    cdef public:\n+        bint use_buffered_stream\n+        uint32_t buffer_size\n+        set dictionary_columns\n+\n+    def __init__(self, bint use_buffered_stream=False, buffer_size=8192,\n+                 dictionary_columns=None):\n+        self.use_buffered_stream = use_buffered_stream\n+        self.buffer_size = buffer_size\n+        self.dictionary_columns = set(dictionary_columns or set())\n+\n+    def equals(self, ParquetReadOptions other):\n+        return (\n+            self.use_buffered_stream == other.use_buffered_stream and\n+            self.buffer_size == other.buffer_size and\n+            self.dictionary_columns == other.dictionary_columns\n+        )\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n+            return False\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+cdef class ParquetFileFormat(FileFormat):\n \n-    @property\n-    def dict_columns(self):\n-        \"\"\"Names of columns which should be read as dictionaries.\"\"\"\n-        return self.options.dict_columns\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @dict_columns.setter\n-    def dict_columns(self, values):\n-        self.options.dict_columns.clear()\n-        for value in set(values):\n-            self.options.dict_columns.insert(tobytes(value))\n+    def __init__(self, ParquetReadOptions read_options=None):\n \n Review comment:\n   Added support for dict input.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T10:52:57.547+0000",
                    "updated": "2020-03-27T10:52:57.547+0000",
                    "started": "2020-03-27T10:52:57.547+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410989",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410990",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399182104\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,101 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n+cdef class ParquetReadOptions:\n+    \"\"\"\n+    Parquet format specific options for reading.\n \n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+    cdef public:\n+        bint use_buffered_stream\n+        uint32_t buffer_size\n+        set dictionary_columns\n+\n+    def __init__(self, bint use_buffered_stream=False, buffer_size=8192,\n \n Review comment:\n   I'm not sure what you mean.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T10:54:31.896+0000",
                    "updated": "2020-03-27T10:54:31.896+0000",
                    "started": "2020-03-27T10:54:31.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410990",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/410992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399183396\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,96 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n-\n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n-\n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+cdef class ParquetFileFormat(FileFormat):\n+    \"\"\"\n+    Format and options for reading Parquet files.\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+    def __init__(self, bint use_buffered_stream=False,\n+                 int buffer_size=8192, dictionary_columns=None):\n \n Review comment:\n   I'd rather keep these default, it's more explicit and semantically meaningful. For example if I want to retrieve the read_options from the format:\r\n   \r\n   ```python\r\n   format = ParquetFormat(ParquetReadOptions(use_buffered_stream=True))\r\n   format.read_options.use_buffered_stream is True\r\n   format.read_options.buffer_size is None  # ???\r\n   ```\r\n   \r\n   Additionally I'd need a lot of none checking.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T10:56:56.805+0000",
                    "updated": "2020-03-27T10:56:56.805+0000",
                    "started": "2020-03-27T10:56:56.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410992",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/411047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399247749\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,96 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n-\n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n-\n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+cdef class ParquetFileFormat(FileFormat):\n+    \"\"\"\n+    Format and options for reading Parquet files.\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+    def __init__(self, bint use_buffered_stream=False,\n+                 int buffer_size=8192, dictionary_columns=None):\n \n Review comment:\n   If you keep it, can you add a comment where this constant is defined in the C++ code that, if updated, the value also needs to be updated in the python code?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T13:03:14.264+0000",
                    "updated": "2020-03-27T13:03:14.264+0000",
                    "started": "2020-03-27T13:03:14.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411047",
                    "issueId": "13293908"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/worklog/411049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6720: ARROW-8220: [Python] Make dataset FileFormat objects serializable\nURL: https://github.com/apache/arrow/pull/6720#discussion_r399249716\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,66 +432,101 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n-cdef class ParquetFileFormatReaderOptions:\n-    cdef:\n-        CParquetFileFormatReaderOptions* options\n+cdef class ParquetReadOptions:\n+    \"\"\"\n+    Parquet format specific options for reading.\n \n-    def __init__(self, ParquetFileFormat fmt):\n-        self.options = &fmt.parquet_format.reader_options\n+    Parameters\n+    ----------\n+    use_buffered_stream : bool, default False\n+        Read files through buffered input streams rather than loading entire\n+        row groups at once. This may be enabled to reduce memory overhead.\n+        Disabled by default.\n+    buffer_size : int, default 8192\n+        Size of buffered stream, if enabled. Default is 8KB.\n+    dictionary_columns : list of string, default None\n+        Names of columns which should be read as dictionaries.\n+    \"\"\"\n \n-    @property\n-    def use_buffered_stream(self):\n-        \"\"\"Read files through buffered input streams rather than\n-        loading entire row groups at once. This may be enabled to\n-        reduce memory overhead. Disabled by default.\"\"\"\n-        return self.options.use_buffered_stream\n+    cdef public:\n+        bint use_buffered_stream\n+        uint32_t buffer_size\n+        set dictionary_columns\n+\n+    def __init__(self, bint use_buffered_stream=False, buffer_size=8192,\n+                 dictionary_columns=None):\n+        self.use_buffered_stream = use_buffered_stream\n+        self.buffer_size = buffer_size\n+        self.dictionary_columns = set(dictionary_columns or set())\n+\n+    def equals(self, ParquetReadOptions other):\n+        return (\n+            self.use_buffered_stream == other.use_buffered_stream and\n+            self.buffer_size == other.buffer_size and\n+            self.dictionary_columns == other.dictionary_columns\n+        )\n \n-    @use_buffered_stream.setter\n-    def use_buffered_stream(self, bint value):\n-        self.options.use_buffered_stream = value\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n+            return False\n \n-    @property\n-    def buffer_size(self):\n-        \"\"\"Size of buffered stream, if enabled. Default is 8KB.\"\"\"\n-        return self.options.buffer_size\n \n-    @buffer_size.setter\n-    def buffer_size(self, int value):\n-        self.options.buffer_size = value\n+cdef class ParquetFileFormat(FileFormat):\n \n-    @property\n-    def dict_columns(self):\n-        \"\"\"Names of columns which should be read as dictionaries.\"\"\"\n-        return self.options.dict_columns\n+    cdef:\n+        CParquetFileFormat* parquet_format\n \n-    @dict_columns.setter\n-    def dict_columns(self, values):\n-        self.options.dict_columns.clear()\n-        for value in set(values):\n-            self.options.dict_columns.insert(tobytes(value))\n+    def __init__(self, ParquetReadOptions read_options=None):\n \n Review comment:\n   Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-27T13:06:43.853+0000",
                    "updated": "2020-03-27T13:06:43.853+0000",
                    "started": "2020-03-27T13:06:43.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411049",
                    "issueId": "13293908"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@203dbc45[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7411bf84[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77f1a4f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ee5d815[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@755be306[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@505e4d40[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a72b59f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@af7f5b4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@201e643f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2880931[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d699ab2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@88692fe[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 30 12:17:50 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-30T12:17:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8220/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-03-25T19:08:50.000+0000",
        "updated": "2020-03-30T12:17:54.000+0000",
        "timeoriginalestimate": null,
        "description": "Similar to ARROW-8060, ARROW-8059, also the FileFormats need to be pickleable.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Make dataset FileFormat objects serializable",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293908/comment/17070922",
                    "id": "17070922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 6720\n[https://github.com/apache/arrow/pull/6720]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-03-30T12:17:50.984+0000",
                    "updated": "2020-03-30T12:17:50.984+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cwnc:",
        "customfield_12314139": null
    }
}