{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13417564",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564",
    "key": "ARROW-15109",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350712",
                "id": "12350712",
                "description": "",
                "name": "6.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-11-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15109/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/703541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 opened a new pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077\n\n\n   It's helpful to know which optional components are enabled, particularly if the user has done a custom build of PyArrow. This is inspired by the `arrow_info()` function in the R bindings.\r\n   \r\n   ## Example Output\r\n   \r\n   <details open>\r\n     <summary>Before</summary>\r\n     \r\n   ```sh\r\n   pyarrow version info\r\n   --------------------\r\n   Package kind: not indicated\r\n   Arrow C++ library version: 6.0.1\r\n   Arrow C++ compiler: Clang 11.1.0\r\n   Arrow C++ compiler flags: -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/willjones/.pyenv/versions/miniforge3/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/arrow-cpp-ext_1637415641039/work=/usr/local/src/conda/arrow-cpp-6.0.1 -fdebug-prefix-map=/Users/willjones/.pyenv/versions/miniforge3=/usr/local/src/conda-prefix -Qunused-arguments -fcolor-diagnostics -O3 -DNDEBUG\r\n   Arrow C++ git revision: \r\n   Arrow C++ git description:\r\n   ```\r\n   </details>\r\n   \r\n   <details open>\r\n     <summary>After</summary>\r\n   \r\n   ```sh\r\n   \u276f python -c \"import pyarrow; pyarrow.show_versions()\"\r\n   pyarrow version info\r\n   --------------------\r\n   Package kind: not indicated\r\n   Arrow C++ library version: 7.0.0-SNAPSHOT\r\n   Arrow C++ compiler: AppleClang 13.0.0.13000027\r\n   Arrow C++ compiler flags:  -Qunused-arguments -fcolor-diagnostics -ggdb -O0\r\n   Arrow C++ git revision: 24eafe95f95352c3609f3dcba2f40eba265e59f8\r\n   Arrow C++ git description: apache-arrow-7.0.0.dev-421-g24eafe95f-dirty\r\n   \r\n   Optional modules:\r\n     csv               : Enabled\r\n     cuda              : -\r\n     dataset           : Enabled\r\n     feather           : Enabled\r\n     flight            : -\r\n     fs                : Enabled\r\n     gandiva           : -\r\n     json              : Enabled\r\n     orc               : -\r\n     parquet           : Enabled\r\n     plasma            : -\r\n   \r\n   Filesystems:\r\n     HadoopFileSystem  : Enabled \r\n     S3FileSystem      : Enabled \r\n     GcsFileSystem     : -       \r\n   \r\n   Compression Codecs:\r\n     brotli            : Enabled \r\n     bz2               : Enabled \r\n     gzip              : Enabled \r\n     lz4_frame         : Enabled \r\n     lz4               : Enabled \r\n     snappy            : Enabled \r\n     zstd              : Enabled\r\n   ```\r\n   </details>\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T20:22:08.933+0000",
                    "updated": "2022-01-04T20:22:08.933+0000",
                    "started": "2022-01-04T20:22:08.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703541",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/703542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#issuecomment-1005142886\n\n\n   https://issues.apache.org/jira/browse/ARROW-15109\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T20:22:21.876+0000",
                    "updated": "2022-01-04T20:22:21.876+0000",
                    "started": "2022-01-04T20:22:21.876+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703542",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/703937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#issuecomment-1005687521\n\n\n   Should this be a separate function instead, e.g. `show_components()`?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-05T13:31:33.447+0000",
                    "updated": "2022-01-05T13:31:33.447+0000",
                    "started": "2022-01-05T13:31:33.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703937",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/703970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jeszyb commented on pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#issuecomment-1005707057\n\n\n   I agree `_versions()` is no longer accurate. IMO it'd be good to keep debugging information like these in one place though -- we could switch to `arrow_info()` for Python as well.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-05T13:57:25.148+0000",
                    "updated": "2022-01-05T13:57:25.148+0000",
                    "started": "2022-01-05T13:57:25.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703970",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#issuecomment-1006064451\n\n\n   > I agree _versions() is no longer accurate. IMO it'd be good to keep debugging information like these in one place though -- we could switch to arrow_info() for Python as well.\r\n   \r\n   I like that idea. I move this to a function `arrow_info()`, which will call the existing `show_versions()`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-05T20:46:14.826+0000",
                    "updated": "2022-01-05T20:46:14.826+0000",
                    "started": "2022-01-05T20:46:14.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704235",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779372956\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n+               \"orc\", \"parquet\", \"plasma\"]\n+    for module in modules:\n+        try:\n+            importlib.import_module(f'pyarrow.{module}')\n+        except ImportError:\n+            print(f\"  {module: <20}: -\")\n+        else:\n+            print(f\"  {module: <20}: Enabled\")\n\nReview comment:\n       Maybe search [`sys.modules`](https://docs.python.org/3.7/library/sys.html#sys.modules) instead trying to import modules.\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n\nReview comment:\n       If there is a way to have a different memory pool than the default, then this will not show the correct info?\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n\nReview comment:\n       I suggest to create a `show_components()` function for `Optional modules, Filesystems, Compression Codecs, etc`. This would provide better readability of `arrow_info()`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T08:28:34.515+0000",
                    "updated": "2022-01-06T08:28:34.515+0000",
                    "started": "2022-01-06T08:28:34.515+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704462",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779632641\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n\nReview comment:\n       The way we suggest changing memory pools in the docs is [set an environment variable that changes the default](https://arrow.apache.org/docs/cpp/memory.html#overriding-the-default-memory-pool). So we'll capture that well here.\r\n   \r\n   You *can* pass a different pool to individual functions. We'll miss those allocations here, but since we show which allocator we are tracking, I think that's fine. It's at least clear about which allocator it's showing.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T15:31:43.886+0000",
                    "updated": "2022-01-06T15:31:43.886+0000",
                    "started": "2022-01-06T15:31:43.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704602",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779634887\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n\nReview comment:\n       Yeah I was tempted to create a function for each of those that returned a `Dict[str, bool]`. So like `def show_modules() -> Dict[str, bool]:`. But didn't want to create too make \"public\" function in the top-level module.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T15:34:29.260+0000",
                    "updated": "2022-01-06T15:34:29.260+0000",
                    "started": "2022-01-06T15:34:29.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704603",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779651524\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n\nReview comment:\n       Got it. Thanks!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T15:56:21.840+0000",
                    "updated": "2022-01-06T15:56:21.840+0000",
                    "started": "2022-01-06T15:56:21.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704618",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779652288\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n\nReview comment:\n       Ok\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T15:57:28.197+0000",
                    "updated": "2022-01-06T15:57:28.197+0000",
                    "started": "2022-01-06T15:57:28.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704621",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779773713\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n+               \"orc\", \"parquet\", \"plasma\"]\n+    for module in modules:\n+        try:\n+            importlib.import_module(f'pyarrow.{module}')\n+        except ImportError:\n+            print(f\"  {module: <20}: -\")\n+        else:\n+            print(f\"  {module: <20}: Enabled\")\n\nReview comment:\n       `sys.modules` will not contain non-imported modules.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T18:40:57.482+0000",
                    "updated": "2022-01-06T18:40:57.482+0000",
                    "started": "2022-01-06T18:40:57.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704704",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#issuecomment-1006826879\n\n\n   I would call this `show_info()` to stress that it dumps the information on stdout, rather than return it to the caller.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T18:41:42.888+0000",
                    "updated": "2022-01-06T18:41:42.888+0000",
                    "started": "2022-01-06T18:41:42.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704709",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779634887\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n\nReview comment:\n       Yeah I was tempted to create a function for each of those that returned a `Dict[str, bool]`. So like `def show_modules() -> Dict[str, bool]:`. But didn't want to create too many \"public\" function in the top-level module.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T19:34:26.545+0000",
                    "updated": "2022-01-06T19:34:26.545+0000",
                    "started": "2022-01-06T19:34:26.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704744",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/704775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r779847550\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,74 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def arrow_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n\nReview comment:\n       What I settled on was implementing functions `_module_is_available(module: str) -> bool` and `_filesystem_is_available(fs: str) -> bool`, which parallel the `Codec.is_available(codec: str) -> bool` method. I think this makes the code much more readable. LMK what you think.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T20:33:19.345+0000",
                    "updated": "2022-01-06T20:33:19.345+0000",
                    "started": "2022-01-06T20:33:19.345+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704775",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/706182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r781226322\n\n\n\n##########\nFile path: python/pyarrow/memory.pxi\n##########\n@@ -247,3 +247,11 @@ def jemalloc_set_decay_ms(decay_ms):\n         that this change will only affect future memory arenas\n     \"\"\"\n     check_status(c_jemalloc_set_decay_ms(decay_ms))\n+\n+\n+def supported_memory_backends():\n\nReview comment:\n       Can you add a test for this in `pyarrow/test_memory.py`?\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -75,19 +77,83 @@ def show_versions():\n     \"\"\"\n     Print various version information, to help with error reporting.\n     \"\"\"\n-    # TODO: CPU information and flags\n+    def print_entry(label, value):\n+        print(f\"{label: <26}: {value: <8}\")\n+\n     print(\"pyarrow version info\\n--------------------\")\n-    print(\"Package kind: {}\".format(cpp_build_info.package_kind\n-                                    if len(cpp_build_info.package_kind) > 0\n-                                    else \"not indicated\"))\n-    print(\"Arrow C++ library version: {0}\".format(cpp_build_info.version))\n-    print(\"Arrow C++ compiler: {0} {1}\"\n-          .format(cpp_build_info.compiler_id, cpp_build_info.compiler_version))\n-    print(\"Arrow C++ compiler flags: {0}\"\n-          .format(cpp_build_info.compiler_flags))\n-    print(\"Arrow C++ git revision: {0}\".format(cpp_build_info.git_id))\n-    print(\"Arrow C++ git description: {0}\"\n-          .format(cpp_build_info.git_description))\n+    print_entry(\"Package kind\", cpp_build_info.package_kind\n+                if len(cpp_build_info.package_kind) > 0\n+                else \"not indicated\")\n+    print_entry(\"Arrow C++ library version\", cpp_build_info.version)\n+    print_entry(\"Arrow C++ compiler\",\n+                f\"{cpp_build_info.compiler_id} {cpp_build_info.compiler_version}\")\n+    print_entry(\"Arrow C++ compiler flags\", cpp_build_info.compiler_flags)\n+    print_entry(\"Arrow C++ git revision\", cpp_build_info.git_id)\n+    print_entry(\"Arrow C++ git description\", cpp_build_info.git_description)\n+\n+\n+def _module_is_available(module):\n+    try:\n+        importlib.import_module(f'pyarrow.{module}')\n+    except ImportError:\n+        return False\n+    else:\n+        return True\n+\n+\n+def _filesystem_is_available(fs):\n+    try:\n+        import pyarrow.fs\n+    except ImportError:\n+        return False\n+\n+    try:\n+        getattr(pyarrow.fs, fs)\n+    except (ImportError, AttributeError):\n+        return False\n+    else:\n+        return True\n+\n+\n+def show_info():\n+    \"\"\"\n+    Print detailed version and platform information, for error reporting\n+    \"\"\"\n+    show_versions()\n+\n+    def print_entry(label, value):\n+        print(f\"  {label: <20}: {value: <8}\")\n+\n+    print(\"\\nPlatform:\")\n+    print_entry(\"OS / Arch\", f\"{platform.system()} {platform.machine()}\")\n+    print_entry(\"SIMD Level\", runtime_info().simd_level)\n+    print_entry(\"Detected SIMD Level\", runtime_info().detected_simd_level)\n+\n+    pool = default_memory_pool()\n+    print(\"\\nMemory:\")\n+    print_entry(\"Default backend\", pool.backend_name)\n+    print_entry(\"Bytes allocated\", f\"{pool.bytes_allocated()} bytes\")\n+    print_entry(\"Max memory\", f\"{pool.max_memory()} bytes\")\n+    print_entry(\"Supported Backends\", ', '.join(supported_memory_backends()))\n+\n+    print(\"\\nOptional modules:\")\n+    modules = [\"csv\", \"cuda\", \"dataset\", \"feather\", \"flight\", \"fs\", \"gandiva\", \"json\",\n+               \"orc\", \"parquet\", \"plasma\"]\n+    for module in modules:\n+        status = \"Enabled\" if _module_is_available(module) else \"-\"\n+        print(f\"  {module: <20}: {status: <8}\")\n+\n+    print(\"\\nFilesystems:\")\n+    filesystems = [\"HadoopFileSystem\", \"S3FileSystem\", \"GcsFileSystem\"]\n\nReview comment:\n       Nit, but perhaps order these alphabetically?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-10T14:15:04.341+0000",
                    "updated": "2022-01-10T14:15:04.341+0000",
                    "started": "2022-01-10T14:15:04.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706182",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/710385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r786623993\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -30,7 +30,9 @@\n \"\"\"\n \n import gc as _gc\n+import importlib\n import os as _os\n+import platform\n\nReview comment:\n       Nit: since we're prefixing other stdlib imports with an underscore, can you keep this convention here too?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T10:46:49.817+0000",
                    "updated": "2022-01-18T10:46:49.817+0000",
                    "started": "2022-01-18T10:46:49.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710385",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/710678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r786998794\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -30,7 +30,9 @@\n \"\"\"\n \n import gc as _gc\n+import importlib\n\nReview comment:\n       ```suggestion\r\n   import importlib as _importlib\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T17:34:47.942+0000",
                    "updated": "2022-01-18T17:34:47.942+0000",
                    "started": "2022-01-18T17:34:47.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710678",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/710764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#discussion_r787059099\n\n\n\n##########\nFile path: python/pyarrow/__init__.py\n##########\n@@ -30,7 +30,9 @@\n \"\"\"\n \n import gc as _gc\n+import importlib\n\nReview comment:\n       \ud83e\udd26 \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T18:56:24.625+0000",
                    "updated": "2022-01-18T18:56:24.625+0000",
                    "started": "2022-01-18T18:56:24.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710764",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/711256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T10:26:49.010+0000",
                    "updated": "2022-01-19T10:26:49.010+0000",
                    "started": "2022-01-19T10:26:49.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711256",
                    "issueId": "13417564"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/worklog/711565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12077:\nURL: https://github.com/apache/arrow/pull/12077#issuecomment-1016767952\n\n\n   Benchmark runs are scheduled for baseline = 84d73bcb91ba15b483b9b64e61e36aaa504259de and contender = 09f23ed7fd248dd7d5e16dfeccef035e97f336e0. 09f23ed7fd248dd7d5e16dfeccef035e97f336e0 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/0a8317debdfa4c8fb670d2f96f6ad0c5...c2ba385111164965bdf4f641858a8823/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/e79a4da22faf4cc4bf8309d26628c526...c55b2b7e2a62418cbd3ea4c4db24923a/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/78563111991d4054b4acf3a1f5791d4a...ce245258d6324b2499272d8c9be87379/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T18:53:05.237+0000",
                    "updated": "2022-01-19T18:53:05.237+0000",
                    "started": "2022-01-19T18:53:05.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711565",
                    "issueId": "13417564"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1844dc81[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30a03977[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1436f27c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@25ec1a0c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ce38960[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@22bed063[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b8635a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4441351b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14391c7a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@40d0fb56[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@230e2a5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f94e615[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 19 10:26:34 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "Python"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-19T10:26:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15109/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-12-14T22:20:26.000+0000",
        "updated": "2022-01-20T16:11:59.000+0000",
        "timeoriginalestimate": null,
        "description": "In the R arrow package, we have a function {{arrow_info()}} which provides information on versions and optional components. Python\u00a0has {{show_versions()}}, but it's not as detailed. We can add the following to the Python function:\r\n\r\n * List of optional components and whether they are enabled\r\n * Which allocator is used\r\n * SIMD level \r\n\r\n\r\nExample R output:\r\n\r\n{code}\r\nArrow package version: 6.0.1.9000\r\n\r\nCapabilities:\r\n               \r\ndataset    TRUE\r\nparquet    TRUE\r\njson       TRUE\r\ns3         TRUE\r\nutf8proc   TRUE\r\nre2        TRUE\r\nsnappy     TRUE\r\ngzip       TRUE\r\nbrotli     TRUE\r\nzstd       TRUE\r\nlz4        TRUE\r\nlz4_frame  TRUE\r\nlzo       FALSE\r\nbz2        TRUE\r\njemalloc   TRUE\r\nmimalloc   TRUE\r\n\r\nMemory:\r\n                  \r\nAllocator mimalloc\r\nCurrent    0 bytes\r\nMax        0 bytes\r\n\r\nRuntime:\r\n                        \r\nSIMD Level          none\r\nDetected SIMD Level none\r\n\r\nBuild:\r\n                                                             \r\nC++ Library Version                            7.0.0-SNAPSHOT\r\nC++ Compiler                                       AppleClang\r\nC++ Compiler Version                          13.0.0.13000029\r\nGit ID               cf8d81d9fcbc43ce57b8a0d36c05f8b4273a5fa3\r\n{code}\r\n\r\nExample Python output (current behavior):\r\n\r\n{code}\r\npyarrow version info\r\n--------------------\r\nPackage kind: not indicated\r\nArrow C++ library version: 7.0.0-SNAPSHOT\r\nArrow C++ compiler: AppleClang 13.0.0.13000029\r\nArrow C++ compiler flags:  -Qunused-arguments -fcolor-diagnostics -ggdb -O0\r\nArrow C++ git revision: d033ce769571a0f12e37ab165bc29d2b202b3a61\r\nArrow C++ git description: apache-arrow-7.0.0.dev-313-gd033ce769\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add more info to show_versions()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13417564/comment/17478540",
                    "id": "17478540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12077\n[https://github.com/apache/arrow/pull/12077]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-19T10:26:34.355+0000",
                    "updated": "2022-01-19T10:26:34.355+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xpo8:",
        "customfield_12314139": null
    }
}