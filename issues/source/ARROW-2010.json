{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13132043",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132043",
    "key": "ARROW-2010",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "ORC",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2010/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3fe28c13[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71aae7a0[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c0ce852[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3a3d8b94[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@484e3a8c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@54b223c4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f071f78[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@79b04027[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40138fc7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@57a2802[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12111b0a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@695bd017[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 26 23:13:18 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-01-26T23:13:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2010/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-01-18T23:10:50.000+0000",
        "updated": "2018-01-26T23:13:18.000+0000",
        "timeoriginalestimate": null,
        "description": "I am encountering this locally with clang 4.0 and BUILD_WARNING_LEVEL=CHECKIN. We should investigate why these aren't showing up in our CI builds\r\n\r\n{code}\r\n../src/arrow/adapters/orc/adapter.cc:138:38: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int32_t' (aka 'int') [-Werror,-Wshorten-64-to-32]\r\n      *out = fixed_size_binary(type->getMaximumLength());\r\n             ~~~~~~~~~~~~~~~~~ ~~~~~~^~~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:151:30: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int32_t' (aka 'int') [-Werror,-Wshorten-64-to-32]\r\n        *out = decimal(type->getPrecision(), type->getScale());\r\n               ~~~~~~~ ~~~~~~^~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:151:52: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int32_t' (aka 'int') [-Werror,-Wshorten-64-to-32]\r\n        *out = decimal(type->getPrecision(), type->getScale());\r\n               ~~~~~~~                       ~~~~~~^~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:176:24: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      int size = type->getSubtypeCount();\r\n          ~~~~   ~~~~~~^~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:188:24: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      int size = type->getSubtypeCount();\r\n          ~~~~   ~~~~~~^~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:262:21: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int size = type.getSubtypeCount();\r\n        ~~~~   ~~~~~^~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:452:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:477:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:543:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:572:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:599:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:615:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:632:20: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      for (int i = offset; i < length + offset; i++) {\r\n               ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:642:20: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      for (int i = offset; i < length + offset; i++) {\r\n               ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:389:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::Int32Type>, int, orc::LongVectorBatch, long>' requested here\r\n        return AppendNumericBatchCast<Int32Builder, int32_t, liborc::LongVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:392:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::Int16Type>, short, orc::LongVectorBatch, long>' requested here\r\n        return AppendNumericBatchCast<Int16Builder, int16_t, liborc::LongVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:395:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::Int8Type>, signed char, orc::LongVectorBatch, long>' requested here\r\n        return AppendNumericBatchCast<Int8Builder, int8_t, liborc::LongVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:401:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::FloatType>, float, orc::DoubleVectorBatch, double>' requested here\r\n        return AppendNumericBatchCast<FloatBuilder, float, liborc::DoubleVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:599:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:407:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendBinaryBatch<arrow::StringBuilder>' requested here\r\n        return AppendBinaryBatch<StringBuilder>(batch, offset, length, builder);\r\n               ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n20 errors generated.\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Compiler warnings with CHECKIN warning level in ORC adapter",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132043/comment/16338462",
                    "id": "16338462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1506: ARROW-2010: [C++] Do not suppress shorten-64-to-32 warnings from clang, fix warnings in ORC adapter\nURL: https://github.com/apache/arrow/pull/1506\n \n \n   These are warnings we want to see to prevent silent truncation of values without an explicit cast. \r\n   \r\n   See also bug ARROW-2032 that I encountered while working on this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T00:12:07.783+0000",
                    "updated": "2018-01-25T00:12:07.783+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132043/comment/16341771",
                    "id": "16341771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1506: ARROW-2010: [C++] Do not suppress shorten-64-to-32 warnings from clang, fix warnings in ORC adapter\nURL: https://github.com/apache/arrow/pull/1506#issuecomment-360930822\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T23:12:47.111+0000",
                    "updated": "2018-01-26T23:12:47.111+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132043/comment/16341773",
                    "id": "16341773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1506: ARROW-2010: [C++] Do not suppress shorten-64-to-32 warnings from clang, fix warnings in ORC adapter\nURL: https://github.com/apache/arrow/pull/1506\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/cmake_modules/SetupCxxFlags.cmake b/cpp/cmake_modules/SetupCxxFlags.cmake\nindex 97aed6b27..d901bde47 100644\n--- a/cpp/cmake_modules/SetupCxxFlags.cmake\n+++ b/cpp/cmake_modules/SetupCxxFlags.cmake\n@@ -100,7 +100,7 @@ if (\"${UPPERCASE_BUILD_WARNING_LEVEL}\" STREQUAL \"CHECKIN\")\n -Wno-cast-align -Wno-vla-extension -Wno-shift-sign-overflow \\\n -Wno-used-but-marked-unused -Wno-missing-variable-declarations \\\n -Wno-gnu-zero-variadic-macro-arguments -Wconversion -Wno-sign-conversion \\\n--Wno-disabled-macro-expansion -Wno-shorten-64-to-32\")\n+-Wno-disabled-macro-expansion\")\n \n     # Version numbers where warnings are introduced\n     if (\"${COMPILER_VERSION}\" VERSION_GREATER \"3.3\")\ndiff --git a/cpp/src/arrow/adapters/orc/adapter.cc b/cpp/src/arrow/adapters/orc/adapter.cc\nindex 473c90f92..12e1108fb 100644\n--- a/cpp/src/arrow/adapters/orc/adapter.cc\n+++ b/cpp/src/arrow/adapters/orc/adapter.cc\n@@ -105,6 +105,8 @@ Status GetArrowType(const liborc::Type* type, std::shared_ptr<DataType>* out) {\n     return Status::OK();\n   }\n   liborc::TypeKind kind = type->getKind();\n+  const int subtype_count = static_cast<int>(type->getSubtypeCount());\n+\n   switch (kind) {\n     case liborc::BOOLEAN:\n       *out = boolean();\n@@ -135,7 +137,7 @@ Status GetArrowType(const liborc::Type* type, std::shared_ptr<DataType>* out) {\n       *out = binary();\n       break;\n     case liborc::CHAR:\n-      *out = fixed_size_binary(type->getMaximumLength());\n+      *out = fixed_size_binary(static_cast<int>(type->getMaximumLength()));\n       break;\n     case liborc::TIMESTAMP:\n       *out = timestamp(TimeUnit::NANO);\n@@ -144,16 +146,18 @@ Status GetArrowType(const liborc::Type* type, std::shared_ptr<DataType>* out) {\n       *out = date32();\n       break;\n     case liborc::DECIMAL: {\n-      if (type->getPrecision() == 0) {\n+      const int precision = static_cast<int>(type->getPrecision());\n+      const int scale = static_cast<int>(type->getScale());\n+      if (precision == 0) {\n         // In HIVE 0.11/0.12 precision is set as 0, but means max precision\n         *out = decimal(38, 6);\n       } else {\n-        *out = decimal(type->getPrecision(), type->getScale());\n+        *out = decimal(precision, scale);\n       }\n       break;\n     }\n     case liborc::LIST: {\n-      if (type->getSubtypeCount() != 1) {\n+      if (subtype_count != 1) {\n         return Status::Invalid(\"Invalid Orc List type\");\n       }\n       std::shared_ptr<DataType> elemtype;\n@@ -162,7 +166,7 @@ Status GetArrowType(const liborc::Type* type, std::shared_ptr<DataType>* out) {\n       break;\n     }\n     case liborc::MAP: {\n-      if (type->getSubtypeCount() != 2) {\n+      if (subtype_count != 2) {\n         return Status::Invalid(\"Invalid Orc Map type\");\n       }\n       std::shared_ptr<DataType> keytype;\n@@ -173,9 +177,8 @@ Status GetArrowType(const liborc::Type* type, std::shared_ptr<DataType>* out) {\n       break;\n     }\n     case liborc::STRUCT: {\n-      int size = type->getSubtypeCount();\n       std::vector<std::shared_ptr<Field>> fields;\n-      for (int child = 0; child < size; ++child) {\n+      for (int child = 0; child < subtype_count; ++child) {\n         std::shared_ptr<DataType> elemtype;\n         RETURN_NOT_OK(GetArrowType(type->getSubtype(child), &elemtype));\n         std::string name = type->getFieldName(child);\n@@ -185,10 +188,9 @@ Status GetArrowType(const liborc::Type* type, std::shared_ptr<DataType>* out) {\n       break;\n     }\n     case liborc::UNION: {\n-      int size = type->getSubtypeCount();\n       std::vector<std::shared_ptr<Field>> fields;\n       std::vector<uint8_t> type_codes;\n-      for (int child = 0; child < size; ++child) {\n+      for (int child = 0; child < subtype_count; ++child) {\n         std::shared_ptr<DataType> elemtype;\n         RETURN_NOT_OK(GetArrowType(type->getSubtype(child), &elemtype));\n         fields.push_back(field(\"_union_\" + std::to_string(child), elemtype));\n@@ -259,7 +261,7 @@ class ORCFileReader::Impl {\n           \"Only ORC files with a top-level struct \"\n           \"can be handled\");\n     }\n-    int size = type.getSubtypeCount();\n+    int size = static_cast<int>(type.getSubtypeCount());\n     std::vector<std::shared_ptr<Field>> fields;\n     for (int child = 0; child < size; ++child) {\n       std::shared_ptr<DataType> elemtype;\n@@ -449,7 +451,7 @@ class ORCFileReader::Impl {\n     const liborc::Type* elemtype = type->getSubtype(0);\n \n     const bool has_nulls = batch->hasNulls;\n-    for (int i = offset; i < length + offset; i++) {\n+    for (int64_t i = offset; i < length + offset; i++) {\n       if (!has_nulls || batch->notNull[i]) {\n         int64_t start = batch->offsets[i];\n         int64_t end = batch->offsets[i + 1];\n@@ -474,7 +476,7 @@ class ORCFileReader::Impl {\n     const liborc::Type* valtype = type->getSubtype(1);\n \n     const bool has_nulls = batch->hasNulls;\n-    for (int i = offset; i < length + offset; i++) {\n+    for (int64_t i = offset; i < length + offset; i++) {\n       RETURN_NOT_OK(list_builder->Append());\n       int64_t start = batch->offsets[i];\n       int64_t list_length = batch->offsets[i + 1] - start;\n@@ -516,7 +518,7 @@ class ORCFileReader::Impl {\n     if (length == 0) {\n       return Status::OK();\n     }\n-    int start = builder->length();\n+    int64_t start = builder->length();\n \n     const uint8_t* valid_bytes = nullptr;\n     if (batch->hasNulls) {\n@@ -540,7 +542,7 @@ class ORCFileReader::Impl {\n     if (length == 0) {\n       return Status::OK();\n     }\n-    int start = builder->length();\n+    int64_t start = builder->length();\n \n     const uint8_t* valid_bytes = nullptr;\n     if (batch->hasNulls) {\n@@ -551,7 +553,7 @@ class ORCFileReader::Impl {\n     const int64_t* source = batch->data.data() + offset;\n     uint8_t* target = reinterpret_cast<uint8_t*>(builder->data()->mutable_data());\n \n-    for (int i = 0; i < length; i++) {\n+    for (int64_t i = 0; i < length; i++) {\n       if (source[i]) {\n         BitUtil::SetBit(target, start + i);\n       } else {\n@@ -569,7 +571,7 @@ class ORCFileReader::Impl {\n     if (length == 0) {\n       return Status::OK();\n     }\n-    int start = builder->length();\n+    int64_t start = builder->length();\n \n     const uint8_t* valid_bytes = nullptr;\n     if (batch->hasNulls) {\n@@ -581,7 +583,7 @@ class ORCFileReader::Impl {\n     const int64_t* nanos = batch->nanoseconds.data() + offset;\n     int64_t* target = reinterpret_cast<int64_t*>(builder->data()->mutable_data());\n \n-    for (int i = 0; i < length; i++) {\n+    for (int64_t i = 0; i < length; i++) {\n       // TODO: boundscheck this, as ORC supports higher resolution timestamps\n       // than arrow for nanosecond resolution\n       target[start + i] = seconds[i] * kOneSecondNanos + nanos[i];\n@@ -596,9 +598,10 @@ class ORCFileReader::Impl {\n     auto batch = static_cast<liborc::StringVectorBatch*>(cbatch);\n \n     const bool has_nulls = batch->hasNulls;\n-    for (int i = offset; i < length + offset; i++) {\n+    for (int64_t i = offset; i < length + offset; i++) {\n       if (!has_nulls || batch->notNull[i]) {\n-        RETURN_NOT_OK(builder->Append(batch->data[i], batch->length[i]));\n+        RETURN_NOT_OK(\n+            builder->Append(batch->data[i], static_cast<int32_t>(batch->length[i])));\n       } else {\n         RETURN_NOT_OK(builder->AppendNull());\n       }\n@@ -612,7 +615,7 @@ class ORCFileReader::Impl {\n     auto batch = static_cast<liborc::StringVectorBatch*>(cbatch);\n \n     const bool has_nulls = batch->hasNulls;\n-    for (int i = offset; i < length + offset; i++) {\n+    for (int64_t i = offset; i < length + offset; i++) {\n       if (!has_nulls || batch->notNull[i]) {\n         RETURN_NOT_OK(builder->Append(batch->data[i]));\n       } else {\n@@ -629,7 +632,7 @@ class ORCFileReader::Impl {\n     const bool has_nulls = cbatch->hasNulls;\n     if (type->getPrecision() == 0 || type->getPrecision() > 18) {\n       auto batch = static_cast<liborc::Decimal128VectorBatch*>(cbatch);\n-      for (int i = offset; i < length + offset; i++) {\n+      for (int64_t i = offset; i < length + offset; i++) {\n         if (!has_nulls || batch->notNull[i]) {\n           RETURN_NOT_OK(builder->Append(\n               Decimal128(batch->values[i].getHighBits(), batch->values[i].getLowBits())));\n@@ -639,7 +642,7 @@ class ORCFileReader::Impl {\n       }\n     } else {\n       auto batch = static_cast<liborc::Decimal64VectorBatch*>(cbatch);\n-      for (int i = offset; i < length + offset; i++) {\n+      for (int64_t i = offset; i < length + offset; i++) {\n         if (!has_nulls || batch->notNull[i]) {\n           RETURN_NOT_OK(builder->Append(Decimal128(batch->values[i])));\n         } else {\ndiff --git a/cpp/src/plasma/fling.cc b/cpp/src/plasma/fling.cc\nindex b84648b25..819ec1623 100644\n--- a/cpp/src/plasma/fling.cc\n+++ b/cpp/src/plasma/fling.cc\n@@ -23,7 +23,7 @@ void init_msg(struct msghdr* msg, struct iovec* iov, char* buf, size_t buf_len)\n   msg->msg_iov = iov;\n   msg->msg_iovlen = 1;\n   msg->msg_control = buf;\n-  msg->msg_controllen = buf_len;\n+  msg->msg_controllen = static_cast<socklen_t>(buf_len);\n   msg->msg_name = NULL;\n   msg->msg_namelen = 0;\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T23:13:17.380+0000",
                    "updated": "2018-01-26T23:13:17.380+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13132043/comment/16341774",
                    "id": "16341774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1506\n[https://github.com/apache/arrow/pull/1506]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-26T23:13:18.768+0000",
                    "updated": "2018-01-26T23:13:18.768+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3p3b3:",
        "customfield_12314139": null
    }
}