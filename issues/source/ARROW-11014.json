{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13347454",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454",
    "key": "ARROW-11014",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11014/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992\n\n\n   ParquetExec represents multiple files but we were calculating statistics based on the first file.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-22T23:22:21.419+0000",
                    "updated": "2020-12-22T23:22:21.419+0000",
                    "started": "2020-12-22T23:22:21.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527407",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527408",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749833121\n\n\n   @seddonm1 fyi\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-22T23:24:27.015+0000",
                    "updated": "2020-12-22T23:24:27.015+0000",
                    "started": "2020-12-22T23:24:27.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527408",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749836684\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=h1) Report\n   > Merging [#8992](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=desc) (74a5750) into [master](https://codecov.io/gh/apache/arrow/commit/0519c4c0ecccd7d84ce44bd3a3e7bcb4fef8f4d6?el=desc) (0519c4c) will **decrease** coverage by `0.00%`.\n   > The diff coverage is `100.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8992/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #8992      +/-   ##\n   ==========================================\n   - Coverage   82.64%   82.64%   -0.01%     \n   ==========================================\n     Files         200      200              \n     Lines       49730    49735       +5     \n   ==========================================\n   + Hits        41098    41102       +4     \n   - Misses       8632     8633       +1     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/datasource/datasource.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL2RhdGFzb3VyY2UucnM=) | `100.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/parquet.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL3BhcnF1ZXQucnM=) | `96.92% <100.00%> (+1.30%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `81.90% <100.00%> (+2.33%)` | :arrow_up: |\n   | [rust/parquet/src/file/metadata.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9maWxlL21ldGFkYXRhLnJz) | `91.05% <0.00%> (-0.78%)` | :arrow_down: |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.93% <0.00%> (-0.27%)` | :arrow_down: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.43% <0.00%> (+0.19%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=footer). Last update [081728f...74a5750](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-22T23:37:01.814+0000",
                    "updated": "2020-12-22T23:37:01.814+0000",
                    "started": "2020-12-22T23:37:01.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527410",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749837169\n\n\n   Thanks. Good find. I didn't dig down too deeply through the Parquet library.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-22T23:38:47.889+0000",
                    "updated": "2020-12-22T23:38:47.889+0000",
                    "started": "2020-12-22T23:38:47.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527412",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749838710\n\n\n   https://issues.apache.org/jira/browse/ARROW-11014\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-22T23:44:54.982+0000",
                    "updated": "2020-12-22T23:44:54.982+0000",
                    "started": "2020-12-22T23:44:54.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527413",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 edited a comment on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749837169\n\n\n   Thanks. Good find. :facepalm: by me\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-22T23:47:42.046+0000",
                    "updated": "2020-12-22T23:47:42.046+0000",
                    "started": "2020-12-22T23:47:42.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527415",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r547952117\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -30,17 +30,17 @@ use crate::physical_plan::{common, Partitioning};\n use arrow::datatypes::{Schema, SchemaRef};\n use arrow::error::{ArrowError, Result as ArrowResult};\n use arrow::record_batch::RecordBatch;\n-use parquet::file::metadata::ParquetMetaData;\n use parquet::file::reader::SerializedFileReader;\n \n use crossbeam::channel::{bounded, Receiver, RecvError, Sender};\n use fmt::Debug;\n use parquet::arrow::{ArrowReader, ParquetFileArrowReader};\n \n+use crate::datasource::datasource::Statistics;\n use async_trait::async_trait;\n use futures::stream::Stream;\n \n-/// Execution plan for scanning a Parquet file\n+/// Execution plan for scanning one or more Parquet files\n\nReview comment:\n       \ud83d\udc4d \n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -67,14 +67,35 @@ impl ParquetExec {\n         if filenames.is_empty() {\n             Err(DataFusionError::Plan(\"No files found\".to_string()))\n         } else {\n+            // Calculate statistics for the entire data set. Later, we will probably want to make\n+            // statistics available on a per-partition basis.\n+            let mut num_rows = 0;\n+            let mut total_byte_size = 0;\n+            for file in &filenames {\n+                let file = File::open(file)?;\n+                let file_reader = Arc::new(SerializedFileReader::new(file)?);\n\nReview comment:\n       It probably doesn't matter but we are creating `arrow_reader`s several times for the same file -- like here we create them just to read metadata, and then right below we (re)open the first one again to read the schema. And then we open them again to actually read data... \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T13:16:08.177+0000",
                    "updated": "2020-12-23T13:16:08.177+0000",
                    "started": "2020-12-23T13:16:08.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527638",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r548039078\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -67,14 +67,35 @@ impl ParquetExec {\n         if filenames.is_empty() {\n             Err(DataFusionError::Plan(\"No files found\".to_string()))\n         } else {\n+            // Calculate statistics for the entire data set. Later, we will probably want to make\n+            // statistics available on a per-partition basis.\n+            let mut num_rows = 0;\n+            let mut total_byte_size = 0;\n+            for file in &filenames {\n+                let file = File::open(file)?;\n+                let file_reader = Arc::new(SerializedFileReader::new(file)?);\n\nReview comment:\n       This is a good point. I've pushed another change here to collect unique schemas during the scan of the files to avoid the separate read. This now also implements a check to make sure the schemas are the same. I have wasted time in the past tracking down issues due to incompatible files. I added a reference to the issue for implementing schema merging, which would be a nice addition.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T16:25:36.293+0000",
                    "updated": "2020-12-23T16:25:36.293+0000",
                    "started": "2020-12-23T16:25:36.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527697",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r548049010\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -67,14 +67,35 @@ impl ParquetExec {\n         if filenames.is_empty() {\n             Err(DataFusionError::Plan(\"No files found\".to_string()))\n         } else {\n+            // Calculate statistics for the entire data set. Later, we will probably want to make\n+            // statistics available on a per-partition basis.\n+            let mut num_rows = 0;\n+            let mut total_byte_size = 0;\n+            for file in &filenames {\n+                let file = File::open(file)?;\n+                let file_reader = Arc::new(SerializedFileReader::new(file)?);\n\nReview comment:\n       I've gone a little further and introduced a `ParquetPartition` struct to make things more explicit about how partitioning works and added references to related issues for changing the partitioning strategy. I also improved an error message and added more documentation.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T16:47:36.802+0000",
                    "updated": "2020-12-23T16:47:36.802+0000",
                    "started": "2020-12-23T16:47:36.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527703",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749836684\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=h1) Report\n   > Merging [#8992](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=desc) (e61fe43) into [master](https://codecov.io/gh/apache/arrow/commit/0519c4c0ecccd7d84ce44bd3a3e7bcb4fef8f4d6?el=desc) (0519c4c) will **increase** coverage by `0.01%`.\n   > The diff coverage is `83.78%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8992/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #8992      +/-   ##\n   ==========================================\n   + Coverage   82.64%   82.65%   +0.01%     \n   ==========================================\n     Files         200      200              \n     Lines       49730    49789      +59     \n   ==========================================\n   + Hits        41098    41155      +57     \n   - Misses       8632     8634       +2     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/datasource/datasource.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL2RhdGFzb3VyY2UucnM=) | `100.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `79.66% <83.33%> (+0.09%)` | :arrow_up: |\n   | [rust/datafusion/src/datasource/parquet.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL3BhcnF1ZXQucnM=) | `96.92% <100.00%> (+1.30%)` | :arrow_up: |\n   | [rust/parquet/src/file/metadata.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9maWxlL21ldGFkYXRhLnJz) | `91.05% <0.00%> (-0.78%)` | :arrow_down: |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.93% <0.00%> (-0.27%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/expressions.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zLnJz) | `84.49% <0.00%> (+0.31%)` | :arrow_up: |\n   | [rust/arrow/src/util/test\\_util.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvdXRpbC90ZXN0X3V0aWwucnM=) | `90.90% <0.00%> (+15.90%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=footer). Last update [081728f...e50cb12](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T17:37:01.669+0000",
                    "updated": "2020-12-23T17:37:01.669+0000",
                    "started": "2020-12-23T17:37:01.669+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527725",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-749836684\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=h1) Report\n   > Merging [#8992](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=desc) (e50cb12) into [master](https://codecov.io/gh/apache/arrow/commit/0519c4c0ecccd7d84ce44bd3a3e7bcb4fef8f4d6?el=desc) (0519c4c) will **increase** coverage by `0.02%`.\n   > The diff coverage is `85.71%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/8992/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #8992      +/-   ##\n   ==========================================\n   + Coverage   82.64%   82.66%   +0.02%     \n   ==========================================\n     Files         200      200              \n     Lines       49730    49794      +64     \n   ==========================================\n   + Hits        41098    41161      +63     \n   - Misses       8632     8633       +1     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/datasource/datasource.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL2RhdGFzb3VyY2UucnM=) | `100.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `80.48% <85.36%> (+0.91%)` | :arrow_up: |\n   | [rust/datafusion/src/datasource/parquet.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL3BhcnF1ZXQucnM=) | `96.92% <100.00%> (+1.30%)` | :arrow_up: |\n   | [rust/parquet/src/file/metadata.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9maWxlL21ldGFkYXRhLnJz) | `91.05% <0.00%> (-0.78%)` | :arrow_down: |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.93% <0.00%> (-0.27%)` | :arrow_down: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.43% <0.00%> (+0.19%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/expressions.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zLnJz) | `84.49% <0.00%> (+0.31%)` | :arrow_up: |\n   | [rust/arrow/src/util/test\\_util.rs](https://codecov.io/gh/apache/arrow/pull/8992/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvdXRpbC90ZXN0X3V0aWwucnM=) | `90.90% <0.00%> (+15.90%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=footer). Last update [081728f...e50cb12](https://codecov.io/gh/apache/arrow/pull/8992?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T17:44:18.282+0000",
                    "updated": "2020-12-23T17:44:18.282+0000",
                    "started": "2020-12-23T17:44:18.282+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527728",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-750408260\n\n\n   > I wonder if there is some way to test this code -- I also remember being confused about the fact that `ParquetExec` can actually take a directory full of files rather than a single one.\r\n   \r\n   Yes, tests are definitely lacking here. I will take this on as a follow-up task for the release: https://issues.apache.org/jira/browse/ARROW-11020\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T17:52:50.383+0000",
                    "updated": "2020-12-23T17:52:50.383+0000",
                    "started": "2020-12-23T17:52:50.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527729",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-750408839\n\n\n   @alamb @jorgecarleitao I got a bit carried away with some other improvements in this PR but I am going to stop now. I filed a follow-up issue to add more comprehensive tests before we release 3.0.0\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T17:54:27.833+0000",
                    "updated": "2020-12-23T17:54:27.833+0000",
                    "started": "2020-12-23T17:54:27.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527731",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-750429411\n\n\n   Also @Dandandan this starts to introduce some per-partition stats now\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T18:54:54.765+0000",
                    "updated": "2020-12-23T18:54:54.765+0000",
                    "started": "2020-12-23T18:54:54.764+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527773",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-750435853\n\n\n   Makes sense. Maybe we can reuse the summing stats for all partitions for different source types if it gets more complex.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T19:12:58.541+0000",
                    "updated": "2020-12-23T19:12:58.541+0000",
                    "started": "2020-12-23T19:12:58.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527781",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r548155265\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -30,62 +30,117 @@ use crate::physical_plan::{common, Partitioning};\n use arrow::datatypes::{Schema, SchemaRef};\n use arrow::error::{ArrowError, Result as ArrowResult};\n use arrow::record_batch::RecordBatch;\n-use parquet::file::metadata::ParquetMetaData;\n use parquet::file::reader::SerializedFileReader;\n \n use crossbeam::channel::{bounded, Receiver, RecvError, Sender};\n use fmt::Debug;\n use parquet::arrow::{ArrowReader, ParquetFileArrowReader};\n \n+use crate::datasource::datasource::Statistics;\n use async_trait::async_trait;\n use futures::stream::Stream;\n \n-/// Execution plan for scanning a Parquet file\n+/// Execution plan for scanning one or more Parquet partitions\n #[derive(Debug, Clone)]\n pub struct ParquetExec {\n-    /// Path to directory containing partitioned Parquet files with the same schema\n-    filenames: Vec<String>,\n+    /// Parquet partitions to read\n+    partitions: Vec<ParquetPartition>,\n     /// Schema after projection is applied\n     schema: SchemaRef,\n     /// Projection for which columns to load\n     projection: Vec<usize>,\n     /// Batch size\n     batch_size: usize,\n-    /// Parquet metadata\n-    metadata: ParquetMetaData,\n+    /// Statistics for the data set (sum of statistics for all partitions)\n+    statistics: Statistics,\n+}\n+\n+/// Represents one partition of a Parquet data set and this currently means one Parquet file.\n+///\n+/// In the future it would be good to support subsets of files based on ranges of row groups\n+/// so that we can better parallelize reads of large files across available cores (see\n+/// https://issues.apache.org/jira/browse/ARROW-10995).\n+///\n+/// We may also want to support reading Parquet files that are partitioned based on a key and\n+/// in this case we would want this partition struct to represent multiple files for a given\n+/// partition key (see https://issues.apache.org/jira/browse/ARROW-11019).\n+#[derive(Debug, Clone)]\n+pub struct ParquetPartition {\n+    /// The Parquet filename for this partition\n+    filename: String,\n+    /// Statistics for this partition\n+    statistics: Statistics,\n }\n \n impl ParquetExec {\n-    /// Create a new Parquet reader execution plan\n+    /// Create a new Parquet reader execution plan based on the specified Parquet filename or\n+    /// directory containing Parquet files\n     pub fn try_new(\n         path: &str,\n         projection: Option<Vec<usize>>,\n         batch_size: usize,\n     ) -> Result<Self> {\n+        // build a list of filenames from the specified path, which could be a single file or\n+        // a directory containing one or more parquet files\n         let mut filenames: Vec<String> = vec![];\n         common::build_file_list(path, &mut filenames, \".parquet\")?;\n         if filenames.is_empty() {\n-            Err(DataFusionError::Plan(\"No files found\".to_string()))\n+            Err(DataFusionError::Plan(format!(\n+                \"No Parquet files found at path {}\",\n+                path\n+            )))\n         } else {\n-            let file = File::open(&filenames[0])?;\n-            let file_reader = Arc::new(SerializedFileReader::new(file)?);\n-            let mut arrow_reader = ParquetFileArrowReader::new(file_reader);\n-            let schema = arrow_reader.get_schema()?;\n-            let metadata = arrow_reader.get_metadata();\n-\n-            Ok(Self::new(\n-                filenames, schema, projection, batch_size, metadata,\n-            ))\n+            // build a list of Parquet partitions with statistics and gather all unique schemas\n+            // used in this data set\n+            let mut schemas: Vec<Schema> = vec![];\n+            let mut partitions = vec![];\n\nReview comment:\n       Could use `with_capacity`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T19:15:07.430+0000",
                    "updated": "2020-12-23T19:15:07.430+0000",
                    "started": "2020-12-23T19:15:07.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527783",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r548157527\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -99,18 +154,38 @@ impl ParquetExec {\n                 .collect(),\n         );\n \n+        // sum the statistics\n+        let mut num_rows = 0;\n+        let mut total_byte_size = 0;\n+        for part in &partitions {\n+            num_rows += part.statistics.num_rows.unwrap_or(0);\n+            total_byte_size += part.statistics.total_byte_size.unwrap_or(0);\n+        }\n+        let statistics = Statistics {\n+            num_rows: if num_rows == 0 {\n+                None\n\nReview comment:\n       Why map rows and byte size to None here and not `Some(0)`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T19:18:23.589+0000",
                    "updated": "2020-12-23T19:18:23.589+0000",
                    "started": "2020-12-23T19:18:23.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527787",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r548159968\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -30,62 +30,117 @@ use crate::physical_plan::{common, Partitioning};\n use arrow::datatypes::{Schema, SchemaRef};\n use arrow::error::{ArrowError, Result as ArrowResult};\n use arrow::record_batch::RecordBatch;\n-use parquet::file::metadata::ParquetMetaData;\n use parquet::file::reader::SerializedFileReader;\n \n use crossbeam::channel::{bounded, Receiver, RecvError, Sender};\n use fmt::Debug;\n use parquet::arrow::{ArrowReader, ParquetFileArrowReader};\n \n+use crate::datasource::datasource::Statistics;\n use async_trait::async_trait;\n use futures::stream::Stream;\n \n-/// Execution plan for scanning a Parquet file\n+/// Execution plan for scanning one or more Parquet partitions\n #[derive(Debug, Clone)]\n pub struct ParquetExec {\n-    /// Path to directory containing partitioned Parquet files with the same schema\n-    filenames: Vec<String>,\n+    /// Parquet partitions to read\n+    partitions: Vec<ParquetPartition>,\n     /// Schema after projection is applied\n     schema: SchemaRef,\n     /// Projection for which columns to load\n     projection: Vec<usize>,\n     /// Batch size\n     batch_size: usize,\n-    /// Parquet metadata\n-    metadata: ParquetMetaData,\n+    /// Statistics for the data set (sum of statistics for all partitions)\n+    statistics: Statistics,\n+}\n+\n+/// Represents one partition of a Parquet data set and this currently means one Parquet file.\n+///\n+/// In the future it would be good to support subsets of files based on ranges of row groups\n+/// so that we can better parallelize reads of large files across available cores (see\n+/// https://issues.apache.org/jira/browse/ARROW-10995).\n+///\n+/// We may also want to support reading Parquet files that are partitioned based on a key and\n+/// in this case we would want this partition struct to represent multiple files for a given\n+/// partition key (see https://issues.apache.org/jira/browse/ARROW-11019).\n+#[derive(Debug, Clone)]\n+pub struct ParquetPartition {\n+    /// The Parquet filename for this partition\n+    filename: String,\n+    /// Statistics for this partition\n+    statistics: Statistics,\n }\n \n impl ParquetExec {\n-    /// Create a new Parquet reader execution plan\n+    /// Create a new Parquet reader execution plan based on the specified Parquet filename or\n+    /// directory containing Parquet files\n     pub fn try_new(\n         path: &str,\n         projection: Option<Vec<usize>>,\n         batch_size: usize,\n     ) -> Result<Self> {\n+        // build a list of filenames from the specified path, which could be a single file or\n+        // a directory containing one or more parquet files\n         let mut filenames: Vec<String> = vec![];\n         common::build_file_list(path, &mut filenames, \".parquet\")?;\n         if filenames.is_empty() {\n-            Err(DataFusionError::Plan(\"No files found\".to_string()))\n+            Err(DataFusionError::Plan(format!(\n+                \"No Parquet files found at path {}\",\n+                path\n+            )))\n         } else {\n-            let file = File::open(&filenames[0])?;\n-            let file_reader = Arc::new(SerializedFileReader::new(file)?);\n-            let mut arrow_reader = ParquetFileArrowReader::new(file_reader);\n-            let schema = arrow_reader.get_schema()?;\n-            let metadata = arrow_reader.get_metadata();\n-\n-            Ok(Self::new(\n-                filenames, schema, projection, batch_size, metadata,\n-            ))\n+            // build a list of Parquet partitions with statistics and gather all unique schemas\n+            // used in this data set\n+            let mut schemas: Vec<Schema> = vec![];\n+            let mut partitions = vec![];\n+            for filename in &filenames {\n+                let file = File::open(filename)?;\n+                let file_reader = Arc::new(SerializedFileReader::new(file)?);\n+                let mut arrow_reader = ParquetFileArrowReader::new(file_reader);\n+                let meta_data = arrow_reader.get_metadata();\n+                // collect all the unique schemas in this data set\n+                let schema = arrow_reader.get_schema()?;\n+                if schemas.is_empty() || schema != schemas[0] {\n+                    schemas.push(schema);\n+                }\n+                let mut num_rows = 0;\n+                let mut total_byte_size = 0;\n+                for i in 0..meta_data.num_row_groups() {\n+                    let row_group_meta = meta_data.row_group(i);\n+                    num_rows += row_group_meta.num_rows();\n+                    total_byte_size += row_group_meta.total_byte_size();\n+                }\n+                let statistics = Statistics {\n+                    num_rows: Some(num_rows as usize),\n+                    total_byte_size: Some(total_byte_size as usize),\n+                };\n+                partitions.push(ParquetPartition {\n+                    filename: filename.to_owned(),\n+                    statistics,\n+                });\n+            }\n+\n+            // we currently get the schema information from the first file rather than do\n+            // schema merging and this is a limitation.\n+            // See https://issues.apache.org/jira/browse/ARROW-11017\n+            if schemas.len() > 1 {\n+                return Err(DataFusionError::Plan(format!(\n+                    \"The Parquet files in {} have {} different schemas and DataFusion does \\\n+                    not yet support schema merging\", path, schemas.len())));\n+            }\n+            let schema = schemas[0].clone();\n+\n+            Ok(Self::new(partitions, schema, projection, batch_size))\n         }\n     }\n \n-    /// Create a new Parquet reader execution plan with provided files and schema\n+    /// Create a new Parquet reader execution plan with provided partitions and schema\n     pub fn new(\n-        filenames: Vec<String>,\n+        partitions: Vec<ParquetPartition>,\n\nReview comment:\n       I thought that part of the reason for allowing a list of files was to support similar behavior to DeltaLake where an external file contains a list of filenames representing a version of data rather than grouping them by directory structure?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T19:22:13.646+0000",
                    "updated": "2020-12-23T19:22:13.646+0000",
                    "started": "2020-12-23T19:22:13.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527790",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#issuecomment-750439538\n\n\n   1 comment that I think should be resolved. The rest looks good, great that this is fixed.\r\n   Agree also that there should be some tests :+1: \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T19:24:13.443+0000",
                    "updated": "2020-12-23T19:24:13.443+0000",
                    "started": "2020-12-23T19:24:13.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527792",
                    "issueId": "13347454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/worklog/527814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8992:\nURL: https://github.com/apache/arrow/pull/8992#discussion_r548195177\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/parquet.rs\n##########\n@@ -30,62 +30,117 @@ use crate::physical_plan::{common, Partitioning};\n use arrow::datatypes::{Schema, SchemaRef};\n use arrow::error::{ArrowError, Result as ArrowResult};\n use arrow::record_batch::RecordBatch;\n-use parquet::file::metadata::ParquetMetaData;\n use parquet::file::reader::SerializedFileReader;\n \n use crossbeam::channel::{bounded, Receiver, RecvError, Sender};\n use fmt::Debug;\n use parquet::arrow::{ArrowReader, ParquetFileArrowReader};\n \n+use crate::datasource::datasource::Statistics;\n use async_trait::async_trait;\n use futures::stream::Stream;\n \n-/// Execution plan for scanning a Parquet file\n+/// Execution plan for scanning one or more Parquet partitions\n #[derive(Debug, Clone)]\n pub struct ParquetExec {\n-    /// Path to directory containing partitioned Parquet files with the same schema\n-    filenames: Vec<String>,\n+    /// Parquet partitions to read\n+    partitions: Vec<ParquetPartition>,\n     /// Schema after projection is applied\n     schema: SchemaRef,\n     /// Projection for which columns to load\n     projection: Vec<usize>,\n     /// Batch size\n     batch_size: usize,\n-    /// Parquet metadata\n-    metadata: ParquetMetaData,\n+    /// Statistics for the data set (sum of statistics for all partitions)\n+    statistics: Statistics,\n+}\n+\n+/// Represents one partition of a Parquet data set and this currently means one Parquet file.\n+///\n+/// In the future it would be good to support subsets of files based on ranges of row groups\n+/// so that we can better parallelize reads of large files across available cores (see\n+/// https://issues.apache.org/jira/browse/ARROW-10995).\n+///\n+/// We may also want to support reading Parquet files that are partitioned based on a key and\n+/// in this case we would want this partition struct to represent multiple files for a given\n+/// partition key (see https://issues.apache.org/jira/browse/ARROW-11019).\n+#[derive(Debug, Clone)]\n+pub struct ParquetPartition {\n+    /// The Parquet filename for this partition\n+    filename: String,\n+    /// Statistics for this partition\n+    statistics: Statistics,\n }\n \n impl ParquetExec {\n-    /// Create a new Parquet reader execution plan\n+    /// Create a new Parquet reader execution plan based on the specified Parquet filename or\n+    /// directory containing Parquet files\n     pub fn try_new(\n         path: &str,\n         projection: Option<Vec<usize>>,\n         batch_size: usize,\n     ) -> Result<Self> {\n+        // build a list of filenames from the specified path, which could be a single file or\n+        // a directory containing one or more parquet files\n         let mut filenames: Vec<String> = vec![];\n         common::build_file_list(path, &mut filenames, \".parquet\")?;\n         if filenames.is_empty() {\n-            Err(DataFusionError::Plan(\"No files found\".to_string()))\n+            Err(DataFusionError::Plan(format!(\n+                \"No Parquet files found at path {}\",\n+                path\n+            )))\n         } else {\n-            let file = File::open(&filenames[0])?;\n-            let file_reader = Arc::new(SerializedFileReader::new(file)?);\n-            let mut arrow_reader = ParquetFileArrowReader::new(file_reader);\n-            let schema = arrow_reader.get_schema()?;\n-            let metadata = arrow_reader.get_metadata();\n-\n-            Ok(Self::new(\n-                filenames, schema, projection, batch_size, metadata,\n-            ))\n+            // build a list of Parquet partitions with statistics and gather all unique schemas\n+            // used in this data set\n+            let mut schemas: Vec<Schema> = vec![];\n+            let mut partitions = vec![];\n+            for filename in &filenames {\n+                let file = File::open(filename)?;\n+                let file_reader = Arc::new(SerializedFileReader::new(file)?);\n+                let mut arrow_reader = ParquetFileArrowReader::new(file_reader);\n+                let meta_data = arrow_reader.get_metadata();\n+                // collect all the unique schemas in this data set\n+                let schema = arrow_reader.get_schema()?;\n+                if schemas.is_empty() || schema != schemas[0] {\n+                    schemas.push(schema);\n+                }\n+                let mut num_rows = 0;\n+                let mut total_byte_size = 0;\n+                for i in 0..meta_data.num_row_groups() {\n+                    let row_group_meta = meta_data.row_group(i);\n+                    num_rows += row_group_meta.num_rows();\n+                    total_byte_size += row_group_meta.total_byte_size();\n+                }\n+                let statistics = Statistics {\n+                    num_rows: Some(num_rows as usize),\n+                    total_byte_size: Some(total_byte_size as usize),\n+                };\n+                partitions.push(ParquetPartition {\n+                    filename: filename.to_owned(),\n+                    statistics,\n+                });\n+            }\n+\n+            // we currently get the schema information from the first file rather than do\n+            // schema merging and this is a limitation.\n+            // See https://issues.apache.org/jira/browse/ARROW-11017\n+            if schemas.len() > 1 {\n+                return Err(DataFusionError::Plan(format!(\n+                    \"The Parquet files in {} have {} different schemas and DataFusion does \\\n+                    not yet support schema merging\", path, schemas.len())));\n+            }\n+            let schema = schemas[0].clone();\n+\n+            Ok(Self::new(partitions, schema, projection, batch_size))\n         }\n     }\n \n-    /// Create a new Parquet reader execution plan with provided files and schema\n+    /// Create a new Parquet reader execution plan with provided partitions and schema\n     pub fn new(\n-        filenames: Vec<String>,\n+        partitions: Vec<ParquetPartition>,\n\nReview comment:\n       Interesting. I was not aware of this use case. Perhaps we need a specific constructor for that use case. I'll take a look.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-23T20:08:33.157+0000",
                    "updated": "2020-12-23T20:08:33.157+0000",
                    "started": "2020-12-23T20:08:33.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "527814",
                    "issueId": "13347454"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5627b888[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@afff1da[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19e75aff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c631938[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3458651d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c41ad1b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1fd238ce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6b0c58d5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c0bb824[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2d13f7cb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2309beef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2a4a90ab[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 23 23:15:14 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-12-23T23:15:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11014/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-12-22T23:14:07.000+0000",
        "updated": "2020-12-24T13:20:39.000+0000",
        "timeoriginalestimate": null,
        "description": "ParquetExec represents one or more Parquet files and currently only returns statistics based on the first file.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] ParquetExec reports incorrect statistics",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13347454/comment/17254317",
                    "id": "17254317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 8992\n[https://github.com/apache/arrow/pull/8992]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-12-23T23:15:14.377+0000",
                    "updated": "2020-12-23T23:15:14.377+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0lrco:",
        "customfield_12314139": null
    }
}