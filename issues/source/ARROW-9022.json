{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13309169",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169",
    "key": "ARROW-9022",
    "fields": {
        "parent": {
            "id": "13117652",
            "key": "ARROW-1797",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13117652",
            "fields": {
                "summary": "[C++] Implement binary arithmetic kernels for numeric arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12593092",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12593092",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13312511",
                    "key": "ARROW-9187",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13312511",
                    "fields": {
                        "summary": "[R] Add bindings for arithmetic kernels",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9022/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs opened a new pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341\n\n\n   Currently the output type of the Add function is identical with the argument types which makes it unsafe to add numeric limit values, so instead of using `(int8, int8) -> int8` signature we should use `(int8, int8) -> int16`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T11:33:34.959+0000",
                    "updated": "2020-06-03T11:33:34.959+0000",
                    "started": "2020-06-03T11:33:34.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440714",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r434500867\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -522,53 +503,56 @@ struct ScalarUnaryNotNull {\n //     // implementation\n //   }\n // };\n-template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op,\n-          typename FlippedOp = Op>\n+template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op>\n struct ScalarBinary {\n   using OUT = typename GetOutputType<OutType>::T;\n   using ARG0 = typename GetViewType<Arg0Type>::T;\n   using ARG1 = typename GetViewType<Arg1Type>::T;\n \n-  template <typename ChosenOp>\n   static void ArrayArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     ArrayIterator<Arg1Type> arg1(*batch[1].array());\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1());\n+        return Op::template Call(ctx, arg0(), arg1());\n     });\n   }\n \n-  template <typename ChosenOp>\n   static void ArrayScalar(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     auto arg1 = UnboxScalar<Arg1Type>::Unbox(batch[1]);\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1);\n+        return Op::template Call(ctx, arg0(), arg1);\n+    });\n+  }\n+\n+  static void ScalarArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n\nReview comment:\n       With a little code duplication I removed the ChosenOp template parameters making the implementation a bit more straightforward and reusable for other functions like Subtract where the order matters and defining a flipped operator would involve calling to another Negation function.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T11:36:05.921+0000",
                    "updated": "2020-06-03T11:36:05.921+0000",
                    "started": "2020-06-03T11:36:05.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440717",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r434501653\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -21,21 +21,44 @@ namespace arrow {\n namespace compute {\n \n struct Add {\n-  template <typename OUT, typename ARG0, typename ARG1>\n-  static constexpr OUT Call(KernelContext*, ARG0 left, ARG1 right) {\n+  template <typename ARG0, typename ARG1>\n+  static constexpr auto Call(KernelContext*, ARG0 left, ARG1 right)\n+      -> decltype(left + right) {\n     return left + right;\n   }\n };\n \n namespace codegen {\n \n+template <typename Op, typename ArgType, typename OutType>\n+void AddBinaryKernel(const std::shared_ptr<ScalarFunction>& func) {\n+  // create an exec function with the requested signature\n+  ArrayKernelExec exec = ScalarBinaryEqualTypes<OutType, ArgType, Op>::Exec;\n\nReview comment:\n       Using `ScalarBinaryEqualTypes` make the kernel support both Scalar and Array shaped inputs.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T11:37:41.540+0000",
                    "updated": "2020-06-03T11:37:41.540+0000",
                    "started": "2020-06-03T11:37:41.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440718",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r434501950\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -21,21 +21,44 @@ namespace arrow {\n namespace compute {\n \n struct Add {\n-  template <typename OUT, typename ARG0, typename ARG1>\n-  static constexpr OUT Call(KernelContext*, ARG0 left, ARG1 right) {\n+  template <typename ARG0, typename ARG1>\n+  static constexpr auto Call(KernelContext*, ARG0 left, ARG1 right)\n+      -> decltype(left + right) {\n\nReview comment:\n       Thanks @bkietz for this fix!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T11:38:16.504+0000",
                    "updated": "2020-06-03T11:38:16.504+0000",
                    "started": "2020-06-03T11:38:16.504+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440719",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638151502\n\n\n   https://issues.apache.org/jira/browse/ARROW-9022\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T12:01:38.605+0000",
                    "updated": "2020-06-03T12:01:38.605+0000",
                    "started": "2020-06-03T12:01:38.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440727",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638241193\n\n\n   > we should use `(int8, int8) -> int16`\r\n   \r\n   I'm not sure that's desirable. For one thing this leads to inconsistent handling of 64 bit integer types, which are currently allowed to overflow (NB: that means this kernel includes undefined behavior for int64).\r\n   \r\n   There are a few other approaches we could take (ordered by personal preference):\r\n   \r\n   - define explicit overflow behavior for signed integer operands (for example if we declared that `add(i8(a), i8(b))` will always be equivalent to `i8(i16(a) + i16(b))` then we could instantiate only unsigned addition kernels)\r\n   - raise an error on signed overflow\r\n   - provide `ArithmeticOptions::overflow_behavior` and allow users to choose between these\r\n   - require users to pass arguments which will not overflow\r\n   \r\n   @wesm ?\r\n   \r\n   This is probably nuanced enough to merit a mailing list discussion.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T14:38:00.429+0000",
                    "updated": "2020-06-03T14:38:00.429+0000",
                    "started": "2020-06-03T14:38:00.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440804",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638254725\n\n\n   What kind of overflow strategies would could we have for other functions with higher probability of overflowing like product?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T15:00:50.875+0000",
                    "updated": "2020-06-03T15:00:50.875+0000",
                    "started": "2020-06-03T15:00:50.875+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440818",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs edited a comment on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638254725\n\n\n   > This is probably nuanced enough to merit a mailing list discussion.\r\n   \r\n   Certainly.\r\n   \r\n   What kind of overflow strategies would could we have for other functions with higher probability of overflowing like product?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T15:09:28.136+0000",
                    "updated": "2020-06-03T15:09:28.136+0000",
                    "started": "2020-06-03T15:09:28.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440828",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638284817\n\n\n   Per the mailing list discussion, I think we should apply the strategies used by open source analytic DBMS that we have access to and not think too hard about it:\r\n   \r\n   * Do signed arithmetic as unsigned to prevent UB\r\n   * Do not promote small integers\r\n   * Do not check for overflows\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T15:49:18.535+0000",
                    "updated": "2020-06-03T15:49:18.535+0000",
                    "started": "2020-06-03T15:49:18.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440841",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm edited a comment on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638284817\n\n\n   Per the mailing list discussion, I think we should apply the strategies used by open source analytic DBMS that we have access to and not think too hard about it:\r\n   \r\n   * Do signed arithmetic as unsigned to prevent UB\r\n   * Do not promote small integers (except perhaps in multiplication, what do the DBMSes do?)\r\n   * Do not check for overflows\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T15:50:05.915+0000",
                    "updated": "2020-06-03T15:50:05.915+0000",
                    "started": "2020-06-03T15:50:05.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440843",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638303877\n\n\n   I'll update the PR as discussed, and defer the implicit promotions to a follow-up PR.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T16:19:45.745+0000",
                    "updated": "2020-06-03T16:19:45.745+0000",
                    "started": "2020-06-03T16:19:45.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440858",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638415622\n\n\n   As I said on the ML, I'm -1 on implicit promotion. We may discuss whether overflow should be detected or not. But trying to make the output type \"big enough\" is a can of worms.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T19:33:21.988+0000",
                    "updated": "2020-06-03T19:33:21.988+0000",
                    "started": "2020-06-03T19:33:21.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440940",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/440944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#issuecomment-638418561\n\n\n   Agreed. Implicit casts or type promotions is something that is typically negotiated by the orchestration/planning layer 1 to 2 levels above the kernels. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T19:38:59.612+0000",
                    "updated": "2020-06-03T19:38:59.612+0000",
                    "started": "2020-06-03T19:38:59.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440944",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435292993\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -48,6 +48,26 @@ namespace compute {\n ARROW_EXPORT\n Result<Datum> Add(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n \n+/// \\brief Subtract two values. Array values must be the same length. If a\n+/// value is null in either addend, the result is null\n+///\n+/// \\param[in] left the first value\n+/// \\param[in] right the second value\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the elementwise addition of the values\n+ARROW_EXPORT\n+Result<Datum> Sub(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n\nReview comment:\n       ```suggestion\r\n   /// \\brief Subtract two values. Array values must be the same length. If the\r\n   /// minuend or minuend is null the result will be null.\r\n   ///\r\n   /// \\param[in] minuend the value subtracted from\r\n   /// \\param[in] subtrahend the value by which the minuend is reduced\r\n   /// \\param[in] ctx the function execution context, optional\r\n   /// \\return the elementwise difference of the values\r\n   ARROW_EXPORT\r\n   Result<Datum> Sub(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -48,6 +48,26 @@ namespace compute {\n ARROW_EXPORT\n Result<Datum> Add(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n \n+/// \\brief Subtract two values. Array values must be the same length. If a\n+/// value is null in either addend, the result is null\n+///\n+/// \\param[in] left the first value\n+/// \\param[in] right the second value\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the elementwise addition of the values\n+ARROW_EXPORT\n+Result<Datum> Sub(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Multiply two values. Array values must be the same length. If a\n+/// value is null in either addend, the result is null\n+///\n+/// \\param[in] left the first value\n+/// \\param[in] right the second value\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the elementwise addition of the values\n+ARROW_EXPORT\n+Result<Datum> Mul(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n\nReview comment:\n       ```suggestion\r\n   /// \\brief Multiply two values. Array values must be the same length. If either\r\n   /// factor is null, the result is null\r\n   ///\r\n   /// \\param[in] left the first factor\r\n   /// \\param[in] right the second factor\r\n   /// \\param[in] ctx the function execution context, optional\r\n   /// \\return the elementwise product of the factors\r\n   ARROW_EXPORT\r\n   Result<Datum> Mul(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -16,25 +16,41 @@\n // under the License.\n \n #include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/util/int_util.h\"\n+#include \"iostream\"\n\nReview comment:\n       ```suggestion\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -16,25 +16,41 @@\n // under the License.\n \n #include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/util/int_util.h\"\n+#include \"iostream\"\n \n namespace arrow {\n namespace compute {\n \n struct Add {\n-  template <typename OUT, typename ARG0, typename ARG1>\n-  static constexpr OUT Call(KernelContext*, ARG0 left, ARG1 right) {\n-    return left + right;\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left - right;\n+  }\n+};\n+\n+struct Sub {\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left - right;\n+  }\n+};\n+\n+struct Mul {\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left * right;\n   }\n };\n \n namespace codegen {\n \n template <typename Op>\n-void MakeBinaryFunction(std::string name, FunctionRegistry* registry) {\n+void AddBinaryFunction(std::string name, FunctionRegistry* registry) {\n   auto func = std::make_shared<ScalarFunction>(name, Arity::Binary());\n-  for (const std::shared_ptr<DataType>& ty : NumericTypes()) {\n-    DCHECK_OK(func->AddKernel({InputType::Array(ty), InputType::Array(ty)}, ty,\n-                              NumericEqualTypesBinary<Op>(*ty)));\n+  for (const auto& ty : NumericTypes()) {\n+    auto exec = codegen::NumericEqualTypesBinary<Op>(ty);\n\nReview comment:\n       This invokes undefined behavior in the case of signed types. Please add a kernel wrapper which `View`s the signed types as the corresponding unsigned type.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T14:22:48.744+0000",
                    "updated": "2020-06-04T14:22:48.744+0000",
                    "started": "2020-06-04T14:22:48.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441290",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435305624\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -48,6 +48,26 @@ namespace compute {\n ARROW_EXPORT\n Result<Datum> Add(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n \n+/// \\brief Subtract two values. Array values must be the same length. If a\n\nReview comment:\n       Can you write out the names of these functions, `Subtract` and `Multiply`?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -522,53 +503,56 @@ struct ScalarUnaryNotNull {\n //     // implementation\n //   }\n // };\n-template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op,\n-          typename FlippedOp = Op>\n+template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op>\n struct ScalarBinary {\n   using OUT = typename GetOutputType<OutType>::T;\n   using ARG0 = typename GetViewType<Arg0Type>::T;\n   using ARG1 = typename GetViewType<Arg1Type>::T;\n \n-  template <typename ChosenOp>\n   static void ArrayArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     ArrayIterator<Arg1Type> arg1(*batch[1].array());\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1());\n+        return Op::template Call(ctx, arg0(), arg1());\n     });\n   }\n \n-  template <typename ChosenOp>\n   static void ArrayScalar(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     auto arg1 = UnboxScalar<Arg1Type>::Unbox(batch[1]);\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1);\n+        return Op::template Call(ctx, arg0(), arg1);\n+    });\n+  }\n+\n+  static void ScalarArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n\nReview comment:\n       I'm not thrilled about this because you're generating extra compiled code that wasn't there before\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T14:35:17.321+0000",
                    "updated": "2020-06-04T14:35:17.321+0000",
                    "started": "2020-06-04T14:35:17.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441303",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441336",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435307017\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -522,53 +503,56 @@ struct ScalarUnaryNotNull {\n //     // implementation\n //   }\n // };\n-template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op,\n-          typename FlippedOp = Op>\n+template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op>\n struct ScalarBinary {\n   using OUT = typename GetOutputType<OutType>::T;\n   using ARG0 = typename GetViewType<Arg0Type>::T;\n   using ARG1 = typename GetViewType<Arg1Type>::T;\n \n-  template <typename ChosenOp>\n   static void ArrayArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     ArrayIterator<Arg1Type> arg1(*batch[1].array());\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1());\n+        return Op::template Call(ctx, arg0(), arg1());\n     });\n   }\n \n-  template <typename ChosenOp>\n   static void ArrayScalar(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     auto arg1 = UnboxScalar<Arg1Type>::Unbox(batch[1]);\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1);\n+        return Op::template Call(ctx, arg0(), arg1);\n+    });\n+  }\n+\n+  static void ScalarArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n\nReview comment:\n       --I'm not thrilled about this because you're generating extra compiled code that wasn't there before--\r\n   \r\n   Sorry I think I was mistaken about this. This is fine\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T15:16:54.419+0000",
                    "updated": "2020-06-04T15:16:54.419+0000",
                    "started": "2020-06-04T15:16:54.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441336",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441337",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435307017\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -522,53 +503,56 @@ struct ScalarUnaryNotNull {\n //     // implementation\n //   }\n // };\n-template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op,\n-          typename FlippedOp = Op>\n+template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op>\n struct ScalarBinary {\n   using OUT = typename GetOutputType<OutType>::T;\n   using ARG0 = typename GetViewType<Arg0Type>::T;\n   using ARG1 = typename GetViewType<Arg1Type>::T;\n \n-  template <typename ChosenOp>\n   static void ArrayArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     ArrayIterator<Arg1Type> arg1(*batch[1].array());\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1());\n+        return Op::template Call(ctx, arg0(), arg1());\n     });\n   }\n \n-  template <typename ChosenOp>\n   static void ArrayScalar(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n     ArrayIterator<Arg0Type> arg0(*batch[0].array());\n     auto arg1 = UnboxScalar<Arg1Type>::Unbox(batch[1]);\n     OutputAdapter<OutType>::Write(ctx, out, [&]() -> OUT {\n-        return ChosenOp::template Call(ctx, arg0(), arg1);\n+        return Op::template Call(ctx, arg0(), arg1);\n+    });\n+  }\n+\n+  static void ScalarArray(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n\nReview comment:\n       ~~I'm not thrilled about this because you're generating extra compiled code that wasn't there before~~\r\n   \r\n   Sorry I think I was mistaken about this. This is fine\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T15:17:17.753+0000",
                    "updated": "2020-06-04T15:17:17.753+0000",
                    "started": "2020-06-04T15:17:17.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441337",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435454559\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -48,6 +48,26 @@ namespace compute {\n ARROW_EXPORT\n Result<Datum> Add(const Datum& left, const Datum& right, ExecContext* ctx = NULLPTR);\n \n+/// \\brief Subtract two values. Array values must be the same length. If a\n\nReview comment:\n       Sure. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T18:15:38.986+0000",
                    "updated": "2020-06-04T18:15:38.986+0000",
                    "started": "2020-06-04T18:15:38.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441462",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435454679\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -16,25 +16,41 @@\n // under the License.\n \n #include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/util/int_util.h\"\n+#include \"iostream\"\n \n namespace arrow {\n namespace compute {\n \n struct Add {\n-  template <typename OUT, typename ARG0, typename ARG1>\n-  static constexpr OUT Call(KernelContext*, ARG0 left, ARG1 right) {\n-    return left + right;\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left - right;\n+  }\n+};\n+\n+struct Sub {\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left - right;\n+  }\n+};\n+\n+struct Mul {\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left * right;\n   }\n };\n \n namespace codegen {\n \n template <typename Op>\n-void MakeBinaryFunction(std::string name, FunctionRegistry* registry) {\n+void AddBinaryFunction(std::string name, FunctionRegistry* registry) {\n   auto func = std::make_shared<ScalarFunction>(name, Arity::Binary());\n-  for (const std::shared_ptr<DataType>& ty : NumericTypes()) {\n-    DCHECK_OK(func->AddKernel({InputType::Array(ty), InputType::Array(ty)}, ty,\n-                              NumericEqualTypesBinary<Op>(*ty)));\n+  for (const auto& ty : NumericTypes()) {\n+    auto exec = codegen::NumericEqualTypesBinary<Op>(ty);\n\nReview comment:\n       Working on it, probably will need your help.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T18:15:55.092+0000",
                    "updated": "2020-06-04T18:15:55.092+0000",
                    "started": "2020-06-04T18:15:55.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441464",
                    "issueId": "13309169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/worklog/441470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7341:\nURL: https://github.com/apache/arrow/pull/7341#discussion_r435471744\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -16,25 +16,41 @@\n // under the License.\n \n #include \"arrow/compute/kernels/common.h\"\n+#include \"arrow/util/int_util.h\"\n+#include \"iostream\"\n \n namespace arrow {\n namespace compute {\n \n struct Add {\n-  template <typename OUT, typename ARG0, typename ARG1>\n-  static constexpr OUT Call(KernelContext*, ARG0 left, ARG1 right) {\n-    return left + right;\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left - right;\n+  }\n+};\n+\n+struct Sub {\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left - right;\n+  }\n+};\n+\n+struct Mul {\n+  template <typename T>\n+  static constexpr T Call(KernelContext*, T left, T right) {\n+    return left * right;\n   }\n };\n \n namespace codegen {\n \n template <typename Op>\n-void MakeBinaryFunction(std::string name, FunctionRegistry* registry) {\n+void AddBinaryFunction(std::string name, FunctionRegistry* registry) {\n   auto func = std::make_shared<ScalarFunction>(name, Arity::Binary());\n-  for (const std::shared_ptr<DataType>& ty : NumericTypes()) {\n-    DCHECK_OK(func->AddKernel({InputType::Array(ty), InputType::Array(ty)}, ty,\n-                              NumericEqualTypesBinary<Op>(*ty)));\n+  for (const auto& ty : NumericTypes()) {\n+    auto exec = codegen::NumericEqualTypesBinary<Op>(ty);\n\nReview comment:\n       So changing the kernel's exec function's input types to unsigned counterparts and leaving the output eliminates the signed overflow (at least ubsan doesn't complain anymore).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T18:39:36.965+0000",
                    "updated": "2020-06-04T18:39:36.965+0000",
                    "started": "2020-06-04T18:39:36.964+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441470",
                    "issueId": "13309169"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4638b081[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cff3a99[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2373589a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@661d859f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63e07160[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@21abec2e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18a5c709[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@121e88ff[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@729580ad[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@ca1d84d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a0adb5f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5c35e591[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 18 23:01:47 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-18T23:01:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9022/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-06-03T11:32:48.000+0000",
        "updated": "2020-07-09T17:17:04.000+0000",
        "timeoriginalestimate": null,
        "description": "-Currently the output type of the Add function is identical with the argument types which makes it unsafe to add numeric limit values, so instead of using {{(int8, int8) -> int8}} signature we should use {{((int8, int8) -> int16}}.-\r\n\r\nThe current kernels do wrap around for performance reasons, so implement different kernels with overflow checking and add arithmetics options to let the caller choose which variant to run",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add/Sub/Mul arithmetic kernels with overflow check",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/comment/17124909",
                    "id": "17124909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "For reference (not that this is necessarily an argument), numpy preserves the data types in addition (so int8 + int8 -> int8)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-06-03T12:20:00.790+0000",
                    "updated": "2020-06-03T12:20:00.790+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/comment/17124992",
                    "id": "17124992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "It's not trivial which behaviour to choose. We may introduce options for the arithmetic kernels to select the right one. \r\n\r\nAs a reference clickhouse follows the upcasting semantics, seems like Impala and DuckDB use the same types.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-06-03T14:17:40.367+0000",
                    "updated": "2020-06-03T14:36:37.027+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/comment/17125012",
                    "id": "17125012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Replicating https://github.com/apache/arrow/pull/7341#issuecomment-638241193 here:\r\n\r\nI'm not sure this approach is desirable. For one thing this leads to inconsistent handling of 64 bit integer types, which are currently allowed to overflow (NB: that means we would incur undefined behavior for int64).\r\n\r\nThere are a few other approaches we could take (ordered by personal preference):\r\n\r\n-   define explicit overflow behavior for signed integer operands (for example if we declared that add(i8(a), i8(b)) will always be equivalent to i8(i16(a) + i16(b)) then we could instantiate only unsigned addition kernels)\r\n-   raise an error on signed overflow\r\n-   provide ArithmeticOptions::overflow_behavior and allow users to choose between these\r\n-   require users to pass arguments which will not overflow\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-06-03T14:42:06.553+0000",
                    "updated": "2020-06-03T14:42:06.553+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/comment/17125193",
                    "id": "17125193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jacek.pliszka",
                        "name": "jacek.pliszka",
                        "key": "jacek.pliszka",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacek Pliszka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I believe we should keep it identical. User can always promote/cast explicitly.\r\n\r\n\u00a0\r\n\r\nI am for Antoine's approach from mail thread - user selectable option - either error on overflow or ignore it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jacek.pliszka",
                        "name": "jacek.pliszka",
                        "key": "jacek.pliszka",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacek Pliszka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-06-03T18:08:12.423+0000",
                    "updated": "2020-06-03T18:08:12.423+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309169/comment/17140050",
                    "id": "17140050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7420\n[https://github.com/apache/arrow/pull/7420]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-06-18T23:01:47.710+0000",
                    "updated": "2020-06-18T23:01:47.710+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0fgmw:",
        "customfield_12314139": null
    }
}