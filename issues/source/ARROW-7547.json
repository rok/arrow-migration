{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13278688",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688",
    "key": "ARROW-7547",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7547/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 68,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/374723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235\n \n \n   Add parquet reader and arrow reader options to file format\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-20T21:25:18.926+0000",
                    "updated": "2020-01-20T21:25:18.926+0000",
                    "started": "2020-01-20T21:25:18.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374723",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/374724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#issuecomment-576436150\n \n \n   https://issues.apache.org/jira/browse/ARROW-7547\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-20T21:31:36.126+0000",
                    "updated": "2020-01-20T21:31:36.126+0000",
                    "started": "2020-01-20T21:31:36.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374724",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/374726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r368737681\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_parquet.h\n ##########\n @@ -46,6 +47,23 @@ class ARROW_DS_EXPORT ParquetWriteOptions : public FileWriteOptions {\n /// \\brief A FileFormat implementation that reads from Parquet files\n class ARROW_DS_EXPORT ParquetFileFormat : public FileFormat {\n  public:\n+  /// \\defgroup parquet-file-format-reader-properties properties which correspond to\n+  /// members of parquet::ReaderProperties.\n+  ///\n+  /// @{\n+  bool use_buffered_stream = parquet::DEFAULT_USE_BUFFERED_STREAM;\n+  int64_t buffer_size = parquet::DEFAULT_BUFFER_SIZE;\n+  std::shared_ptr<parquet::FileDecryptionProperties> file_decryption_properties;\n+  /// @}\n+\n+  /// \\defgroup parquet-file-format-arrow-reader-properties properties which correspond to\n+  /// members of parquet::ArrowReaderProperties.\n+  ///\n+  /// @{\n+  std::unordered_set<int> read_dict_indices;\n \n Review comment:\n   This should probably be a set of field names rather than field indices; otherwise we are essentially requiring that the schema be known as the format is being created\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-20T21:54:07.889+0000",
                    "updated": "2020-01-20T21:54:07.889+0000",
                    "started": "2020-01-20T21:54:07.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374726",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/374727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r368737837\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_parquet_test.cc\n ##########\n @@ -184,18 +185,43 @@ TEST_F(TestParquetFileFormat, ScanRecordBatchReader) {\n   ASSERT_EQ(row_count, kNumRows);\n }\n \n-TEST_F(TestParquetFileFormat, OpenFailureWithRelevantError) {\n-  auto format = ParquetFileFormat();\n+TEST_F(TestParquetFileFormat, ScanRecordBatchReaderDictEncoded) {\n \n Review comment:\n   Test batch_size as well\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-20T21:54:46.470+0000",
                    "updated": "2020-01-20T21:54:46.470+0000",
                    "started": "2020-01-20T21:54:46.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374727",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/375002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#issuecomment-576714600\n \n \n   @fsaintjacques I implemented that (taking `/.*Properties/` explicitly) initially, but: replicating those fields seemed more robust than documenting what fields would be ignored. For example: `ReaderProperties::memory pool` (which will be ignored in favor of `ScanContext::pool`) and `ArrowReaderProperties::use threads` (which is redundant since the scanner will already parallelize across threads.\r\n   \r\n   Furthermore as noted above: it seems to me that ParquetFormat should expose a set of field names (rather than indices) to be read as dictionaries which conflicts directly with `ArrowReaderProperties::read dictionary indices`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-21T14:47:14.873+0000",
                    "updated": "2020-01-21T14:47:14.873+0000",
                    "started": "2020-01-21T14:47:14.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "375002",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/385864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r378220539\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -76,8 +76,54 @@ cdef class FileFormat:\n \n cdef class ParquetFileFormat(FileFormat):\n \n+    cdef:\n+        CParquetFileFormat* parquet_format\n+\n     def __init__(self):\n-        self.init(shared_ptr[CFileFormat](new CParquetFileFormat()))\n+        self.init(<shared_ptr[CFileFormat]> CParquetFileFormat.Make())\n+        self.parquet_format = <CParquetFileFormat*> self.wrapped.get()\n+\n+    @property\n+    def use_buffered_stream(self):\n+        \"\"\"Read files through buffered input streams rather than\n+        loading entire chunks at a time.\"\"\"\n+        return self.parquet_format.use_buffered_stream\n+\n+    @use_buffered_stream.setter\n+    def use_buffered_stream(self, bint value):\n+        self.parquet_format.use_buffered_stream = value\n+\n+    @property\n+    def buffer_size(self):\n+        \"\"\"Size of buffered stream, if enabled.\"\"\"\n+        return self.parquet_format.buffer_size\n+\n+    @buffer_size.setter\n+    def buffer_size(self, int value):\n+        self.parquet_format.buffer_size = value\n+\n+    @property\n+    def read_dict_indices(self):\n+        \"\"\"Indices of columns which should be read as dictionaries.\"\"\"\n+        return self.parquet_format.read_dict_indices\n+\n+    @read_dict_indices.setter\n+    def read_dict_indices(self, set values):\n+        self.parquet_format.read_dict_indices.clear()\n+        for value in values:\n+            self.read_dict_index(int(value))\n+\n+    def read_dict_index(self, int value):\n \n Review comment:\n   This method maybe doesn't need to be public?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T12:37:43.441+0000",
                    "updated": "2020-02-12T12:37:43.441+0000",
                    "started": "2020-02-12T12:37:43.441+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385864",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/385865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r378216458\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -76,8 +76,54 @@ cdef class FileFormat:\n \n cdef class ParquetFileFormat(FileFormat):\n \n+    cdef:\n+        CParquetFileFormat* parquet_format\n+\n     def __init__(self):\n-        self.init(shared_ptr[CFileFormat](new CParquetFileFormat()))\n+        self.init(<shared_ptr[CFileFormat]> CParquetFileFormat.Make())\n+        self.parquet_format = <CParquetFileFormat*> self.wrapped.get()\n+\n+    @property\n+    def use_buffered_stream(self):\n+        \"\"\"Read files through buffered input streams rather than\n+        loading entire chunks at a time.\"\"\"\n+        return self.parquet_format.use_buffered_stream\n+\n+    @use_buffered_stream.setter\n+    def use_buffered_stream(self, bint value):\n+        self.parquet_format.use_buffered_stream = value\n+\n+    @property\n+    def buffer_size(self):\n+        \"\"\"Size of buffered stream, if enabled.\"\"\"\n+        return self.parquet_format.buffer_size\n+\n+    @buffer_size.setter\n+    def buffer_size(self, int value):\n+        self.parquet_format.buffer_size = value\n+\n+    @property\n+    def read_dict_indices(self):\n+        \"\"\"Indices of columns which should be read as dictionaries.\"\"\"\n+        return self.parquet_format.read_dict_indices\n+\n+    @read_dict_indices.setter\n+    def read_dict_indices(self, set values):\n \n Review comment:\n   From a python interface point of view, requiring a `set` here feels a bit strange (more natural would be a list I think, although that of course doesn't guard against duplicates)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T12:37:43.605+0000",
                    "updated": "2020-02-12T12:37:43.605+0000",
                    "started": "2020-02-12T12:37:43.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385865",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/385866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r378225188\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -76,8 +76,54 @@ cdef class FileFormat:\n \n cdef class ParquetFileFormat(FileFormat):\n \n+    cdef:\n+        CParquetFileFormat* parquet_format\n+\n     def __init__(self):\n \n Review comment:\n   It might also be nice that the user can pass the different options as keywords to the constructor as well (similarly to how the csv options work)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T12:39:15.459+0000",
                    "updated": "2020-02-12T12:39:15.459+0000",
                    "started": "2020-02-12T12:39:15.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385866",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/388491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r380240130\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -76,8 +76,54 @@ cdef class FileFormat:\n \n cdef class ParquetFileFormat(FileFormat):\n \n+    cdef:\n+        CParquetFileFormat* parquet_format\n+\n     def __init__(self):\n-        self.init(shared_ptr[CFileFormat](new CParquetFileFormat()))\n+        self.init(<shared_ptr[CFileFormat]> CParquetFileFormat.Make())\n+        self.parquet_format = <CParquetFileFormat*> self.wrapped.get()\n+\n+    @property\n+    def use_buffered_stream(self):\n+        \"\"\"Read files through buffered input streams rather than\n+        loading entire chunks at a time.\"\"\"\n+        return self.parquet_format.use_buffered_stream\n+\n+    @use_buffered_stream.setter\n+    def use_buffered_stream(self, bint value):\n+        self.parquet_format.use_buffered_stream = value\n+\n+    @property\n+    def buffer_size(self):\n+        \"\"\"Size of buffered stream, if enabled.\"\"\"\n+        return self.parquet_format.buffer_size\n+\n+    @buffer_size.setter\n+    def buffer_size(self, int value):\n+        self.parquet_format.buffer_size = value\n+\n+    @property\n+    def read_dict_indices(self):\n+        \"\"\"Indices of columns which should be read as dictionaries.\"\"\"\n+        return self.parquet_format.read_dict_indices\n+\n+    @read_dict_indices.setter\n+    def read_dict_indices(self, set values):\n \n Review comment:\n   I'll remove this; I can just construct the set while iterating\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-17T15:19:01.260+0000",
                    "updated": "2020-02-17T15:19:01.260+0000",
                    "started": "2020-02-17T15:19:01.259+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "388491",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/388492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r380240717\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -76,8 +76,54 @@ cdef class FileFormat:\n \n cdef class ParquetFileFormat(FileFormat):\n \n+    cdef:\n+        CParquetFileFormat* parquet_format\n+\n     def __init__(self):\n-        self.init(shared_ptr[CFileFormat](new CParquetFileFormat()))\n+        self.init(<shared_ptr[CFileFormat]> CParquetFileFormat.Make())\n+        self.parquet_format = <CParquetFileFormat*> self.wrapped.get()\n+\n+    @property\n+    def use_buffered_stream(self):\n+        \"\"\"Read files through buffered input streams rather than\n+        loading entire chunks at a time.\"\"\"\n+        return self.parquet_format.use_buffered_stream\n+\n+    @use_buffered_stream.setter\n+    def use_buffered_stream(self, bint value):\n+        self.parquet_format.use_buffered_stream = value\n+\n+    @property\n+    def buffer_size(self):\n+        \"\"\"Size of buffered stream, if enabled.\"\"\"\n+        return self.parquet_format.buffer_size\n+\n+    @buffer_size.setter\n+    def buffer_size(self, int value):\n+        self.parquet_format.buffer_size = value\n+\n+    @property\n+    def read_dict_indices(self):\n+        \"\"\"Indices of columns which should be read as dictionaries.\"\"\"\n+        return self.parquet_format.read_dict_indices\n+\n+    @read_dict_indices.setter\n+    def read_dict_indices(self, set values):\n+        self.parquet_format.read_dict_indices.clear()\n+        for value in values:\n+            self.read_dict_index(int(value))\n+\n+    def read_dict_index(self, int value):\n \n Review comment:\n   I thought that users might want to incrementally specify columns, in which case setting all of dict indices at once would be annoying. I can definitely remove it if you don't think it's necessary\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-17T15:20:12.425+0000",
                    "updated": "2020-02-17T15:20:12.425+0000",
                    "started": "2020-02-17T15:20:12.425+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "388492",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/388493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r380240898\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -76,8 +76,54 @@ cdef class FileFormat:\n \n cdef class ParquetFileFormat(FileFormat):\n \n+    cdef:\n+        CParquetFileFormat* parquet_format\n+\n     def __init__(self):\n \n Review comment:\n   Will do\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-17T15:20:31.391+0000",
                    "updated": "2020-02-17T15:20:31.391+0000",
                    "started": "2020-02-17T15:20:31.391+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "388493",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/388877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#issuecomment-587540512\n \n \n   @jorisvandenbossche I have namespaced reader specific options within `ParquetFileFormat` so they won't conflict with writer options. I've also switched to using names to designate dictionary columns. `batch_size` is a general consideration of scans, so I've promoted to a scan option (@fsaintjacques  testing that necessitated resolving https://issues.apache.org/jira/browse/ARROW-7338 )\r\n   \r\n   PTAL\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T16:12:01.025+0000",
                    "updated": "2020-02-18T16:12:01.025+0000",
                    "started": "2020-02-18T16:12:01.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "388877",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381001048\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -360,6 +362,8 @@ IpcFileFormat <- R6Class(\"IpcFileFormat\", inherit = FileFormat)\n #' - `$UseThreads(threads)`: logical: should the scan use multithreading?\n #' The method's default input is `TRUE`, but you must call the method to enable\n #' multithreading because the scanner default is `FALSE`.\n+#' - `$BatchSize(batch_size)`: integer: Maximum row count of scanned record\n+#' batches. Default is 64*2**10 rows.\n \n Review comment:\n   Can you make this a human-readable number?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T23:57:28.599+0000",
                    "updated": "2020-02-18T23:57:28.599+0000",
                    "started": "2020-02-18T23:57:28.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389192",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381002756\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -321,12 +325,10 @@ FileSystemSourceFactory$create <- function(filesystem,\n #' @export\n FileFormat <- R6Class(\"FileFormat\", inherit = Object)\n FileFormat$create <- function(format, ...) {\n \n Review comment:\n   I would do this a little differently: \r\n   \r\n   ```suggestion\r\n   FileFormat$create <- function(format, ..., options = list(...)) {\r\n   ```\r\n   \r\n   and pass `options` in L329 below. Then you can remove the `reader_options` hack in dataset.cpp. This also should be documented.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T23:57:28.602+0000",
                    "updated": "2020-02-18T23:57:28.602+0000",
                    "started": "2020-02-18T23:57:28.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389194",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381000485\n \n \n\n ##########\n File path: r/src/dataset.cpp\n ##########\n @@ -58,12 +61,28 @@ std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make3(\n }\n \n // [[arrow::export]]\n-std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make() {\n-  return std::make_shared<ds::ParquetFileFormat>();\n+std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make(List_ options) {\n+  auto fmt = ds::ParquetFileFormat::Make();\n+  if (options.containsElementNamed(\"reader_options\")) {\n+    List_ reader_options = options[\"reader_options\"];\n+    if (reader_options.containsElementNamed(\"use_buffered_stream\")) {\n+      fmt->reader_options.use_buffered_stream = reader_options[\"use_buffered_stream\"];\n+    }\n+    if (reader_options.containsElementNamed(\"buffer_size\")) {\n+      fmt->reader_options.buffer_size = reader_options[\"buffer_size\"];\n+    }\n+    if (reader_options.containsElementNamed(\"dict_columns\")) {\n+      List_ dict_columns = reader_options[\"dict_columns\"];\n+      for (String name : dict_columns) {\n+        fmt->reader_options.dict_columns.insert(name);\n+      }\n+    }\n+  }\n+  return fmt;\n }\n \n // [[arrow::export]]\n-std::shared_ptr<ds::IpcFileFormat> dataset___IpcFileFormat__Make() {\n+std::shared_ptr<ds::IpcFileFormat> dataset___IpcFileFormat__Make(List_ options) {\n \n Review comment:\n   There's probably no reason to pass the options in yet if we aren't doing anything with them\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T23:57:28.602+0000",
                    "updated": "2020-02-18T23:57:28.602+0000",
                    "started": "2020-02-18T23:57:28.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389193",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381000962\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -360,6 +362,8 @@ IpcFileFormat <- R6Class(\"IpcFileFormat\", inherit = FileFormat)\n #' - `$UseThreads(threads)`: logical: should the scan use multithreading?\n #' The method's default input is `TRUE`, but you must call the method to enable\n #' multithreading because the scanner default is `FALSE`.\n+#' - `$BatchSize(batch_size)`: integer: Maximum row count of scanned record\n \n Review comment:\n   Probably should make clear that this _sets_ the batch size. Also would be nice to know why you might want to do this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T23:57:28.606+0000",
                    "updated": "2020-02-18T23:57:28.606+0000",
                    "started": "2020-02-18T23:57:28.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389195",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381001869\n \n \n\n ##########\n File path: r/tests/testthat/test-dataset.R\n ##########\n @@ -97,6 +97,37 @@ test_that(\"Simple interface for datasets\", {\n   )\n })\n \n+test_that(\"Simple interface for datasets (custom ParquetFileFormat)\", {\n \n Review comment:\n   Out of curiosity, what does this test? How does it verify that we're obeying the reader options (and not just ignoring them)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T23:57:28.610+0000",
                    "updated": "2020-02-18T23:57:28.610+0000",
                    "started": "2020-02-18T23:57:28.609+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389196",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381005089\n \n \n\n ##########\n File path: r/src/dataset.cpp\n ##########\n @@ -58,12 +61,28 @@ std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make3(\n }\n \n // [[arrow::export]]\n-std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make() {\n-  return std::make_shared<ds::ParquetFileFormat>();\n+std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make(List_ options) {\n+  auto fmt = ds::ParquetFileFormat::Make();\n+  if (options.containsElementNamed(\"reader_options\")) {\n+    List_ reader_options = options[\"reader_options\"];\n+    if (reader_options.containsElementNamed(\"use_buffered_stream\")) {\n \n Review comment:\n   For better or worse, this is a slightly different pattern than the e.g. csv read options (see r/src/csv.cpp). `containsElementNamed` seems fine to use here, but I fear that the lack of type checking will expose us to segfault. It also silently ignores any unsupported (including misspelled) options, which isn't the worst behavior but might cause some surprises. \r\n   \r\n   I wonder if it would be wise to write a validating function in R to ensure that inputs are the right type. Also would help with the documentation. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-18T23:57:28.721+0000",
                    "updated": "2020-02-18T23:57:28.721+0000",
                    "started": "2020-02-18T23:57:28.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389197",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381351783\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -360,6 +362,8 @@ IpcFileFormat <- R6Class(\"IpcFileFormat\", inherit = FileFormat)\n #' - `$UseThreads(threads)`: logical: should the scan use multithreading?\n #' The method's default input is `TRUE`, but you must call the method to enable\n #' multithreading because the scanner default is `FALSE`.\n+#' - `$BatchSize(batch_size)`: integer: Maximum row count of scanned record\n \n Review comment:\n   I'll add to the comment\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-19T15:10:18.300+0000",
                    "updated": "2020-02-19T15:10:18.300+0000",
                    "started": "2020-02-19T15:10:18.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389468",
                    "issueId": "13278688"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/worklog/389469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6235: ARROW-7547: [C++][Dataset][Python] Add ParquetFileFormat options\nURL: https://github.com/apache/arrow/pull/6235#discussion_r381352952\n \n \n\n ##########\n File path: r/src/dataset.cpp\n ##########\n @@ -58,12 +61,28 @@ std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make3(\n }\n \n // [[arrow::export]]\n-std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make() {\n-  return std::make_shared<ds::ParquetFileFormat>();\n+std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make(List_ options) {\n+  auto fmt = ds::ParquetFileFormat::Make();\n+  if (options.containsElementNamed(\"reader_options\")) {\n+    List_ reader_options = options[\"reader_options\"];\n+    if (reader_options.containsElementNamed(\"use_buffered_stream\")) {\n+      fmt->reader_options.use_buffered_stream = reader_options[\"use_buffered_stream\"];\n+    }\n+    if (reader_options.containsElementNamed(\"buffer_size\")) {\n+      fmt->reader_options.buffer_size = reader_options[\"buffer_size\"];\n+    }\n+    if (reader_options.containsElementNamed(\"dict_columns\")) {\n+      List_ dict_columns = reader_options[\"dict_columns\"];\n+      for (String name : dict_columns) {\n+        fmt->reader_options.dict_columns.insert(name);\n+      }\n+    }\n+  }\n+  return fmt;\n }\n \n // [[arrow::export]]\n-std::shared_ptr<ds::IpcFileFormat> dataset___IpcFileFormat__Make() {\n+std::shared_ptr<ds::IpcFileFormat> dataset___IpcFileFormat__Make(List_ options) {\n \n Review comment:\n   Alright\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-19T15:12:30.983+0000",
                    "updated": "2020-02-19T15:12:30.983+0000",
                    "started": "2020-02-19T15:12:30.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389469",
                    "issueId": "13278688"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 33000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b8f1bd7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73c6881b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e4b69ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@490aae2c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@226fc4e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@73745a00[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26a75bd9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3ac0eaef[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@665451a5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@37a1b335[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bc44f8b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@166e5f8e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33000,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Feb 23 13:13:41 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-23T13:13:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7547/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-01-10T10:43:10.000+0000",
        "updated": "2020-04-10T15:32:07.000+0000",
        "timeoriginalestimate": null,
        "description": "[looking into using the datasets machinery in the current python parquet code]\r\n\r\nIn the current python API, we expose several options that influence reading the parquet file (eg {{read_dictionary}} to indicate to read certain BYTE_ARRAY columns directly into a dictionary type, or {{memory_map}}, {{buffer_size}}).\r\n\r\nThose could be added to {{ParquetFileFormat}}.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] [Python] [Dataset] Additional reader options in ParquetFileFormat",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278688/comment/17042926",
                    "id": "17042926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6235\n[https://github.com/apache/arrow/pull/6235]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-02-23T13:13:41.326+0000",
                    "updated": "2020-02-23T13:13:41.326+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0adqo:",
        "customfield_12314139": null
    }
}