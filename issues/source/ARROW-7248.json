{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13270303",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303",
    "key": "ARROW-7248",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mgrund",
            "name": "mgrund",
            "key": "mgrund",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Martin Grund",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mgrund",
            "name": "mgrund",
            "key": "mgrund",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Martin Grund",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7248/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "grundprinzip commented on pull request #5888: [ARROW-7248] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888\n \n \n   This patch provides a small script that generates the code for the\r\n   Flatbuffer IPC messages automatically and performs the required\r\n   source code adjustments without manual labor.\r\n   \r\n   For this first patch, it squashes the most recent changes to the Flatbuffer definitions and the generation script.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T12:23:18.647+0000",
                    "updated": "2019-11-24T12:23:18.647+0000",
                    "started": "2019-11-24T12:23:18.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348698",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5888: [ARROW-7248] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#issuecomment-557884078\n \n \n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T12:31:26.325+0000",
                    "updated": "2019-11-24T12:31:26.325+0000",
                    "started": "2019-11-24T12:31:26.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348700",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#issuecomment-557885109\n \n \n   https://issues.apache.org/jira/browse/ARROW-7248\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T12:46:26.040+0000",
                    "updated": "2019-11-24T12:46:26.040+0000",
                    "started": "2019-11-24T12:46:26.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348704",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#discussion_r349928381\n \n \n\n ##########\n File path: rust/arrow/regen.sh\n ##########\n @@ -0,0 +1,112 @@\n+#!/bin/bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# Change to the toplevel Rust directory\n+pushd $DIR/../../\n+\n+# Execute the code generation:\n+flatc --rust -o rust/arrow/src/ipc/gen/ format/*.fbs\n+\n+# Now the files are wrongly named so we have to change that\n+popd\n+pushd $DIR/src/ipc/gen\n+for f in `ls *_generated.rs`; do\n+    adj_length=$((${#f}-13))\n+    mv $f \"${f:0:$adj_length}.rs\"\n+done\n+\n+PREFIX=$(cat <<'HEREDOC'\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n+\n+use std::{cmp::Ordering, mem};\n+use flatbuffers::EndianScalar;\n+\n+HEREDOC\n+)\n+\n+SCHEMA_IMPORT=\"\\nuse crate::ipc::gen::Schema::*;\"\n+SPARSE_TENSOR_IMPORT=\"\\nuse crate::ipc::gen::SparseTensor::*;\"\n+TENSOR_IMPORT=\"\\nuse crate::ipc::gen::Tensor::*;\"\n+\n+\n+# Remove all generated lines we don't need\n+for f in `ls *.rs`; do\n+\n+    if [[ $f == \"mod.rs\" ]]; then\n+        continue\n+    fi\n+\n+    echo \"Modifying: $f\"\n+    sed -i '' '/extern crate flatbuffers;/d' $f\n+    sed -i '' '/use self::flatbuffers::EndianScalar;/d' $f\n+    sed -i '' '/\\#\\[allow(unused_imports, dead_code)\\]/d' $f\n+    sed -i '' '/pub mod org {/d' $f\n+    sed -i '' '/pub mod apache {/d' $f\n+    sed -i '' '/pub mod arrow {/d' $f\n+    sed -i '' '/pub mod flatbuf {/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod flatbuf/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod arrow/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod apache/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod org/d' $f\n+    sed -i '' '/use std::mem;/d' $f\n+    sed -i '' '/use std::cmp::Ordering;/d' $f\n+\n+    # Replace all occurrences of type__ with type_\n+    sed -i '' 's/type__/type_/g' $f\n+\n+    # Some files need prefixes\n+    if [[ $f == \"File.rs\" ]]; then \n+        # Now prefix the file with the static contents\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Message.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${SPARSE_TENSOR_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"SparseTensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Tensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    else\n+        echo \"${PREFIX}\" | cat - $f > temp && mv temp $f\n+    fi\n+done\n+\n+\n+\n+for f in `ls *.rs`; do\n+    echo \"Formatting: $f\"\n+    rustfmt $f\n \n Review comment:\n   I'm wondering if `cargo +stable fmt` would be better here. Looking at your commited files, it appears that they haven't been formatted 'correctly'. I'd have expected the only changes to be the style of the imports, with everything else being the same (except for the autogenerated warning comment).\r\n   \r\n   I'm on Windows without WSL, so I can't run the bash script myself to confirm.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T14:56:12.273+0000",
                    "updated": "2019-11-24T14:56:12.273+0000",
                    "started": "2019-11-24T14:56:12.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348731",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#discussion_r349931457\n \n \n\n ##########\n File path: rust/arrow/regen.sh\n ##########\n @@ -0,0 +1,112 @@\n+#!/bin/bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# Change to the toplevel Rust directory\n+pushd $DIR/../../\n+\n+# Execute the code generation:\n+flatc --rust -o rust/arrow/src/ipc/gen/ format/*.fbs\n+\n+# Now the files are wrongly named so we have to change that\n+popd\n+pushd $DIR/src/ipc/gen\n+for f in `ls *_generated.rs`; do\n+    adj_length=$((${#f}-13))\n+    mv $f \"${f:0:$adj_length}.rs\"\n+done\n+\n+PREFIX=$(cat <<'HEREDOC'\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n+\n+use std::{cmp::Ordering, mem};\n+use flatbuffers::EndianScalar;\n+\n+HEREDOC\n+)\n+\n+SCHEMA_IMPORT=\"\\nuse crate::ipc::gen::Schema::*;\"\n+SPARSE_TENSOR_IMPORT=\"\\nuse crate::ipc::gen::SparseTensor::*;\"\n+TENSOR_IMPORT=\"\\nuse crate::ipc::gen::Tensor::*;\"\n+\n+\n+# Remove all generated lines we don't need\n+for f in `ls *.rs`; do\n+\n+    if [[ $f == \"mod.rs\" ]]; then\n+        continue\n+    fi\n+\n+    echo \"Modifying: $f\"\n+    sed -i '' '/extern crate flatbuffers;/d' $f\n+    sed -i '' '/use self::flatbuffers::EndianScalar;/d' $f\n+    sed -i '' '/\\#\\[allow(unused_imports, dead_code)\\]/d' $f\n+    sed -i '' '/pub mod org {/d' $f\n+    sed -i '' '/pub mod apache {/d' $f\n+    sed -i '' '/pub mod arrow {/d' $f\n+    sed -i '' '/pub mod flatbuf {/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod flatbuf/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod arrow/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod apache/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod org/d' $f\n+    sed -i '' '/use std::mem;/d' $f\n+    sed -i '' '/use std::cmp::Ordering;/d' $f\n+\n+    # Replace all occurrences of type__ with type_\n+    sed -i '' 's/type__/type_/g' $f\n+\n+    # Some files need prefixes\n+    if [[ $f == \"File.rs\" ]]; then \n+        # Now prefix the file with the static contents\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Message.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${SPARSE_TENSOR_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"SparseTensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Tensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    else\n+        echo \"${PREFIX}\" | cat - $f > temp && mv temp $f\n+    fi\n+done\n+\n+\n+\n+for f in `ls *.rs`; do\n+    echo \"Formatting: $f\"\n+    rustfmt $f\n \n Review comment:\n   This is slightly tricky. In CI we run `cargo +stable fmt --all -- --check` to confirm that the source code in the PR is formatted correctly, so running `cargo +stable fmt` would defeat the point of that because it would format all the code in the crate (not just these generated files) and then the check would pass.\r\n   \r\n   It would be nice if we could just have rustfmt ignore these generated files. I had attempted to do that through the `rustfmt.toml` in the repo that attempts to ignore these files but we see the warning:\r\n   Warning: can't set `ignore = IgnoreList { path_set: {\"arrow/src/ipc/gen\"}, rustfmt_toml_path: \"\" }`, unstable features are only available in nightly channel.\r\n   ```\r\n   This confuses me slightly because we _are_ using the nightly channel.\r\n   \r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T15:51:45.768+0000",
                    "updated": "2019-11-24T15:51:45.768+0000",
                    "started": "2019-11-24T15:51:45.767+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348742",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#discussion_r349931457\n \n \n\n ##########\n File path: rust/arrow/regen.sh\n ##########\n @@ -0,0 +1,112 @@\n+#!/bin/bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# Change to the toplevel Rust directory\n+pushd $DIR/../../\n+\n+# Execute the code generation:\n+flatc --rust -o rust/arrow/src/ipc/gen/ format/*.fbs\n+\n+# Now the files are wrongly named so we have to change that\n+popd\n+pushd $DIR/src/ipc/gen\n+for f in `ls *_generated.rs`; do\n+    adj_length=$((${#f}-13))\n+    mv $f \"${f:0:$adj_length}.rs\"\n+done\n+\n+PREFIX=$(cat <<'HEREDOC'\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n+\n+use std::{cmp::Ordering, mem};\n+use flatbuffers::EndianScalar;\n+\n+HEREDOC\n+)\n+\n+SCHEMA_IMPORT=\"\\nuse crate::ipc::gen::Schema::*;\"\n+SPARSE_TENSOR_IMPORT=\"\\nuse crate::ipc::gen::SparseTensor::*;\"\n+TENSOR_IMPORT=\"\\nuse crate::ipc::gen::Tensor::*;\"\n+\n+\n+# Remove all generated lines we don't need\n+for f in `ls *.rs`; do\n+\n+    if [[ $f == \"mod.rs\" ]]; then\n+        continue\n+    fi\n+\n+    echo \"Modifying: $f\"\n+    sed -i '' '/extern crate flatbuffers;/d' $f\n+    sed -i '' '/use self::flatbuffers::EndianScalar;/d' $f\n+    sed -i '' '/\\#\\[allow(unused_imports, dead_code)\\]/d' $f\n+    sed -i '' '/pub mod org {/d' $f\n+    sed -i '' '/pub mod apache {/d' $f\n+    sed -i '' '/pub mod arrow {/d' $f\n+    sed -i '' '/pub mod flatbuf {/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod flatbuf/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod arrow/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod apache/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod org/d' $f\n+    sed -i '' '/use std::mem;/d' $f\n+    sed -i '' '/use std::cmp::Ordering;/d' $f\n+\n+    # Replace all occurrences of type__ with type_\n+    sed -i '' 's/type__/type_/g' $f\n+\n+    # Some files need prefixes\n+    if [[ $f == \"File.rs\" ]]; then \n+        # Now prefix the file with the static contents\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Message.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${SPARSE_TENSOR_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"SparseTensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Tensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    else\n+        echo \"${PREFIX}\" | cat - $f > temp && mv temp $f\n+    fi\n+done\n+\n+\n+\n+for f in `ls *.rs`; do\n+    echo \"Formatting: $f\"\n+    rustfmt $f\n \n Review comment:\n   This is slightly tricky. In CI we run `cargo +stable fmt --all -- --check` to confirm that the source code in the PR is formatted correctly, so running `cargo +stable fmt` would defeat the point of that because it would format all the code in the crate (not just these generated files) and then the check would pass.\r\n   \r\n   It would be nice if we could just have rustfmt ignore these generated files. I had attempted to do that through the `rustfmt.toml` in the repo that attempts to ignore these files but we see the warning:\r\n   \r\n   ```\r\n   Warning: can't set `ignore = IgnoreList { path_set: {\"arrow/src/ipc/gen\"}, rustfmt_toml_path: \"\" }`, unstable features are only available in nightly channel.\r\n   ```\r\n   \r\n   This confuses me slightly because we _are_ using the nightly channel.\r\n   \r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T15:52:12.119+0000",
                    "updated": "2019-11-24T15:52:12.119+0000",
                    "started": "2019-11-24T15:52:12.119+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348743",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#discussion_r349933097\n \n \n\n ##########\n File path: rust/arrow/regen.sh\n ##########\n @@ -0,0 +1,112 @@\n+#!/bin/bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# Change to the toplevel Rust directory\n+pushd $DIR/../../\n+\n+# Execute the code generation:\n+flatc --rust -o rust/arrow/src/ipc/gen/ format/*.fbs\n+\n+# Now the files are wrongly named so we have to change that\n+popd\n+pushd $DIR/src/ipc/gen\n+for f in `ls *_generated.rs`; do\n+    adj_length=$((${#f}-13))\n+    mv $f \"${f:0:$adj_length}.rs\"\n+done\n+\n+PREFIX=$(cat <<'HEREDOC'\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n+\n+use std::{cmp::Ordering, mem};\n+use flatbuffers::EndianScalar;\n+\n+HEREDOC\n+)\n+\n+SCHEMA_IMPORT=\"\\nuse crate::ipc::gen::Schema::*;\"\n+SPARSE_TENSOR_IMPORT=\"\\nuse crate::ipc::gen::SparseTensor::*;\"\n+TENSOR_IMPORT=\"\\nuse crate::ipc::gen::Tensor::*;\"\n+\n+\n+# Remove all generated lines we don't need\n+for f in `ls *.rs`; do\n+\n+    if [[ $f == \"mod.rs\" ]]; then\n+        continue\n+    fi\n+\n+    echo \"Modifying: $f\"\n+    sed -i '' '/extern crate flatbuffers;/d' $f\n+    sed -i '' '/use self::flatbuffers::EndianScalar;/d' $f\n+    sed -i '' '/\\#\\[allow(unused_imports, dead_code)\\]/d' $f\n+    sed -i '' '/pub mod org {/d' $f\n+    sed -i '' '/pub mod apache {/d' $f\n+    sed -i '' '/pub mod arrow {/d' $f\n+    sed -i '' '/pub mod flatbuf {/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod flatbuf/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod arrow/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod apache/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod org/d' $f\n+    sed -i '' '/use std::mem;/d' $f\n+    sed -i '' '/use std::cmp::Ordering;/d' $f\n+\n+    # Replace all occurrences of type__ with type_\n+    sed -i '' 's/type__/type_/g' $f\n+\n+    # Some files need prefixes\n+    if [[ $f == \"File.rs\" ]]; then \n+        # Now prefix the file with the static contents\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Message.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${SPARSE_TENSOR_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"SparseTensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Tensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    else\n+        echo \"${PREFIX}\" | cat - $f > temp && mv temp $f\n+    fi\n+done\n+\n+\n+\n+for f in `ls *.rs`; do\n+    echo \"Formatting: $f\"\n+    rustfmt $f\n \n Review comment:\n   Perhaps running it with nightly on the bash script is better than my `stable` suggestion. We wouldn't run the script in CI, so we wouldn't get the fmt issues\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T16:24:19.423+0000",
                    "updated": "2019-11-24T16:24:19.423+0000",
                    "started": "2019-11-24T16:24:19.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348766",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "grundprinzip commented on pull request #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888#discussion_r349941239\n \n \n\n ##########\n File path: rust/arrow/regen.sh\n ##########\n @@ -0,0 +1,112 @@\n+#!/bin/bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# Change to the toplevel Rust directory\n+pushd $DIR/../../\n+\n+# Execute the code generation:\n+flatc --rust -o rust/arrow/src/ipc/gen/ format/*.fbs\n+\n+# Now the files are wrongly named so we have to change that\n+popd\n+pushd $DIR/src/ipc/gen\n+for f in `ls *_generated.rs`; do\n+    adj_length=$((${#f}-13))\n+    mv $f \"${f:0:$adj_length}.rs\"\n+done\n+\n+PREFIX=$(cat <<'HEREDOC'\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n+\n+use std::{cmp::Ordering, mem};\n+use flatbuffers::EndianScalar;\n+\n+HEREDOC\n+)\n+\n+SCHEMA_IMPORT=\"\\nuse crate::ipc::gen::Schema::*;\"\n+SPARSE_TENSOR_IMPORT=\"\\nuse crate::ipc::gen::SparseTensor::*;\"\n+TENSOR_IMPORT=\"\\nuse crate::ipc::gen::Tensor::*;\"\n+\n+\n+# Remove all generated lines we don't need\n+for f in `ls *.rs`; do\n+\n+    if [[ $f == \"mod.rs\" ]]; then\n+        continue\n+    fi\n+\n+    echo \"Modifying: $f\"\n+    sed -i '' '/extern crate flatbuffers;/d' $f\n+    sed -i '' '/use self::flatbuffers::EndianScalar;/d' $f\n+    sed -i '' '/\\#\\[allow(unused_imports, dead_code)\\]/d' $f\n+    sed -i '' '/pub mod org {/d' $f\n+    sed -i '' '/pub mod apache {/d' $f\n+    sed -i '' '/pub mod arrow {/d' $f\n+    sed -i '' '/pub mod flatbuf {/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod flatbuf/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod arrow/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod apache/d' $f\n+    sed -i '' '/}  \\/\\/ pub mod org/d' $f\n+    sed -i '' '/use std::mem;/d' $f\n+    sed -i '' '/use std::cmp::Ordering;/d' $f\n+\n+    # Replace all occurrences of type__ with type_\n+    sed -i '' 's/type__/type_/g' $f\n+\n+    # Some files need prefixes\n+    if [[ $f == \"File.rs\" ]]; then \n+        # Now prefix the file with the static contents\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Message.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${SPARSE_TENSOR_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"SparseTensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" \"${TENSOR_IMPORT}\" | cat - $f > temp && mv temp $f\n+    elif [[ $f == \"Tensor.rs\" ]]; then\n+        echo -e \"${PREFIX}\" \"${SCHEMA_IMPORT}\" | cat - $f > temp && mv temp $f\n+    else\n+        echo \"${PREFIX}\" | cat - $f > temp && mv temp $f\n+    fi\n+done\n+\n+\n+\n+for f in `ls *.rs`; do\n+    echo \"Formatting: $f\"\n+    rustfmt $f\n \n Review comment:\n   I think, I addressed this by adding an additional option to the script. Right now, I will execute this as\r\n   \r\n   ```\r\n   cargo +stable fmt -- src/ipc/gen/*\r\n   ```\r\n   \r\n   and this will make \r\n   \r\n   ```\r\n   cargo +stable fmt --all -- --check\r\n   ```\r\n   \r\n   pass without issues.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T19:17:11.552+0000",
                    "updated": "2019-11-24T19:17:11.552+0000",
                    "started": "2019-11-24T19:17:11.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348804",
                    "issueId": "13270303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/worklog/348814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #5888: ARROW-7248: [Rust] Automatically Generate IPC Messages\nURL: https://github.com/apache/arrow/pull/5888\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T20:01:23.154+0000",
                    "updated": "2019-11-24T20:01:23.154+0000",
                    "started": "2019-11-24T20:01:23.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348814",
                    "issueId": "13270303"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5214fbcc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42d3015d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3af0459c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@60737276[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c860c9b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6b17ac24[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5373d87f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2868e0a5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44e6d3e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@124621d3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fbba3c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@30b91d5e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Nov 24 20:01:31 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-24T20:01:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7248/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-11-24T12:17:13.000+0000",
        "updated": "2019-11-28T14:42:34.000+0000",
        "timeoriginalestimate": null,
        "description": "It would be great if there was an automatic way to regenerate the code for the Flatbuffer input files. This makes following the mainline development easier.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Automatically Regenerate IPC messages from Flatbuffers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270303/comment/16981169",
                    "id": "16981169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 5888\n[https://github.com/apache/arrow/pull/5888]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2019-11-24T20:01:31.520+0000",
                    "updated": "2019-11-24T20:01:31.520+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z08ybs:",
        "customfield_12314139": null
    }
}