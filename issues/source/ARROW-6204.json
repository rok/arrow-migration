{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13250153",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153",
    "key": "ARROW-6204",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6204/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/294849",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #5086: WIP: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086\n \n \n   This is follow-up of https://github.com/apache/arrow/pull/5047#issuecomment-520103706.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T16:30:51.152+0000",
                    "updated": "2019-08-14T16:30:51.152+0000",
                    "started": "2019-08-14T16:30:51.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294849",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #5086: WIP: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314088792\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,46 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in(right_chunked_array))\n \n Review comment:\n   `is_in` -> `is_in_chunked_array`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T21:21:26.408+0000",
                    "updated": "2019-08-14T21:21:26.408+0000",
                    "started": "2019-08-14T21:21:26.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295028",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #5086: WIP: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314134012\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,46 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in(right_chunked_array))\n \n Review comment:\n   Oh... Thank you for pointing out.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T00:09:11.826+0000",
                    "updated": "2019-08-15T00:09:11.826+0000",
                    "started": "2019-08-15T00:09:11.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295092",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314135139\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,46 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in(right_chunked_array))\n \n Review comment:\n   I've fixed this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T00:15:59.859+0000",
                    "updated": "2019-08-15T00:15:59.859+0000",
                    "started": "2019-08-15T00:15:59.858+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295093",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314138902\n \n \n\n ##########\n File path: c_glib/arrow-glib/compute.cpp\n ##########\n @@ -1440,7 +1441,43 @@ garrow_array_is_in(GArrowArray *left,\n                                      arrow_left_datum,\n                                      arrow_right_datum,\n                                      &arrow_datum);\n-  if (garrow_error_check(error, status, \"[array][isin]\")) {\n+  if (garrow_error_check(error, status, \"[array][is-in]\")) {\n+    auto arrow_array = arrow_datum.make_array();\n+    return GARROW_BOOLEAN_ARRAY(garrow_array_new_raw(&arrow_array));\n+  } else {\n+    return NULL;\n+  }\n+}\n+\n+/**\n+ * garrow_array_is_in_chunked_array:\n+ * @left: A left hand side #GArrowArray.\n+ * @right: A right hand side #GArrowChunkedArray.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: (nullable) (transfer full): The #GArrowBooleanArray\n+ *   showing whether each element in the left array is contained\n+ *   in right array.\n \n Review comment:\n   \"array\" -> \"chunked array\".\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T00:40:03.379+0000",
                    "updated": "2019-08-15T00:40:03.379+0000",
                    "started": "2019-08-15T00:40:03.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295100",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314139119\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,79 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      chunks = [\n+        build_int16_array([2, 0, 3]),\n+        build_int16_array([3, 0, 2, 2])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([2, 0, nil, 2, 0]),\n+        build_int16_array([2, 3, nil])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_both_arrays\n \n Review comment:\n   How about just using `test_null_in_both`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T00:40:03.397+0000",
                    "updated": "2019-08-15T00:40:03.397+0000",
                    "started": "2019-08-15T00:40:03.397+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295101",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314139028\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,79 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      chunks = [\n+        build_int16_array([2, 0, 3]),\n+        build_int16_array([3, 0, 2, 2])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_right_array\n \n Review comment:\n   `right_chunked_array` or just `right`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T00:40:03.410+0000",
                    "updated": "2019-08-15T00:40:03.410+0000",
                    "started": "2019-08-15T00:40:03.409+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295102",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314288930\n \n \n\n ##########\n File path: c_glib/arrow-glib/compute.cpp\n ##########\n @@ -1440,7 +1441,43 @@ garrow_array_is_in(GArrowArray *left,\n                                      arrow_left_datum,\n                                      arrow_right_datum,\n                                      &arrow_datum);\n-  if (garrow_error_check(error, status, \"[array][isin]\")) {\n+  if (garrow_error_check(error, status, \"[array][is-in]\")) {\n+    auto arrow_array = arrow_datum.make_array();\n+    return GARROW_BOOLEAN_ARRAY(garrow_array_new_raw(&arrow_array));\n+  } else {\n+    return NULL;\n+  }\n+}\n+\n+/**\n+ * garrow_array_is_in_chunked_array:\n+ * @left: A left hand side #GArrowArray.\n+ * @right: A right hand side #GArrowChunkedArray.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: (nullable) (transfer full): The #GArrowBooleanArray\n+ *   showing whether each element in the left array is contained\n+ *   in right array.\n \n Review comment:\n   I've fixed it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T12:38:26.510+0000",
                    "updated": "2019-08-15T12:38:26.510+0000",
                    "started": "2019-08-15T12:38:26.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295413",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314289030\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,79 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      chunks = [\n+        build_int16_array([2, 0, 3]),\n+        build_int16_array([3, 0, 2, 2])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_right_array\n \n Review comment:\n   I've used `right`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T12:38:41.808+0000",
                    "updated": "2019-08-15T12:38:41.808+0000",
                    "started": "2019-08-15T12:38:41.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295414",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086#discussion_r314289047\n \n \n\n ##########\n File path: c_glib/test/test-is-in.rb\n ##########\n @@ -18,31 +18,79 @@\n class TestIsIn < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def test_no_null\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n-  end\n+  sub_test_case(\"Array\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_left_array\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, 3])\n-    assert_equal(build_boolean_array([false, true, nil, true]),\n-                 left_array.is_in(right_array))\n-  end\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, 3])\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in(right_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0])\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in(right_array))\n+    end\n \n-  def test_null_in_right_array\n-    left_array = build_int16_array([1, 0, 1, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0])\n-    assert_equal(build_boolean_array([false, true, false, true]),\n-                 left_array.is_in(right_array))\n+    def test_null_in_both_arrays\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n+      assert_equal(build_boolean_array([false, true, true, true]),\n+                   left_array.is_in(right_array))\n+    end\n   end\n \n-  def test_null_in_both_arrays\n-    left_array = build_int16_array([1, 0, nil, 2])\n-    right_array = build_int16_array([2, 0, nil, 2, 0, nil])\n-    assert_equal(build_boolean_array([false, true, true, true]),\n-                 left_array.is_in(right_array))\n+  sub_test_case(\"ChunkedArray\") do\n+    def test_no_null\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([1, 0]),\n+        build_int16_array([1, 0, 3])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([true, true, true, false]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_left_array\n+      left_array = build_int16_array([1, 0, nil, 2])\n+      chunks = [\n+        build_int16_array([2, 0, 3]),\n+        build_int16_array([3, 0, 2, 2])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([false, true, nil, true]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_right_array\n+      left_array = build_int16_array([1, 0, 1, 2])\n+      chunks = [\n+        build_int16_array([2, 0, nil, 2, 0]),\n+        build_int16_array([2, 3, nil])\n+      ]\n+      right_chunked_array = Arrow::ChunkedArray.new(chunks)\n+      assert_equal(build_boolean_array([false, true, false, true]),\n+                   left_array.is_in_chunked_array(right_chunked_array))\n+    end\n+\n+    def test_null_in_both_arrays\n \n Review comment:\n   I've used it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T12:38:44.345+0000",
                    "updated": "2019-08-15T12:38:44.345+0000",
                    "started": "2019-08-15T12:38:44.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295415",
                    "issueId": "13250153"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/worklog/295779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #5086: ARROW-6204: [GLib] Add garrow_array_is_in_chunked_array()\nURL: https://github.com/apache/arrow/pull/5086\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T21:35:14.715+0000",
                    "updated": "2019-08-15T21:35:14.715+0000",
                    "started": "2019-08-15T21:35:14.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295779",
                    "issueId": "13250153"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6202bf29[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3893ff9d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@485d7a8b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6f150b0a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@674eaf73[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@53a6e63c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@708c47e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@37064fa1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25a14b05[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4152ce8b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53732a0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@560d1c87[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 15 21:35:10 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-15T21:35:10.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6204/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-08-11T22:55:09.000+0000",
        "updated": "2019-08-15T21:35:14.000+0000",
        "timeoriginalestimate": null,
        "description": "This is follow-up of\u00a0[https://github.com/apache/arrow/pull/5047#issuecomment-520103706].",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Add garrow_array_is_in_chunked_array()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/comment/16905702",
                    "id": "16905702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Perhaps, should we\u00a0add \"garrow_chunked_array_is_in\" rather than \"garrow_array_is_in_chunked_array\"?\r\nIt seems that both a left hand side array and a right hand side array need to be \"ChunkedArray\".\r\n\r\n\r\nSo, I think it is good to add the following function in compute.cpp.\r\n{code:java}\r\nGArrowChunkedArray *\r\ngarrow_chunked_array_is_in(GArrowChunkedArray *left,\r\n                                                    GArrowChunkedArray *right,\r\n                                                    GError **error){code}\r\n\u00a0\r\n\r\n[~kou]\r\nWhat do you think about this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-13T00:44:03.667+0000",
                    "updated": "2019-08-13T00:44:03.667+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/comment/16905745",
                    "id": "16905745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Really?\r\n\r\nCould you create a pull request for {{GArrowArray *left}} and {{GArrowChunkedArray *right}}? Then I'll test it too.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-08-13T02:22:51.458+0000",
                    "updated": "2019-08-13T02:22:51.458+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/comment/16906774",
                    "id": "16906774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes.\u00a0I'll\u00a0create\u00a0a pull request. Thanks!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-14T01:00:15.314+0000",
                    "updated": "2019-08-14T01:00:15.314+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/comment/16907419",
                    "id": "16907419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I've created a pull request. https://github.com/apache/arrow/pull/5086\r\nAnd sorry. I forgot to leave the following error message in the previous comment.\r\n{code:java}\r\n....E\r\n======================================================================================\r\n57: ]\r\n58: right_chunked_array = Arrow::ChunkedArray.new(chunks)\r\n59: assert_equal(build_boolean_array([true, true, true, false]),\r\n=> 60: left_array.is_in(right_chunked_array))\r\n61: end\r\n62: end\r\n63: end\r\n/Users/shiro/dev/arrow/c_glib/test/test-is-in.rb:60:in `test_no_null'\r\n/Users/shiro/.rbenv/versions/2.6.0/lib/ruby/site_ruby/2.6.0/gobject-introspection/loader.rb:533:in `block in define_method'\r\n/Users/shiro/.rbenv/versions/2.6.0/lib/ruby/site_ruby/2.6.0/gobject-introspection/loader.rb:616:in `invoke'\r\n/Users/shiro/.rbenv/versions/2.6.0/lib/ruby/site_ruby/2.6.0/gobject-introspection/loader.rb:616:in `invoke'\r\nError: test_no_null(TestIsIn::ChunkedArray):\r\nArgumentError: must be <GArrowArray> object: <[\r\n[\r\n1,\r\n0\r\n],\r\n[\r\n1,\r\n0,\r\n3\r\n]\r\n]>\r\n======================================================================================\r\n......................................................................................\r\n......................................................................................\r\n......................................................................................\r\n.......WARNING: Logging before InitGoogleLogging() is written to STDERR\r\n{code}\r\n\r\nWe may need to change Ruby/GObjectIntrospection.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-14T16:37:45.002+0000",
                    "updated": "2019-08-14T16:37:45.002+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250153/comment/16908489",
                    "id": "16908489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 5086\n[https://github.com/apache/arrow/pull/5086]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-08-15T21:35:10.246+0000",
                    "updated": "2019-08-15T21:35:10.246+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z05jvk:",
        "customfield_12314139": null
    }
}