{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13399069",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069",
    "key": "ARROW-13882",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "kernel",
            "pull-request-available",
            "types"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12622453",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12622453",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "outwardIssue": {
                    "id": "13390923",
                    "key": "ARROW-13410",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390923",
                    "fields": {
                        "summary": "[C++] Implement min_max kernel for array[string]",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12622426",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12622426",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13397315",
                    "key": "ARROW-13758",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397315",
                    "fields": {
                        "summary": "[C++] Expand min_max/hash_min_max type support",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12638267",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12638267",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13390923",
                    "key": "ARROW-13410",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390923",
                    "fields": {
                        "summary": "[C++] Implement min_max kernel for array[string]",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13882/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/648177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111\n\n\n   This adds support for non-nested types to both, except for MonthDayNanoInterval (which is not really sortable). hash_min_max additionally lacks binary/string-like types as they require a different approach (I will file a followup).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-08T19:23:32.686+0000",
                    "updated": "2021-09-08T19:23:32.686+0000",
                    "started": "2021-09-08T19:23:32.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "648177",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/648178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#issuecomment-915507539\n\n\n   https://issues.apache.org/jira/browse/ARROW-13882\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-08T19:23:58.852+0000",
                    "updated": "2021-09-08T19:23:58.852+0000",
                    "started": "2021-09-08T19:23:58.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "648178",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/649956",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#issuecomment-918118810\n\n\n   In light of the proposal to clarify how DayTime intervals are handled some changes here should probably be reverted.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T11:58:03.168+0000",
                    "updated": "2021-09-13T11:58:03.168+0000",
                    "started": "2021-09-13T11:58:03.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649956",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/649974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#issuecomment-918139670\n\n\n   (Removed support for DayTimeInterval since it's only partially orderable.)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T12:25:19.594+0000",
                    "updated": "2021-09-13T12:25:19.594+0000",
                    "started": "2021-09-13T12:25:19.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649974",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707517448\n\n\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -498,6 +498,11 @@ struct ValidateArrayFullImpl {\n \n   Status Visit(const StructType& type) {\n     // Validate children\n+    if (data.child_data.size() != static_cast<size_t>(type.num_fields())) {\n\nReview comment:\n       I'm a bit surprised. This should already be checked by the `ValidateArray` top-level function, no?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic_internal.h\n##########\n@@ -322,6 +411,7 @@ struct MinMaxImpl : public ScalarAggregator {\n     StateType local;\n     local.has_nulls = !scalar.is_valid;\n     local.has_values = scalar.is_valid;\n+    this->count += scalar.is_valid;\n\nReview comment:\n       `has_values` is a bit redundant now that the count of valid values is tracked, isn't it?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic_internal.h\n##########\n@@ -289,27 +313,92 @@ struct MinMaxState<ArrowType, SimdLevel, enable_if_decimal<ArrowType>> {\n     return *this;\n   }\n \n-  void MergeOne(const uint8_t* value) { MergeOne(T(value)); }\n+  void MergeOne(util::string_view value) {\n+    MergeOne(T(reinterpret_cast<const uint8_t*>(value.data())));\n+  }\n \n   void MergeOne(const T value) {\n     this->min = std::min(this->min, value);\n     this->max = std::max(this->max, value);\n   }\n \n+  Status GetValues(const std::shared_ptr<DataType>& type,\n+                   std::vector<std::shared_ptr<Scalar>>* values) {\n+    values->emplace_back(std::make_shared<ScalarType>(min, type));\n+    values->emplace_back(std::make_shared<ScalarType>(max, type));\n+    return Status::OK();\n+  }\n+\n   T min;\n   T max;\n   bool has_nulls = false;\n   bool has_values = false;\n };\n \n+template <typename ArrowType, SimdLevel::type SimdLevel>\n+struct MinMaxState<ArrowType, SimdLevel,\n+                   enable_if_t<is_base_binary_type<ArrowType>::value ||\n+                               std::is_same<ArrowType, FixedSizeBinaryType>::value>> {\n+  using ThisType = MinMaxState<ArrowType, SimdLevel>;\n+  using ScalarType = typename TypeTraits<ArrowType>::ScalarType;\n+\n+  ThisType& operator+=(const ThisType& rhs) {\n+    if (!this->seen && rhs.seen) {\n+      this->min = rhs.min;\n+      this->max = rhs.max;\n+    } else if (this->seen && rhs.seen) {\n+      if (this->min > rhs.min) {\n+        this->min = rhs.min;\n+      }\n+      if (this->max < rhs.max) {\n+        this->max = rhs.max;\n+      }\n+    }\n+    this->has_nulls |= rhs.has_nulls;\n+    this->has_values |= rhs.has_values;\n+    this->seen |= rhs.seen;\n+    return *this;\n+  }\n+\n+  void MergeOne(util::string_view value) {\n+    if (!seen) {\n+      this->min = std::string(value);\n+      this->max = std::string(value);\n+    } else {\n+      if (value < util::string_view(this->min)) {\n+        this->min = std::string(value);\n+      }\n+      if (value > util::string_view(this->max)) {\n\nReview comment:\n       Should this be `else if`? Presumably `value` cannot be bother smaller than the min and greater than the max, and it would spare a string comparison.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1762,9 +1768,47 @@ struct AntiExtrema<Decimal256> {\n };\n \n template <typename Type>\n-struct GroupedMinMaxImpl : public GroupedAggregator {\n+struct GroupedMinMaxTraits {\n   using CType = typename TypeTraits<Type>::CType;\n \n+  static void Update(CType* raw_mins, CType* raw_maxes, uint32_t g, CType val) {\n+    raw_maxes[g] = std::max(raw_maxes[g], val);\n+    raw_mins[g] = std::min(raw_mins[g], val);\n+  }\n+\n+  static void Merge(CType* raw_mins, CType* raw_maxes, uint32_t g,\n+                    const CType* other_raw_mins, const CType* other_raw_maxes,\n+                    uint32_t other_g) {\n+    raw_mins[g] = std::min(raw_mins[g], other_raw_mins[other_g]);\n+    raw_maxes[g] = std::max(raw_maxes[g], other_raw_maxes[other_g]);\n+  }\n+};\n\nReview comment:\n       Note that this not very specific to min_max and you could simply have (assuming this is later useful for other types and aggregations?):\r\n   ```c++\r\n   template <typename T>\r\n   struct GroupedValueTraits {\r\n     using CType = typename TypeTraits<Type>::CType;\r\n   \r\n     static CType Get(const CType* values, uint32_t g) {\r\n       return values[g];\r\n     }\r\n     static void Set(CType* values, uint32_t g, CType v) {\r\n       values[g] = v;\r\n     }\r\n   };\r\n   \r\n   template <>\r\n   struct GroupedValueTraits<BooleanType> {\r\n     static bool Get(const uint8_t* values, uint32_t g) {\r\n       return BitUtil::GetBit(values, g);\r\n     }\r\n     static void Set(CType* values, uint32_t g, CType v) {\r\n       BitUtil::SetBit(values, g, v);\r\n     }\r\n   };\r\n   ```\r\n   \n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -326,7 +332,10 @@ equivalents above and reflects how they are implemented internally.\n   are emitted. This never affects the grouping keys, only group values\n   (i.e. you may get a group where the key is null).\n \n-* \\(3) Output is a ``{\"min\": input type, \"max\": input type}`` Struct scalar.\n+* \\(3) Output is a ``{\"min\": input type, \"max\": input type}`` Struct array.\n+\n+  The month-day-nano interval type is not supported as it cannot be\n\nReview comment:\n       Same question.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1737,6 +1737,12 @@ struct AntiExtrema {\n   static constexpr CType anti_max() { return std::numeric_limits<CType>::min(); }\n };\n \n+template <>\n+struct AntiExtrema<bool> {\n+  static constexpr float anti_min() { return true; }\n+  static constexpr float anti_max() { return false; }\n\nReview comment:\n       I'm curious, why is float returned?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic_internal.h\n##########\n@@ -220,16 +220,24 @@ struct MinMaxState<ArrowType, SimdLevel, enable_if_boolean<ArrowType>> {\n     this->max = this->max || value;\n   }\n \n+  Status GetValues(const std::shared_ptr<DataType>&,\n+                   std::vector<std::shared_ptr<Scalar>>* values) {\n+    values->emplace_back(std::make_shared<BooleanScalar>(min));\n+    values->emplace_back(std::make_shared<BooleanScalar>(max));\n+    return Status::OK();\n+  }\n+\n   T min = true;\n   T max = false;\n   bool has_nulls = false;\n   bool has_values = false;\n };\n \n template <typename ArrowType, SimdLevel::type SimdLevel>\n-struct MinMaxState<ArrowType, SimdLevel, enable_if_integer<ArrowType>> {\n+struct MinMaxState<ArrowType, SimdLevel, enable_if_physical_integer<ArrowType>> {\n\nReview comment:\n       It seems this will generate different template specializations for types with the same underlying `c_type`. Is it desirable?\r\n   (note that `GetValues` is called with the output type independently from the `ArrowType` parameter)\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic_internal.h\n##########\n@@ -511,27 +620,44 @@ struct MinMaxInitState {\n                   const ScalarAggregateOptions& options)\n       : ctx(ctx), in_type(in_type), out_type(out_type), options(options) {}\n \n-  Status Visit(const DataType&) {\n-    return Status::NotImplemented(\"No min/max implemented\");\n+  Status Visit(const DataType& ty) {\n+    return Status::NotImplemented(\"No min/max implemented for \", ty);\n   }\n \n   Status Visit(const HalfFloatType&) {\n     return Status::NotImplemented(\"No min/max implemented\");\n\nReview comment:\n       Update message here as well?\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -226,6 +229,9 @@ Notes:\n \n * \\(3) Output is a ``{\"min\": input type, \"max\": input type}`` Struct.\n \n+  The month-day-nano interval type is not supported as it cannot be\n+  sorted.\n\nReview comment:\n       Neither is day-time, right?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -407,12 +407,19 @@ ArrayKernelExec MakeFlippedBinaryExec(ArrayKernelExec exec);\n // Helpers for iterating over common DataType instances for adding kernels to\n // functions\n \n+ARROW_EXPORT\n const std::vector<std::shared_ptr<DataType>>& BaseBinaryTypes();\n\nReview comment:\n       Hmm... this seems to imply that `codegen_internal.h` is included in tests, but that's a rather costly inclusion. Instead, we already have some declarations in `gtest_util.h` (see `BinaryArrowTypes` and friends).\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1866,17 +1940,40 @@ Result<std::unique_ptr<KernelState>> MinMaxInit(KernelContext* ctx,\n \n struct GroupedMinMaxFactory {\n   template <typename T>\n-  enable_if_number<T, Status> Visit(const T&) {\n+  enable_if_physical_integer<T, Status> Visit(const T&) {\n\nReview comment:\n       Same remark as for the scalar aggregations: this will generate a separate kernel per logical type?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1866,17 +1940,40 @@ Result<std::unique_ptr<KernelState>> MinMaxInit(KernelContext* ctx,\n \n struct GroupedMinMaxFactory {\n   template <typename T>\n-  enable_if_number<T, Status> Visit(const T&) {\n+  enable_if_physical_integer<T, Status> Visit(const T&) {\n     kernel = MakeKernel(std::move(argument_type), MinMaxInit<T>);\n     return Status::OK();\n   }\n \n+  // MSVC2015 apparently doesn't compile this properly if we use\n+  // enable_if_floating_point\n\nReview comment:\n       Ha :-)\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate_test.cc\n##########\n@@ -1305,35 +1305,49 @@ TEST(GroupBy, VarianceOptions) {\n }\n \n TEST(GroupBy, MinMaxOnly) {\n+  auto in_schema = schema({\n+      field(\"argument\", float64()),\n+      field(\"argument1\", null()),\n+      field(\"argument2\", boolean()),\n+      field(\"key\", int64()),\n+  });\n   for (bool use_exec_plan : {false, true}) {\n     for (bool use_threads : {true, false}) {\n       SCOPED_TRACE(use_threads ? \"parallel/merged\" : \"serial\");\n \n-      auto table = TableFromJSON(\n-          schema({field(\"argument\", float64()), field(\"key\", int64())}), {R\"([\n-    [1.0,   1],\n-    [null,  1]\n-                        ])\",\n-                                                                          R\"([\n-    [0.0,   2],\n-    [null,  3],\n-    [4.0,   null],\n-    [3.25,  1],\n-    [0.125, 2]\n-                        ])\",\n-                                                                          R\"([\n-    [-0.25, 2],\n-    [0.75,  null],\n-    [null,  3]\n-                        ])\"});\n+      // bool, day time interval\n\nReview comment:\n       Hmm, I don't see any interval in the type definition above. Is this comment outdated?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1786,14 +1830,13 @@ struct GroupedMinMaxImpl : public GroupedAggregator {\n   }\n \n   Status Consume(const ExecBatch& batch) override {\n-    auto raw_mins = reinterpret_cast<CType*>(mins_.mutable_data());\n-    auto raw_maxes = reinterpret_cast<CType*>(maxes_.mutable_data());\n+    auto raw_mins = reinterpret_cast<ArrType*>(mins_.mutable_data());\n+    auto raw_maxes = reinterpret_cast<ArrType*>(maxes_.mutable_data());\n\nReview comment:\n       Since `mins_` and `maxes_` are TypedBufferBuilders, is the `reinterpret_cast` at all required?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T17:26:23.638+0000",
                    "updated": "2021-09-13T17:26:23.638+0000",
                    "started": "2021-09-13T17:26:23.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650150",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707576152\n\n\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -498,6 +498,11 @@ struct ValidateArrayFullImpl {\n \n   Status Visit(const StructType& type) {\n     // Validate children\n+    if (data.child_data.size() != static_cast<size_t>(type.num_fields())) {\n\nReview comment:\n       Hmm. Odd, I do remember getting a crash for this reason here. But there is indeed a check: https://github.com/apache/arrow/blob/87b2fcd53bfd7ed4fcb5c4d98fd4f4f4f4aac158/cpp/src/arrow/array/validate.cc#L367-L374\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T18:20:32.402+0000",
                    "updated": "2021-09-13T18:20:32.402+0000",
                    "started": "2021-09-13T18:20:32.402+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650179",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707578515\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -407,12 +407,19 @@ ArrayKernelExec MakeFlippedBinaryExec(ArrayKernelExec exec);\n // Helpers for iterating over common DataType instances for adding kernels to\n // functions\n \n+ARROW_EXPORT\n const std::vector<std::shared_ptr<DataType>>& BaseBinaryTypes();\n\nReview comment:\n       Those are for compile-time parameterization while the test in hash_aggregate_test.cc uses these for runtime parameterization. But it's not such a big deal, so I'll convert it to use TYPED_TEST.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T18:24:20.463+0000",
                    "updated": "2021-09-13T18:24:20.463+0000",
                    "started": "2021-09-13T18:24:20.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650180",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707579163\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -407,12 +407,19 @@ ArrayKernelExec MakeFlippedBinaryExec(ArrayKernelExec exec);\n // Helpers for iterating over common DataType instances for adding kernels to\n // functions\n \n+ARROW_EXPORT\n const std::vector<std::shared_ptr<DataType>>& BaseBinaryTypes();\n\nReview comment:\n       Well, these helpers would be globally useful, so perhaps put them at the end of `type.h`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T18:25:27.631+0000",
                    "updated": "2021-09-13T18:25:27.631+0000",
                    "started": "2021-09-13T18:25:27.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650182",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707653421\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic_internal.h\n##########\n@@ -220,16 +220,24 @@ struct MinMaxState<ArrowType, SimdLevel, enable_if_boolean<ArrowType>> {\n     this->max = this->max || value;\n   }\n \n+  Status GetValues(const std::shared_ptr<DataType>&,\n+                   std::vector<std::shared_ptr<Scalar>>* values) {\n+    values->emplace_back(std::make_shared<BooleanScalar>(min));\n+    values->emplace_back(std::make_shared<BooleanScalar>(max));\n+    return Status::OK();\n+  }\n+\n   T min = true;\n   T max = false;\n   bool has_nulls = false;\n   bool has_values = false;\n };\n \n template <typename ArrowType, SimdLevel::type SimdLevel>\n-struct MinMaxState<ArrowType, SimdLevel, enable_if_integer<ArrowType>> {\n+struct MinMaxState<ArrowType, SimdLevel, enable_if_physical_integer<ArrowType>> {\n\nReview comment:\n       I changed this and the one below to use PhysicalType. I also replaced GetValues with MakeScalar (since now the static type doesn't match the runtime type).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T20:21:29.231+0000",
                    "updated": "2021-09-13T20:21:29.231+0000",
                    "started": "2021-09-13T20:21:29.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650222",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707653751\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -407,12 +407,19 @@ ArrayKernelExec MakeFlippedBinaryExec(ArrayKernelExec exec);\n // Helpers for iterating over common DataType instances for adding kernels to\n // functions\n \n+ARROW_EXPORT\n const std::vector<std::shared_ptr<DataType>>& BaseBinaryTypes();\n\nReview comment:\n       I moved the helpers and also culled an underutilized one (DecimalTypeIds). AllTimeUnits was promoted to TimeUnit::values() instead.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T20:22:04.849+0000",
                    "updated": "2021-09-13T20:22:04.849+0000",
                    "started": "2021-09-13T20:22:04.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650223",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707653875\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1737,6 +1737,12 @@ struct AntiExtrema {\n   static constexpr CType anti_max() { return std::numeric_limits<CType>::min(); }\n };\n \n+template <>\n+struct AntiExtrema<bool> {\n+  static constexpr float anti_min() { return true; }\n+  static constexpr float anti_max() { return false; }\n\nReview comment:\n       Because I don't pay attention when I copy-paste, probably\u2026fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T20:22:18.207+0000",
                    "updated": "2021-09-13T20:22:18.207+0000",
                    "started": "2021-09-13T20:22:18.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650224",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/650225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111#discussion_r707654096\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate_test.cc\n##########\n@@ -1305,35 +1305,49 @@ TEST(GroupBy, VarianceOptions) {\n }\n \n TEST(GroupBy, MinMaxOnly) {\n+  auto in_schema = schema({\n+      field(\"argument\", float64()),\n+      field(\"argument1\", null()),\n+      field(\"argument2\", boolean()),\n+      field(\"key\", int64()),\n+  });\n   for (bool use_exec_plan : {false, true}) {\n     for (bool use_threads : {true, false}) {\n       SCOPED_TRACE(use_threads ? \"parallel/merged\" : \"serial\");\n \n-      auto table = TableFromJSON(\n-          schema({field(\"argument\", float64()), field(\"key\", int64())}), {R\"([\n-    [1.0,   1],\n-    [null,  1]\n-                        ])\",\n-                                                                          R\"([\n-    [0.0,   2],\n-    [null,  3],\n-    [4.0,   null],\n-    [3.25,  1],\n-    [0.125, 2]\n-                        ])\",\n-                                                                          R\"([\n-    [-0.25, 2],\n-    [0.75,  null],\n-    [null,  3]\n-                        ])\"});\n+      // bool, day time interval\n\nReview comment:\n       I fixed the comments/docs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T20:22:31.730+0000",
                    "updated": "2021-09-13T20:22:31.730+0000",
                    "started": "2021-09-13T20:22:31.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650225",
                    "issueId": "13399069"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/worklog/651825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #11111:\nURL: https://github.com/apache/arrow/pull/11111\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-16T15:47:14.859+0000",
                    "updated": "2021-09-16T15:47:14.859+0000",
                    "started": "2021-09-16T15:47:14.858+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651825",
                    "issueId": "13399069"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@172ac670[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@434ab828[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f3d1e28[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7920701f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15c7efae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1180fa00[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@164b6a46[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6c914018[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@468168bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@50c7da91[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d938395[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7be481bf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 16 15:47:02 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-16T15:47:01.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13882/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-09-03T03:20:56.000+0000",
        "updated": "2022-04-20T12:00:51.000+0000",
        "timeoriginalestimate": null,
        "description": "The min_max compute function does not support the following types but should:\r\n\r\n - time32\r\n - time64\r\n - timestamp\r\n - null\r\n - binary\r\n - large_binary\r\n - fixed_size_binary\r\n - string\r\n - large_string",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add compute function min_max support for more types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/comment/17412291",
                    "id": "17412291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Note that there is [std::minmax|https://en.cppreference.com/w/cpp/algorithm/minmax] and [std::minmax_element|https://en.cppreference.com/w/cpp/algorithm/minmax_element] in the C++ algorithm library which supports lists and iterators.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-09T02:38:55.291+0000",
                    "updated": "2021-09-09T02:38:55.291+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/comment/17412292",
                    "id": "17412292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Is ARROW-13410 a duplicate (subcomponent) of this issue? If so, I think we can close it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-09T02:39:32.379+0000",
                    "updated": "2021-09-09T02:39:59.345+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/comment/17412314",
                    "id": "17412314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Since ARROW-13410 just covers strings we can just link it rather than close it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-09-09T03:33:49.641+0000",
                    "updated": "2021-09-09T03:33:49.641+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/comment/17412316",
                    "id": "17412316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Although if you'd rather close it I think I'd be fine with that too.  I think it would depend if it makes sense to submit a PR independently for string support.  I'll leave it up to you.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-09-09T03:34:48.962+0000",
                    "updated": "2021-09-09T03:34:48.962+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/comment/17412530",
                    "id": "17412530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The linked PR already adds string support too (for the scalar aggregate only, not for the hash aggregate which I want to split out).\r\n\r\nI don't think std::minmax is relevant.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-09T11:46:54.825+0000",
                    "updated": "2021-09-09T11:46:54.825+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399069/comment/17416191",
                    "id": "17416191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11111\n[https://github.com/apache/arrow/pull/11111]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-09-16T15:47:02.050+0000",
                    "updated": "2021-09-16T15:47:02.050+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0uk94:",
        "customfield_12314139": null
    }
}