{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13383380",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380",
    "key": "ARROW-13049",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13049/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/610139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes opened a new pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516\n\n\n   Implement BIN Hive function on Gandiva\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T07:21:06.358+0000",
                    "updated": "2021-06-14T07:21:06.358+0000",
                    "started": "2021-06-14T07:21:06.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610139",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/610348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes opened a new pull request #10517:\nURL: https://github.com/apache/arrow/pull/10517\n\n\n   Implement SPACE Hive function on Gandiva\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T07:41:41.711+0000",
                    "updated": "2021-06-14T07:41:41.711+0000",
                    "started": "2021-06-14T07:41:41.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610348",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/610370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#issuecomment-859488313\n\n\n   https://issues.apache.org/jira/browse/ARROW-13049\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T07:44:15.911+0000",
                    "updated": "2021-06-14T07:44:15.911+0000",
                    "started": "2021-06-14T07:44:15.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610370",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/612672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r655430066\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,31 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, 64));    \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate bin representation recursively */                                     \\\n+    bin(value, ret, out_len);                                                         \\\n+    return ret;                                                                       \\\n+  }\n+\n+BIN_INTEGER(int32)\n+BIN_INTEGER(int64)\n+\n\nReview comment:\n       I think you can call `#undef BIN_INTEGER` since the macro you not be used in any place.\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,31 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, 64));    \\\n\nReview comment:\n       The output string size depends on the size of the input integer, right?\r\n   \r\n   I think you can add an additional parameter in the macro for the output size.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-21T14:39:41.174+0000",
                    "updated": "2021-06-21T14:39:41.174+0000",
                    "started": "2021-06-21T14:39:41.174+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "612672",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/612674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r655436797\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,31 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, 64));    \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate bin representation recursively */                                     \\\n\nReview comment:\n       ```suggestion\r\n       /* generate binary representation recursively */                                     \\\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-21T14:40:20.467+0000",
                    "updated": "2021-06-21T14:40:20.467+0000",
                    "started": "2021-06-21T14:40:20.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "612674",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/613071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r655430066\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,31 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, 64));    \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate bin representation recursively */                                     \\\n+    bin(value, ret, out_len);                                                         \\\n+    return ret;                                                                       \\\n+  }\n+\n+BIN_INTEGER(int32)\n+BIN_INTEGER(int64)\n+\n\nReview comment:\n       I think you can call `#undef BIN_INTEGER` since the macro you not be used in any place.\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,31 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, 64));    \\\n\nReview comment:\n       The output string size depends on the size of the input integer, right?\r\n   \r\n   I think you can add an additional parameter in the macro for the output size.\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,31 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, 64));    \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate bin representation recursively */                                     \\\n\nReview comment:\n       ```suggestion\r\n       /* generate binary representation recursively */                                     \\\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T07:44:04.322+0000",
                    "updated": "2021-06-22T07:44:04.322+0000",
                    "started": "2021-06-22T07:44:04.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613071",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/615398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r659336341\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n\nReview comment:\n       It doesn't work with negative integers\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-27T15:15:07.664+0000",
                    "updated": "2021-06-27T15:15:07.664+0000",
                    "started": "2021-06-27T15:15:07.664+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "615398",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/615423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r659391757\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n\nReview comment:\n       This function was built to have the same behavior as Hive BIN function. \r\n   Can you be more clear in what do you consider that won't work?\r\n   \r\n   If you check the tests, there are cases with negative int values working and behaving correctly as Hive. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-27T23:31:46.166+0000",
                    "updated": "2021-06-27T23:31:46.166+0000",
                    "started": "2021-06-27T23:31:46.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "615423",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/615424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r659391757\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n\nReview comment:\n       This function was built to have the same behavior as Hive BIN function. \r\n   Can you be more clear in what do you consider that won't work?\r\n   \r\n   If you check the tests, there are cases with negative int values working and behaving correctly as Hive (since Hive supports negative values). \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-27T23:32:19.330+0000",
                    "updated": "2021-06-27T23:32:19.330+0000",
                    "started": "2021-06-27T23:32:19.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "615424",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/618611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r663861653\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n\nReview comment:\n       the negative ints output as 64 chars instead of 32 chars. I checked now with hive and it seems they are also doing like this. I think its better to keep it as 32 sized.\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n\nReview comment:\n       Mark it as force inline. Also the recursion won't be inlined. Can you replace the logic with iteration.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-05T11:37:19.249+0000",
                    "updated": "2021-07-05T11:37:19.249+0000",
                    "started": "2021-07-05T11:37:19.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "618611",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/619066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r663861653\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n+  if (n > 1) {\n+    bin(n / 2, ret, position);\n+  }\n+  ret[*position] = (n % 2) == 0 ? '0' : '1';\n+  *position += 1;\n+}\n+\n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n\nReview comment:\n       the negative ints output as 64 chars instead of 32 chars. I checked now with hive and it seems they are also doing like this. I think its better to keep it as 32 sized.\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,33 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// convert input unsigned long to its binary representation\n+void bin(uint64_t n, char* ret, int32_t* position) {\n\nReview comment:\n       Mark it as force inline. Also the recursion won't be inlined. Can you replace the logic with iteration.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T11:10:23.132+0000",
                    "updated": "2021-07-06T11:10:23.132+0000",
                    "started": "2021-07-06T11:10:23.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619066",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/619571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#issuecomment-875021098\n\n\n   @jpedroantunes There are test failures can you check\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T19:22:11.748+0000",
                    "updated": "2021-07-06T19:22:11.748+0000",
                    "started": "2021-07-06T19:22:11.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619571",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/619650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes commented on pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#issuecomment-875135438\n\n\n   > @jpedroantunes There are test failures can you check\r\n   \r\n   @projjal \r\n   Any idea of how to solve the MINGW build failures? \r\n   I noticed that all tests failing are related to the BIN functions with **int64** _input values_. What am I missing here?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T22:55:45.641+0000",
                    "updated": "2021-07-06T22:55:45.641+0000",
                    "started": "2021-07-06T22:55:45.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619650",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/619654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes edited a comment on pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#issuecomment-875135438\n\n\n   > @jpedroantunes There are test failures can you check\r\n   \r\n   @projjal \r\n   Any idea of how to solve the MINGW build failures? \r\n   I noticed that all tests failing are related to the BIN functions with **int64** _input values_. I believe I am not being able to allocate a 64-char *ret* in memory for these architectures, since the failing tests are returning empty strings. What is the best approach to handle it?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T23:20:46.546+0000",
                    "updated": "2021-07-06T23:20:46.546+0000",
                    "started": "2021-07-06T23:20:46.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619654",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/619656",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes edited a comment on pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#issuecomment-875135438\n\n\n   > @jpedroantunes There are test failures can you check\r\n   \r\n   @projjal \r\n   Any idea of how to solve the MINGW build failures? \r\n   I noticed that all tests failing are related to the BIN functions with **int64** _input values_. I believe my FOR logic (maybe the left shift expression) is not workling properly on MINGW, since the string is always being returned empty for these test cases. What am I missing here?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T23:31:09.472+0000",
                    "updated": "2021-07-06T23:31:09.472+0000",
                    "started": "2021-07-06T23:31:09.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619656",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/619664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes removed a comment on pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#issuecomment-875135438\n\n\n   > @jpedroantunes There are test failures can you check\r\n   \r\n   @projjal \r\n   Any idea of how to solve the MINGW build failures? \r\n   I noticed that all tests failing are related to the BIN functions with **int64** _input values_. I believe my FOR logic (maybe the left shift expression) is not workling properly on MINGW, since the string is always being returned empty for these test cases. What am I missing here?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T23:59:01.725+0000",
                    "updated": "2021-07-06T23:59:01.725+0000",
                    "started": "2021-07-06T23:59:01.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619664",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/622165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r669035569\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,36 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    int32_t len = 8 * sizeof(value);                                                  \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, len));   \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate binary representation iteratively */                                  \\\n+    gdv_u##IN_TYPE i;                                                                 \\\n+    bool first = false; /* flag for not printing left zeros in positive numbers */    \\\n+    for (i = static_cast<gdv_u##IN_TYPE>(1) << (len - 1); i > 0; i = i / 2) {         \\\n+      if ((value & i) != 0) {                                                         \\\n\nReview comment:\n       This doesn't look will for input 0\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T19:05:36.927+0000",
                    "updated": "2021-07-13T19:05:36.927+0000",
                    "started": "2021-07-13T19:05:36.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622165",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/622166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r669035569\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,36 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    int32_t len = 8 * sizeof(value);                                                  \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, len));   \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate binary representation iteratively */                                  \\\n+    gdv_u##IN_TYPE i;                                                                 \\\n+    bool first = false; /* flag for not printing left zeros in positive numbers */    \\\n+    for (i = static_cast<gdv_u##IN_TYPE>(1) << (len - 1); i > 0; i = i / 2) {         \\\n+      if ((value & i) != 0) {                                                         \\\n\nReview comment:\n       This doesn't look will work for input 0\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T19:05:51.229+0000",
                    "updated": "2021-07-13T19:05:51.229+0000",
                    "started": "2021-07-13T19:05:51.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622166",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/622167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r669038486\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,36 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    int32_t len = 8 * sizeof(value);                                                  \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, len));   \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate binary representation iteratively */                                  \\\n+    gdv_u##IN_TYPE i;                                                                 \\\n+    bool first = false; /* flag for not printing left zeros in positive numbers */    \\\n+    for (i = static_cast<gdv_u##IN_TYPE>(1) << (len - 1); i > 0; i = i / 2) {         \\\n+      if ((value & i) != 0) {                                                         \\\n+        ret[*out_len] = '1';                                                          \\\n+        if (!first) first = true;                                                     \\\n+      } else {                                                                        \\\n+        if (!first) continue;                                                         \\\n+        ret[*out_len] = '0';                                                          \\\n+      }                                                                               \\\n+      *out_len += 1;                                                                  \\\n\nReview comment:\n       nit: use a local variable to update and assign it to *out_len at last\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T19:10:24.976+0000",
                    "updated": "2021-07-13T19:10:24.976+0000",
                    "started": "2021-07-13T19:10:24.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622167",
                    "issueId": "13383380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/worklog/622293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes commented on a change in pull request #10516:\nURL: https://github.com/apache/arrow/pull/10516#discussion_r669179317\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -367,4 +367,36 @@ gdv_float64 get_scale_multiplier(gdv_int32 scale) {\n   return power_float64_float64(10.0, scale);\n }\n \n+// returns the binary representation of a given integer (e.g. 928 -> 1110100000)\n+#define BIN_INTEGER(IN_TYPE)                                                          \\\n+  FORCE_INLINE                                                                        \\\n+  const char* bin_##IN_TYPE(int64_t context, gdv_##IN_TYPE value, int32_t* out_len) { \\\n+    *out_len = 0;                                                                     \\\n+    int32_t len = 8 * sizeof(value);                                                  \\\n+    char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, len));   \\\n+    if (ret == nullptr) {                                                             \\\n+      gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output\");  \\\n+      return \"\";                                                                      \\\n+    }                                                                                 \\\n+    /* generate binary representation iteratively */                                  \\\n+    gdv_u##IN_TYPE i;                                                                 \\\n+    bool first = false; /* flag for not printing left zeros in positive numbers */    \\\n+    for (i = static_cast<gdv_u##IN_TYPE>(1) << (len - 1); i > 0; i = i / 2) {         \\\n+      if ((value & i) != 0) {                                                         \\\n\nReview comment:\n       You are right! Added the handler for that case and also added tests to cover it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T23:38:06.806+0000",
                    "updated": "2021-07-13T23:38:06.806+0000",
                    "started": "2021-07-13T23:38:06.806+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622293",
                    "issueId": "13383380"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5cce0377[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ba1accc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cde4ffa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5a8f4d61[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f0fa030[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6698d4de[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5887e668[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@78c35c5c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a0f7d54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1a9170ef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dc26173[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f81e32b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 15 16:01:06 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-15T16:01:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13049/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-06-11T10:21:18.000+0000",
        "updated": "2021-07-15T16:01:13.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement BIN Hive function on Gandiva",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement BIN Hive function on Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383380/comment/17381438",
                    "id": "17381438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10516\n[https://github.com/apache/arrow/pull/10516]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-15T16:01:06.958+0000",
                    "updated": "2021-07-15T16:01:06.958+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0rvjc:",
        "customfield_12314139": null
    }
}