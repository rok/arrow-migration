{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13354129",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129",
    "key": "ARROW-11361",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11361/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr opened a new pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304\n\n\n   create a from_iter implementation for Buffer to collect boolean flags into a buffer that will:\r\n   * pre-allocate the appropriate size based on iterator site_hint()\r\n   * 'buffer' a byte in-memory until it's complete (at which point it is written)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:38:04.358+0000",
                    "updated": "2021-01-23T18:38:04.358+0000",
                    "started": "2021-01-23T18:38:04.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540591",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766158211\n\n\n   https://issues.apache.org/jira/browse/ARROW-11361\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:38:17.689+0000",
                    "updated": "2021-01-23T18:38:17.689+0000",
                    "started": "2021-01-23T18:38:17.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540592",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563185541\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1260,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n\nReview comment:\n       I prefer this implementation to the 'Buffer' implementation, since it has less pointer juggling.\r\n   Originally, it was hair slower...  but with the MutableBuffer improvements, it appears to be a bit faster...  so that's good.\r\n   ```\r\n   group                                         bool-ecd919bde\r\n   -----                                         --------------\r\n   Buffer::from_iter bool                        1.00      7.2\u00b10.06ms        ? B/sec\r\n   MutableBuffer iter bitset                     1.00     62.1\u00b10.05ms        ? B/sec\r\n   MutableBuffer::from_iter bool                 1.00      6.3\u00b10.01ms        ? B/sec\r\n   ```\r\n   \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:46:48.371+0000",
                    "updated": "2021-01-23T18:46:48.371+0000",
                    "started": "2021-01-23T18:46:48.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540594",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563185759\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -241,6 +241,67 @@ impl<T: AsRef<[u8]>> From<T> for Buffer {\n     }\n }\n \n+/// Creating a `Buffer` instance by storing the boolean values into the buffer\n+impl std::iter::FromIterator<bool> for Buffer {\n+    fn from_iter<I>(iter: I) -> Self\n\nReview comment:\n       TODO: forward to the MutableBuffer implementation, since it doesn't look like there will be a performance penalty.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:48:31.522+0000",
                    "updated": "2021-01-23T18:48:31.522+0000",
                    "started": "2021-01-23T18:48:31.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540595",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766160749\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=h1) Report\n   > Merging [#9304](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=desc) (0e75531) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.01%`.\n   > The diff coverage is `88.37%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9304/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9304      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.85%   +0.01%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53035      +86     \n   ==========================================\n   + Hits        43336    43412      +76     \n   - Misses       9613     9623      +10     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `92.84% <88.09%> (-0.84%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/comparison.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2NvbXBhcmlzb24ucnM=) | `96.00% <100.00%> (+0.01%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=footer). Last update [67d0c2e...0e75531](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:55:48.377+0000",
                    "updated": "2021-01-23T18:55:48.377+0000",
                    "started": "2021-01-23T18:55:48.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540599",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766160749\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=h1) Report\n   > Merging [#9304](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=desc) (38d4e39) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.00%`.\n   > The diff coverage is `91.37%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9304/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #9304   +/-   ##\n   =======================================\n     Coverage   81.84%   81.85%           \n   =======================================\n     Files         215      215           \n     Lines       52949    53007   +58     \n   =======================================\n   + Hits        43336    43388   +52     \n   - Misses       9613     9619    +6     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `93.40% <91.07%> (-0.28%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/comparison.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2NvbXBhcmlzb24ucnM=) | `96.00% <100.00%> (+0.01%)` | :arrow_up: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.24% <0.00%> (-0.20%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=footer). Last update [67d0c2e...38d4e39](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T19:16:26.829+0000",
                    "updated": "2021-01-23T19:16:26.829+0000",
                    "started": "2021-01-23T19:16:26.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540609",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766172368\n\n\n   Hi. This looks good. I tried this some time ago but was unable to make it efficient. Do you have the benchmarks for the comparison kernels?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T20:11:56.798+0000",
                    "updated": "2021-01-23T20:11:56.798+0000",
                    "started": "2021-01-23T20:11:56.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540621",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766160749\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=h1) Report\n   > Merging [#9304](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=desc) (466c41b) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.01%`.\n   > The diff coverage is `91.37%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9304/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9304      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.85%   +0.01%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53007      +58     \n   ==========================================\n   + Hits        43336    43389      +53     \n   - Misses       9613     9618       +5     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `93.40% <91.07%> (-0.28%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/comparison.rs](https://codecov.io/gh/apache/arrow/pull/9304/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2NvbXBhcmlzb24ucnM=) | `96.00% <100.00%> (+0.01%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=footer). Last update [67d0c2e...466c41b](https://codecov.io/gh/apache/arrow/pull/9304?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T20:50:21.586+0000",
                    "updated": "2021-01-23T20:50:21.586+0000",
                    "started": "2021-01-23T20:50:21.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540626",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766177143\n\n\n   The 10% impacts are:\r\n   ```\r\n   critcmp master-67d0c2e3 bool-38d4e395 -t 10\r\n   group                        bool-38d4e395                          master-67d0c2e3\r\n   -----                        -------------                          ---------------\r\n   add_nulls_512                1.30    343.7\u00b10.62ns        ? B/sec    1.00    264.4\u00b11.80ns        ? B/sec\r\n   cast float32 to int32 512    1.13      3.2\u00b10.01\u00b5s        ? B/sec    1.00      2.8\u00b10.01\u00b5s        ? B/sec\r\n   concat str nulls 1024        1.10     21.1\u00b10.06\u00b5s        ? B/sec    1.00     19.1\u00b10.11\u00b5s        ? B/sec\r\n   eq Float32                   1.00     89.0\u00b10.10\u00b5s        ? B/sec    1.42    126.0\u00b10.28\u00b5s        ? B/sec\r\n   eq scalar Float32            1.11     78.0\u00b10.12\u00b5s        ? B/sec    1.00     70.2\u00b10.11\u00b5s        ? B/sec\r\n   gt scalar Float32            1.36     71.8\u00b10.15\u00b5s        ? B/sec    1.00     52.7\u00b10.09\u00b5s        ? B/sec\r\n   gt_eq Float32                1.00     75.5\u00b10.12\u00b5s        ? B/sec    1.65    124.6\u00b10.22\u00b5s        ? B/sec\r\n   lt scalar Float32            1.15     71.1\u00b10.15\u00b5s        ? B/sec    1.00     62.0\u00b10.51\u00b5s        ? B/sec\r\n   lt_eq Float32                1.00     74.3\u00b10.11\u00b5s        ? B/sec    1.66    123.5\u00b10.28\u00b5s        ? B/sec\r\n   lt_eq scalar Float32         1.00     61.5\u00b10.56\u00b5s        ? B/sec    1.45     88.9\u00b10.22\u00b5s        ? B/sec\r\n   multiply 512                 1.00    262.0\u00b10.38ns        ? B/sec    1.32    345.1\u00b14.37ns        ? B/sec\r\n   neq scalar Float32           1.20     78.6\u00b10.81\u00b5s        ? B/sec    1.00     65.5\u00b10.65\u00b5s        ? B/sec\r\n   or                           1.00   1590.0\u00b12.45ns        ? B/sec    1.11  1760.7\u00b114.78ns        ? B/sec\r\n   subtract 512                 1.43    369.9\u00b15.24ns        ? B/sec    1.00    258.4\u00b10.40ns        ? B/sec\r\n   take i32 1024                1.10   1871.4\u00b13.67ns        ? B/sec    1.00   1695.3\u00b14.85ns        ? B/sec\r\n   take i32 512                 1.00    928.5\u00b11.79ns        ? B/sec    1.12  1043.4\u00b113.97ns        ? B/sec\r\n   take i32 nulls 512           1.10   1074.7\u00b11.81ns        ? B/sec    1.00    975.5\u00b11.60ns        ? B/sec\r\n   ```\r\n   So it's hard to see through the noise... but I think it looks performance neutral?  (I don't think take/subtract/multiply/concat/cast/add interact with this api at all, so those should just be noise).\r\n   \r\n   The only other kernel that I think might be able to take advantage of this might be 'take'... I believe it does bit-by-bit buffer to copy the 'taken' null values...  But I haven't looked at whether it actually would benefit.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T20:50:54.624+0000",
                    "updated": "2021-01-23T20:50:54.624+0000",
                    "started": "2021-01-23T20:50:54.623+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540627",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-766189316\n\n\n   Big things I haven't tried that MIGHT give some gains would be:\r\n   * manually unrolling the loop for the last 7 bits\r\n   * relying on iter<Item=[bool;8]> in the API (but that would require callers to construct a slice of bools rather than an iter of bools)\r\n   ** related to this, I have no idea if there are simd primitives that could be of use here \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T22:25:38.358+0000",
                    "updated": "2021-01-23T22:25:38.358+0000",
                    "started": "2021-01-23T22:25:38.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540636",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563279700\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       I think you could merge the `iterator.next()` loops here.\r\n   and maybe do the bit masking loop like this:\r\n   \r\n   ```rust\r\n   loop {\r\n       let mut byte_accum  = 0;\r\n       let mut mask = 1;\r\n   \r\n       while mask <= 0b10000000 {\r\n           if let Some(value) = iterator.next() {\r\n               byte_accum |= match value {\r\n                   true => mask,\r\n                   false => 0,\r\n               };\r\n               mask <<= 1;\r\n           } else {\r\n               exhausted = true;\r\n               break;\r\n          }\r\n      }\r\n   }\r\n   \r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T11:44:28.403+0000",
                    "updated": "2021-01-24T11:44:28.403+0000",
                    "started": "2021-01-24T11:44:28.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540702",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540765",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563336446\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       That approach seems to be worse in the micro-benchmark, but better for the comparison kernel.\r\n   ```\r\n   critcmp master-67d0c2e3 bool-38d4e395 bool-11dd14af -t 10\r\n   group                                    bool-11dd14af                          bool-38d4e395                          master-67d0c2e3\r\n   -----                                    -------------                          -------------                          ---------------\r\n   Buffer::from_iter bool                   1.66     10.2\u00b10.02ms        ? B/sec    1.00      6.2\u00b10.01ms        ? B/sec  \r\n   MutableBuffer iter bitset                1.00     56.0\u00b10.11ms        ? B/sec    1.12     62.5\u00b10.13ms        ? B/sec  \r\n   MutableBuffer::from_iter bool            1.45      8.9\u00b10.02ms        ? B/sec    1.00      6.1\u00b10.01ms        ? B/sec  \r\n   add 512                                  1.06    225.1\u00b11.05ns        ? B/sec    1.00    212.9\u00b10.56ns        ? B/sec    1.38    293.0\u00b11.54ns        ? B/sec\r\n   array_from_vec 256                       1.00    629.6\u00b12.56ns        ? B/sec    1.03    649.4\u00b11.78ns        ? B/sec    1.11    701.7\u00b11.29ns        ? B/sec\r\n   cast int64 to int32 512                  1.00      2.2\u00b10.01\u00b5s        ? B/sec    1.14      2.5\u00b10.01\u00b5s        ? B/sec    1.02      2.3\u00b10.01\u00b5s        ? B/sec\r\n   cast time32s to time32ms 512             1.23    901.3\u00b12.65ns        ? B/sec    1.01    736.1\u00b11.17ns        ? B/sec    1.00    731.5\u00b11.15ns        ? B/sec\r\n   cast timestamp_ms to timestamp_ns 512    1.17   1211.8\u00b12.48ns        ? B/sec    1.00   1036.8\u00b11.71ns        ? B/sec    1.11   1149.7\u00b12.41ns        ? B/sec\r\n   eq Float32                               1.00     84.6\u00b10.08\u00b5s        ? B/sec    1.05     89.2\u00b10.28\u00b5s        ? B/sec    1.49    125.9\u00b10.23\u00b5s        ? B/sec\r\n   eq scalar Float32                        1.02     71.2\u00b10.08\u00b5s        ? B/sec    1.12     78.2\u00b10.18\u00b5s        ? B/sec    1.00     69.8\u00b10.07\u00b5s        ? B/sec\r\n   from_slice                               1.00    488.4\u00b10.92\u00b5s        ? B/sec    1.81    883.0\u00b11.48\u00b5s        ? B/sec    1.76    861.2\u00b11.55\u00b5s        ? B/sec\r\n   from_slice prepared                      1.00    480.7\u00b11.00\u00b5s        ? B/sec    1.15    552.1\u00b11.44\u00b5s        ? B/sec    1.18    564.8\u00b10.85\u00b5s        ? B/sec\r\n   gt scalar Float32                        1.24     64.8\u00b10.06\u00b5s        ? B/sec    1.37     71.5\u00b10.07\u00b5s        ? B/sec    1.00     52.4\u00b10.06\u00b5s        ? B/sec\r\n   gt_eq Float32                            1.00     72.3\u00b10.26\u00b5s        ? B/sec    1.04     75.3\u00b10.09\u00b5s        ? B/sec    1.72    124.2\u00b10.09\u00b5s        ? B/sec\r\n   lt scalar Float32                        1.07     65.5\u00b10.09\u00b5s        ? B/sec    1.15     70.9\u00b10.13\u00b5s        ? B/sec    1.00     61.4\u00b10.09\u00b5s        ? B/sec\r\n   lt_eq Float32                            1.00     72.0\u00b10.07\u00b5s        ? B/sec    1.03     74.2\u00b10.08\u00b5s        ? B/sec    1.71    123.1\u00b10.23\u00b5s        ? B/sec\r\n   lt_eq scalar Float32                     1.00     58.0\u00b10.10\u00b5s        ? B/sec    1.05     61.1\u00b10.07\u00b5s        ? B/sec    1.52     88.3\u00b10.15\u00b5s        ? B/sec\r\n   min nulls 512                            1.11      2.1\u00b10.01\u00b5s        ? B/sec    1.03  1961.9\u00b113.05ns        ? B/sec    1.00  1908.7\u00b119.95ns        ? B/sec\r\n   multiply 512                             1.34    350.1\u00b10.66ns        ? B/sec    1.30    339.1\u00b10.32ns        ? B/sec    1.00    261.6\u00b10.30ns        ? B/sec\r\n   mutable                                  3.79   1630.3\u00b12.29\u00b5s        ? B/sec    1.00    429.8\u00b11.01\u00b5s        ? B/sec    1.02    436.7\u00b11.19\u00b5s        ? B/sec\r\n   mutable extend                           2.45      2.0\u00b10.00ms        ? B/sec    1.00    835.7\u00b13.31\u00b5s        ? B/sec    1.01    846.4\u00b11.40\u00b5s        ? B/sec\r\n   mutable iter extend_from_slice           2.20      2.2\u00b10.00ms        ? B/sec    1.00   1007.3\u00b11.72\u00b5s        ? B/sec  \r\n   mutable str nulls 1024                   1.16      5.4\u00b10.01ms        ? B/sec    1.00      4.7\u00b10.01ms        ? B/sec    1.05      4.9\u00b10.01ms        ? B/sec\r\n   neq scalar Float32                       1.12     71.3\u00b10.12\u00b5s        ? B/sec    1.23     78.2\u00b10.08\u00b5s        ? B/sec    1.00     63.6\u00b10.18\u00b5s        ? B/sec\r\n   not                                      1.13   1145.6\u00b11.91ns        ? B/sec    1.13   1146.5\u00b11.20ns        ? B/sec    1.00   1014.1\u00b10.90ns        ? B/sec\r\n   subtract 512                             1.02    258.8\u00b11.15ns        ? B/sec    1.40    354.9\u00b10.66ns        ? B/sec \r\n   ```\r\n   \r\n   I may try playing with the baselines to see if I'm missing a black-box that's causing an unrealistic optimization...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T19:16:29.076+0000",
                    "updated": "2021-01-24T19:16:29.076+0000",
                    "started": "2021-01-24T19:16:29.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540765",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563336446\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       That approach seems to be worse in the micro-benchmark, but better for the comparison kernel.\r\n   ```\r\n   critcmp master-67d0c2e3 bool-38d4e395 bool-11dd14af -t 10\r\n   group                                    bool-11dd14af                          bool-38d4e395                          master-67d0c2e3\r\n   -----                                    -------------                          -------------                          ---------------\r\n   Buffer::from_iter bool                   1.66     10.2\u00b10.02ms        ? B/sec    1.00      6.2\u00b10.01ms        ? B/sec  \r\n   MutableBuffer iter bitset                1.00     56.0\u00b10.11ms        ? B/sec    1.12     62.5\u00b10.13ms        ? B/sec  \r\n   MutableBuffer::from_iter bool            1.45      8.9\u00b10.02ms        ? B/sec    1.00      6.1\u00b10.01ms        ? B/sec  \r\n   add 512                                  1.06    225.1\u00b11.05ns        ? B/sec    1.00    212.9\u00b10.56ns        ? B/sec    1.38    293.0\u00b11.54ns        ? B/sec\r\n   array_from_vec 256                       1.00    629.6\u00b12.56ns        ? B/sec    1.03    649.4\u00b11.78ns        ? B/sec    1.11    701.7\u00b11.29ns        ? B/sec\r\n   cast int64 to int32 512                  1.00      2.2\u00b10.01\u00b5s        ? B/sec    1.14      2.5\u00b10.01\u00b5s        ? B/sec    1.02      2.3\u00b10.01\u00b5s        ? B/sec\r\n   cast time32s to time32ms 512             1.23    901.3\u00b12.65ns        ? B/sec    1.01    736.1\u00b11.17ns        ? B/sec    1.00    731.5\u00b11.15ns        ? B/sec\r\n   cast timestamp_ms to timestamp_ns 512    1.17   1211.8\u00b12.48ns        ? B/sec    1.00   1036.8\u00b11.71ns        ? B/sec    1.11   1149.7\u00b12.41ns        ? B/sec\r\n   eq Float32                               1.00     84.6\u00b10.08\u00b5s        ? B/sec    1.05     89.2\u00b10.28\u00b5s        ? B/sec    1.49    125.9\u00b10.23\u00b5s        ? B/sec\r\n   eq scalar Float32                        1.02     71.2\u00b10.08\u00b5s        ? B/sec    1.12     78.2\u00b10.18\u00b5s        ? B/sec    1.00     69.8\u00b10.07\u00b5s        ? B/sec\r\n   from_slice                               1.00    488.4\u00b10.92\u00b5s        ? B/sec    1.81    883.0\u00b11.48\u00b5s        ? B/sec    1.76    861.2\u00b11.55\u00b5s        ? B/sec\r\n   from_slice prepared                      1.00    480.7\u00b11.00\u00b5s        ? B/sec    1.15    552.1\u00b11.44\u00b5s        ? B/sec    1.18    564.8\u00b10.85\u00b5s        ? B/sec\r\n   gt scalar Float32                        1.24     64.8\u00b10.06\u00b5s        ? B/sec    1.37     71.5\u00b10.07\u00b5s        ? B/sec    1.00     52.4\u00b10.06\u00b5s        ? B/sec\r\n   gt_eq Float32                            1.00     72.3\u00b10.26\u00b5s        ? B/sec    1.04     75.3\u00b10.09\u00b5s        ? B/sec    1.72    124.2\u00b10.09\u00b5s        ? B/sec\r\n   lt scalar Float32                        1.07     65.5\u00b10.09\u00b5s        ? B/sec    1.15     70.9\u00b10.13\u00b5s        ? B/sec    1.00     61.4\u00b10.09\u00b5s        ? B/sec\r\n   lt_eq Float32                            1.00     72.0\u00b10.07\u00b5s        ? B/sec    1.03     74.2\u00b10.08\u00b5s        ? B/sec    1.71    123.1\u00b10.23\u00b5s        ? B/sec\r\n   lt_eq scalar Float32                     1.00     58.0\u00b10.10\u00b5s        ? B/sec    1.05     61.1\u00b10.07\u00b5s        ? B/sec    1.52     88.3\u00b10.15\u00b5s        ? B/sec\r\n   min nulls 512                            1.11      2.1\u00b10.01\u00b5s        ? B/sec    1.03  1961.9\u00b113.05ns        ? B/sec    1.00  1908.7\u00b119.95ns        ? B/sec\r\n   multiply 512                             1.34    350.1\u00b10.66ns        ? B/sec    1.30    339.1\u00b10.32ns        ? B/sec    1.00    261.6\u00b10.30ns        ? B/sec\r\n   mutable                                  3.79   1630.3\u00b12.29\u00b5s        ? B/sec    1.00    429.8\u00b11.01\u00b5s        ? B/sec    1.02    436.7\u00b11.19\u00b5s        ? B/sec\r\n   mutable extend                           2.45      2.0\u00b10.00ms        ? B/sec    1.00    835.7\u00b13.31\u00b5s        ? B/sec    1.01    846.4\u00b11.40\u00b5s        ? B/sec\r\n   mutable iter extend_from_slice           2.20      2.2\u00b10.00ms        ? B/sec    1.00   1007.3\u00b11.72\u00b5s        ? B/sec  \r\n   mutable str nulls 1024                   1.16      5.4\u00b10.01ms        ? B/sec    1.00      4.7\u00b10.01ms        ? B/sec    1.05      4.9\u00b10.01ms        ? B/sec\r\n   neq scalar Float32                       1.12     71.3\u00b10.12\u00b5s        ? B/sec    1.23     78.2\u00b10.08\u00b5s        ? B/sec    1.00     63.6\u00b10.18\u00b5s        ? B/sec\r\n   not                                      1.13   1145.6\u00b11.91ns        ? B/sec    1.13   1146.5\u00b11.20ns        ? B/sec    1.00   1014.1\u00b10.90ns        ? B/sec\r\n   subtract 512                             1.02    258.8\u00b11.15ns        ? B/sec    1.40    354.9\u00b10.66ns        ? B/sec \r\n   ```\r\n   \r\n   I may try playing with the benchmarks to see if I'm missing a black-box that's causing an unrealistic optimization...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T19:16:42.148+0000",
                    "updated": "2021-01-24T19:16:42.148+0000",
                    "started": "2021-01-24T19:16:42.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540766",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563393453\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       After making that change, it seems like this could be achieved without requiring any changes to the previous Buffer API's: The byte-accumulation loop could be exposed as a PackedBoolIterator that wraps an Iter<bool>, exposing it as Iter<u8>().  I'm not sure if that would a better or worse approach...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T22:15:31.961+0000",
                    "updated": "2021-01-24T22:15:31.961+0000",
                    "started": "2021-01-24T22:15:31.961+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540785",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/540786",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563393453\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       After making that change, it seems like this could be achieved without requiring any changes to the previous Buffer API's: The byte-accumulation loop could be exposed as a ```PackedBoolIterator``` that wraps an ```Iterator<Item=bool>```, exposing it as ``Iterator<Item=u8>()```.  I'm not sure if that would a better or worse approach...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-24T22:16:25.024+0000",
                    "updated": "2021-01-24T22:16:25.024+0000",
                    "started": "2021-01-24T22:16:25.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540786",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/541554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#discussion_r563336446\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       That approach seems to be worse in the micro-benchmark, but better for the comparison kernel.\r\n   ```\r\n   critcmp master-67d0c2e3 bool-38d4e395 bool-11dd14af -t 10\r\n   group                                    bool-11dd14af                          bool-38d4e395                          master-67d0c2e3\r\n   -----                                    -------------                          -------------                          ---------------\r\n   Buffer::from_iter bool                   1.66     10.2\u00b10.02ms        ? B/sec    1.00      6.2\u00b10.01ms        ? B/sec  \r\n   MutableBuffer iter bitset                1.00     56.0\u00b10.11ms        ? B/sec    1.12     62.5\u00b10.13ms        ? B/sec  \r\n   MutableBuffer::from_iter bool            1.45      8.9\u00b10.02ms        ? B/sec    1.00      6.1\u00b10.01ms        ? B/sec  \r\n   add 512                                  1.06    225.1\u00b11.05ns        ? B/sec    1.00    212.9\u00b10.56ns        ? B/sec    1.38    293.0\u00b11.54ns        ? B/sec\r\n   array_from_vec 256                       1.00    629.6\u00b12.56ns        ? B/sec    1.03    649.4\u00b11.78ns        ? B/sec    1.11    701.7\u00b11.29ns        ? B/sec\r\n   cast int64 to int32 512                  1.00      2.2\u00b10.01\u00b5s        ? B/sec    1.14      2.5\u00b10.01\u00b5s        ? B/sec    1.02      2.3\u00b10.01\u00b5s        ? B/sec\r\n   cast time32s to time32ms 512             1.23    901.3\u00b12.65ns        ? B/sec    1.01    736.1\u00b11.17ns        ? B/sec    1.00    731.5\u00b11.15ns        ? B/sec\r\n   cast timestamp_ms to timestamp_ns 512    1.17   1211.8\u00b12.48ns        ? B/sec    1.00   1036.8\u00b11.71ns        ? B/sec    1.11   1149.7\u00b12.41ns        ? B/sec\r\n   eq Float32                               1.00     84.6\u00b10.08\u00b5s        ? B/sec    1.05     89.2\u00b10.28\u00b5s        ? B/sec    1.49    125.9\u00b10.23\u00b5s        ? B/sec\r\n   eq scalar Float32                        1.02     71.2\u00b10.08\u00b5s        ? B/sec    1.12     78.2\u00b10.18\u00b5s        ? B/sec    1.00     69.8\u00b10.07\u00b5s        ? B/sec\r\n   from_slice                               1.00    488.4\u00b10.92\u00b5s        ? B/sec    1.81    883.0\u00b11.48\u00b5s        ? B/sec    1.76    861.2\u00b11.55\u00b5s        ? B/sec\r\n   from_slice prepared                      1.00    480.7\u00b11.00\u00b5s        ? B/sec    1.15    552.1\u00b11.44\u00b5s        ? B/sec    1.18    564.8\u00b10.85\u00b5s        ? B/sec\r\n   gt scalar Float32                        1.24     64.8\u00b10.06\u00b5s        ? B/sec    1.37     71.5\u00b10.07\u00b5s        ? B/sec    1.00     52.4\u00b10.06\u00b5s        ? B/sec\r\n   gt_eq Float32                            1.00     72.3\u00b10.26\u00b5s        ? B/sec    1.04     75.3\u00b10.09\u00b5s        ? B/sec    1.72    124.2\u00b10.09\u00b5s        ? B/sec\r\n   lt scalar Float32                        1.07     65.5\u00b10.09\u00b5s        ? B/sec    1.15     70.9\u00b10.13\u00b5s        ? B/sec    1.00     61.4\u00b10.09\u00b5s        ? B/sec\r\n   lt_eq Float32                            1.00     72.0\u00b10.07\u00b5s        ? B/sec    1.03     74.2\u00b10.08\u00b5s        ? B/sec    1.71    123.1\u00b10.23\u00b5s        ? B/sec\r\n   lt_eq scalar Float32                     1.00     58.0\u00b10.10\u00b5s        ? B/sec    1.05     61.1\u00b10.07\u00b5s        ? B/sec    1.52     88.3\u00b10.15\u00b5s        ? B/sec\r\n   min nulls 512                            1.11      2.1\u00b10.01\u00b5s        ? B/sec    1.03  1961.9\u00b113.05ns        ? B/sec    1.00  1908.7\u00b119.95ns        ? B/sec\r\n   multiply 512                             1.34    350.1\u00b10.66ns        ? B/sec    1.30    339.1\u00b10.32ns        ? B/sec    1.00    261.6\u00b10.30ns        ? B/sec\r\n   mutable                                  3.79   1630.3\u00b12.29\u00b5s        ? B/sec    1.00    429.8\u00b11.01\u00b5s        ? B/sec    1.02    436.7\u00b11.19\u00b5s        ? B/sec\r\n   mutable extend                           2.45      2.0\u00b10.00ms        ? B/sec    1.00    835.7\u00b13.31\u00b5s        ? B/sec    1.01    846.4\u00b11.40\u00b5s        ? B/sec\r\n   mutable iter extend_from_slice           2.20      2.2\u00b10.00ms        ? B/sec    1.00   1007.3\u00b11.72\u00b5s        ? B/sec  \r\n   mutable str nulls 1024                   1.16      5.4\u00b10.01ms        ? B/sec    1.00      4.7\u00b10.01ms        ? B/sec    1.05      4.9\u00b10.01ms        ? B/sec\r\n   neq scalar Float32                       1.12     71.3\u00b10.12\u00b5s        ? B/sec    1.23     78.2\u00b10.08\u00b5s        ? B/sec    1.00     63.6\u00b10.18\u00b5s        ? B/sec\r\n   not                                      1.13   1145.6\u00b11.91ns        ? B/sec    1.13   1146.5\u00b11.20ns        ? B/sec    1.00   1014.1\u00b10.90ns        ? B/sec\r\n   subtract 512                             1.02    258.8\u00b11.15ns        ? B/sec    1.40    354.9\u00b10.66ns        ? B/sec \r\n   ```\r\n   \r\n   I may try playing with the baselines to see if I'm missing a black-box that's causing an unrealistic optimization...\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       That approach seems to be worse in the micro-benchmark, but better for the comparison kernel.\r\n   ```\r\n   critcmp master-67d0c2e3 bool-38d4e395 bool-11dd14af -t 10\r\n   group                                    bool-11dd14af                          bool-38d4e395                          master-67d0c2e3\r\n   -----                                    -------------                          -------------                          ---------------\r\n   Buffer::from_iter bool                   1.66     10.2\u00b10.02ms        ? B/sec    1.00      6.2\u00b10.01ms        ? B/sec  \r\n   MutableBuffer iter bitset                1.00     56.0\u00b10.11ms        ? B/sec    1.12     62.5\u00b10.13ms        ? B/sec  \r\n   MutableBuffer::from_iter bool            1.45      8.9\u00b10.02ms        ? B/sec    1.00      6.1\u00b10.01ms        ? B/sec  \r\n   add 512                                  1.06    225.1\u00b11.05ns        ? B/sec    1.00    212.9\u00b10.56ns        ? B/sec    1.38    293.0\u00b11.54ns        ? B/sec\r\n   array_from_vec 256                       1.00    629.6\u00b12.56ns        ? B/sec    1.03    649.4\u00b11.78ns        ? B/sec    1.11    701.7\u00b11.29ns        ? B/sec\r\n   cast int64 to int32 512                  1.00      2.2\u00b10.01\u00b5s        ? B/sec    1.14      2.5\u00b10.01\u00b5s        ? B/sec    1.02      2.3\u00b10.01\u00b5s        ? B/sec\r\n   cast time32s to time32ms 512             1.23    901.3\u00b12.65ns        ? B/sec    1.01    736.1\u00b11.17ns        ? B/sec    1.00    731.5\u00b11.15ns        ? B/sec\r\n   cast timestamp_ms to timestamp_ns 512    1.17   1211.8\u00b12.48ns        ? B/sec    1.00   1036.8\u00b11.71ns        ? B/sec    1.11   1149.7\u00b12.41ns        ? B/sec\r\n   eq Float32                               1.00     84.6\u00b10.08\u00b5s        ? B/sec    1.05     89.2\u00b10.28\u00b5s        ? B/sec    1.49    125.9\u00b10.23\u00b5s        ? B/sec\r\n   eq scalar Float32                        1.02     71.2\u00b10.08\u00b5s        ? B/sec    1.12     78.2\u00b10.18\u00b5s        ? B/sec    1.00     69.8\u00b10.07\u00b5s        ? B/sec\r\n   from_slice                               1.00    488.4\u00b10.92\u00b5s        ? B/sec    1.81    883.0\u00b11.48\u00b5s        ? B/sec    1.76    861.2\u00b11.55\u00b5s        ? B/sec\r\n   from_slice prepared                      1.00    480.7\u00b11.00\u00b5s        ? B/sec    1.15    552.1\u00b11.44\u00b5s        ? B/sec    1.18    564.8\u00b10.85\u00b5s        ? B/sec\r\n   gt scalar Float32                        1.24     64.8\u00b10.06\u00b5s        ? B/sec    1.37     71.5\u00b10.07\u00b5s        ? B/sec    1.00     52.4\u00b10.06\u00b5s        ? B/sec\r\n   gt_eq Float32                            1.00     72.3\u00b10.26\u00b5s        ? B/sec    1.04     75.3\u00b10.09\u00b5s        ? B/sec    1.72    124.2\u00b10.09\u00b5s        ? B/sec\r\n   lt scalar Float32                        1.07     65.5\u00b10.09\u00b5s        ? B/sec    1.15     70.9\u00b10.13\u00b5s        ? B/sec    1.00     61.4\u00b10.09\u00b5s        ? B/sec\r\n   lt_eq Float32                            1.00     72.0\u00b10.07\u00b5s        ? B/sec    1.03     74.2\u00b10.08\u00b5s        ? B/sec    1.71    123.1\u00b10.23\u00b5s        ? B/sec\r\n   lt_eq scalar Float32                     1.00     58.0\u00b10.10\u00b5s        ? B/sec    1.05     61.1\u00b10.07\u00b5s        ? B/sec    1.52     88.3\u00b10.15\u00b5s        ? B/sec\r\n   min nulls 512                            1.11      2.1\u00b10.01\u00b5s        ? B/sec    1.03  1961.9\u00b113.05ns        ? B/sec    1.00  1908.7\u00b119.95ns        ? B/sec\r\n   multiply 512                             1.34    350.1\u00b10.66ns        ? B/sec    1.30    339.1\u00b10.32ns        ? B/sec    1.00    261.6\u00b10.30ns        ? B/sec\r\n   mutable                                  3.79   1630.3\u00b12.29\u00b5s        ? B/sec    1.00    429.8\u00b11.01\u00b5s        ? B/sec    1.02    436.7\u00b11.19\u00b5s        ? B/sec\r\n   mutable extend                           2.45      2.0\u00b10.00ms        ? B/sec    1.00    835.7\u00b13.31\u00b5s        ? B/sec    1.01    846.4\u00b11.40\u00b5s        ? B/sec\r\n   mutable iter extend_from_slice           2.20      2.2\u00b10.00ms        ? B/sec    1.00   1007.3\u00b11.72\u00b5s        ? B/sec  \r\n   mutable str nulls 1024                   1.16      5.4\u00b10.01ms        ? B/sec    1.00      4.7\u00b10.01ms        ? B/sec    1.05      4.9\u00b10.01ms        ? B/sec\r\n   neq scalar Float32                       1.12     71.3\u00b10.12\u00b5s        ? B/sec    1.23     78.2\u00b10.08\u00b5s        ? B/sec    1.00     63.6\u00b10.18\u00b5s        ? B/sec\r\n   not                                      1.13   1145.6\u00b11.91ns        ? B/sec    1.13   1146.5\u00b11.20ns        ? B/sec    1.00   1014.1\u00b10.90ns        ? B/sec\r\n   subtract 512                             1.02    258.8\u00b11.15ns        ? B/sec    1.40    354.9\u00b10.66ns        ? B/sec \r\n   ```\r\n   \r\n   I may try playing with the benchmarks to see if I'm missing a black-box that's causing an unrealistic optimization...\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       After making that change, it seems like this could be achieved without requiring any changes to the previous Buffer API's: The byte-accumulation loop could be exposed as a PackedBoolIterator that wraps an Iter<bool>, exposing it as Iter<u8>().  I'm not sure if that would a better or worse approach...\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -1188,6 +1209,57 @@ impl Drop for SetLenOnDrop<'_> {\n     }\n }\n \n+/// Creating a `MutableBuffer` instance by setting bits according to the boolean values\n+impl std::iter::FromIterator<bool> for MutableBuffer {\n+    fn from_iter<I>(iter: I) -> Self\n+    where\n+        I: IntoIterator<Item = bool>,\n+    {\n+        let mut iterator = iter.into_iter();\n+        let mut result = {\n+            let byte_capacity: usize = iterator.size_hint().0.saturating_add(7) / 8;\n+            MutableBuffer::new(byte_capacity)\n+        };\n+\n+        while let Some(value) = iterator.next() {\n+            //we have the first bit of the byte\n+            let mut exhausted = false;\n+            let mut byte_accum: u8 = match value {\n\nReview comment:\n       After making that change, it seems like this could be achieved without requiring any changes to the previous Buffer API's: The byte-accumulation loop could be exposed as a ```PackedBoolIterator``` that wraps an ```Iterator<Item=bool>```, exposing it as ``Iterator<Item=u8>()```.  I'm not sure if that would a better or worse approach...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T03:57:54.828+0000",
                    "updated": "2021-01-26T03:57:54.828+0000",
                    "started": "2021-01-26T03:57:54.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541554",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/542905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304#issuecomment-768406002\n\n\n   For me, this is ready to merge, @tyrelr: excellent job here and thanks a lot for this.\r\n   \r\n   Could you rebase it against the latest master? \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-27T16:29:19.213+0000",
                    "updated": "2021-01-27T16:29:19.213+0000",
                    "started": "2021-01-27T16:29:19.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "542905",
                    "issueId": "13354129"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/worklog/544013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #9304:\nURL: https://github.com/apache/arrow/pull/9304\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-29T04:01:12.425+0000",
                    "updated": "2021-01-29T04:01:12.425+0000",
                    "started": "2021-01-29T04:01:12.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "544013",
                    "issueId": "13354129"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7cb78b20[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c8ec17a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53e3992d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@93c173a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d4b887f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@518d21af[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e68e042[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7784a172[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fdd78d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3ec50ea4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67f683ce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@352b2173[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 29 04:01:04 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-29T04:01:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11361/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-01-23T18:32:54.000+0000",
        "updated": "2021-01-29T04:01:13.000+0000",
        "timeoriginalestimate": null,
        "description": "Simplify the creation of bit buffers in the comparison kernel by introducing a standard Iterator<Item=bool> -> Buffer function.\r\n\r\nMost null-buffer logic can rely on byte-level boolean operations, so it may not have much utility outside of the comparison kernel?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Build buffers from iterator of booleans",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354129/comment/17274138",
                    "id": "17274138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 9304\n[https://github.com/apache/arrow/pull/9304]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-29T04:01:04.600+0000",
                    "updated": "2021-01-29T04:01:04.600+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mwpc:",
        "customfield_12314139": null
    }
}