{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13141036",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036",
    "key": "ARROW-2222",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=marco.neumann.by",
            "name": "marco.neumann.by",
            "key": "marco.neumann.by",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Marco Neumann",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2222/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53ec4a21[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71f2a273[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61d86858[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ddbf2a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36fe445a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@42b7eaa1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@608fc007[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@8c307d3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cdb4e05[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@314457dd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fd5360a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3f3841bc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Apr 21 14:35:23 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-21T14:35:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2222/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-26T20:48:13.000+0000",
        "updated": "2018-04-21T14:35:23.000+0000",
        "timeoriginalestimate": null,
        "description": "This is follow up work to ARROW-1589, ARROW-2023, and can be validated by the {{ipc-fuzzer-test}}. Users receiving untrusted input streams can prevent segfaults this way\r\n\r\nAs part of this, we should quantify the overhead associated with message validation in regular use",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add option to validate Flatbuffers messages",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16403422",
                    "id": "16403422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum opened a new pull request #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763\n \n \n   This is a proof of concept of handling untrusted inputs. The error messages aren't filled yet and tests aren't there, but this is everything the fuzzer found after running over an hour. It basically includes the following parts:\r\n   \r\n   ## Flatbuffer validation\r\n   This may be the only thing that could be optional and where we should test the performance impact. It's a single, simple change in `Message::ReadFrom`.\r\n   \r\n   ## nullptr validation\r\n   It seems, that even when we validate the flatbuffer, nullptrs are still legit in many places and we just ignore them. I've added a bunch of checks. We may want to introduce a simple macro for that, that includes error message generation and the return w/ an `IOError`.\r\n   \r\n   ## Integer handling in `BufferReader`\r\n   The `nbytes` argument can be negative since it's a signed integer. I've seen at least one case where the fuzzer tried to produce a negative body size of a message that led to a negative `nbytes` argument, a subsequent negative `position_` and a out of bounds read. I think we should catch the negative body length somewhere else and produce a proper error message, but I'm not sure if that's the only way of provoking \"negative reads\". For robustness, the checks should be there. If someone is to worried about performance, we should rather implement a template-based, header-based, function-inlined interface that reads exactly the number of bytes that are required for certain types.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-17T12:58:45.778+0000",
                    "updated": "2018-03-17T12:58:45.778+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16412670",
                    "id": "16412670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum commented on issue #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763#issuecomment-375901434\n \n \n   OK, I'll provide a comparison later.\r\n   \r\n   BTW: fuzzing just got easier w/ llvm/clang 6.0. Since the fuzzer is now officially a part of compiler-rt, it is likely that it's included in many distributions / packages by default. For example. Arch bundles a feature-complete compiler-rt, so no additional preparation is required to get fuzzers working (just tested it).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-24T15:56:02.016+0000",
                    "updated": "2018-03-24T15:56:02.016+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16432282",
                    "id": "16432282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum commented on issue #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763#issuecomment-380103831\n \n \n   ## Environment\r\n   \r\n   ### Build Commands\r\n   \r\n   ```\r\n   env CC=clang CXX=clang++ cmake -DCMAKE_BUILD_TYPE=Release -DARROW_BUILD_BENCHMARKS=ON -GNinja ..\r\n   env CC=clang CXX=clang++ ninja\r\n   ```\r\n   \r\n   ### Conda\r\n   ```\r\n   # Name                    Version                   Build  Channel\r\n   boost                     1.66.0                   py36_1    conda-forge\r\n   boost-cpp                 1.66.0                        1    conda-forge\r\n   bzip2                     1.0.6                         1    conda-forge\r\n   ca-certificates           2018.1.18                     0    conda-forge\r\n   certifi                   2018.1.18                py36_0    conda-forge\r\n   clangdev                  6.0.0                 default_0    conda-forge\r\n   cmake                     3.11.0                        0    conda-forge\r\n   curl                      7.59.0                        1    conda-forge\r\n   expat                     2.2.5                         0    conda-forge\r\n   icu                       58.2                          0    conda-forge\r\n   intel-openmp              2018.0.0                      8\r\n   krb5                      1.14.6                        0    conda-forge\r\n   libcxx                    6.0.0                         0    conda-forge\r\n   libgfortran               3.0.1                h93005f0_2\r\n   libiconv                  1.15                          0    conda-forge\r\n   libssh2                   1.8.0                         2    conda-forge\r\n   libuv                     1.20.0                        0    conda-forge\r\n   libxml2                   2.9.8                         0    conda-forge\r\n   llvm-meta                 6.0.0                         0    conda-forge\r\n   llvmdev                   6.0.0                 default_0    conda-forge\r\n   mkl                       2018.0.2                      1\r\n   mkl_fft                   1.0.1                    py36_1    conda-forge\r\n   mkl_random                1.0.1                    py36_0    conda-forge\r\n   ncurses                   5.9                          10    conda-forge\r\n   ninja                     1.8.2                         1    conda-forge\r\n   numpy                     1.14.2           py36ha9ae307_1\r\n   openssl                   1.0.2n                        0    conda-forge\r\n   pip                       9.0.3                    py36_0    conda-forge\r\n   python                    3.6.5                         1    conda-forge\r\n   readline                  7.0                           0    conda-forge\r\n   rhash                     1.3.4                         0    conda-forge\r\n   setuptools                39.0.1                   py36_0    conda-forge\r\n   sqlite                    3.20.1                        2    conda-forge\r\n   tk                        8.6.7                         0    conda-forge\r\n   wheel                     0.31.0                   py36_0    conda-forge\r\n   xz                        5.2.3                         0    conda-forge\r\n   zlib                      1.2.11                        0    conda-forge\r\n   ```\r\n   \r\n   ## Test Results\r\n   \r\n   ### complete PR\r\n   ```\r\n   Run on (4 X 2700 MHz CPU s)\r\n   2018-04-10 15:33:15\r\n   Benchmark                                                  Time           CPU Iterations\r\n   ----------------------------------------------------------------------------------------\r\n   BM_WriteRecordBatch/1/min_time:1.000/real_time         76462 ns      76204 ns      16080   12.7719GB/s\r\n   BM_WriteRecordBatch/4/min_time:1.000/real_time         63077 ns      62791 ns      21229    15.482GB/s\r\n   BM_WriteRecordBatch/16/min_time:1.000/real_time        56850 ns      56584 ns      24134   17.1778GB/s\r\n   BM_WriteRecordBatch/64/min_time:1.000/real_time        58209 ns      58003 ns      22891   16.7768GB/s\r\n   BM_WriteRecordBatch/256/min_time:1.000/real_time      105328 ns     104930 ns      12450   9.27162GB/s\r\n   BM_WriteRecordBatch/1024/min_time:1.000/real_time     247453 ns     245516 ns       5383   3.94645GB/s\r\n   BM_WriteRecordBatch/4k/min_time:1.000/real_time       904931 ns     900426 ns       1384   1105.06MB/s\r\n   BM_WriteRecordBatch/8k/min_time:1.000/real_time      1869873 ns    1861388 ns        704   534.796MB/s\r\n   BM_ReadRecordBatch/1/min_time:1.000/real_time           2409 ns       2402 ns     584482   405.366GB/s\r\n   BM_ReadRecordBatch/4/min_time:1.000/real_time           4919 ns       4888 ns     284403   198.544GB/s\r\n   BM_ReadRecordBatch/16/min_time:1.000/real_time         14176 ns      14123 ns      73649   68.8866GB/s\r\n   BM_ReadRecordBatch/64/min_time:1.000/real_time         51842 ns      51373 ns      26951   18.8372GB/s\r\n   BM_ReadRecordBatch/256/min_time:1.000/real_time       201006 ns     200181 ns       6691   4.85837GB/s\r\n   BM_ReadRecordBatch/1024/min_time:1.000/real_time      845037 ns     835158 ns       1228   1.15564GB/s\r\n   BM_ReadRecordBatch/4k/min_time:1.000/real_time       3340162 ns    3328564 ns        422   299.387MB/s\r\n   BM_ReadRecordBatch/8k/min_time:1.000/real_time       7270398 ns    7240046 ns        195   137.544MB/s\r\n   ```\r\n   \r\n   \r\n   ### PR w/o flatbuffer validation\r\n   ```\r\n   Run on (4 X 2700 MHz CPU s)\r\n   2018-04-10 15:35:33\r\n   Benchmark                                                  Time           CPU Iterations\r\n   ----------------------------------------------------------------------------------------\r\n   BM_WriteRecordBatch/1/min_time:1.000/real_time         76915 ns      76548 ns      18341   12.6967GB/s\r\n   BM_WriteRecordBatch/4/min_time:1.000/real_time         65802 ns      65135 ns      21929    14.841GB/s\r\n   BM_WriteRecordBatch/16/min_time:1.000/real_time        56544 ns      56359 ns      24133    17.271GB/s\r\n   BM_WriteRecordBatch/64/min_time:1.000/real_time        62888 ns      62205 ns      23517   15.5287GB/s\r\n   BM_WriteRecordBatch/256/min_time:1.000/real_time      106749 ns     105842 ns      13172   9.14824GB/s\r\n   BM_WriteRecordBatch/1024/min_time:1.000/real_time     255753 ns     253039 ns       5469   3.81838GB/s\r\n   BM_WriteRecordBatch/4k/min_time:1.000/real_time       990244 ns     969574 ns       1428   1009.85MB/s\r\n   BM_WriteRecordBatch/8k/min_time:1.000/real_time      1881824 ns    1870245 ns        754   531.399MB/s\r\n   BM_ReadRecordBatch/1/min_time:1.000/real_time           2408 ns       2393 ns     585709   405.624GB/s\r\n   BM_ReadRecordBatch/4/min_time:1.000/real_time           4815 ns       4790 ns     293507   202.816GB/s\r\n   BM_ReadRecordBatch/16/min_time:1.000/real_time         14351 ns      14294 ns      95709    68.047GB/s\r\n   BM_ReadRecordBatch/64/min_time:1.000/real_time         51902 ns      51532 ns      26885   18.8155GB/s\r\n   BM_ReadRecordBatch/256/min_time:1.000/real_time       214495 ns     209335 ns       7029   4.55284GB/s\r\n   BM_ReadRecordBatch/1024/min_time:1.000/real_time      817379 ns     809841 ns       1781   1.19475GB/s\r\n   BM_ReadRecordBatch/4k/min_time:1.000/real_time       3305725 ns    3296526 ns        401   302.506MB/s\r\n   BM_ReadRecordBatch/8k/min_time:1.000/real_time       7218564 ns    7187446 ns        193   138.532MB/s\r\n   ```\r\n   \r\n   \r\n   ### baseline (`6633cc94c84f9ecc516f03175da56361cf4bd67f`)\r\n   ```\r\n   Run on (4 X 2700 MHz CPU s)\r\n   2018-04-10 15:36:57\r\n   Benchmark                                                  Time           CPU Iterations\r\n   ----------------------------------------------------------------------------------------\r\n   BM_WriteRecordBatch/1/min_time:1.000/real_time         77609 ns      77412 ns      16827   12.5831GB/s\r\n   BM_WriteRecordBatch/4/min_time:1.000/real_time         62939 ns      62705 ns      21531    15.516GB/s\r\n   BM_WriteRecordBatch/16/min_time:1.000/real_time        58021 ns      57736 ns      22232   16.8311GB/s\r\n   BM_WriteRecordBatch/64/min_time:1.000/real_time        58180 ns      57996 ns      24262   16.7851GB/s\r\n   BM_WriteRecordBatch/256/min_time:1.000/real_time      109448 ns     108065 ns      11190   8.92262GB/s\r\n   BM_WriteRecordBatch/1024/min_time:1.000/real_time     256618 ns     254950 ns       4017   3.80551GB/s\r\n   BM_WriteRecordBatch/4k/min_time:1.000/real_time       907773 ns     904273 ns       1553    1101.6MB/s\r\n   BM_WriteRecordBatch/8k/min_time:1.000/real_time      1864168 ns    1859038 ns        732   536.432MB/s\r\n   BM_ReadRecordBatch/1/min_time:1.000/real_time           2414 ns       2405 ns     579529     404.6GB/s\r\n   BM_ReadRecordBatch/4/min_time:1.000/real_time           4828 ns       4807 ns     292168   202.264GB/s\r\n   BM_ReadRecordBatch/16/min_time:1.000/real_time         14357 ns      14312 ns      96203   68.0212GB/s\r\n   BM_ReadRecordBatch/64/min_time:1.000/real_time         51445 ns      51189 ns      26539   18.9828GB/s\r\n   BM_ReadRecordBatch/256/min_time:1.000/real_time       196948 ns     196421 ns       6995   4.95849GB/s\r\n   BM_ReadRecordBatch/1024/min_time:1.000/real_time      799547 ns     797232 ns       1773   1.22139GB/s\r\n   BM_ReadRecordBatch/4k/min_time:1.000/real_time       3374307 ns    3362444 ns        423   296.357MB/s\r\n   BM_ReadRecordBatch/8k/min_time:1.000/real_time       7205776 ns    7186692 ns        195   138.778MB/s\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T13:46:29.315+0000",
                    "updated": "2018-04-10T13:46:29.315+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16432283",
                    "id": "16432283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum commented on issue #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763#issuecomment-380104686\n \n \n   I would say the performance impact is negligible.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T13:48:53.518+0000",
                    "updated": "2018-04-10T13:48:53.518+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16435444",
                    "id": "16435444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763#issuecomment-380783116\n \n \n   @crepererum Can you fix the errors in Travis (failing formatting checks)? Then this is good to be merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-12T12:10:51.684+0000",
                    "updated": "2018-04-12T12:10:51.684+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16437615",
                    "id": "16437615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum commented on issue #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763#issuecomment-381205704\n \n \n   @xhochy I've fixed the formatting, but I don't understand why it is failing now :(\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-13T17:26:35.962+0000",
                    "updated": "2018-04-13T17:26:35.962+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16438790",
                    "id": "16438790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1763: ARROW-2222: handle untrusted inputs (POC)\nURL: https://github.com/apache/arrow/pull/1763#issuecomment-381425486\n \n \n   The failure is due to all IPC r/w tests failing on `MakeDeeplyNestedList`. As this only happens in the builds where we have flatbuffers 1.7.1 installed, this might also be due to flatbuffers. To ensure that this is not due to it, I'm going to update the manylinux1 flatbuffer dependency to 1.9\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-15T18:01:57.167+0000",
                    "updated": "2018-04-15T18:01:57.167+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16446831",
                    "id": "16446831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1763\n[https://github.com/apache/arrow/pull/1763]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-04-21T14:35:20.791+0000",
                    "updated": "2018-04-21T14:35:20.791+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141036/comment/16446832",
                    "id": "16446832",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1763: ARROW-2222: handle untrusted inputs\nURL: https://github.com/apache/arrow/pull/1763\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/io/memory.cc b/cpp/src/arrow/io/memory.cc\nindex 45d6bdbde3..512e7f513e 100644\n--- a/cpp/src/arrow/io/memory.cc\n+++ b/cpp/src/arrow/io/memory.cc\n@@ -257,6 +257,9 @@ Status BufferReader::Tell(int64_t* position) const {\n bool BufferReader::supports_zero_copy() const { return true; }\n \n Status BufferReader::Read(int64_t nbytes, int64_t* bytes_read, void* buffer) {\n+  if (nbytes < 0) {\n+    return Status::IOError(\"Cannot read a negative number of bytes from BufferReader.\");\n+  }\n   *bytes_read = std::min(nbytes, size_ - position_);\n   if (*bytes_read) {\n     memcpy(buffer, data_ + position_, *bytes_read);\n@@ -266,6 +269,9 @@ Status BufferReader::Read(int64_t nbytes, int64_t* bytes_read, void* buffer) {\n }\n \n Status BufferReader::Read(int64_t nbytes, std::shared_ptr<Buffer>* out) {\n+  if (nbytes < 0) {\n+    return Status::IOError(\"Cannot read a negative number of bytes from BufferReader.\");\n+  }\n   int64_t size = std::min(nbytes, size_ - position_);\n \n   if (size > 0 && buffer_ != nullptr) {\ndiff --git a/cpp/src/arrow/ipc/message.cc b/cpp/src/arrow/ipc/message.cc\nindex c14fb49274..0a5bcdc70f 100644\n--- a/cpp/src/arrow/ipc/message.cc\n+++ b/cpp/src/arrow/ipc/message.cc\n@@ -136,7 +136,12 @@ bool Message::Equals(const Message& other) const {\n \n Status Message::ReadFrom(const std::shared_ptr<Buffer>& metadata, io::InputStream* stream,\n                          std::unique_ptr<Message>* out) {\n-  auto fb_message = flatbuf::GetMessage(metadata->data());\n+  auto data = metadata->data();\n+  flatbuffers::Verifier verifier(data, metadata->size(), 128);\n+  if (!flatbuf::VerifyMessageBuffer(verifier)) {\n+    return Status::IOError(\"Invalid flatbuffers message.\");\n+  }\n+  auto fb_message = flatbuf::GetMessage(data);\n \n   int64_t body_length = fb_message->bodyLength();\n \ndiff --git a/cpp/src/arrow/ipc/metadata-internal.cc b/cpp/src/arrow/ipc/metadata-internal.cc\nindex af1d6c8515..d54323919d 100644\n--- a/cpp/src/arrow/ipc/metadata-internal.cc\n+++ b/cpp/src/arrow/ipc/metadata-internal.cc\n@@ -817,6 +817,9 @@ static Status VisitField(const flatbuf::Field* field, DictionaryTypeMap* id_to_f\n   if (dict_metadata == nullptr) {\n     // Field is not dictionary encoded. Visit children\n     auto children = field->children();\n+    if (children == nullptr) {\n+      return Status::IOError(\"Children-pointer of flatbuffer-encoded Field is null.\");\n+    }\n     for (flatbuffers::uoffset_t i = 0; i < children->size(); ++i) {\n       RETURN_NOT_OK(VisitField(children->Get(i), id_to_field));\n     }\n@@ -832,9 +835,16 @@ static Status VisitField(const flatbuf::Field* field, DictionaryTypeMap* id_to_f\n \n Status GetDictionaryTypes(const void* opaque_schema, DictionaryTypeMap* id_to_field) {\n   auto schema = static_cast<const flatbuf::Schema*>(opaque_schema);\n+  if (schema->fields() == nullptr) {\n+    return Status::IOError(\"Fields-pointer of flatbuffer-encoded Schema is null.\");\n+  }\n   int num_fields = static_cast<int>(schema->fields()->size());\n   for (int i = 0; i < num_fields; ++i) {\n-    RETURN_NOT_OK(VisitField(schema->fields()->Get(i), id_to_field));\n+    auto field = schema->fields()->Get(i);\n+    if (field == nullptr) {\n+      return Status::IOError(\"Field-pointer of flatbuffer-encoded Schema is null.\");\n+    }\n+    RETURN_NOT_OK(VisitField(field, id_to_field));\n   }\n   return Status::OK();\n }\n@@ -842,6 +852,9 @@ Status GetDictionaryTypes(const void* opaque_schema, DictionaryTypeMap* id_to_fi\n Status GetSchema(const void* opaque_schema, const DictionaryMemo& dictionary_memo,\n                  std::shared_ptr<Schema>* out) {\n   auto schema = static_cast<const flatbuf::Schema*>(opaque_schema);\n+  if (schema->fields() == nullptr) {\n+    return Status::IOError(\"Fields-pointer of flatbuffer-encoded Schema is null.\");\n+  }\n   int num_fields = static_cast<int>(schema->fields()->size());\n \n   std::vector<std::shared_ptr<Field>> fields(num_fields);\n@@ -855,6 +868,14 @@ Status GetSchema(const void* opaque_schema, const DictionaryMemo& dictionary_mem\n   if (fb_metadata != nullptr) {\n     metadata->reserve(fb_metadata->size());\n     for (const auto& pair : *fb_metadata) {\n+      if (pair->key() == nullptr) {\n+        return Status::IOError(\n+            \"Key-pointer in custom metadata of flatbuffer-encoded Schema is null.\");\n+      }\n+      if (pair->value() == nullptr) {\n+        return Status::IOError(\n+            \"Value-pointer in custom metadata of flatbuffer-encoded Schema is null.\");\n+      }\n       metadata->Append(pair->key()->str(), pair->value()->str());\n     }\n   }\ndiff --git a/cpp/src/arrow/ipc/reader.cc b/cpp/src/arrow/ipc/reader.cc\nindex 6441bc33cf..5ffbe6f40f 100644\n--- a/cpp/src/arrow/ipc/reader.cc\n+++ b/cpp/src/arrow/ipc/reader.cc\n@@ -328,6 +328,9 @@ Status ReadRecordBatch(const Buffer& metadata, const std::shared_ptr<Schema>& sc\n   if (message->header_type() != flatbuf::MessageHeader_RecordBatch) {\n     DCHECK_EQ(message->header_type(), flatbuf::MessageHeader_RecordBatch);\n   }\n+  if (message->header() == nullptr) {\n+    return Status::IOError(\"Header-pointer of flatbuffer-encoded Message is null.\");\n+  }\n   auto batch = reinterpret_cast<const flatbuf::RecordBatch*>(message->header());\n   return ReadRecordBatch(batch, schema, max_recursion_depth, file, out);\n }\n@@ -426,6 +429,9 @@ class RecordBatchStreamReader::RecordBatchStreamReaderImpl {\n     RETURN_NOT_OK(\n         ReadMessageAndValidate(message_reader_.get(), Message::SCHEMA, false, &message));\n \n+    if (message->header() == nullptr) {\n+      return Status::IOError(\"Header-pointer of flatbuffer-encoded Message is null.\");\n+    }\n     RETURN_NOT_OK(internal::GetDictionaryTypes(message->header(), &dictionary_types_));\n \n     // TODO(wesm): In future, we may want to reconcile the ids in the stream with\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T14:35:23.679+0000",
                    "updated": "2018-04-21T14:35:23.679+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qm4f:",
        "customfield_12314139": null
    }
}