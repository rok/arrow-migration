{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13230246",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246",
    "key": "ARROW-5220",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5220/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/312050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5379: ARROW-5220: [Python] Specified schema in from_pandas also includes the index\nURL: https://github.com/apache/arrow/pull/5379\n \n \n   https://issues.apache.org/jira/browse/ARROW-5220\r\n   \r\n   As I mentioned in the issue, while going down this path, quite some questions came up.\r\n   \r\n   So assume we start expecting the index columns also to be present in the schema, if specified:\r\n   \r\n   - are we OK with erroring if the index is not in the schema but would be written as a column? And only if `preserve_index=True`, or also with `preserve_index=None` in case the index is not a RangeIndex ? \r\n     This will break some current usage (TODO but can probably do it with a deprecation first)\r\n   - We should follow the order of the columns in the schema, also for the index? (currently the index is always appended to the other columns) -> I think yes\r\n   - What if an index is specified in the schema but `preserve_index=False` ? -> currently raise an error\r\n   - What if there are multiple index levels (a MultiIndex), but only one of them is specified in the schema? (in case of columns, then that column that is not the in the schema is ignored) -> currently only select what is in the schema\r\n   - What if the index is specified in the schema, but is actually a RangeIndex which would otherwise be serialized as metadata? -> currently raise an error (the user can do `preserve_index=True` to prevent this), but could also include it as a column instead of metadata in this case\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-13T14:01:51.330+0000",
                    "updated": "2019-09-13T14:01:51.330+0000",
                    "started": "2019-09-13T14:01:51.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "312050",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/312089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5379: ARROW-5220: [Python] Specified schema in from_pandas also includes the index\nURL: https://github.com/apache/arrow/pull/5379#issuecomment-531263575\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=h1) Report\n   > Merging [#5379](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5bc0fda86c072da0436ef98757fbbc99247cb01c?src=pr&el=desc) will **decrease** coverage by `3.75%`.\n   > The diff coverage is `98.55%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5379/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5379      +/-   ##\n   ==========================================\n   - Coverage   69.35%   65.59%   -3.76%     \n   ==========================================\n     Files         745      497     -248     \n     Lines       87819    69025   -18794     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits        60905    45279   -15626     \n   + Misses      26552    23746    -2806     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYW5kYXMucHk=) | `95.39% <100%> (+0.08%)` | :arrow_up: |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `97.11% <97.29%> (+0.41%)` | :arrow_up: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-1.89%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `78.97% <0%> (-0.33%)` | :arrow_down: |\n   | [cpp/src/parquet/arrow/reader\\_internal.cc](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlcl9pbnRlcm5hbC5jYw==) | `75.73% <0%> (-0.15%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [r/R/list.R](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-ci9SL2xpc3QuUg==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [r/src/array\\_to\\_vector.cpp](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree#diff-ci9zcmMvYXJyYXlfdG9fdmVjdG9yLmNwcA==) | | |\n   | ... and [244 more](https://codecov.io/gh/apache/arrow/pull/5379/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=footer). Last update [5bc0fda...ee76e67](https://codecov.io/gh/apache/arrow/pull/5379?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-13T14:40:10.447+0000",
                    "updated": "2019-09-13T14:40:10.447+0000",
                    "started": "2019-09-13T14:40:10.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "312089",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/312464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5379: ARROW-5220: [Python] Specified schema in from_pandas also includes the index\nURL: https://github.com/apache/arrow/pull/5379#discussion_r324407419\n \n \n\n ##########\n File path: python/pyarrow/tests/test_pandas.py\n ##########\n @@ -2736,6 +2737,95 @@ def test_table_from_pandas_keeps_schema_nullability():\n     assert table.schema.field('a').nullable is False\n \n \n+def test_table_from_pandas_schema_index_columns():\n+    # ARROW-5220\n+    df = pd.DataFrame({'a': [1, 2, 3], 'b': [0.1, 0.2, 0.3]})\n+\n+    schema = pa.schema([\n+        ('a', pa.int64()),\n+        ('b', pa.float64()),\n+        ('index', pa.int32()),\n+    ])\n+\n+    # schema includes index with name not in dataframe\n+    with pytest.raises(KeyError):\n+        pa.Table.from_pandas(df, schema=schema)\n+\n+    df.index.name = 'index'\n+\n+    # schema includes correct index name -> roundtrip works\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema)\n+\n+    # schema includes correct index name but preserve_index=False\n+    with pytest.raises(KeyError):\n+        pa.Table.from_pandas(df, schema=schema, preserve_index=False)\n+\n+    # in case of preserve_index=None -> RangeIndex serialized as metadata\n+    # clashes with the index in the schema\n+    with pytest.raises(KeyError):\n+        pa.Table.from_pandas(df, schema=schema, preserve_index=None)\n \n Review comment:\n   I'm OK to accept this behavior for now, but we can always change later\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-14T01:31:38.509+0000",
                    "updated": "2019-09-14T01:31:38.509+0000",
                    "started": "2019-09-14T01:31:38.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "312464",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/312465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5379: ARROW-5220: [Python] Specified schema in from_pandas also includes the index\nURL: https://github.com/apache/arrow/pull/5379#discussion_r324407449\n \n \n\n ##########\n File path: python/pyarrow/tests/test_pandas.py\n ##########\n @@ -2736,6 +2737,95 @@ def test_table_from_pandas_keeps_schema_nullability():\n     assert table.schema.field('a').nullable is False\n \n \n+def test_table_from_pandas_schema_index_columns():\n+    # ARROW-5220\n+    df = pd.DataFrame({'a': [1, 2, 3], 'b': [0.1, 0.2, 0.3]})\n+\n+    schema = pa.schema([\n+        ('a', pa.int64()),\n+        ('b', pa.float64()),\n+        ('index', pa.int32()),\n+    ])\n+\n+    # schema includes index with name not in dataframe\n+    with pytest.raises(KeyError):\n+        pa.Table.from_pandas(df, schema=schema)\n+\n+    df.index.name = 'index'\n+\n+    # schema includes correct index name -> roundtrip works\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema)\n+\n+    # schema includes correct index name but preserve_index=False\n+    with pytest.raises(KeyError):\n+        pa.Table.from_pandas(df, schema=schema, preserve_index=False)\n+\n+    # in case of preserve_index=None -> RangeIndex serialized as metadata\n+    # clashes with the index in the schema\n+    with pytest.raises(KeyError):\n+        pa.Table.from_pandas(df, schema=schema, preserve_index=None)\n+\n+    df.index = pd.Index([0, 1, 2], name='index')\n+\n+    # for non-RangeIndex, both preserve_index=None and True work\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=None,\n+                            expected_schema=schema)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema)\n+\n+    # schema has different order (index column not at the end)\n+    schema = pa.schema([\n+        ('index', pa.int32()),\n+        ('a', pa.int64()),\n+        ('b', pa.float64()),\n+    ])\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=None,\n+                            expected_schema=schema)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema)\n+\n+    # schema does not include the index -> index is not included as column\n+    # even though preserve_index=True/None\n+    schema = pa.schema([\n+        ('a', pa.int64()),\n+        ('b', pa.float64()),\n+    ])\n+    expected = df.copy()\n+    expected = expected.reset_index(drop=True)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=None,\n+                            expected_schema=schema, expected=expected)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema, expected=expected)\n+\n+    # dataframe with a MultiIndex\n+    df.index = pd.MultiIndex.from_tuples([('a', 1), ('a', 2), ('b', 1)],\n+                                         names=['level1', 'level2'])\n+    schema = pa.schema([\n+        ('level1', pa.string()),\n+        ('level2', pa.int64()),\n+        ('a', pa.int64()),\n+        ('b', pa.float64()),\n+    ])\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=None,\n+                            expected_schema=schema)\n+\n+    # only one of the levels of the MultiIndex is included\n+    schema = pa.schema([\n+        ('level2', pa.int64()),\n+        ('a', pa.int64()),\n+        ('b', pa.float64()),\n+    ])\n+    expected = df.copy()\n+    expected = expected.reset_index('level1', drop=True)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=True,\n+                            expected_schema=schema, expected=expected)\n+    _check_pandas_roundtrip(df, schema=schema, preserve_index=None,\n+                            expected_schema=schema, expected=expected)\n \n Review comment:\n   This is OK with me\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-14T01:31:38.513+0000",
                    "updated": "2019-09-14T01:31:38.513+0000",
                    "started": "2019-09-14T01:31:38.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "312465",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/312466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5379: ARROW-5220: [Python] Specified schema in from_pandas also includes the index\nURL: https://github.com/apache/arrow/pull/5379\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-14T01:33:09.201+0000",
                    "updated": "2019-09-14T01:33:09.201+0000",
                    "started": "2019-09-14T01:33:09.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "312466",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/313573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401\n \n \n   Some left-over TODO's from https://github.com/apache/arrow/pull/5379\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-17T09:15:31.498+0000",
                    "updated": "2019-09-17T09:15:31.498+0000",
                    "started": "2019-09-17T09:15:31.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "313573",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/313637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401#issuecomment-532181808\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=h1) Report\n   > Merging [#5401](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7fb6cbee4fd0da422883fc2168737dfef7aed296?src=pr&el=desc) will **decrease** coverage by `22.89%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5401/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5401      +/-   ##\n   ==========================================\n   - Coverage   88.58%   65.69%   -22.9%     \n   ==========================================\n     Files         951      500     -451     \n     Lines      126307    69210   -57097     \n     Branches     1495        0    -1495     \n   ==========================================\n   - Hits       111888    45466   -66422     \n   - Misses      14054    23744    +9690     \n   + Partials      365        0     -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/table.pxi](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGFibGUucHhp) | `86.85% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYW5kYXMucHk=) | `94.47% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `97.11% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/memory.h](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/date\\_utils.h](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RhdGVfdXRpbHMuaA==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/memory.cc](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/decimal\\_type\\_util.h](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfdHlwZV91dGlsLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/filesystem/util\\_internal.cc](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3V0aWxfaW50ZXJuYWwuY2M=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/logical\\_type.h](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2xvZ2ljYWxfdHlwZS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/parquet/hasher.h](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2hhc2hlci5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | ... and [703 more](https://codecov.io/gh/apache/arrow/pull/5401/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=footer). Last update [7fb6cbe...fc93d0a](https://codecov.io/gh/apache/arrow/pull/5401?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-17T11:34:44.667+0000",
                    "updated": "2019-09-17T11:34:44.667+0000",
                    "started": "2019-09-17T11:34:44.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "313637",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/314535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401#discussion_r325816735\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -412,14 +412,18 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n                 col = df.index.get_level_values(name)\n                 if (preserve_index is None and\n                         isinstance(col, _pandas_api.pd.RangeIndex)):\n-                    # TODO better error message\n-                    raise KeyError(\"name {} in schema not in columns \"\n-                                   \"or index\".format(name))\n+                    raise ValueError(\n+                        \"name '{}' is present in the schema, but it is a \"\n \n Review comment:\n   ```suggestion\r\n                           f\"name '{name}' is present in the schema, but it is a \"\r\n                           \"RangeIndex. Range indices are saved as metadata only- \"\r\n                           \"they are not converted to a column. Specify 'preserve_index=True' \"\r\n                           \"to force saving as a column or remove '{name}' from the specified schema.\"\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T18:04:32.076+0000",
                    "updated": "2019-09-18T18:04:32.076+0000",
                    "started": "2019-09-18T18:04:32.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314535",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/314537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401#discussion_r325819018\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -412,14 +412,18 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n                 col = df.index.get_level_values(name)\n                 if (preserve_index is None and\n                         isinstance(col, _pandas_api.pd.RangeIndex)):\n-                    # TODO better error message\n-                    raise KeyError(\"name {} in schema not in columns \"\n-                                   \"or index\".format(name))\n+                    raise ValueError(\n+                        \"name '{}' is present in the schema, but it is a \"\n \n Review comment:\n   That's unfortunately only a recent python feature .. ;) (even when dropping python 2.7, we would not yet be able to use it)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T18:08:23.773+0000",
                    "updated": "2019-09-18T18:08:23.773+0000",
                    "started": "2019-09-18T18:08:23.772+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314537",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/314540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401#discussion_r325819018\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -412,14 +412,18 @@ def _get_columns_to_convert_given_schema(df, schema, preserve_index):\n                 col = df.index.get_level_values(name)\n                 if (preserve_index is None and\n                         isinstance(col, _pandas_api.pd.RangeIndex)):\n-                    # TODO better error message\n-                    raise KeyError(\"name {} in schema not in columns \"\n-                                   \"or index\".format(name))\n+                    raise ValueError(\n+                        \"name '{}' is present in the schema, but it is a \"\n \n Review comment:\n   That's unfortunately only a recent python feature .. (even when dropping python 2.7, we would not yet be able to use it ;))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T18:08:41.785+0000",
                    "updated": "2019-09-18T18:08:41.785+0000",
                    "started": "2019-09-18T18:08:41.785+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314540",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/314686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401#issuecomment-532885979\n \n \n   travis: https://travis-ci.org/jorisvandenbossche/arrow/builds/586655606\r\n   appveyor: https://ci.appveyor.com/project/jorisvandenbossche/arrow/builds/27503262\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T22:07:36.163+0000",
                    "updated": "2019-09-18T22:07:36.163+0000",
                    "started": "2019-09-18T22:07:36.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314686",
                    "issueId": "13230246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/worklog/314687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5401: ARROW-5220: [Python] Follow-up to improve error messages and docs for from_pandas schema argument\nURL: https://github.com/apache/arrow/pull/5401\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T22:07:59.815+0000",
                    "updated": "2019-09-18T22:07:59.815+0000",
                    "started": "2019-09-18T22:07:59.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314687",
                    "issueId": "13230246"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@14ccb83f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a54210f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@264709d8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d800846[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6888ef10[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@65cc758f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bdbb927[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46a44c22[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@697bcb89[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6f1dbb24[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49a93561[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2d88a52a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Sep 14 01:33:07 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-14T01:33:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5220/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2019-04-26T08:33:02.000+0000",
        "updated": "2019-09-18T22:07:59.000+0000",
        "timeoriginalestimate": null,
        "description": "The {{Table.from_pandas}} method allows to specify a schema (\"This can be used to indicate the type of columns if we cannot infer it automatically.\").\r\n\r\nBut, if you also want to specify the type of the index, you get an error:\r\n\r\n{code:python}\r\ndf = pd.DataFrame({'a': [1, 2, 3], 'b': [0.1, 0.2, 0.3]})\r\ndf.index = pd.Index(['a', 'b', 'c'], name='index')\r\n\r\nmy_schema = pa.schema([('index', pa.string()),\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ('a', pa.int64()),\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ('b', pa.float64()),\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ])\r\n\r\ntable = pa.Table.from_pandas(df, schema=my_schema)\r\n{code}\r\n\r\ngives {{KeyError: 'index'}} (because it tries to look up the \"column names\" from the schema in the dataframe, and thus does not find column 'index').\r\n\r\nThis also has the consequence that re-using the schema does not work: {{table1 = pa.Table.from_pandas(df1);  table2 = pa.Table.from_pandas(df2, schema=table1.schema)}}\r\n\r\nExtra note: also unknown columns in general give this error (column specified in the schema that are not in the dataframe).\r\n\r\nAt least in pyarrow 0.11, this did not give an error (eg noticed this from the code in example in ARROW-3861). So before, unknown columns in the specified schema were ignored, while now they raise an error. Was this a conscious change?  \r\nSo before also specifying the index in the schema \"worked\" in the sense that it didn't raise an error, but it was also ignored, so didn't actually do what you would expect)\r\n\r\nQuestions:\r\n\r\n- I think that we should support specifying the index in the passed {{schema}} ? So that the example above works (although this might be complicated with RangeIndex that is not serialized any more)\r\n- But what to do in general with additional columns in the schema that are not in the DataFrame? Are we fine with keep raising an error as it is now (the error message could be improved then)? Or do we again want to ignore them? (or, it could actually also add them as all nulls to the table)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] index / unknown columns in specified schema in Table.from_pandas",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16862738",
                    "id": "16862738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cthi",
                        "name": "cthi",
                        "key": "cthi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Christian Thiel",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "First Question: Regarding the index I don't really know how to handle it best. See my comment in\u00a0ARROW-3861.\r\n\r\nSecond Question: For me the schema should be the single source of truth. Thus ignoring a column in the schema is no option. I would go with either raise or NULLs. However adding NULLs might be difficult for any non-nullable dtype such as INTs.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cthi",
                        "name": "cthi",
                        "key": "cthi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Christian Thiel",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-13T05:59:30.451+0000",
                    "updated": "2019-06-13T05:59:30.451+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16863260",
                    "id": "16863260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I agree that the schema should be the single point of truth and it seems most reasonable to raise an error when a field in the schema does not correspond to a column in the DataFrame.\r\n\r\nWould it be an acceptable solution to require {{preserve_index=True}} when specifying the type of the index with a schema?\r\n\r\nIE, ensure the following works as you intend (currently fails):\r\n{code}\r\ntable = pa.Table.from_pandas(df, schema=my_schema, preserve_index=True)\r\n{code}\r\n\r\nThis would disambiguate when a name should be removed from the schema because it refers to the dataframe's index.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-13T16:42:51.118+0000",
                    "updated": "2019-06-13T16:49:19.609+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16863272",
                    "id": "16863272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think so, currently the conversion path IIRC only takes into account the index as an afterthought, so the code may need to be restructured a bit to allow the index levels to be considered together with the columns when applying the schema",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-13T16:46:57.152+0000",
                    "updated": "2019-06-13T16:46:57.152+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16863527",
                    "id": "16863527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I can look into taking the index columns into account for matching with the schema. \r\n\r\nOne complication will be the RangeIndex serialization (as metadata instead of column). Related discussion in ARROW-5427, an option could be to have {{preserve_index=True}} force a RangeIndex to always be serialized as actual data instead of the default metadata. That could make the expected schema consistent independent of whether your dataframe has a RangeIndex vs Int64Index, and thus easier to match a specified schema.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-06-13T22:57:59.358+0000",
                    "updated": "2019-06-13T22:57:59.358+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16865966",
                    "id": "16865966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~wesmckinn] what do you think of the idea that `preserve_index=True` forces RangeIndex to be an actual column in the Table? (to have a consistent match with a specified schema)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-06-17T20:31:38.379+0000",
                    "updated": "2019-06-17T20:31:38.379+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16913752",
                    "id": "16913752",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm in theory on board with that idea",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-22T22:30:26.894+0000",
                    "updated": "2019-08-22T22:30:33.785+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16914040",
                    "id": "16914040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "What I suggested here (about `preserve_index=True` forcing RangeIndex to be an actual column in the Table) is in the mean time already implemented (ARROW-5427, https://github.com/apache/arrow/pull/4651).  \r\nSo then I think we can go forward with this issue and ensuring that a user can specify the index column as part of a specified {{schema}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-08-23T08:14:55.006+0000",
                    "updated": "2019-08-23T08:14:55.006+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16929175",
                    "id": "16929175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I started looking into this (as it was tagged for 0.15.0), but it has quite some consequences / corner cases. So assume we start expecting the index also to be present in the schema, if specified:\r\n\r\n- are we OK with erroring if the index is not in the schema but would be written as a column? And only if {{preserve_index=True}}, or also with {{preserve_index=None}} in case the index is not a RangeIndex ? \r\n  This will break some current usage (but can probably do it with a deprecation first)\r\n- We should follow the order of the columns in the schema, also for the index? (currently the index is always appended to the other columns)\r\n- What if an index is specified in the schema but {{preserve_index=False}} ?\r\n- What if there are multiple index levels (a MultiIndex), but only one of them is specified in the schema? (in case of columns, then that column that is not the in the schema is ignored)\r\n- What if the index is specified in the schema, but is actually a RangeIndex which would otherwise be serialized as metadata?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-09-13T12:58:36.894+0000",
                    "updated": "2019-09-13T13:15:01.219+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16929514",
                    "id": "16929514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yikes, this is a \"grab bag\" of potential rough edges. \r\n\r\nI agree with your comment on the PR \"I think it would be good to have the rule: if a schema is specified, it is the single source of truth about the schema, and you can be 100% sure that the resulting table will have this exact schema (otherwise an error is raised)\"[\r\n\r\nFor your questions in particular\r\n\r\n> are we OK with erroring if the index is not in the schema but would be written as a column? And only if preserve_index=True, or also with preserve_index=None in case the index is not a RangeIndex ?\r\nThis will break some current usage (but can probably do it with a deprecation first)\r\n\r\nYes I think this is okay. In a sense {{preserve_index}} has the function of informing the final schema. I think if {{preserve_index}} is None and the index is RangeIndex, then we can respect the schema and write the index as metadata\r\n\r\n> We should follow the order of the columns in the schema, also for the index? (currently the index is always appended to the other columns)\r\n\r\nIt does make the implementation more complex, but I think we should respect the schema\r\n\r\n> What if an index is specified in the schema but preserve_index=False ?\r\n\r\nProbably in this case should raise an exception. Thoughts?\r\n\r\n> What if there are multiple index levels (a MultiIndex), but only one of them is specified in the schema? (in case of columns, then that column that is not the in the schema is ignored)\r\n\r\nI would say raise an exception in this case. \"In the face of ambiguity, refuse the temptation to guess\"\r\n\r\n> What if the index is specified in the schema, but is actually a RangeIndex which would otherwise be serialized as metadata?\r\n\r\nI think in such case then it should be serialized. Detecting this case is yet more complexity though =/",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-13T20:27:48.369+0000",
                    "updated": "2019-09-13T20:27:48.369+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13230246/comment/16929636",
                    "id": "16929636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5379\n[https://github.com/apache/arrow/pull/5379]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-14T01:33:07.491+0000",
                    "updated": "2019-09-14T01:33:07.491+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z025u0:",
        "customfield_12314139": null
    }
}