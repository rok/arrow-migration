{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13414340",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340",
    "key": "ARROW-14905",
    "fields": {
        "parent": {
            "id": "13414334",
            "key": "ARROW-14902",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13414334",
            "fields": {
                "summary": "[R] Update write_csv_arrow() to support all args of readr::write_csv()",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=johanpel",
            "name": "johanpel",
            "key": "johanpel",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Johan Peltenburg",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14905/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/690129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-985643676\n\n\n   https://issues.apache.org/jira/browse/ARROW-14905\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T16:10:42.089+0000",
                    "updated": "2021-12-03T16:10:42.089+0000",
                    "started": "2021-12-03T16:10:42.088+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690129",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763066233\n\n\n\n##########\nFile path: cpp/src/arrow/csv/options.h\n##########\n@@ -186,6 +198,9 @@ struct ARROW_EXPORT WriteOptions {\n   /// \\brief IO context for writing.\n   io::IOContext io_context;\n \n+  /// \\brief Quote style\n+  QuoteStyle quote_style = QuoteStyle::Needed;\n\nReview comment:\n       Nit, but should it be \"quoting style\" instead?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -155,27 +161,61 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  void PopulateColumns(char* output, int32_t* offsets) const override {\n-    VisitArrayDataInline<StringType>(\n-        *casted_array_->data(),\n-        [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        },\n-        [&]() {\n-          // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        });\n+  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+    // Function applied to valid values cast to string.\n+    auto valid_function = [&](arrow::util::string_view s) {\n+      int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    // Function applied to null values cast to string.\n+    auto null_function = [&]() {\n+      // For nulls, the configured null value string is copied into the output.\n+      int32_t next_column_offset =\n+          static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n+             null_string_->size());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    if (reject_values_with_quotes_) {\n+      // When using this UnquotedColumnPopulator on values that, after casting, could\n+      // produce quotes, we need to return an error in accord with RFC4180. We need to\n+      // precede valid_func with a check.\n+      return VisitArrayDataInline<StringType>(\n+          *casted_array_->data(),\n+          [&](arrow::util::string_view s) {\n+            ARROW_RETURN_NOT_OK(CheckStringHasNoQuotes(s));\n+            return valid_function(s);\n+          },\n+          null_function);\n+    } else {\n+      // Populate without checking and rejecting values with quotes.\n+      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                              null_function);\n+    }\n+  }\n+\n+ private:\n+  static Status CheckStringHasNoQuotes(const util::string_view& s) {\n+    if (CountQuotes(s) > 0) {\n\nReview comment:\n       This sounds incomplete. Other characters need quoting or escaping: the cell delimiter `,`, the line endings `\\r` and `\\n`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T14:41:44.122+0000",
                    "updated": "2021-12-06T14:41:44.122+0000",
                    "started": "2021-12-06T14:41:44.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691062",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "johanpel commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763270044\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -155,27 +161,61 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  void PopulateColumns(char* output, int32_t* offsets) const override {\n-    VisitArrayDataInline<StringType>(\n-        *casted_array_->data(),\n-        [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        },\n-        [&]() {\n-          // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        });\n+  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+    // Function applied to valid values cast to string.\n+    auto valid_function = [&](arrow::util::string_view s) {\n+      int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    // Function applied to null values cast to string.\n+    auto null_function = [&]() {\n+      // For nulls, the configured null value string is copied into the output.\n+      int32_t next_column_offset =\n+          static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n+             null_string_->size());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    if (reject_values_with_quotes_) {\n+      // When using this UnquotedColumnPopulator on values that, after casting, could\n+      // produce quotes, we need to return an error in accord with RFC4180. We need to\n+      // precede valid_func with a check.\n+      return VisitArrayDataInline<StringType>(\n+          *casted_array_->data(),\n+          [&](arrow::util::string_view s) {\n+            ARROW_RETURN_NOT_OK(CheckStringHasNoQuotes(s));\n+            return valid_function(s);\n+          },\n+          null_function);\n+    } else {\n+      // Populate without checking and rejecting values with quotes.\n+      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                              null_function);\n+    }\n+  }\n+\n+ private:\n+  static Status CheckStringHasNoQuotes(const util::string_view& s) {\n+    if (CountQuotes(s) > 0) {\n\nReview comment:\n       Good call, I added some code to reject these as well.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T18:35:42.093+0000",
                    "updated": "2021-12-06T18:35:42.093+0000",
                    "started": "2021-12-06T18:35:42.093+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691284",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763291635\n\n\n\n##########\nFile path: cpp/src/arrow/csv/options.h\n##########\n@@ -170,6 +170,19 @@ struct ARROW_EXPORT ReadOptions {\n   Status Validate() const;\n };\n \n+/// \\brief Quoting style for CSV writing\n+enum class ARROW_EXPORT QuotingStyle {\n+  /// Only enclose values in quotes which need them, because their CSV rendering can\n+  /// contain quotes itself (e.g. strings or binary values)\n+  Needed,\n+  /// Enclose all valid values in quotes. Nulls are not quoted.\n+  AllValid,\n\nReview comment:\n       does this lose roundtripping information for numbers?  Should that be documented?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T18:58:09.667+0000",
                    "updated": "2021-12-06T18:58:09.667+0000",
                    "started": "2021-12-06T18:58:09.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691295",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763292864\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -72,11 +72,29 @@ RecordBatchIterator RecordBatchSliceIterator(const RecordBatch& batch,\n   return RecordBatchIterator(std::move(functor));\n }\n \n-// Counts the number of characters that need escaping in s.\n-int64_t CountEscapes(util::string_view s) {\n+// Counts the number of quotes in s.\n+int64_t CountQuotes(util::string_view s) {\n   return static_cast<int64_t>(std::count(s.begin(), s.end(), '\"'));\n }\n \n+// Counts the number of CSV structural characters in s.\n+int64_t CountStructuralChars(util::string_view s) {\n+  int64_t result = 0;\n+  for (const auto c : s) {\n\nReview comment:\n       nit: please spell out type.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T18:59:25.529+0000",
                    "updated": "2021-12-06T18:59:25.529+0000",
                    "started": "2021-12-06T18:59:25.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691296",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763307792\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -72,11 +72,29 @@ RecordBatchIterator RecordBatchSliceIterator(const RecordBatch& batch,\n   return RecordBatchIterator(std::move(functor));\n }\n \n-// Counts the number of characters that need escaping in s.\n-int64_t CountEscapes(util::string_view s) {\n+// Counts the number of quotes in s.\n+int64_t CountQuotes(util::string_view s) {\n   return static_cast<int64_t>(std::count(s.begin(), s.end(), '\"'));\n }\n \n+// Counts the number of CSV structural characters in s.\n+int64_t CountStructuralChars(util::string_view s) {\n\nReview comment:\n       ```\r\n   int64_t CountStructuralChars2(const std::string& s) {\r\n     int64_t result = 0;\r\n     for (const auto c : s) {\r\n         result += c == '\"';\r\n         result += c =='\\n';\r\n         result += c == '\\r';\r\n         result += c == ',';\r\n     }\r\n     return result;\r\n   }\r\n   ```\r\n   Allows for auto-vectorization.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T19:17:15.333+0000",
                    "updated": "2021-12-06T19:17:15.333+0000",
                    "started": "2021-12-06T19:17:15.332+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691305",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763442737\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -155,27 +179,61 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  void PopulateColumns(char* output, int32_t* offsets) const override {\n-    VisitArrayDataInline<StringType>(\n-        *casted_array_->data(),\n-        [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        },\n-        [&]() {\n-          // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        });\n+  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+    // Function applied to valid values cast to string.\n+    auto valid_function = [&](arrow::util::string_view s) {\n+      int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    // Function applied to null values cast to string.\n+    auto null_function = [&]() {\n+      // For nulls, the configured null value string is copied into the output.\n+      int32_t next_column_offset =\n+          static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n+             null_string_->size());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    if (reject_values_with_quotes_) {\n+      // When using this UnquotedColumnPopulator on values that, after casting, could\n+      // produce quotes, we need to return an error in accord with RFC4180. We need to\n+      // precede valid_func with a check.\n+      return VisitArrayDataInline<StringType>(\n+          *casted_array_->data(),\n+          [&](arrow::util::string_view s) {\n+            ARROW_RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n+            return valid_function(s);\n+          },\n+          null_function);\n+    } else {\n+      // Populate without checking and rejecting values with quotes.\n+      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                              null_function);\n+    }\n   }\n+\n+ private:\n+  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n+    if (CountStructuralChars(s) > 0) {\n+      return Status::Invalid(\n+          \"CSV values may not contain structural characters if quoting style is \"\n+          \"\\\"None\\\". See RFC4180. Invalid value: \",\n+          s);\n+    }\n+    return Status::OK();\n+  }\n+\n+  // Whether to reject values with quotes when populating.\n+  bool reject_values_with_quotes_;\n\nReview comment:\n       nit: const?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T22:15:05.028+0000",
                    "updated": "2021-12-06T22:15:05.028+0000",
                    "started": "2021-12-06T22:15:05.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691385",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763443213\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -282,20 +358,36 @@ struct PopulatorFactory {\n                   is_null_type<TypeClass>::value || is_temporal_type<TypeClass>::value,\n               Status>\n   Visit(const TypeClass& type) {\n-    populator = new UnquotedColumnPopulator(pool, end_char, null_string);\n+    // Determine what ColumnPopulator to use based on desired CSV quoting style.\n+    switch (quoting_style) {\n+        // These types are assumed not to produce any quotes, so we do not need to check\n+        // and reject for potential quotes in the casted values in case the QuotingStyle\n+        // is None.\n+      case QuotingStyle::None:\n+      case QuotingStyle::Needed:\n+        populator = new UnquotedColumnPopulator(pool, end_char, null_string,\n+                                                /*reject_values_with_quotes=*/false);\n+        break;\n+      case QuotingStyle::AllValid:\n+        populator = new QuotedColumnPopulator(pool, end_char, null_string);\n+        break;\n+    }\n     return Status::OK();\n   }\n \n   char end_char;\n   std::shared_ptr<Buffer> null_string;\n+  QuotingStyle quoting_style;\n\nReview comment:\n       nit: const?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T22:15:28.866+0000",
                    "updated": "2021-12-06T22:15:28.866+0000",
                    "started": "2021-12-06T22:15:28.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691386",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763443603\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer_test.cc\n##########\n@@ -37,24 +38,34 @@ struct WriterTestParams {\n   std::shared_ptr<Schema> schema;\n   std::string batch_data;\n   WriteOptions options;\n-  bool options_invalid;\n+  // When set, expect the test to fail just from the supplied WriteOptions alone.\n+  bool expect_invalid_options;\n   std::string expected_output;\n+  // When set, expect the test to fail with this string.\n+  util::optional<std::string> expect_invalid_string;\n\nReview comment:\n       can you use a status memory instead of the two separate additional parameter here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T22:16:11.763+0000",
                    "updated": "2021-12-06T22:16:11.763+0000",
                    "started": "2021-12-06T22:16:11.762+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691387",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "johanpel commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r763865614\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -72,11 +72,29 @@ RecordBatchIterator RecordBatchSliceIterator(const RecordBatch& batch,\n   return RecordBatchIterator(std::move(functor));\n }\n \n-// Counts the number of characters that need escaping in s.\n-int64_t CountEscapes(util::string_view s) {\n+// Counts the number of quotes in s.\n+int64_t CountQuotes(util::string_view s) {\n   return static_cast<int64_t>(std::count(s.begin(), s.end(), '\"'));\n }\n \n+// Counts the number of CSV structural characters in s.\n+int64_t CountStructuralChars(util::string_view s) {\n\nReview comment:\n       Thinking about this a bit more we don't actually have to count. I moved this into `CheckStringHasNoStructuralChars` and use std::any_of there to detect if there are any structural chars in the value string.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T10:44:11.896+0000",
                    "updated": "2021-12-07T10:44:11.896+0000",
                    "started": "2021-12-07T10:44:11.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691625",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-987849354\n\n\n   @emkornfield Do you want to add further comments here?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T11:44:08.996+0000",
                    "updated": "2021-12-07T11:44:08.996+0000",
                    "started": "2021-12-07T11:44:08.995+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691675",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:25:23.132+0000",
                    "updated": "2021-12-07T18:25:23.132+0000",
                    "started": "2021-12-07T18:25:23.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691948",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-988170349\n\n\n   Benchmark runs are scheduled for baseline = 3c4ced87511120ee5a945424186b7c56b9b25de8 and contender = 9cf4275a19c994879172e5d3b03ade9a96a10721. 9cf4275a19c994879172e5d3b03ade9a96a10721 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/49d12404ca00449db004008b94fa12f6...9b40d0890b27427383b416d8e62d5dbe/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0878b127fdda4249803e4821b416adf9...ec45e9e0b35445539b2cfc59d56ce805/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/cbe528a123874715b18336ff5a72e84b...84909d0fddc64ab7b28a6f223c05c6c4/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:31:06.124+0000",
                    "updated": "2021-12-07T18:31:06.124+0000",
                    "started": "2021-12-07T18:31:06.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691954",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/691967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r764278957\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -155,27 +161,64 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  void PopulateColumns(char* output, int32_t* offsets) const override {\n-    VisitArrayDataInline<StringType>(\n-        *casted_array_->data(),\n-        [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        },\n-        [&]() {\n-          // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        });\n+  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+    // Function applied to valid values cast to string.\n+    auto valid_function = [&](arrow::util::string_view s) {\n+      int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    // Function applied to null values cast to string.\n+    auto null_function = [&]() {\n+      // For nulls, the configured null value string is copied into the output.\n+      int32_t next_column_offset =\n+          static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n+             null_string_->size());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    if (reject_values_with_quotes_) {\n+      // When using this UnquotedColumnPopulator on values that, after casting, could\n+      // produce quotes, we need to return an error in accord with RFC4180. We need to\n+      // precede valid_func with a check.\n+      return VisitArrayDataInline<StringType>(\n+          *casted_array_->data(),\n+          [&](arrow::util::string_view s) {\n+            ARROW_RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n+            return valid_function(s);\n+          },\n+          null_function);\n+    } else {\n+      // Populate without checking and rejecting values with quotes.\n+      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                              null_function);\n+    }\n+  }\n+\n+ private:\n+  // Returns an error status if s has any structural characters.\n+  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n+    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n\nReview comment:\n       I would guess that vectorization here might be a better approach, I think these types of characters are relatively rare in CSV?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:56:31.602+0000",
                    "updated": "2021-12-07T18:56:31.602+0000",
                    "started": "2021-12-07T18:56:31.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691967",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/692049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-988170349\n\n\n   Benchmark runs are scheduled for baseline = 3c4ced87511120ee5a945424186b7c56b9b25de8 and contender = 9cf4275a19c994879172e5d3b03ade9a96a10721. 9cf4275a19c994879172e5d3b03ade9a96a10721 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/49d12404ca00449db004008b94fa12f6...9b40d0890b27427383b416d8e62d5dbe/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0878b127fdda4249803e4821b416adf9...ec45e9e0b35445539b2cfc59d56ce805/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/cbe528a123874715b18336ff5a72e84b...84909d0fddc64ab7b28a6f223c05c6c4/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T20:41:17.202+0000",
                    "updated": "2021-12-07T20:41:17.202+0000",
                    "started": "2021-12-07T20:41:17.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692049",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/692224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-988479580\n\n\n   Benchmark runs are scheduled for baseline = 3c4ced87511120ee5a945424186b7c56b9b25de8 and contender = 9cf4275a19c994879172e5d3b03ade9a96a10721. 9cf4275a19c994879172e5d3b03ade9a96a10721 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3c3d490fd75442abb7ff6bb8efa48981...26a4f85ef5a547079d922da56e969418/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/b05a4395348740d1b63043bed43d1c94...f4dce272e63a4badb48789db2008ef61/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/cfd4bb6d0f964faba4ac826a6f551bb2...f6f8d19d14aa4337a2095a1988acf496/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T04:06:12.936+0000",
                    "updated": "2021-12-08T04:06:12.936+0000",
                    "started": "2021-12-08T04:06:12.936+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692224",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/692234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-988479580\n\n\n   Benchmark runs are scheduled for baseline = 3c4ced87511120ee5a945424186b7c56b9b25de8 and contender = 9cf4275a19c994879172e5d3b03ade9a96a10721. 9cf4275a19c994879172e5d3b03ade9a96a10721 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3c3d490fd75442abb7ff6bb8efa48981...26a4f85ef5a547079d922da56e969418/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/b05a4395348740d1b63043bed43d1c94...f4dce272e63a4badb48789db2008ef61/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/cfd4bb6d0f964faba4ac826a6f551bb2...f6f8d19d14aa4337a2095a1988acf496/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T05:01:49.050+0000",
                    "updated": "2021-12-08T05:01:49.050+0000",
                    "started": "2021-12-08T05:01:49.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692234",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/692509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-988479580\n\n\n   Benchmark runs are scheduled for baseline = 3c4ced87511120ee5a945424186b7c56b9b25de8 and contender = 9cf4275a19c994879172e5d3b03ade9a96a10721. 9cf4275a19c994879172e5d3b03ade9a96a10721 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3c3d490fd75442abb7ff6bb8efa48981...26a4f85ef5a547079d922da56e969418/)\n   [Finished :arrow_down:0.74% :arrow_up:0.74%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/b05a4395348740d1b63043bed43d1c94...f4dce272e63a4badb48789db2008ef61/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/cfd4bb6d0f964faba4ac826a6f551bb2...f6f8d19d14aa4337a2095a1988acf496/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T12:30:58.957+0000",
                    "updated": "2021-12-08T12:30:58.957+0000",
                    "started": "2021-12-08T12:30:58.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692509",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/692549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#issuecomment-988479580\n\n\n   Benchmark runs are scheduled for baseline = 3c4ced87511120ee5a945424186b7c56b9b25de8 and contender = 9cf4275a19c994879172e5d3b03ade9a96a10721. 9cf4275a19c994879172e5d3b03ade9a96a10721 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3c3d490fd75442abb7ff6bb8efa48981...26a4f85ef5a547079d922da56e969418/)\n   [Finished :arrow_down:0.74% :arrow_up:0.74%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/b05a4395348740d1b63043bed43d1c94...f4dce272e63a4badb48789db2008ef61/)\n   [Finished :arrow_down:0.53% :arrow_up:0.09%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/cfd4bb6d0f964faba4ac826a6f551bb2...f6f8d19d14aa4337a2095a1988acf496/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T13:21:08.311+0000",
                    "updated": "2021-12-08T13:21:08.311+0000",
                    "started": "2021-12-08T13:21:08.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692549",
                    "issueId": "13414340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/worklog/694137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11849:\nURL: https://github.com/apache/arrow/pull/11849#discussion_r766875020\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -155,27 +161,64 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  void PopulateColumns(char* output, int32_t* offsets) const override {\n-    VisitArrayDataInline<StringType>(\n-        *casted_array_->data(),\n-        [&](arrow::util::string_view s) {\n-          int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        },\n-        [&]() {\n-          // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          *(output + *offsets - 1) = end_char_;\n-          *offsets -= next_column_offset;\n-          offsets++;\n-        });\n+  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+    // Function applied to valid values cast to string.\n+    auto valid_function = [&](arrow::util::string_view s) {\n+      int32_t next_column_offset = static_cast<int32_t>(s.length()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    // Function applied to null values cast to string.\n+    auto null_function = [&]() {\n+      // For nulls, the configured null value string is copied into the output.\n+      int32_t next_column_offset =\n+          static_cast<int32_t>(null_string_->size()) + /*end_char*/ 1;\n+      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n+             null_string_->size());\n+      *(output + *offsets - 1) = end_char_;\n+      *offsets -= next_column_offset;\n+      offsets++;\n+      return Status::OK();\n+    };\n+\n+    if (reject_values_with_quotes_) {\n+      // When using this UnquotedColumnPopulator on values that, after casting, could\n+      // produce quotes, we need to return an error in accord with RFC4180. We need to\n+      // precede valid_func with a check.\n+      return VisitArrayDataInline<StringType>(\n+          *casted_array_->data(),\n+          [&](arrow::util::string_view s) {\n+            ARROW_RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n+            return valid_function(s);\n+          },\n+          null_function);\n+    } else {\n+      // Populate without checking and rejecting values with quotes.\n+      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                              null_function);\n+    }\n+  }\n+\n+ private:\n+  // Returns an error status if s has any structural characters.\n+  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n+    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n\nReview comment:\n       I filed ARROW-15064 so we don't forget this, though we need writer benchmarks (ARROW-14993).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-10T17:56:47.086+0000",
                    "updated": "2021-12-10T17:56:47.086+0000",
                    "started": "2021-12-10T17:56:47.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "694137",
                    "issueId": "13414340"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6979d4c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f67c5f7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7717a807[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@361e836f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78e5df1c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@34f1494d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7eec9844[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3cab790d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ae04cbb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5465cb8b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ed147fb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@29553c3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Dec 07 18:25:18 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-07T18:25:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14905/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-11-29T15:53:32.000+0000",
        "updated": "2021-12-10T17:56:47.000+0000",
        "timeoriginalestimate": null,
        "description": "This will allow more control over quoting. In {{readr::write_csv()}} {{{}quote{}}} instructs on how to handle fields which contain characters that need to be quoted: \r\n * {{{}needed{}}}: only quote fields which need them\r\n * {{{}all{}}}: quote all fields - I think this might be the implicit default behaviour for {{write_csv_arrow()}}\r\n * {{{}none{}}}: never quote fields",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Enable CSV Writer to handle quoting",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/comment/17453003",
                    "id": "17453003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=johanpel",
                        "name": "johanpel",
                        "key": "johanpel",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Johan Peltenburg",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "The default behavior is currently {{{}needed{}}}, so I'll stick to that as the default.\r\n\r\nIn the case of {{{}all{}}}, it's necessary to make a decision about whether quotes should be inserted for nulls.\r\n\r\nWhat I'm currently brewing up doesn't insert them.\r\nBut in this case I'd opt for calling this option {{all_valid}} , exposing to the user that only valid (non-null) values are quoted.\r\n\r\nThe second possibility is related to ARROW-14903 where we can set a custom value for nulls.\r\nIf we choose to insert quotes everywhere, even if the null value is empty, it will produce {{{}\"\"{}}}.\r\nIn the case of a custom null value as described in the other issue, it would also be enclosed in quotes.\r\nDrawback is that it then becomes indistinguishable from possible strings that contain the null value.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=johanpel",
                        "name": "johanpel",
                        "key": "johanpel",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Johan Peltenburg",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-03T13:27:01.798+0000",
                    "updated": "2021-12-03T13:29:26.399+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13414340/comment/17454789",
                    "id": "17454789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11849\n[https://github.com/apache/arrow/pull/11849]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-07T18:25:18.260+0000",
                    "updated": "2021-12-07T18:25:18.260+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0x6ag:",
        "customfield_12314139": null
    }
}