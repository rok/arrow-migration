{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13469086",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086",
    "key": "ARROW-16932",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "c++",
            "kernel",
            "pull-request-available",
            "timestamp"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16932/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/785920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok opened a new pull request, #13462:\nURL: https://github.com/apache/arrow/pull/13462\n\n   When rounding to some calendar units the result will be offset in UTC instead of the local timezone. [See discussion](https://github.com/apache/arrow/pull/12154#issuecomment-1169578666).\r\n   This adds a fix and C++ test cases.\n\n\n",
                    "created": "2022-06-29T11:55:43.175+0000",
                    "updated": "2022-06-29T11:55:43.175+0000",
                    "started": "2022-06-29T11:55:43.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785920",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/785921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#issuecomment-1169890830\n\n   https://issues.apache.org/jira/browse/ARROW-16932\n\n\n",
                    "created": "2022-06-29T11:56:13.649+0000",
                    "updated": "2022-06-29T11:56:13.649+0000",
                    "started": "2022-06-29T11:56:13.649+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785921",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913040588\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2911,6 +3032,129 @@ TEST_F(ScalarTemporalTest, TestFloorTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, floor_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestFloorTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"floor_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n\nReview Comment:\n   ```suggestion\r\n     // Data for tests below was generated via lubridate with the exception\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n+  // of week data because lubridate currently does not support rounding to\n+  // multiple of week.\n+  const char* ceil_15_nanosecond =\n+      R\"([\"1970-01-01 00:00:59.123456795\", \"2000-02-29 23:23:24.000000005\",\n+          \"1899-01-01 00:59:20.001001015\", \"2033-05-18 03:33:20.000000015\",\n+          \"2020-01-01 01:05:05.001000015\", \"2019-12-31 02:10:10.002000015\",\n+          \"2019-12-30 03:15:15.003000015\", \"2009-12-31 04:20:20.004132015\",\n+          \"2010-01-01 05:25:25.005321015\", \"2010-01-03 06:30:30.006163015\",\n+          \"2010-01-04 07:35:35.000000015\", \"2006-01-01 08:40:40.000000015\",\n+          \"2005-12-31 09:45:45.000000015\", \"2008-12-28 00:00:00.000000015\",\n+          \"2008-12-29 00:00:00.000000015\", \"2012-01-01 01:02:03.000000015\", null])\";\n+  const char* ceil_15_microsecond =\n+      R\"([\"1970-01-01 00:00:59.123465\", \"2000-02-29 23:23:24.000005\",\n+          \"1899-01-01 00:59:20.001015\", \"2033-05-18 03:33:20.000015\",\n+          \"2020-01-01 01:05:05.001015\", \"2019-12-31 02:10:10.002015\",\n+          \"2019-12-30 03:15:15.003015\", \"2009-12-31 04:20:20.004135\",\n+          \"2010-01-01 05:25:25.005330\", \"2010-01-03 06:30:30.006165\",\n+          \"2010-01-04 07:35:35.000015\", \"2006-01-01 08:40:40.000015\",\n+          \"2005-12-31 09:45:45.000015\", \"2008-12-28 00:00:00.000015\",\n+          \"2008-12-29 00:00:00.000015\", \"2012-01-01 01:02:03.000015\", null])\";\n+  const char* ceil_15_millisecond =\n+      R\"([\"1970-01-01 00:00:59.135\", \"2000-02-29 23:23:24.005\",\n+          \"1899-01-01 00:59:20.015\", \"2033-05-18 03:33:20.015\",\n+          \"2020-01-01 01:05:05.015\", \"2019-12-31 02:10:10.015\",\n+          \"2019-12-30 03:15:15.015\", \"2009-12-31 04:20:20.015\",\n+          \"2010-01-01 05:25:25.015\", \"2010-01-03 06:30:30.015\",\n+          \"2010-01-04 07:35:35.015\", \"2006-01-01 08:40:40.015\",\n+          \"2005-12-31 09:45:45.015\", \"2008-12-28 00:00:00.015\",\n+          \"2008-12-29 00:00:00.015\", \"2012-01-01 01:02:03.015\", null])\";\n+  const char* ceil_13_second = R\"([\n+    \"1970-01-01 00:01:05\", \"2000-02-29 23:23:26\", \"1899-01-01 00:59:26\", \"2033-05-18 03:33:26\",\n+    \"2020-01-01 01:05:13\", \"2019-12-31 02:10:13\", \"2019-12-30 03:15:26\", \"2009-12-31 04:20:26\",\n+    \"2010-01-01 05:25:26\", \"2010-01-03 06:30:39\", \"2010-01-04 07:35:39\", \"2006-01-01 08:40:52\",\n+    \"2005-12-31 09:45:52\", \"2008-12-28 00:00:13\", \"2008-12-29 00:00:13\", \"2012-01-01 01:02:13\", null])\";\n+  const char* ceil_13_minute = R\"([\n+    \"1970-01-01 00:09:00\", \"2000-02-29 23:35:00\", \"1899-01-01 01:05:00\", \"2033-05-18 03:43:00\",\n+    \"2020-01-01 01:09:00\", \"2019-12-31 02:22:00\", \"2019-12-30 03:22:00\", \"2009-12-31 04:22:00\",\n+    \"2010-01-01 05:35:00\", \"2010-01-03 06:43:00\", \"2010-01-04 07:43:00\", \"2006-01-01 08:43:00\",\n+    \"2005-12-31 09:56:00\", \"2008-12-28 00:09:00\", \"2008-12-29 00:09:00\", \"2012-01-01 01:09:00\", null])\";\n+  const char* ceil_15_hour = R\"([\n+    \"1970-01-01 05:30:00\", \"2000-03-01 04:30:00\", \"1899-01-01 06:00:00\", \"2033-05-18 05:30:00\",\n+    \"2020-01-01 04:30:00\", \"2019-12-31 04:30:00\", \"2019-12-30 04:30:00\", \"2009-12-31 04:30:00\",\n+    \"2010-01-01 19:30:00\", \"2010-01-03 19:30:00\", \"2010-01-04 19:30:00\", \"2006-01-01 19:30:00\",\n+    \"2005-12-31 19:30:00\", \"2008-12-28 04:30:00\", \"2008-12-29 04:30:00\", \"2012-01-01 04:30:00\", null])\";\n+  const char* ceil_15_day = R\"([\n+    \"1970-01-15 14:30:00\", \"2000-03-15 13:30:00\", \"1899-01-15 15:00:00\", \"2033-05-30 14:30:00\",\n+    \"2020-01-15 13:30:00\", \"2020-01-14 13:30:00\", \"2019-12-30 13:30:00\", \"2010-01-14 13:30:00\",\n+    \"2010-01-15 13:30:00\", \"2010-01-15 13:30:00\", \"2010-01-15 13:30:00\", \"2006-01-15 13:30:00\",\n+    \"2006-01-14 13:30:00\", \"2008-12-30 13:30:00\", \"2008-12-30 13:30:00\", \"2012-01-15 13:30:00\", null])\";\n+  const char* ceil_15_weeks = R\"([\n+    \"1970-04-12 14:30:00\", \"2000-04-16 14:30:00\", \"1899-04-16 15:00:00\", \"2033-07-31 14:30:00\",\n+    \"2020-04-12 14:30:00\", \"2020-04-12 14:30:00\", \"2020-04-12 14:30:00\", \"2010-04-18 14:30:00\",\n+    \"2010-04-18 14:30:00\", \"2010-04-18 14:30:00\", \"2010-04-18 14:30:00\", \"2006-04-16 14:30:00\",\n+    \"2006-04-16 14:30:00\", \"2009-02-22 13:30:00\", \"2009-04-12 14:30:00\", \"2012-04-15 14:30:00\", null])\";\n+  const char* ceil_15_weeks_sunday = R\"([\n+    \"1970-04-18 14:30:00\", \"2000-04-15 14:30:00\", \"1899-04-15 15:00:00\", \"2033-07-30 14:30:00\",\n+    \"2020-04-11 14:30:00\", \"2020-04-11 14:30:00\", \"2020-04-11 14:30:00\", \"2010-04-17 14:30:00\",\n+    \"2010-04-17 14:30:00\", \"2010-04-17 14:30:00\", \"2010-04-17 14:30:00\", \"2006-04-15 14:30:00\",\n+    \"2006-04-15 14:30:00\", \"2009-04-18 14:30:00\", \"2009-04-18 14:30:00\", \"2012-04-14 14:30:00\", null])\";\n+  const char* ceil_5_months = R\"([\n+    \"1970-05-31 14:30:00\", \"2000-05-31 14:30:00\", \"1899-05-31 14:30:00\", \"2033-05-31 14:30:00\",\n+    \"2020-05-31 14:30:00\", \"2020-03-31 13:30:00\", \"2020-03-31 13:30:00\", \"2010-03-31 13:30:00\",\n+    \"2010-05-31 14:30:00\", \"2010-05-31 14:30:00\", \"2010-05-31 14:30:00\", \"2006-05-31 14:30:00\",\n+    \"2006-03-31 13:30:00\", \"2009-03-31 13:30:00\", \"2009-03-31 13:30:00\", \"2012-05-31 14:30:00\", null])\";\n+  const char* ceil_3_quarters = R\"([\n+    \"1970-09-30 14:30:00\", \"2000-09-30 14:30:00\", \"1899-09-30 14:30:00\", \"2033-09-30 14:30:00\",\n+    \"2020-09-30 14:30:00\", \"2020-06-30 14:30:00\", \"2020-06-30 14:30:00\", \"2010-06-30 14:30:00\",\n+    \"2010-09-30 14:30:00\", \"2010-09-30 14:30:00\", \"2010-09-30 14:30:00\", \"2006-09-30 14:30:00\",\n+    \"2006-06-30 14:30:00\", \"2009-06-30 14:30:00\", \"2009-06-30 14:30:00\", \"2012-09-30 14:30:00\", null])\";\n+  const char* ceil_15_years = R\"([\n+    \"1979-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"1904-12-31 14:30:00\", \"2039-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2024-12-31 13:30:00\", null])\";\n+\n+  auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\n\nReview Comment:\n   Can you comment what the concrete offsets and DST times are?\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n\nReview Comment:\n   Are these options repeated around? Perhaps they should be factored in a test fixture class?\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n\nReview Comment:\n   ```suggestion\r\n     // Data for tests below was generated via lubridate with the exception\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -3249,6 +3493,128 @@ TEST_F(ScalarTemporalTest, TestRoundTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, round_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestRoundTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"round_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n\nReview Comment:\n   ```suggestion\r\n     // Data for tests below was generated via lubridate with the exception\r\n   ```\n\n\n\n",
                    "created": "2022-07-04T14:19:04.918+0000",
                    "updated": "2022-07-04T14:19:04.918+0000",
                    "started": "2022-07-04T14:19:04.918+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787618",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#issuecomment-1173887911\n\n   Thanks for the review @pitrou !\r\n   \r\n   > I'm unable to verify that the test values are ok, but the computational changes make sense.\r\n   \r\n   Correctness of logic and (by transitive relation) tests data will be checked against lubridate here #12154.\n\n\n",
                    "created": "2022-07-04T14:31:22.755+0000",
                    "updated": "2022-07-04T14:31:22.755+0000",
                    "started": "2022-07-04T14:31:22.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787621",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787622",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913062215\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n\nReview Comment:\n   Hm, yeah that might be a nice idea. Let me check.\n\n\n\n",
                    "created": "2022-07-04T14:33:30.876+0000",
                    "updated": "2022-07-04T14:33:30.876+0000",
                    "started": "2022-07-04T14:33:30.876+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787622",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913070905\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -3249,6 +3493,128 @@ TEST_F(ScalarTemporalTest, TestRoundTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, round_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestRoundTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"round_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n+  // of week data because lubridate currently does not support rounding to\n+  // multiple of week.\n+  const char* round_15_nanosecond =\n+      R\"([\"1970-01-01 00:00:59.123456795\", \"2000-02-29 23:23:24.000000005\",\n+          \"1899-01-01 00:59:20.001001000\", \"2033-05-18 03:33:20.000000000\",\n+          \"2020-01-01 01:05:05.001000000\", \"2019-12-31 02:10:10.002000000\",\n+          \"2019-12-30 03:15:15.003000000\", \"2009-12-31 04:20:20.004132000\",\n+          \"2010-01-01 05:25:25.005321000\", \"2010-01-03 06:30:30.006163000\",\n+          \"2010-01-04 07:35:35.000000000\", \"2006-01-01 08:40:40.000000000\",\n+          \"2005-12-31 09:45:45.000000000\", \"2008-12-28 00:00:00.000000000\",\n+          \"2008-12-29 00:00:00.000000000\", \"2012-01-01 01:02:03.000000000\", null])\";\n+  const char* round_15_microsecond =\n+      R\"([\"1970-01-01 00:00:59.123450\", \"2000-02-29 23:23:24.000005\",\n+          \"1899-01-01 00:59:20.001000\", \"2033-05-18 03:33:20.000000\",\n+          \"2020-01-01 01:05:05.001000\", \"2019-12-31 02:10:10.002000\",\n+          \"2019-12-30 03:15:15.003000\", \"2009-12-31 04:20:20.004135\",\n+          \"2010-01-01 05:25:25.005315\", \"2010-01-03 06:30:30.006165\",\n+          \"2010-01-04 07:35:35.000000\", \"2006-01-01 08:40:40.000000\",\n+          \"2005-12-31 09:45:45.000000\", \"2008-12-28 00:00:00.000000\",\n+          \"2008-12-29 00:00:00.000000\", \"2012-01-01 01:02:03.000000\", null])\";\n+  const char* round_15_millisecond =\n+      R\"([\"1970-01-01 00:00:59.120\", \"2000-02-29 23:23:24.005\",\n+          \"1899-01-01 00:59:20.000\", \"2033-05-18 03:33:20.000\",\n+          \"2020-01-01 01:05:05.000\", \"2019-12-31 02:10:10.000\",\n+          \"2019-12-30 03:15:15.000\", \"2009-12-31 04:20:20.000\",\n+          \"2010-01-01 05:25:25.000\", \"2010-01-03 06:30:30.000\",\n+          \"2010-01-04 07:35:35.000\", \"2006-01-01 08:40:40.000\",\n+          \"2005-12-31 09:45:45.000\", \"2008-12-28 00:00:00.000\",\n+          \"2008-12-29 00:00:00.000\", \"2012-01-01 01:02:03.000\", null])\";\n+  const char* round_13_second = R\"([\n+    \"1970-01-01 00:01:05\", \"2000-02-29 23:23:26\", \"1899-01-01 00:59:26\", \"2033-05-18 03:33:26\",\n+    \"2020-01-01 01:05:00\", \"2019-12-31 02:10:13\", \"2019-12-30 03:15:13\", \"2009-12-31 04:20:26\",\n+    \"2010-01-01 05:25:26\", \"2010-01-03 06:30:26\", \"2010-01-04 07:35:39\", \"2006-01-01 08:40:39\",\n+    \"2005-12-31 09:45:39\", \"2008-12-28 00:00:00\", \"2008-12-29 00:00:00\", \"2012-01-01 01:02:00\", null])\";\n+  const char* round_13_minute = R\"([\n+    \"1969-12-31 23:56:00\", \"2000-02-29 23:22:00\", \"1899-01-01 01:05:00\", \"2033-05-18 03:30:00\",\n+    \"2020-01-01 01:09:00\", \"2019-12-31 02:09:00\", \"2019-12-30 03:09:00\", \"2009-12-31 04:22:00\",\n+    \"2010-01-01 05:22:00\", \"2010-01-03 06:30:00\", \"2010-01-04 07:30:00\", \"2006-01-01 08:43:00\",\n+    \"2005-12-31 09:43:00\", \"2008-12-27 23:56:00\", \"2008-12-28 23:56:00\", \"2012-01-01 00:56:00\", null])\";\n+  const char* round_15_hour = R\"([\n+    \"1970-01-01 05:30:00\", \"2000-03-01 04:30:00\", \"1899-01-01 06:00:00\", \"2033-05-18 05:30:00\",\n+    \"2020-01-01 04:30:00\", \"2019-12-31 04:30:00\", \"2019-12-30 04:30:00\", \"2009-12-31 04:30:00\",\n+    \"2010-01-01 04:30:00\", \"2010-01-03 04:30:00\", \"2010-01-04 04:30:00\", \"2006-01-01 04:30:00\",\n+    \"2005-12-31 04:30:00\", \"2008-12-28 04:30:00\", \"2008-12-29 04:30:00\", \"2012-01-01 04:30:00\", null])\";\n+  const char* round_15_day = R\"([\n+    \"1969-12-31 14:30:00\", \"2000-02-29 13:30:00\", \"1898-12-31 15:00:00\", \"2033-05-15 14:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-12-30 13:30:00\", \"2019-12-30 13:30:00\", \"2009-12-30 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-12-30 13:30:00\", \"2008-12-30 13:30:00\", \"2008-12-30 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* round_15_weeks = R\"([\n+    \"1969-12-28 14:30:00\", \"2000-04-16 14:30:00\", \"1899-01-01 15:00:00\", \"2033-04-17 14:30:00\",\n+    \"2019-12-29 13:30:00\", \"2019-12-29 13:30:00\", \"2019-12-29 13:30:00\", \"2010-01-03 13:30:00\",\n+    \"2010-01-03 13:30:00\", \"2010-01-03 13:30:00\", \"2010-01-03 13:30:00\", \"2006-01-01 13:30:00\",\n+    \"2006-01-01 13:30:00\", \"2008-11-09 13:30:00\", \"2008-12-28 13:30:00\", \"2012-01-01 13:30:00\", null])\";\n+  const char* round_15_weeks_sunday = R\"([\n+    \"1970-01-03 14:30:00\", \"2000-04-15 14:30:00\", \"1898-12-31 15:00:00\", \"2033-04-16 14:30:00\",\n+    \"2019-12-28 13:30:00\", \"2019-12-28 13:30:00\", \"2019-12-28 13:30:00\", \"2010-01-02 13:30:00\",\n+    \"2010-01-02 13:30:00\", \"2010-01-02 13:30:00\", \"2010-01-02 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-12-31 13:30:00\", \"2009-01-03 13:30:00\", \"2009-01-03 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* round_5_months = R\"([\n+    \"1969-12-31 14:30:00\", \"1999-12-31 13:30:00\", \"1898-12-31 15:00:00\", \"2033-05-31 14:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-10-31 13:30:00\", \"2019-10-31 13:30:00\", \"2009-10-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-10-31 13:30:00\", \"2008-10-31 13:30:00\", \"2008-10-31 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* round_3_quarters = R\"([\n+    \"1969-12-31 14:30:00\", \"1999-12-31 13:30:00\", \"1898-12-31 15:00:00\", \"2033-09-30 14:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-09-30 14:30:00\", \"2019-09-30 14:30:00\", \"2009-09-30 14:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-09-30 14:30:00\", \"2008-09-30 14:30:00\", \"2008-09-30 14:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* round_15_years = R\"([\n+    \"1964-12-31 14:30:00\", \"1994-12-31 13:30:00\", \"1904-12-31 14:30:00\", \"2039-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", null])\";\n+  auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\n\nReview Comment:\n   ```suggestion\r\n   \r\n     // Australia/Broken_Hill timezone is defined as UTC+9:30 and UTC+10:30 during DST.\r\n     // DST runs from first Sunday in October to first Sunday in April.\r\n     auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2911,6 +3032,129 @@ TEST_F(ScalarTemporalTest, TestFloorTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, floor_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestFloorTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"floor_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n+  // of week data because lubridate currently does not support rounding to\n+  // multiple of week.\n+  const char* floor_15_nanosecond =\n+      R\"([\"1970-01-01 00:00:59.123456780\", \"2000-02-29 23:23:23.999999990\",\n+          \"1899-01-01 00:59:20.001001000\", \"2033-05-18 03:33:20.000000000\",\n+          \"2020-01-01 01:05:05.001000000\", \"2019-12-31 02:10:10.002000000\",\n+          \"2019-12-30 03:15:15.003000000\", \"2009-12-31 04:20:20.004132000\",\n+          \"2010-01-01 05:25:25.005321000\", \"2010-01-03 06:30:30.006163000\",\n+          \"2010-01-04 07:35:35.000000000\", \"2006-01-01 08:40:40.000000000\",\n+          \"2005-12-31 09:45:45.000000000\", \"2008-12-28 00:00:00.000000000\",\n+          \"2008-12-29 00:00:00.000000000\", \"2012-01-01 01:02:03.000000000\", null])\";\n+  const char* floor_15_microsecond =\n+      R\"([\"1970-01-01 00:00:59.123450\", \"2000-02-29 23:23:23.999990\",\n+          \"1899-01-01 00:59:20.001000\", \"2033-05-18 03:33:20.000000\",\n+          \"2020-01-01 01:05:05.001000\", \"2019-12-31 02:10:10.002000\",\n+          \"2019-12-30 03:15:15.003000\", \"2009-12-31 04:20:20.004120\",\n+          \"2010-01-01 05:25:25.005315\", \"2010-01-03 06:30:30.006150\",\n+          \"2010-01-04 07:35:35.000000\", \"2006-01-01 08:40:40.000000\",\n+          \"2005-12-31 09:45:45.000000\", \"2008-12-28 00:00:00.000000\",\n+          \"2008-12-29 00:00:00.000000\", \"2012-01-01 01:02:03.000000\", null])\";\n+  const char* floor_15_millisecond =\n+      R\"([\"1970-01-01 00:00:59.120\", \"2000-02-29 23:23:23.990\",\n+          \"1899-01-01 00:59:20.000\", \"2033-05-18 03:33:20.000\",\n+          \"2020-01-01 01:05:05.000\", \"2019-12-31 02:10:10.000\",\n+          \"2019-12-30 03:15:15.000\", \"2009-12-31 04:20:20.000\",\n+          \"2010-01-01 05:25:25.000\", \"2010-01-03 06:30:30.000\",\n+          \"2010-01-04 07:35:35.000\", \"2006-01-01 08:40:40.000\",\n+          \"2005-12-31 09:45:45.000\", \"2008-12-28 00:00:00.000\",\n+          \"2008-12-29 00:00:00.000\", \"2012-01-01 01:02:03.000\", null])\";\n+  const char* floor_13_second = R\"([\n+    \"1970-01-01 00:00:52\", \"2000-02-29 23:23:13\", \"1899-01-01 00:59:13\", \"2033-05-18 03:33:13\",\n+    \"2020-01-01 01:05:00\", \"2019-12-31 02:10:00\", \"2019-12-30 03:15:13\", \"2009-12-31 04:20:13\",\n+    \"2010-01-01 05:25:13\", \"2010-01-03 06:30:26\", \"2010-01-04 07:35:26\", \"2006-01-01 08:40:39\",\n+    \"2005-12-31 09:45:39\", \"2008-12-28 00:00:00\", \"2008-12-29 00:00:00\", \"2012-01-01 01:02:00\", null])\";\n+  const char* floor_13_minute = R\"([\n+    \"1969-12-31 23:56:00\", \"2000-02-29 23:22:00\", \"1899-01-01 00:52:00\", \"2033-05-18 03:30:00\",\n+    \"2020-01-01 00:56:00\", \"2019-12-31 02:09:00\", \"2019-12-30 03:09:00\", \"2009-12-31 04:09:00\",\n+    \"2010-01-01 05:22:00\", \"2010-01-03 06:30:00\", \"2010-01-04 07:30:00\", \"2006-01-01 08:30:00\",\n+    \"2005-12-31 09:43:00\", \"2008-12-27 23:56:00\", \"2008-12-28 23:56:00\", \"2012-01-01 00:56:00\", null])\";\n+  const char* floor_15_hour = R\"([\n+    \"1969-12-31 14:30:00\", \"2000-02-29 13:30:00\", \"1898-12-31 15:00:00\", \"2033-05-17 14:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-12-30 13:30:00\", \"2019-12-29 13:30:00\", \"2009-12-30 13:30:00\",\n+    \"2010-01-01 04:30:00\", \"2010-01-03 04:30:00\", \"2010-01-04 04:30:00\", \"2006-01-01 04:30:00\",\n+    \"2005-12-31 04:30:00\", \"2008-12-27 13:30:00\", \"2008-12-28 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* floor_15_day = R\"([\n+    \"1969-12-31 14:30:00\", \"2000-02-29 13:30:00\", \"1898-12-31 15:00:00\", \"2033-05-15 14:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-12-30 13:30:00\", \"2019-12-15 13:30:00\", \"2009-12-30 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-12-30 13:30:00\", \"2008-12-15 13:30:00\", \"2008-12-15 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* floor_15_weeks = R\"([\n+    \"1969-12-28 14:30:00\", \"2000-01-02 13:30:00\", \"1899-01-01 15:00:00\", \"2033-04-17 14:30:00\",\n+    \"2019-12-29 13:30:00\", \"2019-12-29 13:30:00\", \"2019-12-29 13:30:00\", \"2010-01-03 13:30:00\",\n+    \"2010-01-03 13:30:00\", \"2010-01-03 13:30:00\", \"2010-01-03 13:30:00\", \"2006-01-01 13:30:00\",\n+    \"2006-01-01 13:30:00\", \"2008-11-09 13:30:00\", \"2008-12-28 13:30:00\", \"2012-01-01 13:30:00\", null])\";\n+  const char* floor_15_weeks_sunday = R\"([\n+    \"1970-01-03 14:30:00\", \"2000-01-01 13:30:00\", \"1898-12-31 15:00:00\", \"2033-04-16 14:30:00\",\n+    \"2019-12-28 13:30:00\", \"2019-12-28 13:30:00\", \"2019-12-28 13:30:00\", \"2010-01-02 13:30:00\",\n+    \"2010-01-02 13:30:00\", \"2010-01-02 13:30:00\", \"2010-01-02 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-12-31 13:30:00\", \"2009-01-03 13:30:00\", \"2009-01-03 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* floor_5_months = R\"([\n+    \"1969-12-31 14:30:00\", \"1999-12-31 13:30:00\", \"1898-12-31 15:00:00\", \"2032-12-31 13:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-10-31 13:30:00\", \"2019-10-31 13:30:00\", \"2009-10-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-10-31 13:30:00\", \"2008-10-31 13:30:00\", \"2008-10-31 13:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* floor_3_quarters = R\"([\n+    \"1969-12-31 14:30:00\", \"1999-12-31 13:30:00\", \"1898-12-31 15:00:00\", \"2032-12-31 13:30:00\",\n+    \"2019-12-31 13:30:00\", \"2019-09-30 14:30:00\", \"2019-09-30 14:30:00\", \"2009-09-30 14:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2005-12-31 13:30:00\",\n+    \"2005-09-30 14:30:00\", \"2008-09-30 14:30:00\", \"2008-09-30 14:30:00\", \"2011-12-31 13:30:00\", null])\";\n+  const char* floor_15_years = R\"([\n+    \"1964-12-31 14:30:00\", \"1994-12-31 13:30:00\", \"1889-12-31 14:34:12\", \"2024-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"1994-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"1994-12-31 13:30:00\",\n+    \"1994-12-31 13:30:00\", \"1994-12-31 13:30:00\", \"1994-12-31 13:30:00\", \"2009-12-31 13:30:00\", null])\";\n+\n+  auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\n\nReview Comment:\n   ```suggestion\r\n     // Australia/Broken_Hill timezone is defined as UTC+9:30 and UTC+10:30 during DST.\r\n     // DST runs from first Sunday in October to first Sunday in April.\r\n     auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n+  // of week data because lubridate currently does not support rounding to\n+  // multiple of week.\n+  const char* ceil_15_nanosecond =\n+      R\"([\"1970-01-01 00:00:59.123456795\", \"2000-02-29 23:23:24.000000005\",\n+          \"1899-01-01 00:59:20.001001015\", \"2033-05-18 03:33:20.000000015\",\n+          \"2020-01-01 01:05:05.001000015\", \"2019-12-31 02:10:10.002000015\",\n+          \"2019-12-30 03:15:15.003000015\", \"2009-12-31 04:20:20.004132015\",\n+          \"2010-01-01 05:25:25.005321015\", \"2010-01-03 06:30:30.006163015\",\n+          \"2010-01-04 07:35:35.000000015\", \"2006-01-01 08:40:40.000000015\",\n+          \"2005-12-31 09:45:45.000000015\", \"2008-12-28 00:00:00.000000015\",\n+          \"2008-12-29 00:00:00.000000015\", \"2012-01-01 01:02:03.000000015\", null])\";\n+  const char* ceil_15_microsecond =\n+      R\"([\"1970-01-01 00:00:59.123465\", \"2000-02-29 23:23:24.000005\",\n+          \"1899-01-01 00:59:20.001015\", \"2033-05-18 03:33:20.000015\",\n+          \"2020-01-01 01:05:05.001015\", \"2019-12-31 02:10:10.002015\",\n+          \"2019-12-30 03:15:15.003015\", \"2009-12-31 04:20:20.004135\",\n+          \"2010-01-01 05:25:25.005330\", \"2010-01-03 06:30:30.006165\",\n+          \"2010-01-04 07:35:35.000015\", \"2006-01-01 08:40:40.000015\",\n+          \"2005-12-31 09:45:45.000015\", \"2008-12-28 00:00:00.000015\",\n+          \"2008-12-29 00:00:00.000015\", \"2012-01-01 01:02:03.000015\", null])\";\n+  const char* ceil_15_millisecond =\n+      R\"([\"1970-01-01 00:00:59.135\", \"2000-02-29 23:23:24.005\",\n+          \"1899-01-01 00:59:20.015\", \"2033-05-18 03:33:20.015\",\n+          \"2020-01-01 01:05:05.015\", \"2019-12-31 02:10:10.015\",\n+          \"2019-12-30 03:15:15.015\", \"2009-12-31 04:20:20.015\",\n+          \"2010-01-01 05:25:25.015\", \"2010-01-03 06:30:30.015\",\n+          \"2010-01-04 07:35:35.015\", \"2006-01-01 08:40:40.015\",\n+          \"2005-12-31 09:45:45.015\", \"2008-12-28 00:00:00.015\",\n+          \"2008-12-29 00:00:00.015\", \"2012-01-01 01:02:03.015\", null])\";\n+  const char* ceil_13_second = R\"([\n+    \"1970-01-01 00:01:05\", \"2000-02-29 23:23:26\", \"1899-01-01 00:59:26\", \"2033-05-18 03:33:26\",\n+    \"2020-01-01 01:05:13\", \"2019-12-31 02:10:13\", \"2019-12-30 03:15:26\", \"2009-12-31 04:20:26\",\n+    \"2010-01-01 05:25:26\", \"2010-01-03 06:30:39\", \"2010-01-04 07:35:39\", \"2006-01-01 08:40:52\",\n+    \"2005-12-31 09:45:52\", \"2008-12-28 00:00:13\", \"2008-12-29 00:00:13\", \"2012-01-01 01:02:13\", null])\";\n+  const char* ceil_13_minute = R\"([\n+    \"1970-01-01 00:09:00\", \"2000-02-29 23:35:00\", \"1899-01-01 01:05:00\", \"2033-05-18 03:43:00\",\n+    \"2020-01-01 01:09:00\", \"2019-12-31 02:22:00\", \"2019-12-30 03:22:00\", \"2009-12-31 04:22:00\",\n+    \"2010-01-01 05:35:00\", \"2010-01-03 06:43:00\", \"2010-01-04 07:43:00\", \"2006-01-01 08:43:00\",\n+    \"2005-12-31 09:56:00\", \"2008-12-28 00:09:00\", \"2008-12-29 00:09:00\", \"2012-01-01 01:09:00\", null])\";\n+  const char* ceil_15_hour = R\"([\n+    \"1970-01-01 05:30:00\", \"2000-03-01 04:30:00\", \"1899-01-01 06:00:00\", \"2033-05-18 05:30:00\",\n+    \"2020-01-01 04:30:00\", \"2019-12-31 04:30:00\", \"2019-12-30 04:30:00\", \"2009-12-31 04:30:00\",\n+    \"2010-01-01 19:30:00\", \"2010-01-03 19:30:00\", \"2010-01-04 19:30:00\", \"2006-01-01 19:30:00\",\n+    \"2005-12-31 19:30:00\", \"2008-12-28 04:30:00\", \"2008-12-29 04:30:00\", \"2012-01-01 04:30:00\", null])\";\n+  const char* ceil_15_day = R\"([\n+    \"1970-01-15 14:30:00\", \"2000-03-15 13:30:00\", \"1899-01-15 15:00:00\", \"2033-05-30 14:30:00\",\n+    \"2020-01-15 13:30:00\", \"2020-01-14 13:30:00\", \"2019-12-30 13:30:00\", \"2010-01-14 13:30:00\",\n+    \"2010-01-15 13:30:00\", \"2010-01-15 13:30:00\", \"2010-01-15 13:30:00\", \"2006-01-15 13:30:00\",\n+    \"2006-01-14 13:30:00\", \"2008-12-30 13:30:00\", \"2008-12-30 13:30:00\", \"2012-01-15 13:30:00\", null])\";\n+  const char* ceil_15_weeks = R\"([\n+    \"1970-04-12 14:30:00\", \"2000-04-16 14:30:00\", \"1899-04-16 15:00:00\", \"2033-07-31 14:30:00\",\n+    \"2020-04-12 14:30:00\", \"2020-04-12 14:30:00\", \"2020-04-12 14:30:00\", \"2010-04-18 14:30:00\",\n+    \"2010-04-18 14:30:00\", \"2010-04-18 14:30:00\", \"2010-04-18 14:30:00\", \"2006-04-16 14:30:00\",\n+    \"2006-04-16 14:30:00\", \"2009-02-22 13:30:00\", \"2009-04-12 14:30:00\", \"2012-04-15 14:30:00\", null])\";\n+  const char* ceil_15_weeks_sunday = R\"([\n+    \"1970-04-18 14:30:00\", \"2000-04-15 14:30:00\", \"1899-04-15 15:00:00\", \"2033-07-30 14:30:00\",\n+    \"2020-04-11 14:30:00\", \"2020-04-11 14:30:00\", \"2020-04-11 14:30:00\", \"2010-04-17 14:30:00\",\n+    \"2010-04-17 14:30:00\", \"2010-04-17 14:30:00\", \"2010-04-17 14:30:00\", \"2006-04-15 14:30:00\",\n+    \"2006-04-15 14:30:00\", \"2009-04-18 14:30:00\", \"2009-04-18 14:30:00\", \"2012-04-14 14:30:00\", null])\";\n+  const char* ceil_5_months = R\"([\n+    \"1970-05-31 14:30:00\", \"2000-05-31 14:30:00\", \"1899-05-31 14:30:00\", \"2033-05-31 14:30:00\",\n+    \"2020-05-31 14:30:00\", \"2020-03-31 13:30:00\", \"2020-03-31 13:30:00\", \"2010-03-31 13:30:00\",\n+    \"2010-05-31 14:30:00\", \"2010-05-31 14:30:00\", \"2010-05-31 14:30:00\", \"2006-05-31 14:30:00\",\n+    \"2006-03-31 13:30:00\", \"2009-03-31 13:30:00\", \"2009-03-31 13:30:00\", \"2012-05-31 14:30:00\", null])\";\n+  const char* ceil_3_quarters = R\"([\n+    \"1970-09-30 14:30:00\", \"2000-09-30 14:30:00\", \"1899-09-30 14:30:00\", \"2033-09-30 14:30:00\",\n+    \"2020-09-30 14:30:00\", \"2020-06-30 14:30:00\", \"2020-06-30 14:30:00\", \"2010-06-30 14:30:00\",\n+    \"2010-09-30 14:30:00\", \"2010-09-30 14:30:00\", \"2010-09-30 14:30:00\", \"2006-09-30 14:30:00\",\n+    \"2006-06-30 14:30:00\", \"2009-06-30 14:30:00\", \"2009-06-30 14:30:00\", \"2012-09-30 14:30:00\", null])\";\n+  const char* ceil_15_years = R\"([\n+    \"1979-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"1904-12-31 14:30:00\", \"2039-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2024-12-31 13:30:00\", null])\";\n+\n+  auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\n\nReview Comment:\n   ```suggestion\r\n     // Australia/Broken_Hill timezone is defined as UTC+9:30 and UTC+10:30 during DST.\r\n     // DST runs from first Sunday in October to first Sunday in April.\r\n     auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\r\n   ```\n\n\n\n",
                    "created": "2022-07-04T14:44:56.682+0000",
                    "updated": "2022-07-04T14:44:56.682+0000",
                    "started": "2022-07-04T14:44:56.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787632",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913071539\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n+      RoundTemporalOptions(15, CalendarUnit::NANOSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_microseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MICROSECOND, true, true, true);\n+  RoundTemporalOptions round_to_15_milliseconds =\n+      RoundTemporalOptions(15, CalendarUnit::MILLISECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_seconds =\n+      RoundTemporalOptions(13, CalendarUnit::SECOND, true, true, true);\n+  RoundTemporalOptions round_to_13_minutes =\n+      RoundTemporalOptions(13, CalendarUnit::MINUTE, true, true, true);\n+  RoundTemporalOptions round_to_15_hours =\n+      RoundTemporalOptions(15, CalendarUnit::HOUR, true, true, true);\n+  RoundTemporalOptions round_to_15_days =\n+      RoundTemporalOptions(15, CalendarUnit::DAY, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, true, true, true);\n+  RoundTemporalOptions round_to_15_weeks_sunday =\n+      RoundTemporalOptions(15, CalendarUnit::WEEK, false, true, true);\n+  RoundTemporalOptions round_to_5_months =\n+      RoundTemporalOptions(5, CalendarUnit::MONTH, true, true, true);\n+  RoundTemporalOptions round_to_3_quarters =\n+      RoundTemporalOptions(3, CalendarUnit::QUARTER, true, true, true);\n+  RoundTemporalOptions round_to_15_years =\n+      RoundTemporalOptions(15, CalendarUnit::YEAR, true, true, true);\n+\n+  // Data for tests below was generaed via lubridate with the exception\n+  // of week data because lubridate currently does not support rounding to\n+  // multiple of week.\n+  const char* ceil_15_nanosecond =\n+      R\"([\"1970-01-01 00:00:59.123456795\", \"2000-02-29 23:23:24.000000005\",\n+          \"1899-01-01 00:59:20.001001015\", \"2033-05-18 03:33:20.000000015\",\n+          \"2020-01-01 01:05:05.001000015\", \"2019-12-31 02:10:10.002000015\",\n+          \"2019-12-30 03:15:15.003000015\", \"2009-12-31 04:20:20.004132015\",\n+          \"2010-01-01 05:25:25.005321015\", \"2010-01-03 06:30:30.006163015\",\n+          \"2010-01-04 07:35:35.000000015\", \"2006-01-01 08:40:40.000000015\",\n+          \"2005-12-31 09:45:45.000000015\", \"2008-12-28 00:00:00.000000015\",\n+          \"2008-12-29 00:00:00.000000015\", \"2012-01-01 01:02:03.000000015\", null])\";\n+  const char* ceil_15_microsecond =\n+      R\"([\"1970-01-01 00:00:59.123465\", \"2000-02-29 23:23:24.000005\",\n+          \"1899-01-01 00:59:20.001015\", \"2033-05-18 03:33:20.000015\",\n+          \"2020-01-01 01:05:05.001015\", \"2019-12-31 02:10:10.002015\",\n+          \"2019-12-30 03:15:15.003015\", \"2009-12-31 04:20:20.004135\",\n+          \"2010-01-01 05:25:25.005330\", \"2010-01-03 06:30:30.006165\",\n+          \"2010-01-04 07:35:35.000015\", \"2006-01-01 08:40:40.000015\",\n+          \"2005-12-31 09:45:45.000015\", \"2008-12-28 00:00:00.000015\",\n+          \"2008-12-29 00:00:00.000015\", \"2012-01-01 01:02:03.000015\", null])\";\n+  const char* ceil_15_millisecond =\n+      R\"([\"1970-01-01 00:00:59.135\", \"2000-02-29 23:23:24.005\",\n+          \"1899-01-01 00:59:20.015\", \"2033-05-18 03:33:20.015\",\n+          \"2020-01-01 01:05:05.015\", \"2019-12-31 02:10:10.015\",\n+          \"2019-12-30 03:15:15.015\", \"2009-12-31 04:20:20.015\",\n+          \"2010-01-01 05:25:25.015\", \"2010-01-03 06:30:30.015\",\n+          \"2010-01-04 07:35:35.015\", \"2006-01-01 08:40:40.015\",\n+          \"2005-12-31 09:45:45.015\", \"2008-12-28 00:00:00.015\",\n+          \"2008-12-29 00:00:00.015\", \"2012-01-01 01:02:03.015\", null])\";\n+  const char* ceil_13_second = R\"([\n+    \"1970-01-01 00:01:05\", \"2000-02-29 23:23:26\", \"1899-01-01 00:59:26\", \"2033-05-18 03:33:26\",\n+    \"2020-01-01 01:05:13\", \"2019-12-31 02:10:13\", \"2019-12-30 03:15:26\", \"2009-12-31 04:20:26\",\n+    \"2010-01-01 05:25:26\", \"2010-01-03 06:30:39\", \"2010-01-04 07:35:39\", \"2006-01-01 08:40:52\",\n+    \"2005-12-31 09:45:52\", \"2008-12-28 00:00:13\", \"2008-12-29 00:00:13\", \"2012-01-01 01:02:13\", null])\";\n+  const char* ceil_13_minute = R\"([\n+    \"1970-01-01 00:09:00\", \"2000-02-29 23:35:00\", \"1899-01-01 01:05:00\", \"2033-05-18 03:43:00\",\n+    \"2020-01-01 01:09:00\", \"2019-12-31 02:22:00\", \"2019-12-30 03:22:00\", \"2009-12-31 04:22:00\",\n+    \"2010-01-01 05:35:00\", \"2010-01-03 06:43:00\", \"2010-01-04 07:43:00\", \"2006-01-01 08:43:00\",\n+    \"2005-12-31 09:56:00\", \"2008-12-28 00:09:00\", \"2008-12-29 00:09:00\", \"2012-01-01 01:09:00\", null])\";\n+  const char* ceil_15_hour = R\"([\n+    \"1970-01-01 05:30:00\", \"2000-03-01 04:30:00\", \"1899-01-01 06:00:00\", \"2033-05-18 05:30:00\",\n+    \"2020-01-01 04:30:00\", \"2019-12-31 04:30:00\", \"2019-12-30 04:30:00\", \"2009-12-31 04:30:00\",\n+    \"2010-01-01 19:30:00\", \"2010-01-03 19:30:00\", \"2010-01-04 19:30:00\", \"2006-01-01 19:30:00\",\n+    \"2005-12-31 19:30:00\", \"2008-12-28 04:30:00\", \"2008-12-29 04:30:00\", \"2012-01-01 04:30:00\", null])\";\n+  const char* ceil_15_day = R\"([\n+    \"1970-01-15 14:30:00\", \"2000-03-15 13:30:00\", \"1899-01-15 15:00:00\", \"2033-05-30 14:30:00\",\n+    \"2020-01-15 13:30:00\", \"2020-01-14 13:30:00\", \"2019-12-30 13:30:00\", \"2010-01-14 13:30:00\",\n+    \"2010-01-15 13:30:00\", \"2010-01-15 13:30:00\", \"2010-01-15 13:30:00\", \"2006-01-15 13:30:00\",\n+    \"2006-01-14 13:30:00\", \"2008-12-30 13:30:00\", \"2008-12-30 13:30:00\", \"2012-01-15 13:30:00\", null])\";\n+  const char* ceil_15_weeks = R\"([\n+    \"1970-04-12 14:30:00\", \"2000-04-16 14:30:00\", \"1899-04-16 15:00:00\", \"2033-07-31 14:30:00\",\n+    \"2020-04-12 14:30:00\", \"2020-04-12 14:30:00\", \"2020-04-12 14:30:00\", \"2010-04-18 14:30:00\",\n+    \"2010-04-18 14:30:00\", \"2010-04-18 14:30:00\", \"2010-04-18 14:30:00\", \"2006-04-16 14:30:00\",\n+    \"2006-04-16 14:30:00\", \"2009-02-22 13:30:00\", \"2009-04-12 14:30:00\", \"2012-04-15 14:30:00\", null])\";\n+  const char* ceil_15_weeks_sunday = R\"([\n+    \"1970-04-18 14:30:00\", \"2000-04-15 14:30:00\", \"1899-04-15 15:00:00\", \"2033-07-30 14:30:00\",\n+    \"2020-04-11 14:30:00\", \"2020-04-11 14:30:00\", \"2020-04-11 14:30:00\", \"2010-04-17 14:30:00\",\n+    \"2010-04-17 14:30:00\", \"2010-04-17 14:30:00\", \"2010-04-17 14:30:00\", \"2006-04-15 14:30:00\",\n+    \"2006-04-15 14:30:00\", \"2009-04-18 14:30:00\", \"2009-04-18 14:30:00\", \"2012-04-14 14:30:00\", null])\";\n+  const char* ceil_5_months = R\"([\n+    \"1970-05-31 14:30:00\", \"2000-05-31 14:30:00\", \"1899-05-31 14:30:00\", \"2033-05-31 14:30:00\",\n+    \"2020-05-31 14:30:00\", \"2020-03-31 13:30:00\", \"2020-03-31 13:30:00\", \"2010-03-31 13:30:00\",\n+    \"2010-05-31 14:30:00\", \"2010-05-31 14:30:00\", \"2010-05-31 14:30:00\", \"2006-05-31 14:30:00\",\n+    \"2006-03-31 13:30:00\", \"2009-03-31 13:30:00\", \"2009-03-31 13:30:00\", \"2012-05-31 14:30:00\", null])\";\n+  const char* ceil_3_quarters = R\"([\n+    \"1970-09-30 14:30:00\", \"2000-09-30 14:30:00\", \"1899-09-30 14:30:00\", \"2033-09-30 14:30:00\",\n+    \"2020-09-30 14:30:00\", \"2020-06-30 14:30:00\", \"2020-06-30 14:30:00\", \"2010-06-30 14:30:00\",\n+    \"2010-09-30 14:30:00\", \"2010-09-30 14:30:00\", \"2010-09-30 14:30:00\", \"2006-09-30 14:30:00\",\n+    \"2006-06-30 14:30:00\", \"2009-06-30 14:30:00\", \"2009-06-30 14:30:00\", \"2012-09-30 14:30:00\", null])\";\n+  const char* ceil_15_years = R\"([\n+    \"1979-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"1904-12-31 14:30:00\", \"2039-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2024-12-31 13:30:00\", \"2009-12-31 13:30:00\",\n+    \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2009-12-31 13:30:00\", \"2024-12-31 13:30:00\", null])\";\n+\n+  auto unit = timestamp(TimeUnit::NANO, \"Australia/Broken_Hill\");\n\nReview Comment:\n   Added.\n\n\n\n",
                    "created": "2022-07-04T14:45:31.622+0000",
                    "updated": "2022-07-04T14:45:31.622+0000",
                    "started": "2022-07-04T14:45:31.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787634",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787644",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913086537\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2593,6 +2593,127 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n+  std::string op = \"ceil_temporal\";\n+  RoundTemporalOptions round_to_15_nanoseconds =\n\nReview Comment:\n   Moved to fixture. Names are not very inspired (`round_to_13_seconds` vs `round_to_13_seconds_2`).\n\n\n\n",
                    "created": "2022-07-04T15:04:47.961+0000",
                    "updated": "2022-07-04T15:04:47.961+0000",
                    "started": "2022-07-04T15:04:47.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787644",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913090391\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -409,6 +409,60 @@ class ScalarTemporalTest : public ::testing::Test {\n       RoundTemporalOptions(15, CalendarUnit::QUARTER);\n   RoundTemporalOptions round_to_15_years = RoundTemporalOptions(15, CalendarUnit::YEAR);\n \n+  RoundTemporalOptions round_to_1_nanoseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::NANOSECOND, true, true, false);\n\nReview Comment:\n   Hmm... to avoid the naming issue, perhaps we can have a derived fixture for `ceil_is_strictly_greater = true`?\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -409,6 +409,60 @@ class ScalarTemporalTest : public ::testing::Test {\n       RoundTemporalOptions(15, CalendarUnit::QUARTER);\n   RoundTemporalOptions round_to_15_years = RoundTemporalOptions(15, CalendarUnit::YEAR);\n \n+  RoundTemporalOptions round_to_1_nanoseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::NANOSECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_microseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MICROSECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_milliseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MILLISECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_seconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::SECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_minutes_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MINUTE, true, true, false);\n+  RoundTemporalOptions round_to_1_hours_2 =\n+      RoundTemporalOptions(1, CalendarUnit::HOUR, true, true, false);\n+  RoundTemporalOptions round_to_1_days_2 =\n+      RoundTemporalOptions(1, CalendarUnit::DAY, true, true, false);\n+  RoundTemporalOptions round_to_1_weeks_2 =\n+      RoundTemporalOptions(1, CalendarUnit::WEEK, true, true, false);\n+  RoundTemporalOptions round_to_1_weeks_sunday_2 =\n+      RoundTemporalOptions(1, CalendarUnit::WEEK, false, true, false);\n+  RoundTemporalOptions round_to_1_months_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MONTH, true, true, false);\n+  RoundTemporalOptions round_to_1_quarters_2 =\n+      RoundTemporalOptions(1, CalendarUnit::QUARTER, true, true, false);\n+  RoundTemporalOptions round_to_1_years_2 =\n+      RoundTemporalOptions(1, CalendarUnit::YEAR, true, true, false);\n+\n+  RoundTemporalOptions round_to_15_nanoseconds_2 =\n\nReview Comment:\n   Similar suggestion here for `calendar_based_origin = true`.\n\n\n\n",
                    "created": "2022-07-04T15:10:03.803+0000",
                    "updated": "2022-07-04T15:10:03.803+0000",
                    "started": "2022-07-04T15:10:03.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787647",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913242557\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -409,6 +409,60 @@ class ScalarTemporalTest : public ::testing::Test {\n       RoundTemporalOptions(15, CalendarUnit::QUARTER);\n   RoundTemporalOptions round_to_15_years = RoundTemporalOptions(15, CalendarUnit::YEAR);\n \n+  RoundTemporalOptions round_to_1_nanoseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::NANOSECOND, true, true, false);\n\nReview Comment:\n   Yes! Done.\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -409,6 +409,60 @@ class ScalarTemporalTest : public ::testing::Test {\n       RoundTemporalOptions(15, CalendarUnit::QUARTER);\n   RoundTemporalOptions round_to_15_years = RoundTemporalOptions(15, CalendarUnit::YEAR);\n \n+  RoundTemporalOptions round_to_1_nanoseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::NANOSECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_microseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MICROSECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_milliseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MILLISECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_seconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::SECOND, true, true, false);\n+  RoundTemporalOptions round_to_1_minutes_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MINUTE, true, true, false);\n+  RoundTemporalOptions round_to_1_hours_2 =\n+      RoundTemporalOptions(1, CalendarUnit::HOUR, true, true, false);\n+  RoundTemporalOptions round_to_1_days_2 =\n+      RoundTemporalOptions(1, CalendarUnit::DAY, true, true, false);\n+  RoundTemporalOptions round_to_1_weeks_2 =\n+      RoundTemporalOptions(1, CalendarUnit::WEEK, true, true, false);\n+  RoundTemporalOptions round_to_1_weeks_sunday_2 =\n+      RoundTemporalOptions(1, CalendarUnit::WEEK, false, true, false);\n+  RoundTemporalOptions round_to_1_months_2 =\n+      RoundTemporalOptions(1, CalendarUnit::MONTH, true, true, false);\n+  RoundTemporalOptions round_to_1_quarters_2 =\n+      RoundTemporalOptions(1, CalendarUnit::QUARTER, true, true, false);\n+  RoundTemporalOptions round_to_1_years_2 =\n+      RoundTemporalOptions(1, CalendarUnit::YEAR, true, true, false);\n+\n+  RoundTemporalOptions round_to_15_nanoseconds_2 =\n\nReview Comment:\n   Done.\n\n\n\n",
                    "created": "2022-07-04T19:38:44.104+0000",
                    "updated": "2022-07-04T19:38:44.104+0000",
                    "started": "2022-07-04T19:38:44.104+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787688",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#issuecomment-1174215964\n\n   @pitrou I moved things to fixtures and checked the data. I think this is ready for another review.\n\n\n",
                    "created": "2022-07-04T19:56:47.388+0000",
                    "updated": "2022-07-04T19:56:47.388+0000",
                    "started": "2022-07-04T19:56:47.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787689",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913899174\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -409,6 +409,60 @@ class ScalarTemporalTest : public ::testing::Test {\n       RoundTemporalOptions(15, CalendarUnit::QUARTER);\n   RoundTemporalOptions round_to_15_years = RoundTemporalOptions(15, CalendarUnit::YEAR);\n \n+  RoundTemporalOptions round_to_1_nanoseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::NANOSECOND, true, true, false);\n\nReview Comment:\n   Thanks... why is `calendar_based_origin` false here? Am I misreading? Or are these unused?\n\n\n\n",
                    "created": "2022-07-05T14:58:58.906+0000",
                    "updated": "2022-07-05T14:58:58.906+0000",
                    "started": "2022-07-05T14:58:58.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787890",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913899900\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2460,40 +2525,16 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalStrictCeil) {\n   CheckScalarUnary(op, unit, times, unit, ceil_13_minute, &round_to_13_minutes);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_hour, &round_to_15_hours);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_day, &round_to_15_days);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks, &round_to_15_weeks);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks_sunday,\n-                   &round_to_15_weeks_sunday);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks, &round_to_3_weeks);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks_sunday, &round_to_3_weeks_sunday);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_months, &round_to_15_months);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_quarters, &round_to_15_quarters);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n-TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n+TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit,\n+       TestCeilTemporalMultipleSinceGreaterUnit) {\n\nReview Comment:\n   Can make the test name shorter :-)\n\n\n\n",
                    "created": "2022-07-05T14:59:38.946+0000",
                    "updated": "2022-07-05T14:59:38.946+0000",
                    "started": "2022-07-05T14:59:38.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787893",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913900179\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2585,14 +2626,110 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n   CheckScalarUnary(op, unit, times, unit, ceil_13_minute, &round_to_13_minutes);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_hour, &round_to_15_hours);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_day, &round_to_15_days);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks, &round_to_15_weeks);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks_sunday,\n-                   &round_to_15_weeks_sunday);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks, &round_to_3_weeks);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks_sunday, &round_to_3_weeks_sunday);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_months, &round_to_15_months);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_quarters, &round_to_15_quarters);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n+TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit,\n+       TestCeilTemporalMultipleSinceGreaterUnitZoned) {\n\nReview Comment:\n   For example:\r\n   ```suggestion\r\n   TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit, Zoned) {\r\n   ```\n\n\n\n",
                    "created": "2022-07-05T14:59:53.983+0000",
                    "updated": "2022-07-05T14:59:53.983+0000",
                    "started": "2022-07-05T14:59:53.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787894",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913900927\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2460,40 +2525,16 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalStrictCeil) {\n   CheckScalarUnary(op, unit, times, unit, ceil_13_minute, &round_to_13_minutes);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_hour, &round_to_15_hours);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_day, &round_to_15_days);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks, &round_to_15_weeks);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks_sunday,\n-                   &round_to_15_weeks_sunday);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks, &round_to_3_weeks);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks_sunday, &round_to_3_weeks_sunday);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_months, &round_to_15_months);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_quarters, &round_to_15_quarters);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n-TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n+TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit,\n+       TestCeilTemporalMultipleSinceGreaterUnit) {\n\nReview Comment:\n   For example:\r\n   ```suggestion\r\n   TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit, UTC) {\r\n   ```\n\n\n\n",
                    "created": "2022-07-05T15:00:34.027+0000",
                    "updated": "2022-07-05T15:00:34.027+0000",
                    "started": "2022-07-05T15:00:34.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787896",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913901819\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2460,40 +2525,16 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalStrictCeil) {\n   CheckScalarUnary(op, unit, times, unit, ceil_13_minute, &round_to_13_minutes);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_hour, &round_to_15_hours);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_day, &round_to_15_days);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks, &round_to_15_weeks);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks_sunday,\n-                   &round_to_15_weeks_sunday);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks, &round_to_3_weeks);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks_sunday, &round_to_3_weeks_sunday);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_months, &round_to_15_months);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_quarters, &round_to_15_quarters);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n-TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n+TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit,\n+       TestCeilTemporalMultipleSinceGreaterUnit) {\n\nReview Comment:\n   Similar suggestions apply for the other test names, of course.\n\n\n\n",
                    "created": "2022-07-05T15:01:24.150+0000",
                    "updated": "2022-07-05T15:01:24.150+0000",
                    "started": "2022-07-05T15:01:24.149+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787897",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913957782\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -409,6 +409,60 @@ class ScalarTemporalTest : public ::testing::Test {\n       RoundTemporalOptions(15, CalendarUnit::QUARTER);\n   RoundTemporalOptions round_to_15_years = RoundTemporalOptions(15, CalendarUnit::YEAR);\n \n+  RoundTemporalOptions round_to_1_nanoseconds_2 =\n+      RoundTemporalOptions(1, CalendarUnit::NANOSECOND, true, true, false);\n\nReview Comment:\n   Oh that was wrong. Fixed.\r\n   The reason the tests passed is because the error (`calendar_based_origin=true`) was only there for `multiple=1` which would return (mostly) equal for `calendar_based_origin=true` or `calendar_based_origin=false`.\n\n\n\n",
                    "created": "2022-07-05T15:57:34.259+0000",
                    "updated": "2022-07-05T15:57:34.259+0000",
                    "started": "2022-07-05T15:57:34.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787917",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#discussion_r913958098\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_test.cc:\n##########\n@@ -2460,40 +2525,16 @@ TEST_F(ScalarTemporalTest, TestCeilTemporalStrictCeil) {\n   CheckScalarUnary(op, unit, times, unit, ceil_13_minute, &round_to_13_minutes);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_hour, &round_to_15_hours);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_day, &round_to_15_days);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks, &round_to_15_weeks);\n-  CheckScalarUnary(op, unit, times, unit, ceil_15_weeks_sunday,\n-                   &round_to_15_weeks_sunday);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks, &round_to_3_weeks);\n+  CheckScalarUnary(op, unit, times, unit, ceil_3_weeks_sunday, &round_to_3_weeks_sunday);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_months, &round_to_15_months);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_quarters, &round_to_15_quarters);\n   CheckScalarUnary(op, unit, times, unit, ceil_15_years, &round_to_15_years);\n }\n \n-TEST_F(ScalarTemporalTest, TestCeilTemporalMultipleSinceGreaterUnit) {\n+TEST_F(ScalarTemporalTestMultipleSinceGreaterUnit,\n+       TestCeilTemporalMultipleSinceGreaterUnit) {\n\nReview Comment:\n   Yes, certainly!\n\n\n\n",
                    "created": "2022-07-05T15:57:54.321+0000",
                    "updated": "2022-07-05T15:57:54.321+0000",
                    "started": "2022-07-05T15:57:54.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787918",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#issuecomment-1175231989\n\n   @pitrou I changed the names and addressed the `ceil_is_strictly_greater = true` issue.\n\n\n",
                    "created": "2022-07-05T16:06:10.365+0000",
                    "updated": "2022-07-05T16:06:10.365+0000",
                    "started": "2022-07-05T16:06:10.365+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787920",
                    "issueId": "13469086"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/worklog/787921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13462:\nURL: https://github.com/apache/arrow/pull/13462#issuecomment-1175233697\n\n   Cool, thanks for the persistence :-)\n\n\n",
                    "created": "2022-07-05T16:07:53.631+0000",
                    "updated": "2022-07-05T16:07:53.631+0000",
                    "started": "2022-07-05T16:07:53.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787921",
                    "issueId": "13469086"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5895275a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21d9de6f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c39d84b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@137c5b05[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26a27205[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@17fe5a5a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25b7336e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@54e2e0ae[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61e5926d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4ac2881[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@181c5739[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5b382304[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 05 16:40:04 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-05T16:40:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16932/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-06-29T11:49:11.000+0000",
        "updated": "2022-07-05T16:40:04.000+0000",
        "timeoriginalestimate": null,
        "description": "[See discussion.|https://github.com/apache/arrow/pull/12154#issuecomment-1169578666]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Rounding RoundTemporalOptions.calendar_based_origin doesn't correctly offset non-UTC results",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13469086/comment/17562754",
                    "id": "17562754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 13462\n[https://github.com/apache/arrow/pull/13462]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-07-05T16:40:04.395+0000",
                    "updated": "2022-07-05T16:40:04.395+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z16go0:",
        "customfield_12314139": null
    }
}