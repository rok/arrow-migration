{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13477427",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427",
    "key": "ARROW-17459",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12645906",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12645906",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "outwardIssue": {
                    "id": "13224326",
                    "key": "ARROW-5030",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224326",
                    "fields": {
                        "summary": "[Python] read_row_group fails with Nested data conversions not implemented for chunked array outputs",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
            "name": "arthurpassos",
            "key": "JIRAUSER294600",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Arthur Passos",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
            "name": "arthurpassos",
            "key": "JIRAUSER294600",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Arthur Passos",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
            "name": "arthurpassos",
            "key": "JIRAUSER294600",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Arthur Passos",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17459/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@8055a94[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1607736a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@452e4010[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@689ff7fc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c8cbdf9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@40e11aa2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77f8ec6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@604fc57a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4905dfff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1f9e877[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3152ffba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2f2898ff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Nov 04 21:00:25 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17459/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-08-18T12:24:20.000+0000",
        "updated": "2022-11-04T21:00:25.000+0000",
        "timeoriginalestimate": null,
        "description": "`FileReaderImpl::ReadRowGroup` fails with \"Nested data conversions not implemented for chunked array outputs\". It fails on [ChunksToSingle]([https://github.com/apache/arrow/blob/7f6b074b84b1ca519b7c5fc7da318e8d47d44278/cpp/src/parquet/arrow/reader.cc#L95])\r\n\r\nData schema is:\u00a0\r\n{code:java}\r\n\u00a0 optional group fields_map (MAP) = 217 {\r\n\u00a0 \u00a0 repeated group key_value {\r\n\u00a0 \u00a0 \u00a0 required binary key (STRING) = 218;\r\n\u00a0 \u00a0 \u00a0 optional binary value (STRING) = 219;\r\n\u00a0 \u00a0 }\r\n\u00a0 }\r\nfields_map.key_value.value-> Size In Bytes: 13243589 Size In Ratio: 0.20541047\r\nfields_map.key_value.key-> Size In Bytes: 3008860 Size In Ratio: 0.046667963\r\n{code}\r\nIs there a way to work around this issue in the cpp lib?\r\n\r\nIn any case, I am willing to implement this, but I need some guidance. I am very new to parquet (as in started reading about it yesterday).\r\n\r\n\u00a0\r\n\r\nProbably related to: https://issues.apache.org/jira/browse/ARROW-10958",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Support nested data conversions for chunked array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17581502",
                    "id": "17581502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I haven't tried this, but perhaps {{GetRecordBatchReader}} instead will work [https://github.com/wjones127/arrow/blob/895e2da93c0af3a1525c8c75ec8d612d96c28647/cpp/src/parquet/arrow/reader.h#L165]\r\n\r\nIt sounds like there are some code paths that do work and some that don't.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-18T19:26:36.790+0000",
                    "updated": "2022-08-18T19:26:36.790+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17582918",
                    "id": "17582918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~willjones127] at a first glance, it seems to be working. The client code I had was something like the below:\r\n\r\n\r\n{code:java}\r\nstd::shared_ptr<arrow::Table> table;\r\narrow::Status read_status = file_reader->ReadRowGroup(row_group_current, column_indices, &table);\r\nif (!read_status.ok())\r\n\u00a0 \u00a0 throw ParsingException{\"Error while reading Parquet data: \" + read_status.ToString(), ErrorCodes::CANNOT_READ_ALL_DATA};\r\n++row_group_current;\r\n{code}\r\n\u00a0\r\n\r\nNow it's the below:\r\n{code:java}\r\nstd::shared_ptr<arrow::Table> table;\r\n\r\nstd::unique_ptr<::arrow::RecordBatchReader> rbr;\r\nstd::vector<int> row_group_indices { row_group_current };\r\narrow::Status get_batch_reader_status = file_reader->GetRecordBatchReader(row_group_indices, column_indices, &rbr);\r\n\r\nif (!get_batch_reader_status.ok())\r\nthrow ParsingException{\"Error while reading Parquet data: \" + get_batch_reader_status.ToString(), ErrorCodes::CANNOT_READ_ALL_DATA};\r\n\r\narrow::Status read_status = rbr->ReadAll(&table);\r\n\r\nif (!read_status.ok())\r\nthrow ParsingException{\"Error while reading Parquet data: \" + read_status.ToString(), ErrorCodes::CANNOT_READ_ALL_DATA};\r\n\r\n++row_group_current;{code}\r\n\u00a0\r\n\r\n*Question: Should I expect any regressions or different behaviour by changing the code path to the latter?*\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-22T11:26:22.685+0000",
                    "updated": "2022-08-22T11:26:22.685+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17584808",
                    "id": "17584808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I am also trying to write test to cover this case, but failing to do so. For some reason, the files I generate with the very same schema and size don't get chunked while reading it. The original file was provided by a customer and it's confidential data, so it can't be used.\r\n\r\n\u00a0\r\n\r\nAll the files I generated contain the above mentioned schema. The differences are in the data length. Some had maps of 50~300 elements with keys of random strings of 20~50 characters and values of random strings of 50~5000 characters. I also tried a low cardinality example and a large string example (2^30 characters).\r\n\r\n\u00a0\r\n\r\nI'd be very thankful if someone could give me some tips on how to generate a file that will trigger the exception.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-25T12:17:07.299+0000",
                    "updated": "2022-08-25T12:17:07.299+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17597392",
                    "id": "17597392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi Arthur,\r\n\r\nHere's a simple repro I created in Python:\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\narr = pa.array([[(\"a\" * 2**30, 1)]], type = pa.map_(pa.string(), pa.int32()))\r\narr = pa.chunked_array([arr, arr])\r\ntab = pa.table({ \"arr\": arr })\r\n\r\npq.write_table(tab, \"test.parquet\")\r\n\r\npq.read_table(\"test.parquet\")\r\n#Traceback (most recent call last):\r\n#  File \"<stdin>\", line 1, in <module>\r\n#  File \"/Users/willjones/mambaforge/envs/notebooks/lib/python3.10/site-#packages/pyarrow/parquet/__init__.py\", line 2827, in read_table\r\n#    return dataset.read(columns=columns, use_threads=use_threads,\r\n#  File \"/Users/willjones/mambaforge/envs/notebooks/lib/python3.10/site-#packages/pyarrow/parquet/__init__.py\", line 2473, in read\r\n#    table = self._dataset.to_table(\r\n#  File \"pyarrow/_dataset.pyx\", line 331, in pyarrow._dataset.Dataset.to_table\r\n#  File \"pyarrow/_dataset.pyx\", line 2577, in pyarrow._dataset.Scanner.to_table\r\n#  File \"pyarrow/error.pxi\", line 144, in pyarrow.lib.pyarrow_internal_check_status\r\n#  File \"pyarrow/error.pxi\", line 121, in pyarrow.lib.check_status\r\n#pyarrow.lib.ArrowNotImplementedError: Nested data conversions not implemented for chunked array outputs\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-29T20:53:08.164+0000",
                    "updated": "2022-08-29T20:53:08.164+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17597846",
                    "id": "17597846",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~willjones127] Thank you for sharing this!\r\n\r\n\u00a0\r\n\r\nWhile your `GetRecordBatchReader` suggestion works for the use case I shared, it won't work for this one. Are there any docs I could read to understand the internals of arrow lib in order to implement it? Any tips would be appreciated.. The only thing that comes to mind right now is to somehow build a giant array with all the chunks, but it certainly has a set of implications.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-30T12:35:45.892+0000",
                    "updated": "2022-08-30T12:35:45.892+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17597915",
                    "id": "17597915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "We have a section of our docs devoted to [developer setup and guidelines|https://arrow.apache.org/docs/developers/contributing.html]. And we have documentation describing the [Arrow in-memory format|https://arrow.apache.org/docs/format/Columnar.html] (it may be worth reviewing the structure of nested arrays, for example). For the internals of the Parquet arrow code, it's best to read through the source headers at {{{}cpp/src/parquet/arrow/{}}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-30T14:56:25.331+0000",
                    "updated": "2022-08-30T14:56:25.331+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598019",
                    "id": "17598019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi [~emkornfield]. I see you are one of the authors of [https://github.com/apache/arrow/pull/8177|https://github.com/apache/arrow/pull/8177.]. I see the following snippet was introduced on that PR:\r\n\r\n\r\n{code:java}\r\n\u00a0 \u00a0 \u00a0 // ARROW-3762(wesm): If item reader yields a chunked array, we reject as\r\n\u00a0 \u00a0 \u00a0 // this is not yet implemented\r\n\u00a0 \u00a0 \u00a0 return Status::NotImplemented(\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Nested data conversions not implemented for chunked array outputs\");{code}\r\nI wonder why this wasn't implemented. Is there a techinical limitation or the approach wasn't very well defined?\r\n\r\nI am pretty new to Parquet and to `arrow` library, so it's very hard to me to reason about all of these concepts and code. From the top of my head, I got a couple of silly ideas:\r\n # Find a way to convert a ChunkedArray into a single Array. That requires a processing step that allocates a contiguous chunk of memory big enough to hold all chunks. Plus, there is no clear interface to do so.\r\n # Create a new ChunkedArray class that can hold ChunkedArrays. As of now, it can only hold raw Arrays. That would require a LOT of changes in other\u00a0{{arrow}}\u00a0 classes and, of course, it's not guaranteed to work.\r\n # Make the chunk memory limit configurable (not sure it's feasible)\r\n\r\nDo you see any of these as a path forward? If not, what would be the path forward?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-30T19:00:08.027+0000",
                    "updated": "2022-08-30T19:00:08.027+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598038",
                    "id": "17598038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "1.  ChunkedArrays have a Flatten method that will do this but I don't think it will help in this case.  IIRC the challenge in this case is that parquet only yields chunked arrays if the underlying column data cannot fit into the right arrow structure.  In this case for Utf8 arrays it means the sum of bytes across all strings has to be less then INT_MAX length.  Otherwise it would need to flatten to LargeUtf8 which has implications for schema conversion.  Structs and lists always expected Arrays as their inner element types and not chunked arrays.\r\n2.  doesn't necessarily seem like the right approach.  \r\n3.  Per 1, this isn't really the issue I think.  The approach here that could work (I don't remember all the code paths) is to vary the number of rows read back if not all rows are huge).\r\n\r\nOne way forward here could be to add an option for reading back arrays to always use the Large* variant (or maybe on a per column basis) to avoid chunking.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-30T19:52:48.528+0000",
                    "updated": "2022-08-30T19:52:48.528+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598050",
                    "id": "17598050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~emkornfield] thank you for your answer. Can you clarify what you mean by \"read back arrays to always use the Large* variant\"? I don't know what \"back array\" and \"large variant\" refer to, tho I can especulate what the latter means.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-30T20:18:20.494+0000",
                    "updated": "2022-08-30T20:18:20.494+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598058",
                    "id": "17598058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "i.e. LargeBinary, LargeString, LargeList these are distinct types that use int64s to represent offsets instead of int32",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-30T20:33:19.231+0000",
                    "updated": "2022-08-30T20:33:19.231+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598383",
                    "id": "17598383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~emkornfield] if I understand correctly, this could help with the original case I shared. In the case [~willjones127] shared, where he creates a ChunkedArray and then serializes it, it wouldn't help. Is that correct?\r\n\r\nI am stating this based on my current understanding of the inner workings of `arrow`: The ChunkedArray data structure will be used in two or more situations:\u00a0\r\n1. The data in a row group exceeds the limit of INT_MAX (Case I initially shared)\r\n2. The serialized data/ table is a chunked array, thus it makes sense to use a chunked array.\r\n\r\n\u00a0\r\n\r\nedit:\r\n\r\nI have just tested the snippet shared by Will Jones using `type = pa.map_(pa.large_string(), pa.int64())` instead of `type = pa.map_(pa.string(), pa.int32())` and the issue persists.\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-31T13:29:46.026+0000",
                    "updated": "2022-08-31T14:31:12.255+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598501",
                    "id": "17598501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, I think there are some code changes, we hard-code non large [BinaryBuilder|https://github.com/apache/arrow/blob/master/cpp/src/parquet/column_reader.cc#L1693] for accumulating chunks and then used when [decoding arrow|https://github.com/apache/arrow/blob/master/cpp/src/parquet/encoding.cc#L1392].\r\n\r\nTo answer your questions, I don't think the second case applies.  As far as I know Parquet C++ does its own chunking and doesn't try to read back the exact chunking that the values are written with.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-31T16:48:16.686+0000",
                    "updated": "2022-08-31T16:48:16.686+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598581",
                    "id": "17598581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I am a bit lost rn. I have made some changes to use LargeBinaryBuilder, but there is always an incosistency that throws an exception. Are you aware of any place in the code where instead of taking the String path it would take the LargeString path? I went all the way back to where it reads the schema in the hope of finding a place I could change the DataType from STRING to LARGE_STRING. Couldn't do so.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-08-31T19:20:12.368+0000",
                    "updated": "2022-08-31T19:20:12.368+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598742",
                    "id": "17598742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "You would have to follow this up the stack from the previous comments.  Without seeing the stack trace it is a bit hard to give guidance, but i'd guess there are few places that always expected BinaryArray/BinaryBuilder in the linked code and might down_cast, these would need to be adjusted accordingly.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-01T05:09:28.863+0000",
                    "updated": "2022-09-01T05:09:28.863+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17598993",
                    "id": "17598993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~emkornfield] I have changed a few places to use LargeBinary/LargeString and also commented out [this type assertion|https://github.com/apache/arrow/blob/master/cpp/src/arrow/array/validate.cc#L301]. After that, I am able to read the parquet file. Would a PR that forces the use of LargeBinary/LargeString by default be acceptable? Plus, if you have any tips on how to work around that assertion without commenting it out, that would be great.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-01T14:24:30.296+0000",
                    "updated": "2022-09-01T14:24:30.296+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17599053",
                    "id": "17599053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~arthurpassos] awesome, nice work.  IMO, I don't think we can change the default to LargeBinary/LargeString, as you can see based on the assertion there is an expectation that types produced match the schema.   Also for most use-cases they aren't necessary, and require extra memory (and might be less well supported in other implementations).\r\n\r\nI think the right way of approach this is to have an option users can set (maybe one for each type) that will work on two levels:\r\n1.  Translate any non-large types in the schema to their large variants.\r\n2.  Make the changes at the decoder level that you have already done.\r\n\r\nSo we keep the assertion but if users run into this issue we can provide guidance on how to set this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-01T16:10:25.326+0000",
                    "updated": "2022-09-01T16:10:25.326+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17599082",
                    "id": "17599082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I see. That seems like a long journey for a non arrow developer / parquet expert to go through. Given the timeline I am working on, in the short term, I think I'll resort to the first suggestion by [~willjones127]. While it doesn't fix the second case, it fixes the one I originally shared. Which makes me curious, why does that fix the Map<String, String> but doesn't fix the one generated by the above script?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-01T17:13:02.250+0000",
                    "updated": "2022-09-01T17:13:02.250+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17599111",
                    "id": "17599111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Its probably a case of different batch sizes.\r\n\r\nsuppose you have 100 rows that take have 3GB of string evenly distributed.  If you try to read all 100 rows it will overflow and create a ChunkedArray.  If you read 50 rows at a time it would be an issue because chunking wouldn't be necessary.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-01T18:47:34.127+0000",
                    "updated": "2022-09-01T18:47:34.127+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477427/comment/17629192",
                    "id": "17629192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi [~willjones127] . I have implemented your suggestion of GetRecordBatchReader and, at first, things seemed to work as expected. Recently, an issue regarding parquet data has been reported and reverting it to the ReadRowGroup solution seems to address this. This might be a misuse of the arrow library on my side, even though I have read the API docs and it looks correct.\r\n\r\n\u00a0\r\n\r\nMy question is pretty much: should there be difference in the output when using the two APIs?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=arthurpassos",
                        "name": "arthurpassos",
                        "key": "JIRAUSER294600",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Arthur Passos",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-04T21:00:25.137+0000",
                    "updated": "2022-11-04T21:00:25.137+0000"
                }
            ],
            "maxResults": 19,
            "total": 19,
            "startAt": 0
        },
        "customfield_12311820": "0|z17v0o:",
        "customfield_12314139": null
    }
}