{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13204133",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133",
    "key": "ARROW-4011",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4011/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou opened a new pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232\n \n \n   If we don't install irhelpers.bc, users need to keep build directory\r\n   that has irhelpers.bc.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T06:47:41.811+0000",
                    "updated": "2018-12-20T06:47:41.811+0000",
                    "started": "2018-12-20T06:47:41.811+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177358",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#issuecomment-448892613\n \n \n   This is needed to build Gandiva deb/rpm packages.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T06:47:59.084+0000",
                    "updated": "2018-12-20T06:47:59.084+0000",
                    "started": "2018-12-20T06:47:59.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177359",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#issuecomment-448926500\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=h1) Report\n   > Merging [#3232](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/1a8c8f0b2aae01fe8357980f1f4e5c879941c0eb?src=pr&el=desc) will **increase** coverage by `1.19%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3232/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3232      +/-   ##\n   ==========================================\n   + Coverage   88.18%   89.38%   +1.19%     \n   ==========================================\n     Files         535      477      -58     \n     Lines       72873    68846    -4027     \n   ==========================================\n   - Hits        64260    61535    -2725     \n   + Misses       8506     7311    -1195     \n   + Partials      107        0     -107\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/tests/binary\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2JpbmFyeV90ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/test\\_util.h](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL3Rlc3RfdXRpbC5o) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/date\\_time\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2RhdGVfdGltZV90ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [...c/gandiva/tests/projector\\_build\\_validation\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL3Byb2plY3Rvcl9idWlsZF92YWxpZGF0aW9uX3Rlc3QuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/in\\_expr\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2luX2V4cHJfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/null\\_validity\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL251bGxfdmFsaWRpdHlfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/engine\\_llvm\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2VuZ2luZV9sbHZtX3Rlc3QuY2M=) | `95.58% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/literal\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2xpdGVyYWxfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/projector\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL3Byb2plY3Rvcl90ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/hash\\_test.cc](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2hhc2hfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [66 more](https://codecov.io/gh/apache/arrow/pull/3232/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=footer). Last update [1a8c8f0...7ff4cf2](https://codecov.io/gh/apache/arrow/pull/3232?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T09:11:41.684+0000",
                    "updated": "2018-12-20T09:11:41.684+0000",
                    "started": "2018-12-20T09:11:41.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177386",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243292446\n \n \n\n ##########\n File path: cpp/src/gandiva/CMakeLists.txt\n ##########\n @@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n \n Review comment:\n   Probably need to give this an unambiguous name, like `gandiva_irhelpers.bc`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T14:35:36.180+0000",
                    "updated": "2018-12-20T14:35:36.180+0000",
                    "started": "2018-12-20T14:35:36.179+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177520",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243455578\n \n \n\n ##########\n File path: cpp/src/gandiva/CMakeLists.txt\n ##########\n @@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n \n Review comment:\n   I've added \"gandiva_\" prefix.\r\n   But I don't think that it's unambiguous because it's installed into `gandiva/` sub directory. I feel that `gandiva/gandiva_irhelpers.bc` is redundant. Should we install this as `lib/gandiva_irhelpers.bc` instead of `lib/gandiva/gandiva_irhelpers.bc`?\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T00:01:17.942+0000",
                    "updated": "2018-12-21T00:01:17.942+0000",
                    "started": "2018-12-21T00:01:17.941+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177808",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243458960\n \n \n\n ##########\n File path: cpp/src/gandiva/CMakeLists.txt\n ##########\n @@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n \n Review comment:\n   Oh I see. I think lib/gandiva/irhelpers.bc is okay too. I didn't realize there was a subdirectory created under lib/. Let me know what you prefer\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T00:23:52.238+0000",
                    "updated": "2018-12-21T00:23:52.238+0000",
                    "started": "2018-12-21T00:23:52.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177815",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243470774\n \n \n\n ##########\n File path: cpp/src/gandiva/CMakeLists.txt\n ##########\n @@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n \n Review comment:\n   I prefer https://github.com/apache/arrow/pull/3232/commits/ab60eda9677fc69391f7e5aea15488c40ebdc813\r\n   \r\n   The change installs the file to `lib/gandiva/irhelper.bc` and puts the built file to `${BUILD_DIR}/src/gandiva/irhelpers.bc` (instead of `${BUILD_DIR}/{debug,release}/irhelpers.bc`).\r\n   \r\n   If we don't use `${BUILD_DIR}/{debug,release}/` directory as `irhelpers.bc` output directory, `irhelpers.bc`'s isn't unambiguous. `irhelpers.bc` isn't executable, static library nor shared library. So I think that we don't need to put `irhelpers.bc` to `${BUILD_DIR}/{debug,release}/`.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T01:56:49.939+0000",
                    "updated": "2018-12-21T01:56:49.939+0000",
                    "started": "2018-12-21T01:56:49.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177853",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243488189\n \n \n\n ##########\n File path: cpp/src/gandiva/CMakeLists.txt\n ##########\n @@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n \n Review comment:\n   I agree with this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T04:59:46.199+0000",
                    "updated": "2018-12-21T04:59:46.199+0000",
                    "started": "2018-12-21T04:59:46.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177877",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#issuecomment-449251106\n \n \n   Looks like the Java build will require some changes to be able to do this https://travis-ci.org/apache/arrow/jobs/470799486#L5073\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T05:00:35.456+0000",
                    "updated": "2018-12-21T05:00:35.456+0000",
                    "started": "2018-12-21T05:00:35.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177878",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243494003\n \n \n\n ##########\n File path: cpp/src/gandiva/CMakeLists.txt\n ##########\n @@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n \n Review comment:\n   Thanks.\r\n   I'll merge this after I fix the Java build failure.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T05:58:46.804+0000",
                    "updated": "2018-12-21T05:58:46.804+0000",
                    "started": "2018-12-21T05:58:46.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177885",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243564290\n \n \n\n ##########\n File path: cpp/src/gandiva/engine_llvm_test.cc\n ##########\n @@ -100,7 +101,7 @@ llvm::Function* TestEngine::BuildVecAdd(Engine* engine, LLVMTypes* types) {\n \n TEST_F(TestEngine, TestAddUnoptimised) {\n   std::unique_ptr<Engine> engine;\n-  Status status = Engine::Make(ConfigurationBuilder::DefaultConfiguration(), &engine);\n+  auto status = Engine::Make(TestConfiguration(), &engine);\n \n Review comment:\n   any reason for this change, from what i remember default already has the build output location from kByteCodeFilePath\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T12:03:43.101+0000",
                    "updated": "2018-12-21T12:03:43.101+0000",
                    "started": "2018-12-21T12:03:43.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177943",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243564290\n \n \n\n ##########\n File path: cpp/src/gandiva/engine_llvm_test.cc\n ##########\n @@ -100,7 +101,7 @@ llvm::Function* TestEngine::BuildVecAdd(Engine* engine, LLVMTypes* types) {\n \n TEST_F(TestEngine, TestAddUnoptimised) {\n   std::unique_ptr<Engine> engine;\n-  Status status = Engine::Make(ConfigurationBuilder::DefaultConfiguration(), &engine);\n+  auto status = Engine::Make(TestConfiguration(), &engine);\n \n Review comment:\n   any reason for this change, from what i remember default already has the build output location from kByteCodeFilePath..\r\n   \r\n   ah never mind i see you changed the kByteCodeFilePath from output to install path..\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T12:05:28.068+0000",
                    "updated": "2018-12-21T12:05:28.068+0000",
                    "started": "2018-12-21T12:05:28.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177944",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243565623\n \n \n\n ##########\n File path: java/gandiva/pom.xml\n ##########\n @@ -135,7 +135,7 @@\n             <resource>\n                 <directory>${gandiva.cpp.build.dir}</directory>\n                 <includes>\n-                    <include>irhelpers.bc</include>\n+                    <include>src/gandiva/irhelpers.bc</include>\n \n Review comment:\n   currently we pass (build.dir)/(debug or release) as input to the gandiva.cpp.build.dir in travis\r\n   \r\n   so this would have to be ../src/gandiva/irhelpers.bc\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T12:11:34.917+0000",
                    "updated": "2018-12-21T12:11:34.917+0000",
                    "started": "2018-12-21T12:11:34.916+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177945",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on issue #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#issuecomment-449373916\n \n \n   Thanks for doing this , this makes it easier for customers to use rpm packages as you rightly pointed out.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T12:15:36.899+0000",
                    "updated": "2018-12-21T12:15:36.899+0000",
                    "started": "2018-12-21T12:15:36.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177946",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243570977\n \n \n\n ##########\n File path: cpp/src/gandiva/engine_llvm_test.cc\n ##########\n @@ -100,7 +101,7 @@ llvm::Function* TestEngine::BuildVecAdd(Engine* engine, LLVMTypes* types) {\n \n TEST_F(TestEngine, TestAddUnoptimised) {\n   std::unique_ptr<Engine> engine;\n-  Status status = Engine::Make(ConfigurationBuilder::DefaultConfiguration(), &engine);\n+  auto status = Engine::Make(TestConfiguration(), &engine);\n \n Review comment:\n   Yes. I want to use installed `irhelper.bc` instead of built `irhelper.bc`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T12:41:44.176+0000",
                    "updated": "2018-12-21T12:41:44.176+0000",
                    "started": "2018-12-21T12:41:44.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177951",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/177952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#discussion_r243571007\n \n \n\n ##########\n File path: java/gandiva/pom.xml\n ##########\n @@ -135,7 +135,7 @@\n             <resource>\n                 <directory>${gandiva.cpp.build.dir}</directory>\n                 <includes>\n-                    <include>irhelpers.bc</include>\n+                    <include>src/gandiva/irhelpers.bc</include>\n \n Review comment:\n   Thanks. I've fixed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T12:41:54.577+0000",
                    "updated": "2018-12-21T12:41:54.577+0000",
                    "started": "2018-12-21T12:41:54.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177952",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/178014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232#issuecomment-449418205\n \n \n   CI is green. I'll merge this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T15:30:16.991+0000",
                    "updated": "2018-12-21T15:30:16.991+0000",
                    "started": "2018-12-21T15:30:16.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178014",
                    "issueId": "13204133"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/worklog/178015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #3232: ARROW-4011: [Gandiva] Install irhelpers.bc and use it\nURL: https://github.com/apache/arrow/pull/3232\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/gandiva/CMakeLists.txt b/cpp/src/gandiva/CMakeLists.txt\nindex 23ad93e201..d28c372a9e 100644\n--- a/cpp/src/gandiva/CMakeLists.txt\n+++ b/cpp/src/gandiva/CMakeLists.txt\n@@ -27,14 +27,18 @@ find_package(LLVM)\n \n # Set the path where the byte-code files will be installed.\n set(GANDIVA_BC_INSTALL_DIR\n-  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/gandiva)\n+  ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/gandiva)\n \n set(GANDIVA_BC_FILE_NAME irhelpers.bc)\n set(GANDIVA_BC_INSTALL_PATH ${GANDIVA_BC_INSTALL_DIR}/${GANDIVA_BC_FILE_NAME})\n-set(GANDIVA_BC_OUTPUT_PATH ${BUILD_OUTPUT_ROOT_DIRECTORY}/${GANDIVA_BC_FILE_NAME})\n+set(GANDIVA_BC_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/${GANDIVA_BC_FILE_NAME})\n+install(FILES\n+  ${GANDIVA_BC_OUTPUT_PATH}\n+  DESTINATION ${GANDIVA_BC_INSTALL_DIR})\n \n set(BC_FILE_PATH_CC \"${CMAKE_CURRENT_BINARY_DIR}/bc_file_path.cc\")\n configure_file(bc_file_path.cc.in ${BC_FILE_PATH_CC})\n+add_definitions(-DGANDIVA_BYTE_COMPILE_FILE_PATH=\"${GANDIVA_BC_OUTPUT_PATH}\")\n \n set(SRC_FILES annotator.cc\n       bitmap_accumulator.cc\n@@ -59,7 +63,6 @@ set(SRC_FILES annotator.cc\n       selection_vector.cc\n       tree_expr_builder.cc\n       to_date_holder.cc\n-      ${SHARED_HELPER_FILES}\n       ${BC_FILE_PATH_CC})\n \n set(GANDIVA_SHARED_PRIVATE_LINK_LIBS\ndiff --git a/cpp/src/gandiva/bc_file_path.cc.in b/cpp/src/gandiva/bc_file_path.cc.in\nindex d6b4e342b6..54e81ca2bf 100644\n--- a/cpp/src/gandiva/bc_file_path.cc.in\n+++ b/cpp/src/gandiva/bc_file_path.cc.in\n@@ -18,6 +18,6 @@\n namespace gandiva {\n \n // Path to the byte-code file.\n-extern const char kByteCodeFilePath[] = \"${GANDIVA_BC_OUTPUT_PATH}\";\n+extern const char kByteCodeFilePath[] = \"${GANDIVA_BC_INSTALL_PATH}\";\n \n } // namespace gandiva\ndiff --git a/cpp/src/gandiva/engine_llvm_test.cc b/cpp/src/gandiva/engine_llvm_test.cc\nindex fe4f82e193..627c385f97 100644\n--- a/cpp/src/gandiva/engine_llvm_test.cc\n+++ b/cpp/src/gandiva/engine_llvm_test.cc\n@@ -19,6 +19,7 @@\n \n #include <gtest/gtest.h>\n #include \"gandiva/llvm_types.h\"\n+#include \"gandiva/tests/test_util.h\"\n \n namespace gandiva {\n \n@@ -100,7 +101,7 @@ llvm::Function* TestEngine::BuildVecAdd(Engine* engine, LLVMTypes* types) {\n \n TEST_F(TestEngine, TestAddUnoptimised) {\n   std::unique_ptr<Engine> engine;\n-  Status status = Engine::Make(ConfigurationBuilder::DefaultConfiguration(), &engine);\n+  auto status = Engine::Make(TestConfiguration(), &engine);\n   EXPECT_TRUE(status.ok()) << status.message();\n   LLVMTypes types(*engine->context());\n   llvm::Function* ir_func = BuildVecAdd(engine.get(), &types);\n@@ -115,7 +116,7 @@ TEST_F(TestEngine, TestAddUnoptimised) {\n \n TEST_F(TestEngine, TestAddOptimised) {\n   std::unique_ptr<Engine> engine;\n-  Status status = Engine::Make(ConfigurationBuilder::DefaultConfiguration(), &engine);\n+  auto status = Engine::Make(TestConfiguration(), &engine);\n   EXPECT_TRUE(status.ok()) << status.message();\n   LLVMTypes types(*engine->context());\n   llvm::Function* ir_func = BuildVecAdd(engine.get(), &types);\ndiff --git a/cpp/src/gandiva/llvm_generator_test.cc b/cpp/src/gandiva/llvm_generator_test.cc\nindex 818c791215..fed6339314 100644\n--- a/cpp/src/gandiva/llvm_generator_test.cc\n+++ b/cpp/src/gandiva/llvm_generator_test.cc\n@@ -26,6 +26,7 @@\n #include \"gandiva/expression.h\"\n #include \"gandiva/func_descriptor.h\"\n #include \"gandiva/function_registry.h\"\n+#include \"gandiva/tests/test_util.h\"\n \n namespace gandiva {\n \n@@ -39,8 +40,7 @@ class TestLLVMGenerator : public ::testing::Test {\n // Verify that a valid pc function exists for every function in the registry.\n TEST_F(TestLLVMGenerator, VerifyPCFunctions) {\n   std::unique_ptr<LLVMGenerator> generator;\n-  Status status =\n-      LLVMGenerator::Make(ConfigurationBuilder::DefaultConfiguration(), &generator);\n+  auto status = LLVMGenerator::Make(TestConfiguration(), &generator);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   llvm::Module* module = generator->module();\n@@ -54,8 +54,7 @@ TEST_F(TestLLVMGenerator, VerifyPCFunctions) {\n TEST_F(TestLLVMGenerator, TestAdd) {\n   // Setup LLVM generator to do an arithmetic add of two vectors\n   std::unique_ptr<LLVMGenerator> generator;\n-  Status status =\n-      LLVMGenerator::Make(ConfigurationBuilder::DefaultConfiguration(), &generator);\n+  auto status = LLVMGenerator::Make(TestConfiguration(), &generator);\n   EXPECT_TRUE(status.ok());\n   Annotator annotator;\n \ndiff --git a/cpp/src/gandiva/tests/binary_test.cc b/cpp/src/gandiva/tests/binary_test.cc\nindex d5d99db910..6ac3c51551 100644\n--- a/cpp/src/gandiva/tests/binary_test.cc\n+++ b/cpp/src/gandiva/tests/binary_test.cc\n@@ -61,7 +61,7 @@ TEST_F(TestBinary, TestSimple) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/boolean_expr_test.cc b/cpp/src/gandiva/tests/boolean_expr_test.cc\nindex 3351ab3ccf..9226f35715 100644\n--- a/cpp/src/gandiva/tests/boolean_expr_test.cc\n+++ b/cpp/src/gandiva/tests/boolean_expr_test.cc\n@@ -60,7 +60,7 @@ TEST_F(TestBooleanExpr, SimpleAnd) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // FALSE_VALID && ?  => FALSE_VALID\n@@ -133,7 +133,7 @@ TEST_F(TestBooleanExpr, SimpleOr) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // TRUE_VALID && ?  => TRUE_VALID\n@@ -210,7 +210,7 @@ TEST_F(TestBooleanExpr, AndThree) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   int num_records = 8;\n@@ -257,7 +257,7 @@ TEST_F(TestBooleanExpr, OrThree) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   int num_records = 8;\n@@ -317,7 +317,7 @@ TEST_F(TestBooleanExpr, BooleanAndInsideIf) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   int num_records = 4;\n@@ -368,7 +368,7 @@ TEST_F(TestBooleanExpr, IfInsideBooleanAnd) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   int num_records = 4;\ndiff --git a/cpp/src/gandiva/tests/date_time_test.cc b/cpp/src/gandiva/tests/date_time_test.cc\nindex 3914558d71..643b8c8dda 100644\n--- a/cpp/src/gandiva/tests/date_time_test.cc\n+++ b/cpp/src/gandiva/tests/date_time_test.cc\n@@ -73,7 +73,8 @@ TEST_F(TestProjector, TestIsNull) {\n   auto isnotnull_expr = TreeExprBuilder::MakeExpression(\"isnotnull\", {t0}, b0);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {isnull_expr, isnotnull_expr}, &projector);\n+  auto status = Projector::Make(schema, {isnull_expr, isnotnull_expr},\n+                                TestConfiguration(), &projector);\n   ASSERT_TRUE(status.ok());\n \n   int num_records = 4;\n@@ -126,8 +127,9 @@ TEST_F(TestProjector, TestDateTime) {\n   auto ts2day_expr = TreeExprBuilder::MakeExpression(\"extractDay\", {field2}, field_day);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(\n-      schema, {date2year_expr, date2month_expr, ts2month_expr, ts2day_expr}, &projector);\n+  auto status = Projector::Make(\n+      schema, {date2year_expr, date2month_expr, ts2month_expr, ts2day_expr},\n+      TestConfiguration(), &projector);\n   ASSERT_TRUE(status.ok());\n \n   struct tm y1970;\n@@ -196,7 +198,8 @@ TEST_F(TestProjector, TestTime) {\n       TreeExprBuilder::MakeExpression(\"extractHour\", {field0}, field_hour);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {time2min_expr, time2hour_expr}, &projector);\n+  auto status = Projector::Make(schema, {time2min_expr, time2hour_expr},\n+                                TestConfiguration(), &projector);\n   ASSERT_TRUE(status.ok());\n \n   // create input data\n@@ -264,7 +267,7 @@ TEST_F(TestProjector, TestTimestampDiff) {\n   std::shared_ptr<Projector> projector;\n   auto exprs = {diff_secs_expr,  diff_mins_expr,   diff_hours_expr,    diff_days_expr,\n                 diff_weeks_expr, diff_months_expr, diff_quarters_expr, diff_years_expr};\n-  Status status = Projector::Make(schema, exprs, &projector);\n+  auto status = Projector::Make(schema, exprs, TestConfiguration(), &projector);\n   ASSERT_TRUE(status.ok());\n \n   struct tm y1970;\n@@ -337,7 +340,8 @@ TEST_F(TestProjector, TestMonthsBetween) {\n       TreeExprBuilder::MakeExpression(\"months_between\", {f0, f1}, output);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {months_between_expr}, &projector);\n+  auto status =\n+      Projector::Make(schema, {months_between_expr}, TestConfiguration(), &projector);\n   std::cout << status.message();\n   ASSERT_TRUE(status.ok());\n \ndiff --git a/cpp/src/gandiva/tests/filter_test.cc b/cpp/src/gandiva/tests/filter_test.cc\nindex f95cdcc3fe..ee60388d5d 100644\n--- a/cpp/src/gandiva/tests/filter_test.cc\n+++ b/cpp/src/gandiva/tests/filter_test.cc\n@@ -50,14 +50,15 @@ TEST_F(TestFilter, TestFilterCache) {\n   auto less_than_10 = TreeExprBuilder::MakeFunction(\"less_than\", {sum_func, literal_10},\n                                                     arrow::boolean());\n   auto condition = TreeExprBuilder::MakeCondition(less_than_10);\n+  auto configuration = TestConfiguration();\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, configuration, &filter);\n   EXPECT_TRUE(status.ok());\n \n   // same schema and condition, should return the same filter as above.\n   std::shared_ptr<Filter> cached_filter;\n-  status = Filter::Make(schema, condition, &cached_filter);\n+  status = Filter::Make(schema, condition, configuration, &cached_filter);\n   EXPECT_TRUE(status.ok());\n   EXPECT_TRUE(cached_filter.get() == filter.get());\n \n@@ -65,7 +66,8 @@ TEST_F(TestFilter, TestFilterCache) {\n   auto field2 = field(\"f2\", int32());\n   auto different_schema = arrow::schema({field0, field1, field2});\n   std::shared_ptr<Filter> should_be_new_filter;\n-  status = Filter::Make(different_schema, condition, &should_be_new_filter);\n+  status =\n+      Filter::Make(different_schema, condition, configuration, &should_be_new_filter);\n   EXPECT_TRUE(status.ok());\n   EXPECT_TRUE(cached_filter.get() != should_be_new_filter.get());\n \n@@ -74,7 +76,7 @@ TEST_F(TestFilter, TestFilterCache) {\n       \"greater_than\", {sum_func, literal_10}, arrow::boolean());\n   auto new_condition = TreeExprBuilder::MakeCondition(greater_than_10);\n   std::shared_ptr<Filter> should_be_new_filter1;\n-  status = Filter::Make(schema, new_condition, &should_be_new_filter1);\n+  status = Filter::Make(schema, new_condition, configuration, &should_be_new_filter1);\n   EXPECT_TRUE(status.ok());\n   EXPECT_TRUE(cached_filter.get() != should_be_new_filter1.get());\n }\n@@ -96,7 +98,7 @@ TEST_F(TestFilter, TestSimple) {\n   auto condition = TreeExprBuilder::MakeCondition(less_than_10);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -134,7 +136,7 @@ TEST_F(TestFilter, TestSimpleCustomConfig) {\n   std::shared_ptr<Configuration> config = config_builder.build();\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -168,7 +170,7 @@ TEST_F(TestFilter, TestZeroCopy) {\n   auto condition = TreeExprBuilder::MakeCondition(\"isnotnull\", {field0});\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -208,7 +210,7 @@ TEST_F(TestFilter, TestZeroCopyNegative) {\n   auto condition = TreeExprBuilder::MakeCondition(\"isnotnull\", {field0});\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -265,7 +267,7 @@ TEST_F(TestFilter, TestSimpleSVInt32) {\n   auto condition = TreeExprBuilder::MakeCondition(less_than_10);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/hash_test.cc b/cpp/src/gandiva/tests/hash_test.cc\nindex 96f92284a5..afaa885dfe 100644\n--- a/cpp/src/gandiva/tests/hash_test.cc\n+++ b/cpp/src/gandiva/tests/hash_test.cc\n@@ -61,7 +61,8 @@ TEST_F(TestHash, TestSimple) {\n \n   // Build a projector for the expression.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr_0, expr_1}, &projector);\n+  auto status =\n+      Projector::Make(schema, {expr_0, expr_1}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -113,7 +114,8 @@ TEST_F(TestHash, TestBuf) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr_0, expr_1}, &projector);\n+  auto status =\n+      Projector::Make(schema, {expr_0, expr_1}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/huge_table_test.cc b/cpp/src/gandiva/tests/huge_table_test.cc\nindex bffcb19947..cecf290a14 100644\n--- a/cpp/src/gandiva/tests/huge_table_test.cc\n+++ b/cpp/src/gandiva/tests/huge_table_test.cc\n@@ -58,7 +58,7 @@ TEST_F(DISABLED_TestHugeProjector, SimpleTestSumHuge) {\n   // Build expression\n   auto sum_expr = TreeExprBuilder::MakeExpression(\"add\", {field0, field1}, field_sum);\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {sum_expr}, &projector);\n+  auto status = Projector::Make(schema, {sum_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -136,7 +136,7 @@ TEST_F(DISABLED_TestHugeFilter, TestSimpleHugeFilter) {\n   auto condition = TreeExprBuilder::MakeCondition(less_than_50);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // prepare input record batch\ndiff --git a/cpp/src/gandiva/tests/if_expr_test.cc b/cpp/src/gandiva/tests/if_expr_test.cc\nindex 93b35673b9..54b6d43b4d 100644\n--- a/cpp/src/gandiva/tests/if_expr_test.cc\n+++ b/cpp/src/gandiva/tests/if_expr_test.cc\n@@ -61,7 +61,7 @@ TEST_F(TestIfExpr, TestSimple) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -110,7 +110,7 @@ TEST_F(TestIfExpr, TestSimpleArithmetic) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -165,7 +165,7 @@ TEST_F(TestIfExpr, TestNested) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -228,7 +228,7 @@ TEST_F(TestIfExpr, TestNestedInIf) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -296,7 +296,7 @@ TEST_F(TestIfExpr, TestNestedInCondition) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -353,7 +353,7 @@ TEST_F(TestIfExpr, TestBigNested) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/in_expr_test.cc b/cpp/src/gandiva/tests/in_expr_test.cc\nindex 13ef97cfb8..2103874cb1 100644\n--- a/cpp/src/gandiva/tests/in_expr_test.cc\n+++ b/cpp/src/gandiva/tests/in_expr_test.cc\n@@ -51,7 +51,7 @@ TEST_F(TestIn, TestInSimple) {\n   auto condition = TreeExprBuilder::MakeCondition(in_expr);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -88,7 +88,7 @@ TEST_F(TestIn, TestInString) {\n   auto condition = TreeExprBuilder::MakeCondition(in_expr);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -125,7 +125,7 @@ TEST_F(TestIn, TestInStringValidationError) {\n   auto condition = TreeExprBuilder::MakeCondition(in_expr);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n \n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Evaluation expression for IN clause returns \";\ndiff --git a/cpp/src/gandiva/tests/literal_test.cc b/cpp/src/gandiva/tests/literal_test.cc\nindex ced66452a2..53323cb4e7 100644\n--- a/cpp/src/gandiva/tests/literal_test.cc\n+++ b/cpp/src/gandiva/tests/literal_test.cc\n@@ -88,8 +88,8 @@ TEST_F(TestLiteral, TestSimpleArithmetic) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status =\n-      Projector::Make(schema, {expr_a, expr_b, expr_c, expr_d, expr_e}, &projector);\n+  auto status = Projector::Make(schema, {expr_a, expr_b, expr_c, expr_d, expr_e},\n+                                TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -133,7 +133,7 @@ TEST_F(TestLiteral, TestLiteralHash) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   auto res1 = field(\"a\", int64());\n@@ -142,7 +142,7 @@ TEST_F(TestLiteral, TestLiteralHash) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector1;\n-  status = Projector::Make(schema, {expr1}, &projector1);\n+  status = Projector::Make(schema, {expr1}, TestConfiguration(), &projector1);\n   EXPECT_TRUE(status.ok()) << status.message();\n   EXPECT_TRUE(projector.get() != projector1.get());\n }\n@@ -165,7 +165,7 @@ TEST_F(TestLiteral, TestNullLiteral) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -207,7 +207,7 @@ TEST_F(TestLiteral, TestNullLiteralInIf) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/micro_benchmarks.cc b/cpp/src/gandiva/tests/micro_benchmarks.cc\nindex 7d844eb378..ce86bf0612 100644\n--- a/cpp/src/gandiva/tests/micro_benchmarks.cc\n+++ b/cpp/src/gandiva/tests/micro_benchmarks.cc\n@@ -56,7 +56,7 @@ static void TimedTestAdd3(benchmark::State& state) {\n   auto sum_expr = TreeExprBuilder::MakeExpression(sum, field_sum);\n \n   std::shared_ptr<Projector> projector;\n-  ASSERT_OK(Projector::Make(schema, {sum_expr}, &projector));\n+  ASSERT_OK(Projector::Make(schema, {sum_expr}, TestConfiguration(), &projector));\n \n   Int64DataGenerator data_generator;\n   ProjectEvaluator evaluator(projector);\n@@ -99,7 +99,7 @@ static void TimedTestBigNested(benchmark::State& state) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n+  ASSERT_OK(Projector::Make(schema, {expr}, TestConfiguration(), &projector));\n \n   BoundedInt32DataGenerator data_generator(250);\n   ProjectEvaluator evaluator(projector);\n@@ -122,7 +122,7 @@ static void TimedTestExtractYear(benchmark::State& state) {\n   auto expr = TreeExprBuilder::MakeExpression(\"extractYear\", {field0}, field_res);\n \n   std::shared_ptr<Projector> projector;\n-  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n+  ASSERT_OK(Projector::Make(schema, {expr}, TestConfiguration(), &projector));\n \n   Int64DataGenerator data_generator;\n   ProjectEvaluator evaluator(projector);\n@@ -149,7 +149,7 @@ static void TimedTestFilterAdd2(benchmark::State& state) {\n   auto condition = TreeExprBuilder::MakeCondition(less_than);\n \n   std::shared_ptr<Filter> filter;\n-  ASSERT_OK(Filter::Make(schema, condition, &filter));\n+  ASSERT_OK(Filter::Make(schema, condition, TestConfiguration(), &filter));\n \n   Int64DataGenerator data_generator;\n   FilterEvaluator evaluator(filter);\n@@ -173,7 +173,7 @@ static void TimedTestFilterLike(benchmark::State& state) {\n   auto condition = TreeExprBuilder::MakeCondition(like_yellow);\n \n   std::shared_ptr<Filter> filter;\n-  ASSERT_OK(Filter::Make(schema, condition, &filter));\n+  ASSERT_OK(Filter::Make(schema, condition, TestConfiguration(), &filter));\n \n   FastUtf8DataGenerator data_generator(32);\n   FilterEvaluator evaluator(filter);\n@@ -199,7 +199,7 @@ static void TimedTestAllocs(benchmark::State& state) {\n   auto expr = TreeExprBuilder::MakeExpression(length, field_res);\n \n   std::shared_ptr<Projector> projector;\n-  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n+  ASSERT_OK(Projector::Make(schema, {expr}, TestConfiguration(), &projector));\n \n   FastUtf8DataGenerator data_generator(64);\n   ProjectEvaluator evaluator(projector);\n@@ -237,7 +237,7 @@ static void TimedTestMultiOr(benchmark::State& state) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n+  ASSERT_OK(Projector::Make(schema, {expr}, TestConfiguration(), &projector));\n \n   FastUtf8DataGenerator data_generator(250);\n   ProjectEvaluator evaluator(projector);\n@@ -269,7 +269,7 @@ static void TimedTestInExpr(benchmark::State& state) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n+  ASSERT_OK(Projector::Make(schema, {expr}, TestConfiguration(), &projector));\n \n   FastUtf8DataGenerator data_generator(250);\n   ProjectEvaluator evaluator(projector);\ndiff --git a/cpp/src/gandiva/tests/null_validity_test.cc b/cpp/src/gandiva/tests/null_validity_test.cc\nindex 06cfdc08ba..0374b68d46 100644\n--- a/cpp/src/gandiva/tests/null_validity_test.cc\n+++ b/cpp/src/gandiva/tests/null_validity_test.cc\n@@ -60,7 +60,7 @@ TEST_F(TestNullValidity, TestFunc) {\n   auto condition = TreeExprBuilder::MakeCondition(less_than_10);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n+  auto status = Filter::Make(schema, condition, TestConfiguration(), &filter);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -111,7 +111,7 @@ TEST_F(TestNullValidity, TestIfElse) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -148,7 +148,7 @@ TEST_F(TestNullValidity, TestUtf8) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/projector_build_validation_test.cc b/cpp/src/gandiva/tests/projector_build_validation_test.cc\nindex ddcb729b3b..3cd4ebdd13 100644\n--- a/cpp/src/gandiva/tests/projector_build_validation_test.cc\n+++ b/cpp/src/gandiva/tests/projector_build_validation_test.cc\n@@ -50,7 +50,7 @@ TEST_F(TestProjector, TestNonExistentFunction) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {lt_expr}, &projector);\n+  auto status = Projector::Make(schema, {lt_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error =\n       \"Function bool non_existent_function(float, float) not supported yet.\";\n@@ -71,7 +71,7 @@ TEST_F(TestProjector, TestNotMatchingDataType) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {lt_expr}, &projector);\n+  auto status = Projector::Make(schema, {lt_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error =\n       \"Return type of root node float does not match that of expression bool\";\n@@ -92,7 +92,7 @@ TEST_F(TestProjector, TestNotSupportedDataType) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {lt_expr}, &projector);\n+  auto status = Projector::Make(schema, {lt_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Field f0 has unsupported data type list\";\n   EXPECT_TRUE(status.message().find(expected_error) != std::string::npos);\n@@ -113,7 +113,7 @@ TEST_F(TestProjector, TestIncorrectSchemaMissingField) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {lt_expr}, &projector);\n+  auto status = Projector::Make(schema, {lt_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Field f2 not in schema\";\n   EXPECT_TRUE(status.message().find(expected_error) != std::string::npos);\n@@ -135,7 +135,7 @@ TEST_F(TestProjector, TestIncorrectSchemaTypeNotMatching) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {lt_expr}, &projector);\n+  auto status = Projector::Make(schema, {lt_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error =\n       \"Field definition in schema f2: int32 different from field in expression f2: float\";\n@@ -166,7 +166,7 @@ TEST_F(TestProjector, TestIfNotSupportedFunction) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n }\n \n@@ -189,7 +189,7 @@ TEST_F(TestProjector, TestIfNotMatchingReturnType) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Return type of if bool and then int32 not matching.\";\n   EXPECT_TRUE(status.message().find(expected_error) != std::string::npos);\n@@ -216,7 +216,7 @@ TEST_F(TestProjector, TestElseNotMatchingReturnType) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Return type of if int32 and else bool not matching.\";\n   EXPECT_TRUE(status.message().find(expected_error) != std::string::npos);\n@@ -243,7 +243,7 @@ TEST_F(TestProjector, TestElseNotSupportedType) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Field c has unsupported data type list\";\n   EXPECT_TRUE(status.message().find(expected_error) != std::string::npos);\n@@ -264,7 +264,7 @@ TEST_F(TestProjector, TestAndMinChildren) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error = \"Boolean expression has 1 children, expected atleast two\";\n   EXPECT_TRUE(status.message().find(expected_error) != std::string::npos);\n@@ -287,7 +287,7 @@ TEST_F(TestProjector, TestAndBooleanArgType) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.IsExpressionValidationError());\n   std::string expected_error =\n       \"Boolean expression has a child with return type int32, expected return type \"\ndiff --git a/cpp/src/gandiva/tests/projector_test.cc b/cpp/src/gandiva/tests/projector_test.cc\nindex 61d9dc3ad1..1aeb43b49b 100644\n--- a/cpp/src/gandiva/tests/projector_test.cc\n+++ b/cpp/src/gandiva/tests/projector_test.cc\n@@ -50,14 +50,17 @@ TEST_F(TestProjector, TestProjectCache) {\n   auto sub_expr =\n       TreeExprBuilder::MakeExpression(\"subtract\", {field0, field1}, field_sub);\n \n+  auto configuration = TestConfiguration();\n+\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {sum_expr, sub_expr}, &projector);\n+  auto status = Projector::Make(schema, {sum_expr, sub_expr}, configuration, &projector);\n   EXPECT_TRUE(status.ok());\n \n   // everything is same, should return the same projector.\n   auto schema_same = arrow::schema({field0, field1});\n   std::shared_ptr<Projector> cached_projector;\n-  status = Projector::Make(schema_same, {sum_expr, sub_expr}, &cached_projector);\n+  status = Projector::Make(schema_same, {sum_expr, sub_expr}, configuration,\n+                           &cached_projector);\n   EXPECT_TRUE(status.ok());\n   EXPECT_TRUE(cached_projector.get() == projector.get());\n \n@@ -65,14 +68,14 @@ TEST_F(TestProjector, TestProjectCache) {\n   auto field2 = field(\"f2\", int32());\n   auto different_schema = arrow::schema({field0, field1, field2});\n   std::shared_ptr<Projector> should_be_new_projector;\n-  status =\n-      Projector::Make(different_schema, {sum_expr, sub_expr}, &should_be_new_projector);\n+  status = Projector::Make(different_schema, {sum_expr, sub_expr}, configuration,\n+                           &should_be_new_projector);\n   EXPECT_TRUE(status.ok());\n   EXPECT_TRUE(cached_projector.get() != should_be_new_projector.get());\n \n   // expression list is different should return a new projector.\n   std::shared_ptr<Projector> should_be_new_projector1;\n-  status = Projector::Make(schema, {sum_expr}, &should_be_new_projector1);\n+  status = Projector::Make(schema, {sum_expr}, configuration, &should_be_new_projector1);\n   EXPECT_TRUE(status.ok());\n   EXPECT_TRUE(cached_projector.get() != should_be_new_projector1.get());\n }\n@@ -90,12 +93,13 @@ TEST_F(TestProjector, TestProjectCacheFieldNames) {\n \n   auto sum_expr_01 = TreeExprBuilder::MakeExpression(\"add\", {field0, field1}, sum_01);\n   std::shared_ptr<Projector> projector_01;\n-  Status status = Projector::Make(schema, {sum_expr_01}, &projector_01);\n+  auto status =\n+      Projector::Make(schema, {sum_expr_01}, TestConfiguration(), &projector_01);\n   EXPECT_TRUE(status.ok());\n \n   auto sum_expr_12 = TreeExprBuilder::MakeExpression(\"add\", {field1, field2}, sum_12);\n   std::shared_ptr<Projector> projector_12;\n-  status = Projector::Make(schema, {sum_expr_12}, &projector_12);\n+  status = Projector::Make(schema, {sum_expr_12}, TestConfiguration(), &projector_12);\n   EXPECT_TRUE(status.ok());\n \n   // add(f0, f1) != add(f1, f2)\n@@ -111,14 +115,16 @@ TEST_F(TestProjector, TestProjectCacheDouble) {\n \n   auto literal0 = TreeExprBuilder::MakeLiteral(d0);\n   auto expr0 = TreeExprBuilder::MakeExpression(literal0, res);\n+  auto configuration = TestConfiguration();\n+\n   std::shared_ptr<Projector> projector0;\n-  auto status = Projector::Make(schema, {expr0}, &projector0);\n+  auto status = Projector::Make(schema, {expr0}, configuration, &projector0);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   auto literal1 = TreeExprBuilder::MakeLiteral(d1);\n   auto expr1 = TreeExprBuilder::MakeExpression(literal1, res);\n   std::shared_ptr<Projector> projector1;\n-  status = Projector::Make(schema, {expr1}, &projector1);\n+  status = Projector::Make(schema, {expr1}, configuration, &projector1);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   EXPECT_TRUE(projector0.get() != projector1.get());\n@@ -134,13 +140,13 @@ TEST_F(TestProjector, TestProjectCacheFloat) {\n   auto literal0 = TreeExprBuilder::MakeLiteral(f0);\n   auto expr0 = TreeExprBuilder::MakeExpression(literal0, res);\n   std::shared_ptr<Projector> projector0;\n-  auto status = Projector::Make(schema, {expr0}, &projector0);\n+  auto status = Projector::Make(schema, {expr0}, TestConfiguration(), &projector0);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   auto literal1 = TreeExprBuilder::MakeLiteral(f1);\n   auto expr1 = TreeExprBuilder::MakeExpression(literal1, res);\n   std::shared_ptr<Projector> projector1;\n-  status = Projector::Make(schema, {expr1}, &projector1);\n+  status = Projector::Make(schema, {expr1}, TestConfiguration(), &projector1);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   EXPECT_TRUE(projector0.get() != projector1.get());\n@@ -162,50 +168,8 @@ TEST_F(TestProjector, TestIntSumSub) {\n       TreeExprBuilder::MakeExpression(\"subtract\", {field0, field1}, field_sub);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {sum_expr, sub_expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n-\n-  // Create a row-batch with some sample data\n-  int num_records = 4;\n-  auto array0 = MakeArrowArrayInt32({1, 2, 3, 4}, {true, true, true, false});\n-  auto array1 = MakeArrowArrayInt32({11, 13, 15, 17}, {true, true, false, true});\n-  // expected output\n-  auto exp_sum = MakeArrowArrayInt32({12, 15, 0, 0}, {true, true, false, false});\n-  auto exp_sub = MakeArrowArrayInt32({-10, -11, 0, 0}, {true, true, false, false});\n-\n-  // prepare input record batch\n-  auto in_batch = arrow::RecordBatch::Make(schema, num_records, {array0, array1});\n-\n-  // Evaluate expression\n-  arrow::ArrayVector outputs;\n-  status = projector->Evaluate(*in_batch, pool_, &outputs);\n-  EXPECT_TRUE(status.ok());\n-\n-  // Validate results\n-  EXPECT_ARROW_ARRAY_EQUALS(exp_sum, outputs.at(0));\n-  EXPECT_ARROW_ARRAY_EQUALS(exp_sub, outputs.at(1));\n-}\n-\n-TEST_F(TestProjector, TestIntSumSubCustomConfig) {\n-  // schema for input fields\n-  auto field0 = field(\"f0\", int32());\n-  auto field1 = field(\"f2\", int32());\n-  auto schema = arrow::schema({field0, field1});\n-\n-  // output fields\n-  auto field_sum = field(\"add\", int32());\n-  auto field_sub = field(\"subtract\", int32());\n-\n-  // Build expression\n-  auto sum_expr = TreeExprBuilder::MakeExpression(\"add\", {field0, field1}, field_sum);\n-  auto sub_expr =\n-      TreeExprBuilder::MakeExpression(\"subtract\", {field0, field1}, field_sub);\n-\n-  std::shared_ptr<Projector> projector;\n-  ConfigurationBuilder config_builder;\n-  std::shared_ptr<Configuration> config = config_builder.build();\n-\n-  Status status = Projector::Make(schema, {sum_expr, sub_expr}, config, &projector);\n+  auto status =\n+      Projector::Make(schema, {sum_expr, sub_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -257,8 +221,9 @@ static void TestArithmeticOpsForType(arrow::MemoryPool* pool) {\n   auto lt_expr = TreeExprBuilder::MakeExpression(\"less_than\", {field0, field1}, field_lt);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(\n-      schema, {sum_expr, sub_expr, mul_expr, div_expr, eq_expr, lt_expr}, &projector);\n+  auto status =\n+      Projector::Make(schema, {sum_expr, sub_expr, mul_expr, div_expr, eq_expr, lt_expr},\n+                      TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -344,9 +309,9 @@ TEST_F(TestProjector, TestExtendedMath) {\n       TreeExprBuilder::MakeExpression(\"power\", {field0, field1}, field_power);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(\n+  auto status = Projector::Make(\n       schema, {cbrt_expr, exp_expr, log_expr, log10_expr, logb_expr, power_expr},\n-      &projector);\n+      TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -412,7 +377,7 @@ TEST_F(TestProjector, TestFloatLessThan) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {lt_expr}, &projector);\n+  auto status = Projector::Make(schema, {lt_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -447,7 +412,7 @@ TEST_F(TestProjector, TestIsNotNull) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {myexpr}, &projector);\n+  auto status = Projector::Make(schema, {myexpr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -480,7 +445,7 @@ TEST_F(TestProjector, TestZeroCopy) {\n   auto cast_expr = TreeExprBuilder::MakeExpression(\"castFLOAT4\", {field0}, res);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {cast_expr}, &projector);\n+  auto status = Projector::Make(schema, {cast_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -527,7 +492,7 @@ TEST_F(TestProjector, TestZeroCopyNegative) {\n   auto cast_expr = TreeExprBuilder::MakeExpression(\"castFLOAT4\", {field0}, res);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {cast_expr}, &projector);\n+  auto status = Projector::Make(schema, {cast_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok());\n \n   // Create a row-batch with some sample data\n@@ -597,7 +562,7 @@ TEST_F(TestProjector, TestDivideZero) {\n   auto div_expr = TreeExprBuilder::MakeExpression(\"divide\", {field0, field1}, field_div);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {div_expr}, &projector);\n+  auto status = Projector::Make(schema, {div_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -646,7 +611,7 @@ TEST_F(TestProjector, TestModZero) {\n   auto mod_expr = TreeExprBuilder::MakeExpression(\"mod\", {field0, field1}, field_div);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {mod_expr}, &projector);\n+  auto status = Projector::Make(schema, {mod_expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\ndiff --git a/cpp/src/gandiva/tests/test_util.h b/cpp/src/gandiva/tests/test_util.h\nindex d24448727b..72b45b124b 100644\n--- a/cpp/src/gandiva/tests/test_util.h\n+++ b/cpp/src/gandiva/tests/test_util.h\n@@ -73,6 +73,12 @@ static ArrayPtr MakeArrowTypeArray(const std::shared_ptr<arrow::DataType>& type,\n   EXPECT_TRUE((a)->Equals(b)) << \"expected array: \" << (a)->ToString() \\\n                               << \" actual array: \" << (b)->ToString();\n \n+std::shared_ptr<Configuration> TestConfiguration() {\n+  auto builder = ConfigurationBuilder();\n+  builder.set_byte_code_file_path(GANDIVA_BYTE_COMPILE_FILE_PATH);\n+  return builder.build();\n+}\n+\n }  // namespace gandiva\n \n #endif  // GANDIVA_TEST_UTIL_H\ndiff --git a/cpp/src/gandiva/tests/utf8_test.cc b/cpp/src/gandiva/tests/utf8_test.cc\nindex 8b09b72f32..925ceea836 100644\n--- a/cpp/src/gandiva/tests/utf8_test.cc\n+++ b/cpp/src/gandiva/tests/utf8_test.cc\n@@ -67,7 +67,8 @@ TEST_F(TestUtf8, TestSimple) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr_a, expr_b, expr_c}, &projector);\n+  auto status =\n+      Projector::Make(schema, {expr_a, expr_b, expr_c}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -113,7 +114,7 @@ TEST_F(TestUtf8, TestLiteral) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -155,7 +156,7 @@ TEST_F(TestUtf8, TestNullLiteral) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -197,7 +198,7 @@ TEST_F(TestUtf8, TestLike) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -245,7 +246,7 @@ TEST_F(TestUtf8, TestBeginsEnds) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr1, expr2}, &projector);\n+  auto status = Projector::Make(schema, {expr1, expr2}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -291,7 +292,7 @@ TEST_F(TestUtf8, TestInternalAllocs) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -334,7 +335,7 @@ TEST_F(TestUtf8, TestCastDate) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -389,7 +390,7 @@ TEST_F(TestUtf8, TestToDateNoError) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\n@@ -444,7 +445,7 @@ TEST_F(TestUtf8, TestToDateError) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n   EXPECT_TRUE(status.ok()) << status.message();\n \n   // Create a row-batch with some sample data\ndiff --git a/java/gandiva/pom.xml b/java/gandiva/pom.xml\nindex 39752e2d36..d365eb9193 100644\n--- a/java/gandiva/pom.xml\n+++ b/java/gandiva/pom.xml\n@@ -133,7 +133,7 @@\n                 </includes>\n             </resource>\n             <resource>\n-                <directory>${gandiva.cpp.build.dir}</directory>\n+                <directory>${gandiva.cpp.build.dir}/../src/gandiva</directory>\n                 <includes>\n                     <include>irhelpers.bc</include>\n                 </includes>\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T15:32:10.513+0000",
                    "updated": "2018-12-21T15:32:10.513+0000",
                    "started": "2018-12-21T15:32:10.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178015",
                    "issueId": "13204133"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4862c4d4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76a79417[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4489c9f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ec4ea5a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e1dad32[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7b5b1b99[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71978b4b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@58283919[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bcf6b13[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@686b3620[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25eb25b5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3c9230e0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 21 15:32:02 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-21T15:32:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4011/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-13T01:19:33.000+0000",
        "updated": "2018-12-21T15:32:10.000+0000",
        "timeoriginalestimate": null,
        "description": "Normally, users remove build directory after they installed.\r\nIf users remove build directory, Gandiva doesn't work.\r\n\r\nIt's better that we install {{irhelpers.bc}} and use it by default. We can use {{irhelpers.bc}} in build directory only when we run tests. I think that test programs use {{Gandiva::Configuration}} that refers {{irhelpers.bc}} in build directory instead of the default {{Gandiva::Configuration}}.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] Refer irhelpers.bc in build directory",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204133/comment/16726838",
                    "id": "16726838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 3232\n[https://github.com/apache/arrow/pull/3232]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-12-21T15:32:02.769+0000",
                    "updated": "2018-12-21T15:32:02.769+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s01gv4:",
        "customfield_12314139": null
    }
}