{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13056676",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676",
    "key": "ARROW-640",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
            "name": "alexhagerman",
            "key": "alexhagerman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Alex Hagerman",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tebeka",
            "name": "tebeka",
            "key": "tebeka",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tebeka&avatarId=16332",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tebeka&avatarId=16332",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tebeka&avatarId=16332",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tebeka&avatarId=16332"
            },
            "displayName": "Miki Tebeka",
            "active": true,
            "timeZone": "Asia/Jerusalem"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tebeka",
            "name": "tebeka",
            "key": "tebeka",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tebeka&avatarId=16332",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tebeka&avatarId=16332",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tebeka&avatarId=16332",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tebeka&avatarId=16332"
            },
            "displayName": "Miki Tebeka",
            "active": true,
            "timeZone": "Asia/Jerusalem"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-640/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2fc2135f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6dfb69cb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78c4d86[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@310fd98d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@668edd89[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@14b7266[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@644eefb4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2b428101[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b307375[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@61b2ee37[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72129efa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4d674330[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 26 21:54:47 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-26T21:54:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-640/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2017-03-16T14:20:00.000+0000",
        "updated": "2018-03-26T21:54:47.000+0000",
        "timeoriginalestimate": null,
        "description": "{noformat}\nIn [86]: arr = pa.from_pylist([1, 1, 1, 2])\n\nIn [87]: set(arr)\nOut[87]: {1, 2, 1, 1}\n\nIn [88]: arr[0] == arr[1]\nOut[88]: False\n\nIn [89]: arr\nOut[89]: \n<pyarrow.array.Int64Array object at 0x7f8c8c739e08>\n[\n  1,\n  1,\n  1,\n  2\n]\n{noformat}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Arrow scalar values should have a sensible __hash__ and comparison",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/15928649",
                    "id": "15928649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Sort of related to ARROW-47. Probably not worth adding a scalar object model in C++ at this point and keeping the value wrapper layer in Python-land",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-03-16T18:58:35.454+0000",
                    "updated": "2017-03-16T18:58:35.454+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16394627",
                    "id": "16394627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "I think this has changed since the original ticket. The comparison appears to be working. Tested this with string and numbers. Also getting an error on set now. Going to continue looking into this, but if anybody has thoughts on this I'd be happy to hear them. Also from_pylist appears to have been removed, but I didn't find it searching the change log on github only an addition in 0.3. I'm going to look at the history of __eq__ on ArrayValue and as_py then work on what would make sense for __hash__.\r\n{code:java}\r\n%load_ext Cython\r\nimport pyarrow as pa\r\n\r\npylist = [1,1,1,2]\r\narr = pa.array(pylist)\r\narr\r\n<pyarrow.lib.Int64Array object at 0x7fbad56e4c28>\r\n[\r\n  1,\r\n  1,\r\n  1,\r\n  2\r\n]\r\narr[0] == arr[1]\r\nTrue\r\narr[0] == arr[3]\r\nFalse\r\nword_list = ['test', 'not the same', 'test', 'nope']\r\nword_list[0] == word_list[2]\r\nTrue\r\nword_list[0] == word_list[1]\r\nFalse\r\npa.array.__eq__\r\n<method-wrapper '__eq__' of builtin_function_or_method object at 0x7fbaab609990>\r\nset(arr)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-9-ba21c71e79f9> in <module>()\r\n----> 1 set(arr)\r\n\r\nTypeError: unhashable type: 'pyarrow.lib.Int64Value'\r\narr_list = pa.from_pylist([1, 1, 1, 2])\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-10-30966022c9ed> in <module>()\r\n----> 1 arr_list = pa.from_pylist([1, 1, 1, 2])\r\n\r\nAttributeError: module 'pyarrow' has no attribute 'from_pylist'\r\n{code}\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2018-03-11T20:13:43.629+0000",
                    "updated": "2018-03-11T21:02:33.280+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16394770",
                    "id": "16394770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "{{pyarrow.from_pylist}} is now {{pyarrow.array}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-12T03:40:16.124+0000",
                    "updated": "2018-03-12T03:40:16.124+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16397116",
                    "id": "16397116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~alexhagerman], you'll need to be careful for hashing to be consistent with Python scalars (in other words, for every hashable x and y where {{x == y}}, {{hash\\(x) == hash\\(y)}} should also be true).\r\n\r\nThe simplest way to do that is probably to convert the Arrow value to a Python scalar, though that may not be the fastest:\r\n{code:python}\r\ndef __hash__(self):\r\n    return hash(self.as_py())\r\n{code}\r\n\r\nOtherwise you'll need to reproduce the exact hashing algorithm that Python uses.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-03-13T15:34:27.668+0000",
                    "updated": "2018-03-13T15:34:27.668+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16397909",
                    "id": "16397909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "Thanks [~pitrou] this was actually what I had implemented locally so glad to see I was on the right track. Tonight I was working on doing a little bit of benchmarking and writing the tests. Any specific loads or types you might want to see related to the speed concern? Or is it better to get a consistent hash implementation like this setup in a PR and then worry about speed?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2018-03-14T00:39:41.046+0000",
                    "updated": "2018-03-14T00:39:41.046+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16398355",
                    "id": "16398355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I don't think we're concerned about particular workloads for now. Something like {{%timeit hash\\(x)}} (in IPython syntax) is a good micro-benchmark for this.\r\n\r\nInteger is the main type that I think might be use in a hashing context so you may want to write a native hash implementation for them, while letting other types defer to {{as_py}}. \r\n\r\nAlso in some cases (such as StructValue), the {{as_py}} fallback won't work. We may or may not care about this immediately (i.e. if you only want to implement numbers, we can open an issue for the other types).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-03-14T10:16:45.585+0000",
                    "updated": "2018-03-14T10:16:45.585+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16399783",
                    "id": "16399783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "Sounds good. Just to verify Integer only or Number types in general? I've got a deployment happening during the day right now, so I'll hopefully be able to wrap up a version one this weekend and do a PR for review.\r\n\r\nYou mentioned for items like StructValue the as_py fallback won't work. Similarly with ListValue I would expect both of these to raise a TypeError: Unhashable Type, but I'll check the current behavior. Depending on what that is do you have any thoughts if the hash() TypeError should be raised on mutable types like standard python behavior? Wanted to check so I don't conflict with existing expected behavior if this has been handled previously and to look at tying it in with __eq__.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2018-03-15T02:08:47.934+0000",
                    "updated": "2018-03-15T02:08:47.934+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16400283",
                    "id": "16400283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "{quote}Just to verify Integer only or Number types in general?{quote}\r\n\r\nIntegers seem to be the most useful case right now.\r\n\r\n{quote}do you have any thoughts if the hash() TypeError should be raised on mutable types like standard python behavior?{quote}\r\n\r\nArrow scalars should be immutable AFAICT, since they're just a view over an (immutable) Arrow arrow.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-03-15T11:53:31.504+0000",
                    "updated": "2018-03-15T11:53:31.504+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16404189",
                    "id": "16404189",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "I've added the __hash__ for ints and opened a PR. __eq__ was already in place using as_py() in relation to the original ticket. Happy to look into the other types and explore different ways to handle hashing them as well as any extension of as_py that might be needed if some direction or new tickets could be provided. Otherwise I'll look at what else is open that I might be able to help with.\r\n\r\nTiming information is below.\r\n\r\nimport pyarrow as pa\r\narr = pa.array([1,1,2,1])\r\na = arr[0]\r\n%timeit a.__hash__()\r\n265 ns \u00b1 1.72 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2018-03-18T21:21:27.714+0000",
                    "updated": "2018-03-18T21:21:27.714+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16406056",
                    "id": "16406056",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r175709965\n \n \n\n ##########\n File path: python/pyarrow/tests/test_scalars.py\n ##########\n @@ -171,3 +171,37 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        arr2 = pa.array([1, 1, 2, 1])\n+        assert arr[0].__hash__() == arr2[0].__hash__()\n+\n+    def test_int_eq(self):\n \n Review comment:\n   No need to add this test, it is implicitly tested for in `test_int64` above.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T10:06:15.413+0000",
                    "updated": "2018-03-20T10:06:15.413+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16406057",
                    "id": "16406057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r175709705\n \n \n\n ##########\n File path: python/pyarrow/tests/test_scalars.py\n ##########\n @@ -171,3 +171,37 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        arr2 = pa.array([1, 1, 2, 1])\n+        assert arr[0].__hash__() == arr2[0].__hash__()\n \n Review comment:\n   Tests should call the built-in `hash()` function, not the `__hash__` method.\r\n   Also you need to check that hashing produces identical values to standard Python values, so for example `hash(arr[0]) == hash(1)`.\r\n   \r\n   (if you were to write a custom hash implementation instead of delegating to `as_py()`, you would also need to test for many more int values, including \"interesting\" values like `-1`, `2**61`, etc.)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T10:06:15.457+0000",
                    "updated": "2018-03-20T10:06:15.457+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16406058",
                    "id": "16406058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r175708860\n \n \n\n ##########\n File path: python/pyarrow/scalar.pxi\n ##########\n @@ -73,6 +73,12 @@ cdef class ArrayValue(Scalar):\n             raise NotImplementedError(\n                 \"Cannot compare Arrow values that don't support as_py()\")\n \n+    def __hash__(self):\n \n Review comment:\n   Ok, I think we misunderstood each other.\r\n   When you asked about restricting yourself to integers, I thought you meant about writing a fast path that avoids calling `as_py()`. If there is no fast path, then there's no need to check for ints or any other types.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T10:06:15.458+0000",
                    "updated": "2018-03-20T10:06:15.458+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16407193",
                    "id": "16407193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r175948806\n \n \n\n ##########\n File path: python/pyarrow/tests/test_scalars.py\n ##########\n @@ -171,3 +171,37 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        arr2 = pa.array([1, 1, 2, 1])\n+        assert arr[0].__hash__() == arr2[0].__hash__()\n+\n+    def test_int_eq(self):\n \n Review comment:\n   Removed. Thank you for letting me know that.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T22:59:56.812+0000",
                    "updated": "2018-03-20T22:59:56.812+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16407198",
                    "id": "16407198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r175949569\n \n \n\n ##########\n File path: python/pyarrow/scalar.pxi\n ##########\n @@ -73,6 +73,12 @@ cdef class ArrayValue(Scalar):\n             raise NotImplementedError(\n                 \"Cannot compare Arrow values that don't support as_py()\")\n \n+    def __hash__(self):\n \n Review comment:\n   Sorry about that. I've switch it to `hash()` using `as_py()` without any type checks. Per the JIRA ticket can we consider a separate ticket for a fast path custom hash on ints?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T23:04:12.002+0000",
                    "updated": "2018-03-20T23:04:12.002+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16407201",
                    "id": "16407201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r175950134\n \n \n\n ##########\n File path: python/pyarrow/tests/test_scalars.py\n ##########\n @@ -171,3 +171,37 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        arr2 = pa.array([1, 1, 2, 1])\n+        assert arr[0].__hash__() == arr2[0].__hash__()\n \n Review comment:\n   Test have been updated. Noted on the custom hash. I think a custom hash faster than the built in is a larger task for me. I'd like to work on that, but thought it might be better to get a first pass hash implemented with the built in and then handle that separately.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T23:07:25.848+0000",
                    "updated": "2018-03-20T23:07:25.848+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16407245",
                    "id": "16407245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#issuecomment-374795629\n \n \n   I just want to point out that the way we are interacting with scalar values in Python is not intended necessarily as the long term solution for the project. There's been some discussion in JIRA about adding some kind of C++-level scalar object model. So I'd just like to throw that out there as food for thought\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T23:48:33.893+0000",
                    "updated": "2018-03-20T23:48:33.893+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16407653",
                    "id": "16407653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r176018434\n \n \n\n ##########\n File path: python/pyarrow/scalar.pxi\n ##########\n @@ -73,6 +73,12 @@ cdef class ArrayValue(Scalar):\n             raise NotImplementedError(\n                 \"Cannot compare Arrow values that don't support as_py()\")\n \n+    def __hash__(self):\n \n Review comment:\n   > Per the JIRA ticket can we consider a separate ticket for a fast path custom hash on ints?\r\n   \r\n   Definitely.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-21T09:22:25.101+0000",
                    "updated": "2018-03-21T09:22:25.101+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16408924",
                    "id": "16408924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r176290582\n \n \n\n ##########\n File path: python/pyarrow/scalar.pxi\n ##########\n @@ -73,6 +73,12 @@ cdef class ArrayValue(Scalar):\n             raise NotImplementedError(\n                 \"Cannot compare Arrow values that don't support as_py()\")\n \n+    def __hash__(self):\n \n Review comment:\n   Ticket created https://issues.apache.org/jira/browse/ARROW-2339. Anything else you would suggest for this PR?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-22T01:58:09.537+0000",
                    "updated": "2018-03-22T01:58:09.537+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16409238",
                    "id": "16409238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r176343457\n \n \n\n ##########\n File path: python/pyarrow/tests/test_scalars.py\n ##########\n @@ -171,3 +171,35 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        int_arr = pa.array([1, 1, 2, 1])\n+        assert hash(int_arr[0]) == hash(1)\n+\n+    def test_float_hash(self):\n+        # ARROW-640\n+        float_arr = pa.array([1.4, 1.2, 2.5, 1.8])\n+        assert hash(float_arr[0]) == hash(1.4)\n+\n+    def test_string_hash(self):\n+        # ARROW-640\n+        str_arr = pa.array([\"foo\", \"bar\"])\n+        assert hash(str_arr[1]) == hash(\"bar\")\n+\n+    def test_bytes_hash(self):\n+        # ARROW-640\n+        byte_arr = pa.array([b'foo', None, b'bar'])\n+        assert hash(byte_arr[2]) == hash(b\"bar\")\n+\n+    def test_array_to_set(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        set_from_array = set(arr)\n+        assert isinstance(set_from_array, set)\n+\n+    def test_array_to_set_unique(self):\n \n Review comment:\n   You could easily collapse this test with `test_array_to_set` above. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-22T08:53:24.486+0000",
                    "updated": "2018-03-22T08:53:24.486+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16410293",
                    "id": "16410293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on a change in pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#discussion_r176569568\n \n \n\n ##########\n File path: python/pyarrow/tests/test_scalars.py\n ##########\n @@ -171,3 +171,35 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        int_arr = pa.array([1, 1, 2, 1])\n+        assert hash(int_arr[0]) == hash(1)\n+\n+    def test_float_hash(self):\n+        # ARROW-640\n+        float_arr = pa.array([1.4, 1.2, 2.5, 1.8])\n+        assert hash(float_arr[0]) == hash(1.4)\n+\n+    def test_string_hash(self):\n+        # ARROW-640\n+        str_arr = pa.array([\"foo\", \"bar\"])\n+        assert hash(str_arr[1]) == hash(\"bar\")\n+\n+    def test_bytes_hash(self):\n+        # ARROW-640\n+        byte_arr = pa.array([b'foo', None, b'bar'])\n+        assert hash(byte_arr[2]) == hash(b\"bar\")\n+\n+    def test_array_to_set(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        set_from_array = set(arr)\n+        assert isinstance(set_from_array, set)\n+\n+    def test_array_to_set_unique(self):\n \n Review comment:\n   Sorry about that, used to separating tests. Set tests merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-22T20:55:52.579+0000",
                    "updated": "2018-03-22T20:55:52.579+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16412095",
                    "id": "16412095",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on issue #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#issuecomment-375800902\n \n \n   Is there a ticket separate from Arrow 47 with details around that? I'd like to watch the conversation and considerations around it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-23T21:17:36.265+0000",
                    "updated": "2018-03-23T21:17:36.265+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16414108",
                    "id": "16414108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "AlexHagerman commented on issue #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765#issuecomment-376230898\n \n \n   @pitrou any other feedback or comments on this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-26T16:39:21.438+0000",
                    "updated": "2018-03-26T16:39:21.438+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16414619",
                    "id": "16414619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1765\n[https://github.com/apache/arrow/pull/1765]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-26T21:54:40.707+0000",
                    "updated": "2018-03-26T21:54:40.707+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056676/comment/16414620",
                    "id": "16414620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1765: ARROW-640: [Python] Implement __hash__ and equality for Array scalar values Arrow scalar values\nURL: https://github.com/apache/arrow/pull/1765\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/scalar.pxi b/python/pyarrow/scalar.pxi\nindex a801acd69..bbbefd834 100644\n--- a/python/pyarrow/scalar.pxi\n+++ b/python/pyarrow/scalar.pxi\n@@ -73,6 +73,8 @@ cdef class ArrayValue(Scalar):\n             raise NotImplementedError(\n                 \"Cannot compare Arrow values that don't support as_py()\")\n \n+    def __hash__(self):\n+            return hash(self.as_py())\n \n cdef class BooleanValue(ArrayValue):\n \ndiff --git a/python/pyarrow/tests/test_scalars.py b/python/pyarrow/tests/test_scalars.py\nindex 7061a0d3a..92db9b1e0 100644\n--- a/python/pyarrow/tests/test_scalars.py\n+++ b/python/pyarrow/tests/test_scalars.py\n@@ -171,3 +171,30 @@ def test_dictionary(self):\n                                            categorical.categories)\n         for i, c in enumerate(values):\n             assert v[i].as_py() == c\n+\n+    def test_int_hash(self):\n+        # ARROW-640\n+        int_arr = pa.array([1, 1, 2, 1])\n+        assert hash(int_arr[0]) == hash(1)\n+\n+    def test_float_hash(self):\n+        # ARROW-640\n+        float_arr = pa.array([1.4, 1.2, 2.5, 1.8])\n+        assert hash(float_arr[0]) == hash(1.4)\n+\n+    def test_string_hash(self):\n+        # ARROW-640\n+        str_arr = pa.array([\"foo\", \"bar\"])\n+        assert hash(str_arr[1]) == hash(\"bar\")\n+\n+    def test_bytes_hash(self):\n+        # ARROW-640\n+        byte_arr = pa.array([b'foo', None, b'bar'])\n+        assert hash(byte_arr[2]) == hash(b\"bar\")\n+\n+    def test_array_to_set(self):\n+        # ARROW-640\n+        arr = pa.array([1, 1, 2, 1])\n+        set_from_array = set(arr)\n+        assert isinstance(set_from_array, set)\n+        assert set_from_array == {1, 2}\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-26T21:54:47.287+0000",
                    "updated": "2018-03-26T21:54:47.287+0000"
                }
            ],
            "maxResults": 24,
            "total": 24,
            "startAt": 0
        },
        "customfield_12311820": "0|i3cdbr:",
        "customfield_12314139": null
    }
}