{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13412506",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506",
    "key": "ARROW-14760",
    "fields": {
        "parent": {
            "id": "13405944",
            "key": "ARROW-14278",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13405944",
            "fields": {
                "summary": "[Doc] New Contributors Guide",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "aggregateprogress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14760/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/689277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF opened a new pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837\n\n\n   Add **Lifecycle of a Pull Request** section of the new Contributor's guide.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T13:29:24.475+0000",
                    "updated": "2021-12-02T13:29:24.475+0000",
                    "started": "2021-12-02T13:29:24.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689277",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/689280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#issuecomment-984628846\n\n\n   https://issues.apache.org/jira/browse/ARROW-14760\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T13:29:44.805+0000",
                    "updated": "2021-12-02T13:29:44.805+0000",
                    "started": "2021-12-02T13:29:44.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689280",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/689394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r761175620\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n\nReview comment:\n       ```suggestion\r\n   in Git, make changes to the code, push the changes to your ``origin``\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have your source code,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code-block:: shell\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n+\n+2. Create a new branch\n+\n+   .. code-block:: shell\n+\n+      $ git checkout -b <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code-block:: shell\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n\nReview comment:\n       Just wondering, do those numbers work? (it might be that sphinx automatically renumbers them and starts counting at 1 because this is a new list. But if that's the case, there should also be a way to turn that off)\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have your source code,\n\nReview comment:\n       \"have your source code\" -> \"have cloned the repo\"? or \"have the source code locally\"\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have your source code,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code-block:: shell\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n+\n+2. Create a new branch\n+\n+   .. code-block:: shell\n+\n+      $ git checkout -b <branch-name>\n\nReview comment:\n       this could also be `git switch --create <branch-name>` (I don't know to what extent people already use those new commands)\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n\nReview comment:\n       ```suggestion\r\n   :ref:`As mentioned before<set-up>`, the Arrow project uses git for\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have your source code,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code-block:: shell\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n+\n+2. Create a new branch\n+\n+   .. code-block:: shell\n+\n+      $ git checkout -b <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code-block:: shell\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code-block:: shell\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Or you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code-block:: shell      \n+\n+      $ git commit -a -m '<message>'\n+\n+4. Then push your work to your Arrow fork\n+\n+   .. code-block:: shell  \n+\n+      $ git push origin <branch-name>\n+\n+.. note::\n+\n+   Your work is now still under your watchful eye so no problem if you\n+   see any error you would like to correct. You can make an additional\n+   commit to correct. Also Git has lots of ways to\n+   amend, delete, revise, etc. See https://git-scm.com/docs for more\n+   information.\n+\n+   Until you make the Pull Request, nothing is visible on the Arrow\n+   repository and you are free to experiment.\n+\n+If all is set, you can make the Pull Request!\n+\n+5. Go to ``https://github.com/YOU/arrow`` where you will see a box with\n+   the name of the branch that you pushed and next to it a green button\n+   **Compare & Pull Request**. Clicking on it you should add a title and\n\nReview comment:\n       ```suggestion\r\n      **Compare & Pull Request**. After clicking on it, you should add a title and\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T15:21:19.765+0000",
                    "updated": "2021-12-02T15:21:19.765+0000",
                    "started": "2021-12-02T15:21:19.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689394",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/689475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r761265102\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have your source code,\n\nReview comment:\n       Also \"repository\" in full ;-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T16:29:53.230+0000",
                    "updated": "2021-12-02T16:29:53.230+0000",
                    "started": "2021-12-02T16:29:53.230+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689475",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/689940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r761869579\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,162 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to you ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have your source code,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code-block:: shell\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n+\n+2. Create a new branch\n+\n+   .. code-block:: shell\n+\n+      $ git checkout -b <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code-block:: shell\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n\nReview comment:\n       It works. If I would use `#.` it would restart at 1.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T11:49:23.408+0000",
                    "updated": "2021-12-03T11:49:23.408+0000",
                    "started": "2021-12-03T11:49:23.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689940",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/689948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r761876157\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       @jorisvandenbossche here for example, `$` gets copy-pasted also if I try it in the `index.html` view of the guide.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T12:00:05.705+0000",
                    "updated": "2021-12-03T12:00:05.705+0000",
                    "started": "2021-12-03T12:00:05.705+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689948",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763079928\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       Which version of sphinx are you using locally to build the docs?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T14:53:52.390+0000",
                    "updated": "2021-12-06T14:53:52.390+0000",
                    "started": "2021-12-06T14:53:52.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691082",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763080660\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       (I also don't know if it matters whether you use `.. code::` vs `.. code-block::`, not directly sure what's the difference between both)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T14:54:38.069+0000",
                    "updated": "2021-12-06T14:54:38.069+0000",
                    "started": "2021-12-06T14:54:38.068+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691083",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763112797\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       sphinx-build 2.4.4\r\n   \r\n   I tried `.. code::` and `.. code-block::` and was the same. I am quite sure it's just my setup.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T15:28:51.807+0000",
                    "updated": "2021-12-06T15:28:51.807+0000",
                    "started": "2021-12-06T15:28:51.807+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691118",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763159511\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       That's a very old version. I suppose that's the reason for this not working. I think you need sphinx >= 4\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T16:19:09.742+0000",
                    "updated": "2021-12-06T16:19:09.742+0000",
                    "started": "2021-12-06T16:19:09.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691169",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763220296\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       We should update [requirements.txt](https://github.com/apache/arrow/blob/master/docs/requirements.txt). Why is there a set version anyways?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T17:30:08.987+0000",
                    "updated": "2021-12-06T17:30:08.987+0000",
                    "started": "2021-12-06T17:30:08.987+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691234",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763230100\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       Indeed, that file is horribly out of date. Apparently the version was because of https://issues.apache.org/jira/browse/ARROW-8340...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T17:42:24.185+0000",
                    "updated": "2021-12-06T17:42:24.185+0000",
                    "started": "2021-12-06T17:42:24.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691247",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r763722632\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n\nReview comment:\n       I deleted the pin for Sphinx in `requirements.txt` and built the docs with 4.3.1 version successfully. Only warnings for some compute functions persist. I will add the change as a PR to the [ARROW-8340](https://issues.apache.org/jira/browse/ARROW-8340).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T07:58:59.162+0000",
                    "updated": "2021-12-07T07:58:59.162+0000",
                    "started": "2021-12-07T07:58:59.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691520",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764251553\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n\nReview comment:\n       Not sure which one is the typo, but you have \"git\" and \"Git\" here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:15:50.651+0000",
                    "updated": "2021-12-07T18:15:50.651+0000",
                    "started": "2021-12-07T18:15:50.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691930",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691932",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764252291\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n\nReview comment:\n       How about adding comments explaining what each of these rows are doing?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:16:56.495+0000",
                    "updated": "2021-12-07T18:16:56.495+0000",
                    "started": "2021-12-07T18:16:56.494+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691932",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764252677\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Or you can add and commit in one step, if all the files changed\n\nReview comment:\n       ```suggestion\r\n      Alternatively, you can add and commit in one step, if all the files changed\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:17:29.452+0000",
                    "updated": "2021-12-07T18:17:29.452+0000",
                    "started": "2021-12-07T18:17:29.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691933",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/691934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764253444\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,168 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master\n+      $ git fetch upstream\n+      $ git pull --ff-only upstream master\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Or you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n+\n+4. Then push your work to your Arrow fork\n+\n+   .. code:: console  \n+\n+      $ git push origin <branch-name>\n+\n+.. note::\n+\n+   Your work is now still under your watchful eye so no problem if you\n+   see any error you would like to correct. You can make an additional\n+   commit to correct. Also Git has lots of ways to\n+   amend, delete, revise, etc. See https://git-scm.com/docs for more\n+   information.\n\nReview comment:\n       ```suggestion\r\n      Your work is now still under your watchful eye so it's not a problem if you\r\n      see any errors you would like to correct. You can make an additional\r\n      commit to correct, and Git has lots of ways to\r\n      amend, delete, revise, etc. See https://git-scm.com/docs for more\r\n      information.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-07T18:18:34.766+0000",
                    "updated": "2021-12-07T18:18:34.766+0000",
                    "started": "2021-12-07T18:18:34.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691934",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/692424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764731387\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n\nReview comment:\n       ```suggestion\r\n      in the master branch. Run it in the shell from the ``arrow`` directory.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n\nReview comment:\n       ```suggestion\r\n         $ git commit -a -m \"<message>\"\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n\nReview comment:\n       ```suggestion\r\n         $ git commit -am '<message>'\r\n   ```\r\n   \r\n   Or is that more confusing? (I do that personally)\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n\nReview comment:\n       ```suggestion\r\n      without conficts or creating merge commits.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n+\n+4. Then push your work to your Arrow fork\n+\n+   .. code:: console  \n+\n+      $ git push origin <branch-name>\n+\n+.. note::\n+\n+   Your work is now still under your watchful eye so it's not a problem\n+   if you see any errors you would like to correct. You can make an\n+   additional commit to correct, and Git has lots of ways to\n+   amend, delete, revise, etc. See https://git-scm.com/docs for more\n+   information.\n+\n+   Until you make the Pull Request, nothing is visible on the Arrow\n+   repository and you are free to experiment.\n+\n+If all is set, you can make the Pull Request!\n+\n+5. Go to ``https://github.com/<your username>arrow`` where you will see a box with\n+   the name of the branch that you pushed and next to it a green button\n+   **Compare & Pull Request**. After clicking on it, you should add a\n+   title and description of the Pull Request. Underneath you can check\n+   once again the changes you have made.\n+\n+   .. seealso::\n+      \n+      Get more details on naming the Pull Request in Arrow repository\n+      and other additional information :ref:`pull_request_and_review`\n+      section.\n+\n+Reviews and merge of the Pull Request\n+=====================================\n+\n+When the Pull Request is submitted it waits to get reviewed. One of\n+great things about Open Source is your work gets lots of feedback and\n+so it gets perfected. Do not be discouraged by the time it takes for\n+the PR to get merged due to reviews and corrections. It is a process\n+that supports quality and with it you can learn a lot.\n+\n+If it still takes too long to get merged, do not hesitate to remind\n+maintainers in the comment section of the Pull Request and post\n+reminders on the JIRA ticket also.\n+\n+How to get your Pull Request to be reviewed?\n+--------------------------------------------\n+\n+Arrow maintainers will be notified when a Pull Request is created and\n+they will get to it as soon as possible. If days pass and it still had\n+not been reviewed go ahead and mention the reporter of the JIRA issue \n+or a developer that you communicated with via JIRA comments, mailing\n+list or GitHub.\n+\n+To put a **mention** in GitHub insert @ in the comment and select the\n+username from the list.\n+\n+Commenting on a Pull Request\n+----------------------------\n+\n+When a Pull Request is open in the repository you and other developers\n+can comment on the proposed solution.\n+\n+To create a general comment navigate to the **Conversation** tab of\n+you Pull Request and start writing in the comment box at the bottom of\n+the page.\n+\n+You can also comment on a section of the file to point out something\n+specific from your code. To do this navigate to **Files changed** tab and\n+select a line you want to insert the comment to. Hovering over the beginning\n+of the line you will see a **blue plus icon**. You can click on it or drag\n+it to select multiple lines and then click the icon to insert the comment.\n+\n+Resolve conversation\n+--------------------\n+\n+You can resolve a conversion in a Pull Request review by clicking\n+**Resolve conversation** in the **Files changed** tab. This way the\n+conversation will be collapsed and marked as resolved which will make it\n+easier for you to organize what is done and what still needs to be addressed.\n+\n+After getting a review\n+----------------------\n+\n+The procedure after getting reviews is similar to creating the initial Pull Request.\n+You need to update your code locally, make a commit, update the branch to sync\n+it with upstream (or origin if there were commits from other developers or if you \n+committed suggestions from the GitHub) and push your code to origin. It will\n+automatically be updated in you Pull Request also.\n\nReview comment:\n       ```suggestion\r\n   automatically be updated in your Pull Request as well.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n\nReview comment:\n       ```suggestion\r\n         $ git commit -m \"<message>\"\r\n   ```\r\n   \r\n   (I generally find double quotes a bit safer in case you would use ' as apostrophe for some reason in the message)\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n+\n+4. Then push your work to your Arrow fork\n+\n+   .. code:: console  \n+\n+      $ git push origin <branch-name>\n+\n+.. note::\n+\n+   Your work is now still under your watchful eye so it's not a problem\n+   if you see any errors you would like to correct. You can make an\n+   additional commit to correct, and Git has lots of ways to\n+   amend, delete, revise, etc. See https://git-scm.com/docs for more\n+   information.\n+\n+   Until you make the Pull Request, nothing is visible on the Arrow\n+   repository and you are free to experiment.\n+\n+If all is set, you can make the Pull Request!\n+\n+5. Go to ``https://github.com/<your username>arrow`` where you will see a box with\n+   the name of the branch that you pushed and next to it a green button\n+   **Compare & Pull Request**. After clicking on it, you should add a\n+   title and description of the Pull Request. Underneath you can check\n+   once again the changes you have made.\n+\n+   .. seealso::\n+      \n+      Get more details on naming the Pull Request in Arrow repository\n+      and other additional information :ref:`pull_request_and_review`\n+      section.\n+\n+Reviews and merge of the Pull Request\n+=====================================\n+\n+When the Pull Request is submitted it waits to get reviewed. One of\n+great things about Open Source is your work gets lots of feedback and\n+so it gets perfected. Do not be discouraged by the time it takes for\n+the PR to get merged due to reviews and corrections. It is a process\n+that supports quality and with it you can learn a lot.\n+\n+If it still takes too long to get merged, do not hesitate to remind\n+maintainers in the comment section of the Pull Request and post\n+reminders on the JIRA ticket also.\n+\n+How to get your Pull Request to be reviewed?\n+--------------------------------------------\n+\n+Arrow maintainers will be notified when a Pull Request is created and\n+they will get to it as soon as possible. If days pass and it still had\n+not been reviewed go ahead and mention the reporter of the JIRA issue \n+or a developer that you communicated with via JIRA comments, mailing\n+list or GitHub.\n+\n+To put a **mention** in GitHub insert @ in the comment and select the\n+username from the list.\n+\n+Commenting on a Pull Request\n+----------------------------\n+\n+When a Pull Request is open in the repository you and other developers\n+can comment on the proposed solution.\n+\n+To create a general comment navigate to the **Conversation** tab of\n+you Pull Request and start writing in the comment box at the bottom of\n+the page.\n+\n+You can also comment on a section of the file to point out something\n+specific from your code. To do this navigate to **Files changed** tab and\n+select a line you want to insert the comment to. Hovering over the beginning\n+of the line you will see a **blue plus icon**. You can click on it or drag\n+it to select multiple lines and then click the icon to insert the comment.\n+\n+Resolve conversation\n+--------------------\n+\n+You can resolve a conversion in a Pull Request review by clicking\n+**Resolve conversation** in the **Files changed** tab. This way the\n+conversation will be collapsed and marked as resolved which will make it\n+easier for you to organize what is done and what still needs to be addressed.\n+\n+After getting a review\n\nReview comment:\n       maybe \"Updating your Pull Request\"? \n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n+\n+4. Then push your work to your Arrow fork\n+\n+   .. code:: console  \n+\n+      $ git push origin <branch-name>\n+\n+.. note::\n+\n+   Your work is now still under your watchful eye so it's not a problem\n+   if you see any errors you would like to correct. You can make an\n+   additional commit to correct, and Git has lots of ways to\n+   amend, delete, revise, etc. See https://git-scm.com/docs for more\n+   information.\n+\n+   Until you make the Pull Request, nothing is visible on the Arrow\n+   repository and you are free to experiment.\n+\n+If all is set, you can make the Pull Request!\n+\n+5. Go to ``https://github.com/<your username>arrow`` where you will see a box with\n+   the name of the branch that you pushed and next to it a green button\n+   **Compare & Pull Request**. After clicking on it, you should add a\n+   title and description of the Pull Request. Underneath you can check\n+   once again the changes you have made.\n+\n+   .. seealso::\n+      \n+      Get more details on naming the Pull Request in Arrow repository\n+      and other additional information :ref:`pull_request_and_review`\n+      section.\n+\n+Reviews and merge of the Pull Request\n+=====================================\n+\n+When the Pull Request is submitted it waits to get reviewed. One of\n+great things about Open Source is your work gets lots of feedback and\n+so it gets perfected. Do not be discouraged by the time it takes for\n+the PR to get merged due to reviews and corrections. It is a process\n+that supports quality and with it you can learn a lot.\n+\n+If it still takes too long to get merged, do not hesitate to remind\n+maintainers in the comment section of the Pull Request and post\n+reminders on the JIRA ticket also.\n+\n+How to get your Pull Request to be reviewed?\n+--------------------------------------------\n+\n+Arrow maintainers will be notified when a Pull Request is created and\n+they will get to it as soon as possible. If days pass and it still had\n+not been reviewed go ahead and mention the reporter of the JIRA issue \n+or a developer that you communicated with via JIRA comments, mailing\n+list or GitHub.\n+\n+To put a **mention** in GitHub insert @ in the comment and select the\n+username from the list.\n+\n+Commenting on a Pull Request\n+----------------------------\n+\n+When a Pull Request is open in the repository you and other developers\n+can comment on the proposed solution.\n+\n+To create a general comment navigate to the **Conversation** tab of\n+you Pull Request and start writing in the comment box at the bottom of\n+the page.\n+\n+You can also comment on a section of the file to point out something\n+specific from your code. To do this navigate to **Files changed** tab and\n+select a line you want to insert the comment to. Hovering over the beginning\n+of the line you will see a **blue plus icon**. You can click on it or drag\n+it to select multiple lines and then click the icon to insert the comment.\n+\n+Resolve conversation\n+--------------------\n+\n+You can resolve a conversion in a Pull Request review by clicking\n+**Resolve conversation** in the **Files changed** tab. This way the\n+conversation will be collapsed and marked as resolved which will make it\n+easier for you to organize what is done and what still needs to be addressed.\n+\n+After getting a review\n+----------------------\n+\n+The procedure after getting reviews is similar to creating the initial Pull Request.\n+You need to update your code locally, make a commit, update the branch to sync\n+it with upstream (or origin if there were commits from other developers or if you \n+committed suggestions from the GitHub) and push your code to origin. It will\n\nReview comment:\n       I am wondering if we want to spell out the commands for this? \n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n\nReview comment:\n       ```suggestion\r\n   have successfully built Arrow and have a JIRA issue to work on.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T10:41:19.547+0000",
                    "updated": "2021-12-08T10:41:19.547+0000",
                    "started": "2021-12-08T10:41:19.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692424",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/692500",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764813747\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n+\n+4. Then push your work to your Arrow fork\n+\n+   .. code:: console  \n+\n+      $ git push origin <branch-name>\n+\n+.. note::\n+\n+   Your work is now still under your watchful eye so it's not a problem\n+   if you see any errors you would like to correct. You can make an\n+   additional commit to correct, and Git has lots of ways to\n+   amend, delete, revise, etc. See https://git-scm.com/docs for more\n+   information.\n+\n+   Until you make the Pull Request, nothing is visible on the Arrow\n+   repository and you are free to experiment.\n+\n+If all is set, you can make the Pull Request!\n+\n+5. Go to ``https://github.com/<your username>arrow`` where you will see a box with\n+   the name of the branch that you pushed and next to it a green button\n+   **Compare & Pull Request**. After clicking on it, you should add a\n+   title and description of the Pull Request. Underneath you can check\n+   once again the changes you have made.\n+\n+   .. seealso::\n+      \n+      Get more details on naming the Pull Request in Arrow repository\n+      and other additional information :ref:`pull_request_and_review`\n+      section.\n+\n+Reviews and merge of the Pull Request\n+=====================================\n+\n+When the Pull Request is submitted it waits to get reviewed. One of\n+great things about Open Source is your work gets lots of feedback and\n+so it gets perfected. Do not be discouraged by the time it takes for\n+the PR to get merged due to reviews and corrections. It is a process\n+that supports quality and with it you can learn a lot.\n+\n+If it still takes too long to get merged, do not hesitate to remind\n+maintainers in the comment section of the Pull Request and post\n+reminders on the JIRA ticket also.\n+\n+How to get your Pull Request to be reviewed?\n+--------------------------------------------\n+\n+Arrow maintainers will be notified when a Pull Request is created and\n+they will get to it as soon as possible. If days pass and it still had\n+not been reviewed go ahead and mention the reporter of the JIRA issue \n+or a developer that you communicated with via JIRA comments, mailing\n+list or GitHub.\n+\n+To put a **mention** in GitHub insert @ in the comment and select the\n+username from the list.\n+\n+Commenting on a Pull Request\n+----------------------------\n+\n+When a Pull Request is open in the repository you and other developers\n+can comment on the proposed solution.\n+\n+To create a general comment navigate to the **Conversation** tab of\n+you Pull Request and start writing in the comment box at the bottom of\n+the page.\n+\n+You can also comment on a section of the file to point out something\n+specific from your code. To do this navigate to **Files changed** tab and\n+select a line you want to insert the comment to. Hovering over the beginning\n+of the line you will see a **blue plus icon**. You can click on it or drag\n+it to select multiple lines and then click the icon to insert the comment.\n+\n+Resolve conversation\n+--------------------\n+\n+You can resolve a conversion in a Pull Request review by clicking\n+**Resolve conversation** in the **Files changed** tab. This way the\n+conversation will be collapsed and marked as resolved which will make it\n+easier for you to organize what is done and what still needs to be addressed.\n+\n+After getting a review\n+----------------------\n+\n+The procedure after getting reviews is similar to creating the initial Pull Request.\n+You need to update your code locally, make a commit, update the branch to sync\n+it with upstream (or origin if there were commits from other developers or if you \n+committed suggestions from the GitHub) and push your code to origin. It will\n\nReview comment:\n       I would agree, it would be nice to have everything in one place and remove duplicated info from the contributing page.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T12:17:10.332+0000",
                    "updated": "2021-12-08T12:17:10.332+0000",
                    "started": "2021-12-08T12:17:10.332+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692500",
                    "issueId": "13412506"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/worklog/692501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11837:\nURL: https://github.com/apache/arrow/pull/11837#discussion_r764814542\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/pr_and_github.rst\n##########\n@@ -24,14 +24,171 @@\n \n .. _pr_and_github:\n \n-****************************\n-Lifecycle of a Pull Request\n-****************************\n+******************************\n+Lifecycle of a Pull Request \ud83d\ude40 \n+******************************\n \n+:ref:`As mentioned before<set-up>`, the Arrow project uses Git for\n+version control and a workflow based on Pull Requests. That means\n+that you contribute the changes to the code by creating a branch\n+in Git, make changes to the code, push the changes to your ``origin``\n+which is your fork of the Arrow repository on GitHub and then you\n+create a **Pull Request** against the official Arrow repository\n+which is saved in your set up as ``upstream``.\n \n-Creating a PR \ud83d\ude40\n-================\n+You should have Git set up by now, have cloned the repository,\n+have successfully built Arrow and have an JIRA issue to work on.\n \n+**Before making changes to the code, you should create a new\n+branch in Git.**\n \n-Reviews and get the PR merge \ud83c\udf89\n-===============================\n\\ No newline at end of file\n+1. Update/sync the code from your ``upstream``\n+   in the master branch. Run it in the shell from ``arrow`` directory.\n+\n+   .. code:: console\n+\n+      $ git checkout master # select the main Arrow branch\n+      $ git fetch upstream # check for changes in upstream/master\n+      $ git pull --ff-only upstream master # save the changes from upstream/master\n+\n+   Note: ``--ff-only`` applies changes only if they can be fast-forwarded\n+   without creating new commits.\n+\n+2. Create a new branch\n+\n+   .. code:: console\n+\n+      $ git checkout -b <branch-name>\n+\n+   or (does the same thing)\n+   \n+   .. code:: console\n+\n+      $ git switch --create <branch-name>\n+\n+Now you can make changes to the code. To see the changes\n+made in the library use this two commands:\n+\n+.. code:: console\n+\n+   $ git status # to see what files are changed\n+   $ git diff # to see code change per file\n+\n+Creating a Pull Request \n+=======================\n+\n+Once you are satisfied with the changes, run the :ref:`tests <testing>`\n+and linters and then go ahead and commit the changes.\n+\n+3. Add and commit the changes\n+\n+   .. code:: console\n+         \n+      $ git add <filenames>\n+      $ git commit -m '<message>'\n+\n+   Alternatively, you can add and commit in one step, if all the files changed\n+   are to be committed\n+   \n+   .. code:: console      \n+\n+      $ git commit -a -m '<message>'\n\nReview comment:\n       I could change and maybe add a comment about the meaning of it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T12:18:23.303+0000",
                    "updated": "2021-12-08T12:18:23.303+0000",
                    "started": "2021-12-08T12:18:23.303+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692501",
                    "issueId": "13412506"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 22800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3ff96853[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b885dcd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18a742f7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5188021b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45109caf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@69f21688[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4be051bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5ae90a06[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bdd1010[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@626213b5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bc6fbcb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@396d6d8f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 15 14:14:21 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-15T14:14:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14760/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-11-18T10:52:38.000+0000",
        "updated": "2021-12-17T22:11:29.000+0000",
        "timeoriginalestimate": null,
        "description": "*Life cycle of a Pull Request*\u00a0section of the Steps in making your first PR.\r\n\r\nSteps in making your first PR outline:\r\n * Set up (command line and Git)\r\n * Building Arrow package\r\n ** Building C++\r\n ** Building PyArrow\r\n ** Building R-Arrow\r\n * Finding good first issues\r\n * Solving the problem\r\n ** Python bindings\r\n ** R bindings\r\n * Testing\r\n * Life cycle of a Pull Request\r\n ** Making the PR\r\n ** Reviews and get the PR merge",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Doc] Steps in making your first PR - PR life cycle",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412506/comment/17459977",
                    "id": "17459977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 11837\n[https://github.com/apache/arrow/pull/11837]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2021-12-15T14:14:21.640+0000",
                    "updated": "2021-12-15T14:14:21.640+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wuyw:",
        "customfield_12314139": null
    }
}