{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13112280",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280",
    "key": "ARROW-1735",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12518584",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12518584",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13112279",
                    "key": "ARROW-1734",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112279",
                    "fields": {
                        "summary": "C++/Python: Add cast function on Column-level",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1735/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4c17e979[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b26206d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@545af7e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1e359047[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36638445[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3deff3a0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e89be4b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@c8ca675[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26e75a0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6457cf82[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@175f5ea5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7e09ed35[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 28 17:33:47 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-28T17:33:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1735/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-10-26T13:36:16.000+0000",
        "updated": "2017-11-28T17:33:47.000+0000",
        "timeoriginalestimate": null,
        "description": "If the offset is non-zero, the results will be written into the wrong location:\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/cast.cc#L218",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Cast kernels cannot write into sliced output array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16225597",
                    "id": "16225597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I believe this is fixed in https://github.com/apache/arrow/commit/30158ad5a068208237f3c30e6c9eb60454bae402 but we will want to add tests to assert the expected behavior for certain",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-30T19:22:27.904+0000",
                    "updated": "2017-10-30T19:22:27.904+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16267807",
                    "id": "16267807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T opened a new pull request #1368: ARROW-1735: [C++] Add test sliced Array cast\nURL: https://github.com/apache/arrow/pull/1368\n \n \n   This closes [ARROW-1735](https://issues.apache.org/jira/browse/ARROW-1735).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-27T23:45:21.864+0000",
                    "updated": "2017-11-27T23:45:21.864+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16267811",
                    "id": "16267811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1368: ARROW-1735: [C++] Add test sliced Array cast\nURL: https://github.com/apache/arrow/pull/1368#issuecomment-347367507\n \n \n   Oops! I accidentally created the PR which JIRA issue is in-progress.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-27T23:48:32.827+0000",
                    "updated": "2017-11-27T23:48:32.827+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16267834",
                    "id": "16267834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1368: ARROW-1735: [C++] Add test sliced Array cast\nURL: https://github.com/apache/arrow/pull/1368#issuecomment-347370781\n \n \n   @wesm Would you close if you've done?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T00:09:38.209+0000",
                    "updated": "2017-11-28T00:09:38.209+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16267835",
                    "id": "16267835",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1368: ARROW-1735: [C++] Add test sliced Array cast\nURL: https://github.com/apache/arrow/pull/1368#issuecomment-347370781\n \n \n   @wesm Would you close this if you've done?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T00:09:50.158+0000",
                    "updated": "2017-11-28T00:09:50.158+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16268028",
                    "id": "16268028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1369: ARROW-1735: [C++] Test CastKernel writing into output array with non-zero offset\nURL: https://github.com/apache/arrow/pull/1369\n \n \n   This uncovered some bugs. I inspected the other kernels that are untested and while they look fine, at some point we may want to add some more extensive unit tests about this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T03:25:45.345+0000",
                    "updated": "2017-11-28T03:25:45.345+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16268029",
                    "id": "16268029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1368: ARROW-1735: [C++] Add test sliced Array cast\nURL: https://github.com/apache/arrow/pull/1368#issuecomment-347402498\n \n \n   Yes, I just opened a PR for the JIRA (feel free to review!)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T03:26:45.611+0000",
                    "updated": "2017-11-28T03:26:45.611+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16268030",
                    "id": "16268030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1368: ARROW-1735: [C++] Add test sliced Array cast\nURL: https://github.com/apache/arrow/pull/1368\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex 61d53c4d5..7949bb99c 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -69,6 +69,11 @@ class TestCast : public ComputeFixture, public TestBase {\n     std::shared_ptr<Array> result;\n     ASSERT_OK(Cast(&ctx_, input, out_type, options, &result));\n     ASSERT_ARRAYS_EQUAL(expected, *result);\n+\n+    std::shared_ptr<Array> result_sliced;\n+    int64_t offset = input.length()/2;\n+    ASSERT_OK(Cast(&ctx_, *input.Slice(offset), out_type, options, &result_sliced));\n+    ASSERT_ARRAYS_EQUAL(*expected.Slice(offset), *result_sliced);\n   }\n \n   template <typename InType, typename I_TYPE>\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T03:26:47.538+0000",
                    "updated": "2017-11-28T03:26:47.538+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16269104",
                    "id": "16269104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1369: ARROW-1735: [C++] Test CastKernel writing into output array with non-zero offset\nURL: https://github.com/apache/arrow/pull/1369#issuecomment-347601094\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T17:33:33.559+0000",
                    "updated": "2017-11-28T17:33:33.559+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16269105",
                    "id": "16269105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1369\n[https://github.com/apache/arrow/pull/1369]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-28T17:33:46.999+0000",
                    "updated": "2017-11-28T17:33:46.999+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112280/comment/16269106",
                    "id": "16269106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1369: ARROW-1735: [C++] Test CastKernel writing into output array with non-zero offset\nURL: https://github.com/apache/arrow/pull/1369\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex 4b1fabfdc..0b235cc19 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -103,7 +103,7 @@ static inline std::shared_ptr<ArrayData> SliceData(const ArrayData& data, int64_\n   length = std::min(data.length - offset, length);\n   offset += data.offset;\n \n-  auto new_data = data.ShallowCopy();\n+  auto new_data = data.Copy();\n   new_data->length = length;\n   new_data->offset = offset;\n   new_data->null_count = data.null_count != 0 ? kUnknownNullCount : 0;\n@@ -482,14 +482,14 @@ DictionaryArray::DictionaryArray(const std::shared_ptr<DataType>& type,\n     : dict_type_(static_cast<const DictionaryType*>(type.get())) {\n   DCHECK_EQ(type->id(), Type::DICTIONARY);\n   DCHECK_EQ(indices->type_id(), dict_type_->index_type()->id());\n-  auto data = indices->data()->ShallowCopy();\n+  auto data = indices->data()->Copy();\n   data->type = type;\n   SetData(data);\n }\n \n void DictionaryArray::SetData(const std::shared_ptr<ArrayData>& data) {\n   this->Array::SetData(data);\n-  auto indices_data = data_->ShallowCopy();\n+  auto indices_data = data_->Copy();\n   indices_data->type = dict_type_->index_type();\n   std::shared_ptr<Array> result;\n   indices_ = MakeArray(indices_data);\ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex ec5381d6e..ebe54adcb 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -143,9 +143,14 @@ struct ARROW_EXPORT ArrayData {\n     return *this;\n   }\n \n-  std::shared_ptr<ArrayData> ShallowCopy() const {\n-    return std::make_shared<ArrayData>(*this);\n-  }\n+  std::shared_ptr<ArrayData> Copy() const { return std::make_shared<ArrayData>(*this); }\n+\n+#ifndef ARROW_NO_DEPRECATED_API\n+\n+  // Deprecated since 0.8.0\n+  std::shared_ptr<ArrayData> ShallowCopy() const { return Copy(); }\n+\n+#endif\n \n   std::shared_ptr<DataType> type;\n   int64_t length;\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex d5158978c..c73bfa309 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -709,6 +709,66 @@ TEST_F(TestCast, PreallocatedMemory) {\n   ASSERT_ARRAYS_EQUAL(*expected, *result);\n }\n \n+template <typename InType, typename InT, typename OutType, typename OutT>\n+void CheckOffsetOutputCase(FunctionContext* ctx, const std::shared_ptr<DataType>& in_type,\n+                           const vector<InT>& in_values,\n+                           const std::shared_ptr<DataType>& out_type,\n+                           const vector<OutT>& out_values) {\n+  using OutTraits = TypeTraits<OutType>;\n+\n+  CastOptions options;\n+\n+  const int64_t length = static_cast<int64_t>(in_values.size());\n+\n+  shared_ptr<Array> arr, expected;\n+  ArrayFromVector<InType, InT>(in_type, in_values, &arr);\n+  ArrayFromVector<OutType, OutT>(out_type, out_values, &expected);\n+\n+  shared_ptr<Buffer> out_buffer;\n+  ASSERT_OK(ctx->Allocate(OutTraits::bytes_required(length), &out_buffer));\n+\n+  std::unique_ptr<UnaryKernel> kernel;\n+  ASSERT_OK(GetCastFunction(*in_type, out_type, options, &kernel));\n+\n+  const int64_t first_half = length / 2;\n+\n+  auto out_data = ArrayData::Make(out_type, length, {nullptr, out_buffer});\n+  auto out_second_data = out_data->Copy();\n+  out_second_data->offset = first_half;\n+\n+  Datum out_first(out_data);\n+  Datum out_second(out_second_data);\n+\n+  // Cast each bit\n+  ASSERT_OK(kernel->Call(ctx, Datum(arr->Slice(0, first_half)), &out_first));\n+  ASSERT_OK(kernel->Call(ctx, Datum(arr->Slice(first_half)), &out_second));\n+\n+  shared_ptr<Array> result = MakeArray(out_data);\n+\n+  ASSERT_ARRAYS_EQUAL(*expected, *result);\n+}\n+\n+TEST_F(TestCast, OffsetOutputBuffer) {\n+  // ARROW-1735\n+  vector<int32_t> v1 = {0, 10000, 2000, 1000, 0};\n+  vector<int64_t> e1 = {0, 10000, 2000, 1000, 0};\n+\n+  auto in_type = int32();\n+  auto out_type = int64();\n+  CheckOffsetOutputCase<Int32Type, int32_t, Int64Type, int64_t>(&this->ctx_, in_type, v1,\n+                                                                out_type, e1);\n+\n+  vector<bool> e2 = {false, true, true, true, false};\n+\n+  out_type = boolean();\n+  CheckOffsetOutputCase<Int32Type, int32_t, BooleanType, bool>(&this->ctx_, in_type, v1,\n+                                                               boolean(), e2);\n+\n+  vector<int16_t> e3 = {0, 10000, 2000, 1000, 0};\n+  CheckOffsetOutputCase<Int32Type, int32_t, Int16Type, int16_t>(&this->ctx_, in_type, v1,\n+                                                                int16(), e3);\n+}\n+\n template <typename TestType>\n class TestDictionaryCast : public TestCast {};\n \ndiff --git a/cpp/src/arrow/compute/kernels/cast.cc b/cpp/src/arrow/compute/kernels/cast.cc\nindex d48d66992..465be958c 100644\n--- a/cpp/src/arrow/compute/kernels/cast.cc\n+++ b/cpp/src/arrow/compute/kernels/cast.cc\n@@ -124,12 +124,7 @@ template <typename T>\n struct CastFunctor<T, NullType, typename std::enable_if<\n                                     std::is_base_of<FixedWidthType, T>::value>::type> {\n   void operator()(FunctionContext* ctx, const CastOptions& options,\n-                  const ArrayData& input, ArrayData* output) {\n-    // Simply initialize data to 0\n-    auto buf = output->buffers[1];\n-    DCHECK_EQ(output->offset, 0);\n-    memset(buf->mutable_data(), 0, buf->size());\n-  }\n+                  const ArrayData& input, ArrayData* output) {}\n };\n \n template <>\n@@ -199,14 +194,19 @@ struct CastFunctor<O, I, typename std::enable_if<std::is_same<BooleanType, O>::v\n                                                  !std::is_same<O, I>::value>::type> {\n   void operator()(FunctionContext* ctx, const CastOptions& options,\n                   const ArrayData& input, ArrayData* output) {\n-    using in_type = typename I::c_type;\n-    DCHECK_EQ(output->offset, 0);\n+    auto in_data = GetValues<typename I::c_type>(input, 1);\n+    internal::BitmapWriter writer(output->buffers[1]->mutable_data(), output->offset,\n+                                  input.length);\n \n-    const in_type* in_data = GetValues<in_type>(input, 1);\n-    uint8_t* out_data = GetMutableValues<uint8_t>(output, 1);\n     for (int64_t i = 0; i < input.length; ++i) {\n-      BitUtil::SetBitTo(out_data, i, (*in_data++) != 0);\n+      if (*in_data++ != 0) {\n+        writer.Set();\n+      } else {\n+        writer.Clear();\n+      }\n+      writer.Next();\n     }\n+    writer.Finish();\n   }\n };\n \n@@ -217,7 +217,6 @@ struct CastFunctor<O, I,\n                   const ArrayData& input, ArrayData* output) {\n     using in_type = typename I::c_type;\n     using out_type = typename O::c_type;\n-    DCHECK_EQ(output->offset, 0);\n \n     auto in_offset = input.offset;\n \n@@ -475,9 +474,10 @@ void UnpackFixedSizeBinaryDictionary(FunctionContext* ctx, const Array& indices,\n \n   const index_c_type* in = GetValues<index_c_type>(*indices.data(), 1);\n \n-  uint8_t* out = output->buffers[1]->mutable_data();\n   int32_t byte_width =\n       static_cast<const FixedSizeBinaryType&>(*output->type).byte_width();\n+\n+  uint8_t* out = output->buffers[1]->mutable_data() + byte_width * output->offset;\n   for (int64_t i = 0; i < indices.length(); ++i) {\n     if (valid_bits_reader.IsSet()) {\n       const uint8_t* value = dictionary.Value(in[i]);\n@@ -493,7 +493,7 @@ struct CastFunctor<\n     typename std::enable_if<std::is_base_of<FixedSizeBinaryType, T>::value>::type> {\n   void operator()(FunctionContext* ctx, const CastOptions& options,\n                   const ArrayData& input, ArrayData* output) {\n-    DictionaryArray dict_array(input.ShallowCopy());\n+    DictionaryArray dict_array(input.Copy());\n \n     const DictionaryType& type = static_cast<const DictionaryType&>(*input.type);\n     const DataType& values_type = *type.dictionary()->type();\n@@ -565,7 +565,7 @@ struct CastFunctor<T, DictionaryType,\n                    typename std::enable_if<std::is_base_of<BinaryType, T>::value>::type> {\n   void operator()(FunctionContext* ctx, const CastOptions& options,\n                   const ArrayData& input, ArrayData* output) {\n-    DictionaryArray dict_array(input.ShallowCopy());\n+    DictionaryArray dict_array(input.Copy());\n \n     const DictionaryType& type = static_cast<const DictionaryType&>(*input.type);\n     const DataType& values_type = *type.dictionary()->type();\n@@ -605,12 +605,10 @@ struct CastFunctor<T, DictionaryType,\n template <typename IndexType, typename c_type>\n void UnpackPrimitiveDictionary(const Array& indices, const c_type* dictionary,\n                                c_type* out) {\n-  using index_c_type = typename IndexType::c_type;\n-\n   internal::BitmapReader valid_bits_reader(indices.null_bitmap_data(), indices.offset(),\n                                            indices.length());\n \n-  const index_c_type* in = GetValues<index_c_type>(*indices.data(), 1);\n+  auto in = GetValues<typename IndexType::c_type>(*indices.data(), 1);\n   for (int64_t i = 0; i < indices.length(); ++i) {\n     if (valid_bits_reader.IsSet()) {\n       out[i] = dictionary[in[i]];\n@@ -627,7 +625,7 @@ struct CastFunctor<T, DictionaryType,\n                   const ArrayData& input, ArrayData* output) {\n     using c_type = typename T::c_type;\n \n-    DictionaryArray dict_array(input.ShallowCopy());\n+    DictionaryArray dict_array(input.Copy());\n \n     const DictionaryType& type = static_cast<const DictionaryType&>(*input.type);\n     const DataType& values_type = *type.dictionary()->type();\n@@ -638,7 +636,7 @@ struct CastFunctor<T, DictionaryType,\n \n     const c_type* dictionary = GetValues<c_type>(*type.dictionary()->data(), 1);\n \n-    auto out = reinterpret_cast<c_type*>(output->buffers[1]->mutable_data());\n+    auto out = GetMutableValues<c_type>(output, 1);\n     const Array& indices = *dict_array.indices();\n     switch (indices.type()->id()) {\n       case Type::INT8:\ndiff --git a/cpp/src/arrow/python/arrow_to_python.h b/cpp/src/arrow/python/arrow_to_python.h\nindex 9440ffb32..02a22f07d 100644\n--- a/cpp/src/arrow/python/arrow_to_python.h\n+++ b/cpp/src/arrow/python/arrow_to_python.h\n@@ -51,8 +51,8 @@ Status ReadSerializedObject(io::RandomAccessFile* src, SerializedPyObject* out);\n /// \\brief Reconstruct SerializedPyObject from representation produced by\n /// SerializedPyObject::GetComponents.\n ///\n-/// \\param[in] num_tensors\n-/// \\param[in] num_buffers\n+/// \\param[in] num_tensors number of tensors in the object\n+/// \\param[in] num_buffers number of buffers in the object\n /// \\param[in] data a list containing pyarrow.Buffer instances. Must be 1 +\n /// num_tensors * 2 + num_buffers in length\n /// \\param[out] out the reconstructed object\ndiff --git a/cpp/src/arrow/python/numpy_to_arrow.cc b/cpp/src/arrow/python/numpy_to_arrow.cc\nindex 0c0d1a9b3..0b1124d30 100644\n--- a/cpp/src/arrow/python/numpy_to_arrow.cc\n+++ b/cpp/src/arrow/python/numpy_to_arrow.cc\n@@ -765,7 +765,7 @@ Status NumPyConverter::ConvertObjectStrings() {\n   // If we saw PyBytes, convert everything to BinaryArray\n   if (global_have_bytes) {\n     for (size_t i = 0; i < out_arrays_.size(); ++i) {\n-      auto binary_data = out_arrays_[i]->data()->ShallowCopy();\n+      auto binary_data = out_arrays_[i]->data()->Copy();\n       binary_data->type = ::arrow::binary();\n       out_arrays_[i] = std::make_shared<BinaryArray>(binary_data);\n     }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-28T17:33:47.492+0000",
                    "updated": "2017-11-28T17:33:47.492+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lqmn:",
        "customfield_12314139": null
    }
}