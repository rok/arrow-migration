{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13285290",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290",
    "key": "ARROW-7858",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12583056",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12583056",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13285284",
                    "key": "ARROW-7857",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285284",
                    "fields": {
                        "summary": "[Python] Failing test with pandas master for extension type conversion",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12625351",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12625351",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13408877",
                    "key": "ARROW-14500",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13408877",
                    "fields": {
                        "summary": "[C++] Support casting from storage type to extension type",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12580456",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12580456",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13243927",
                    "key": "ARROW-5890",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243927",
                    "fields": {
                        "summary": "[C++][Python] Support ExtensionType arrays in more kernels",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7858/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404010",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T14:40:56.252+0000",
                    "updated": "2020-03-16T14:40:56.252+0000",
                    "started": "2020-03-16T14:40:56.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404010",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#issuecomment-599576884\n \n \n   https://issues.apache.org/jira/browse/ARROW-7858\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T14:46:44.738+0000",
                    "updated": "2020-03-16T14:46:44.738+0000",
                    "started": "2020-03-16T14:46:44.738+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404015",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#issuecomment-599590255\n \n \n   The test failure is related to #6632 \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T15:11:12.508+0000",
                    "updated": "2020-03-16T15:11:12.508+0000",
                    "started": "2020-03-16T15:11:12.507+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404032",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#issuecomment-600010257\n \n \n   Nice catch, it was caused by the identity shortcut. Added a separate kernel which handles the identity case properly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T11:05:29.939+0000",
                    "updated": "2020-03-17T11:05:29.939+0000",
                    "started": "2020-03-17T11:05:29.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404606",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393700868\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,42 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n \n Review comment:\n   This should probably also verify that the `storage_type` (and maybe the `extension_name`) is the same as the input type the kernel was constructed with.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T14:02:59.285+0000",
                    "updated": "2020-03-17T14:02:59.285+0000",
                    "started": "2020-03-17T14:02:59.284+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404731",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393698100\n \n \n\n ##########\n File path: python/pyarrow/tests/test_extension_type.py\n ##########\n @@ -168,6 +177,37 @@ def test_ext_array_pickling():\n         assert arr.storage.to_pylist() == [b\"foo\", b\"bar\"]\n \n \n+def test_cast_kernel_on_extension_arrays():\n+    # test array casting\n+    storage = pa.array([1, 2, 3, 4], pa.int64())\n+    arr = pa.ExtensionArray.from_storage(IntegerType(), storage)\n+\n+    cases = [\n+        (pa.int64(), pa.Int64Array),\n+        (pa.int32(), pa.Int32Array),\n+        (pa.int16(), pa.Int16Array),\n+        (pa.uint64(), pa.UInt64Array),\n+        (pa.uint32(), pa.UInt32Array),\n+        (pa.uint16(), pa.UInt16Array)\n+    ]\n+    for typ, klass in cases:\n+        casted = arr.cast(typ)\n+        assert casted.type == typ\n+        assert isinstance(casted, klass)\n+\n+    # test chunked array casting\n+    arr = pa.chunked_array([arr, arr])\n+    casted = arr.cast(pa.int16())\n+    assert casted.type == pa.int16()\n+    assert isinstance(casted, pa.ChunkedArray)\n+\n+\n+def test_casting_to_extension_type_raises():\n \n Review comment:\n   Please add some tests in C++, including at least one including a null slot and one verifying that `CastOptions` are propagated correctly (for example, casting from `IntegerType` to `int8` raises if one of the integers overflows `int8`)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T14:02:59.308+0000",
                    "updated": "2020-03-17T14:02:59.308+0000",
                    "started": "2020-03-17T14:02:59.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404732",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393912591\n \n \n\n ##########\n File path: python/pyarrow/tests/test_extension_type.py\n ##########\n @@ -168,6 +177,37 @@ def test_ext_array_pickling():\n         assert arr.storage.to_pylist() == [b\"foo\", b\"bar\"]\n \n \n+def test_cast_kernel_on_extension_arrays():\n+    # test array casting\n+    storage = pa.array([1, 2, 3, 4], pa.int64())\n+    arr = pa.ExtensionArray.from_storage(IntegerType(), storage)\n+\n+    cases = [\n+        (pa.int64(), pa.Int64Array),\n+        (pa.int32(), pa.Int32Array),\n+        (pa.int16(), pa.Int16Array),\n+        (pa.uint64(), pa.UInt64Array),\n+        (pa.uint32(), pa.UInt32Array),\n+        (pa.uint16(), pa.UInt16Array)\n+    ]\n+    for typ, klass in cases:\n+        casted = arr.cast(typ)\n+        assert casted.type == typ\n+        assert isinstance(casted, klass)\n+\n+    # test chunked array casting\n+    arr = pa.chunked_array([arr, arr])\n+    casted = arr.cast(pa.int16())\n+    assert casted.type == pa.int16()\n+    assert isinstance(casted, pa.ChunkedArray)\n+\n+\n+def test_casting_to_extension_type_raises():\n \n Review comment:\n   Added.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T19:16:42.783+0000",
                    "updated": "2020-03-17T19:16:42.783+0000",
                    "started": "2020-03-17T19:16:42.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404902",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393936506\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,62 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    const auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Init(const DataType& in_type) override {\n+    auto& type = checked_cast<const ExtensionType&>(in_type);\n+    storage_type_ = type.storage_type();\n+    extension_name_ = type.extension_name();\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+\n+    // validate: type is the same as the type the kernel was constructed with\n+    auto& input_type = checked_cast<const ExtensionType&>(*input.type());\n+    if (input_type.extension_name() != extension_name_) {\n+      return Status::TypeError(\"EEEE\");\n \n Review comment:\n   Add meaningful error messages.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:02:44.294+0000",
                    "updated": "2020-03-17T20:02:44.294+0000",
                    "started": "2020-03-17T20:02:44.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404931",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393938680\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,42 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n \n Review comment:\n   Updated.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:06:52.627+0000",
                    "updated": "2020-03-17T20:06:52.627+0000",
                    "started": "2020-03-17T20:06:52.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404935",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393938680\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,42 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n \n Review comment:\n   Updated - hopefully this is what you were thinking of.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:08:30.006+0000",
                    "updated": "2020-03-17T20:08:30.006+0000",
                    "started": "2020-03-17T20:08:30.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404936",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#issuecomment-600272997\n \n \n   @bkietz please take a look again\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:08:37.291+0000",
                    "updated": "2020-03-17T20:08:37.291+0000",
                    "started": "2020-03-17T20:08:37.290+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404937",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393949151\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,64 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    const auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Init(const DataType& in_type) override {\n+    auto& type = checked_cast<const ExtensionType&>(in_type);\n+    storage_type_ = type.storage_type();\n+    extension_name_ = type.extension_name();\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+\n+    // validate: type is the same as the type the kernel was constructed with\n+    auto& input_type = checked_cast<const ExtensionType&>(*input.type());\n \n Review comment:\n   ```suggestion\r\n       const auto& input_type = checked_cast<const ExtensionType&>(*input.type());\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:31:30.724+0000",
                    "updated": "2020-03-17T20:31:30.724+0000",
                    "started": "2020-03-17T20:31:30.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404947",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393950215\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,64 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    const auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Init(const DataType& in_type) override {\n+    auto& type = checked_cast<const ExtensionType&>(in_type);\n+    storage_type_ = type.storage_type();\n+    extension_name_ = type.extension_name();\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+\n+    // validate: type is the same as the type the kernel was constructed with\n+    auto& input_type = checked_cast<const ExtensionType&>(*input.type());\n+    if (input_type.extension_name() != extension_name_) {\n+      return Status::TypeError(\n+          \"The cast kernel was constructed with a differently named extension type\");\n \n Review comment:\n   This error message (and the one below for storage_type) can be more helpful:\r\n   ```suggestion\r\n             \"The cast kernel was constructed to cast from the extension type named '\", extension_name_, \r\n             \"' but input has named extension type name '\", input_type.extension_name(), \"'\");\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:31:30.895+0000",
                    "updated": "2020-03-17T20:31:30.895+0000",
                    "started": "2020-03-17T20:31:30.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404948",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393951111\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast_test.cc\n ##########\n @@ -1480,5 +1482,50 @@ TYPED_TEST(TestDictionaryCast, OutTypeError) {\n   this->CheckPass(*plain_array, *dict_array, dict_array->type(), options);\n }*/\n \n+std::shared_ptr<Array> SmallintArrayFromJSON(const std::string& json_data) {\n+  auto arr = ArrayFromJSON(int16(), json_data);\n+  auto ext_data = arr->data()->Copy();\n+  ext_data->type = smallint();\n+  return MakeArray(ext_data);\n+}\n+\n+TEST_F(TestCast, ExtensionTypeToIntDowncast) {\n \n Review comment:\n   :+1: \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:31:30.905+0000",
                    "updated": "2020-03-17T20:31:30.905+0000",
                    "started": "2020-03-17T20:31:30.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404949",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/404964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r393960909\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,64 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    const auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Init(const DataType& in_type) override {\n+    auto& type = checked_cast<const ExtensionType&>(in_type);\n+    storage_type_ = type.storage_type();\n+    extension_name_ = type.extension_name();\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+\n+    // validate: type is the same as the type the kernel was constructed with\n+    auto& input_type = checked_cast<const ExtensionType&>(*input.type());\n+    if (input_type.extension_name() != extension_name_) {\n+      return Status::TypeError(\n+          \"The cast kernel was constructed with a differently named extension type\");\n \n Review comment:\n   Indeed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:49:24.135+0000",
                    "updated": "2020-03-17T20:49:24.135+0000",
                    "started": "2020-03-17T20:49:24.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404964",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/405057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r394039066\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,64 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    const auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Init(const DataType& in_type) override {\n+    auto& type = checked_cast<const ExtensionType&>(in_type);\n+    storage_type_ = type.storage_type();\n+    extension_name_ = type.extension_name();\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+\n+    // validate: type is the same as the type the kernel was constructed with\n+    auto& input_type = checked_cast<const ExtensionType&>(*input.type());\n+    if (input_type.extension_name() != extension_name_) {\n+      return Status::TypeError(\n+          \"The cast kernel was constructed with a differently named extension type\");\n \n Review comment:\n   please also make the error for storage type verbose\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-18T00:06:13.214+0000",
                    "updated": "2020-03-18T00:06:13.214+0000",
                    "started": "2020-03-18T00:06:13.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "405057",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/405087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r394053641\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,66 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n \n Review comment:\n   I don't think this check is needed if this \"can't happen\" -- the checked_cast should be sufficient\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-18T01:11:27.753+0000",
                    "updated": "2020-03-18T01:11:27.753+0000",
                    "started": "2020-03-18T01:11:27.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "405087",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/405088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r394053327\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -1127,6 +1127,66 @@ class ZeroCopyCast : public CastKernelBase {\n   }\n };\n \n+class ExtensionCastKernel : public CastKernelBase {\n+ public:\n+  static Status Make(const DataType& in_type, std::shared_ptr<DataType> out_type,\n+                     const CastOptions& options,\n+                     std::unique_ptr<CastKernelBase>* kernel) {\n+    if (in_type.id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+    const auto storage_type = checked_cast<const ExtensionType&>(in_type).storage_type();\n+\n+    std::unique_ptr<UnaryKernel> storage_caster;\n+    RETURN_NOT_OK(GetCastFunction(*storage_type, out_type, options, &storage_caster));\n+    kernel->reset(\n+        new ExtensionCastKernel(std::move(storage_caster), std::move(out_type)));\n+\n+    return Status::OK();\n+  }\n+\n+  Status Init(const DataType& in_type) override {\n+    auto& type = checked_cast<const ExtensionType&>(in_type);\n+    storage_type_ = type.storage_type();\n+    extension_name_ = type.extension_name();\n+    return Status::OK();\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(input.kind(), Datum::ARRAY);\n+    if (input.type()->id() != Type::EXTENSION) {\n+      return Status::TypeError(\"Not an extension type\");\n+    }\n+\n+    // validate: type is the same as the type the kernel was constructed with\n+    const auto& input_type = checked_cast<const ExtensionType&>(*input.type());\n+    if (input_type.extension_name() != extension_name_) {\n+      return Status::TypeError(\n+          \"The cast kernel was constructed to cast from the extension type named '\",\n+          extension_name_, \"' but input has extension type named '\",\n+          input_type.extension_name(), \"'\");\n+    }\n+    if (!input_type.storage_type()->Equals(storage_type_)) {\n+      return Status::TypeError(\n+          \"The cast kernel was constructed with a different extension type\");\n+    }\n+\n+    // construct an ArrayData object with the underlying storage type\n+    auto new_input = input.array()->Copy();\n+    new_input->type = storage_type_;\n+    return InvokeWithAllocation(ctx, storage_caster_.get(), new_input, out);\n \n Review comment:\n   Does it allocate if the out_type and storage_type are the same?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-18T01:11:27.756+0000",
                    "updated": "2020-03-18T01:11:27.756+0000",
                    "started": "2020-03-18T01:11:27.756+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "405088",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/405089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#discussion_r394054600\n \n \n\n ##########\n File path: cpp/src/arrow/testing/gtest_util.cc\n ##########\n @@ -382,11 +382,7 @@ void SleepFor(double seconds) {\n // Extension types\n \n bool UUIDType::ExtensionEquals(const ExtensionType& other) const {\n-  const auto& other_ext = static_cast<const ExtensionType&>(other);\n-  if (other_ext.extension_name() != this->extension_name()) {\n-    return false;\n-  }\n-  return true;\n+  return (other.extension_name() == this->extension_name());\n }\n \n Review comment:\n   I wonder if this should be the default implementation of `ExtensionEquals`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-18T01:11:27.765+0000",
                    "updated": "2020-03-18T01:11:27.765+0000",
                    "started": "2020-03-18T01:11:27.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "405089",
                    "issueId": "13285290"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/worklog/405090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6633: ARROW-7858: [C++][Python] Support casting an Extension type to its storage type\nURL: https://github.com/apache/arrow/pull/6633#issuecomment-600374698\n \n \n   There was more C++ code in the implementation than I expected, not sure what could be done to make implementing something that \"seems easy\" (on paper) easier\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-18T01:12:44.627+0000",
                    "updated": "2020-03-18T01:12:44.627+0000",
                    "started": "2020-03-18T01:12:44.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "405090",
                    "issueId": "13285290"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e3ef934[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fc07a8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6402c2c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6166ba0b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5345f84e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48fd0e53[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f5b7a2c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1bb9272e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67422b9f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@47ed3eb2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53f3a679[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1a16b7e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 18 23:49:12 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-18T23:49:12.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7858/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-02-14T09:32:24.000+0000",
        "updated": "2021-10-28T10:51:50.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, casting an extension type will always fail: \"No cast implemented from extension<arrow.py_extension_type> to ...\".\r\n\r\nHowever, for casting, we could fall back to the storage array's casting rules?\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python] Support casting an Extension type to its storage type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285290/comment/17062161",
                    "id": "17062161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6633\n[https://github.com/apache/arrow/pull/6633]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-18T23:49:12.217+0000",
                    "updated": "2020-03-18T23:49:12.217+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0bhso:",
        "customfield_12314139": null
    }
}