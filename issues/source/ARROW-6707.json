{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13259034",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034",
    "key": "ARROW-6707",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6707/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 55,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/318929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508\n \n \n   JDBC meta data has a field that indicates if a column can contain null. We can make use of this information when transforming jdbc data to arrow vectors.\r\n   \r\n   In particular, if the column cannot have null, there is no need to call the JDBC API for each value to check if the last value is null.\r\n   \r\n   This will improve the performance of transforming JDBC data to arrow vectors.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-26T12:28:20.250+0000",
                    "updated": "2019-09-26T12:28:20.250+0000",
                    "started": "2019-09-26T12:28:20.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "318929",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/318972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535507223\n \n \n   @liyafan82, @tianchen92 added a benchmark for these tests can you post the performance difference?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-26T13:41:46.188+0000",
                    "updated": "2019-09-26T13:41:46.188+0000",
                    "started": "2019-09-26T13:41:46.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "318972",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535832777\n \n \n   > @liyafan82, @tianchen92 added a benchmark for these tests can you post the performance difference?\r\n   \r\n   @emkornfield I created a new benchmark to evaluate the performance of consumer directly. The improvement is not significant:\r\n   \r\n   after: JdbcAdapterBenchmarks.consumeBenchmark  avgt    5  77326.747 \u00b1 218.829  ns/op\r\n   before: JdbcAdapterBenchmarks.consumeBenchmark  avgt    5  79007.087 \u00b1 63.994  ns/op\r\n   \r\n   I think there are two reasons for this:\r\n   1. in our benchmark, the jdbc implementation is based on h2, and for this library the wasNull method implementation was simple: \r\n   \r\n       @Override\r\n       public boolean wasNull() throws SQLException {\r\n           try {\r\n               debugCodeCall(\"wasNull\");\r\n               checkClosed();\r\n               return wasNull;\r\n           } catch (Exception e) {\r\n               throw logAndConvert(e);\r\n           }\r\n       }\r\n   \r\n   It can be seen that the implementation is based on a simple flag, plus some simple checks. For other implementations with other RDBs, the implementation can be more heavy. For example, the following code gives the implementation of MySQL JDBC, which may involve megamorphic virtual calls:\r\n   \r\n     public boolean wasNull() throws SQLException {\r\n       try {\r\n         return this.thisRow.wasNull();\r\n       } catch (CJException var2) {\r\n         throw SQLExceptionsMapping.translateException(var2, this.getExceptionInterceptor());\r\n       }\r\n     }\r\n   \r\n   2. The time for wasNull method was insignificant compared with the Arrow set methods.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T07:50:06.393+0000",
                    "updated": "2019-09-27T07:50:06.393+0000",
                    "started": "2019-09-27T07:50:06.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319387",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535834561\n \n \n   > JDBC meta data has a field that indicates if a column can contain null. We can make use of this information when transforming jdbc data to arrow vectors.\r\n   > \r\n   > In particular, if the column cannot have null, there is no need to call the JDBC API for each value to check if the last value is null.\r\n   > \r\n   > This will improve the performance of transforming JDBC data to arrow vectors.\r\n   \r\n   @emkornfield \r\n   There is another reason that I created a new benchmark for performance evaluation. There are some problems with the existing benchmark (testJdbcToArrow). \r\n   \r\n   In addition to some resource leaks with the allocator, statement, result set, the existing benchmark actually only run once during JMH evaluation. This is because once the result set goes to the end, it has no change of going back in the beginning. So subsequent calls to the benchmark method will return immediately. In a JMH evaluation, a benchmark is expected to run many times to get the colletion of statistics.  \r\n   \r\n   A possible solution to this problem is to populate the result set each time the benchmark is invoked. However, the collected time will include the time for querying the data, and we are only interested in the time of the adapter alone. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T07:55:25.301+0000",
                    "updated": "2019-09-27T07:55:25.301+0000",
                    "started": "2019-09-27T07:55:25.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319389",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535847172\n \n \n   > > JDBC meta data has a field that indicates if a column can contain null. We can make use of this information when transforming jdbc data to arrow vectors.\r\n   > > In particular, if the column cannot have null, there is no need to call the JDBC API for each value to check if the last value is null.\r\n   > > This will improve the performance of transforming JDBC data to arrow vectors.\r\n   > \r\n   > @emkornfield\r\n   > There is another reason that I created a new benchmark for performance evaluation. There are some problems with the existing benchmark (testJdbcToArrow).\r\n   > \r\n   > In addition to some resource leaks with the allocator, statement, result set, the existing benchmark actually only run once during JMH evaluation. This is because once the result set goes to the end, it has no change of going back in the beginning. So subsequent calls to the benchmark method will return immediately. In a JMH evaluation, a benchmark is expected to run many times to get the colletion of statistics.\r\n   > \r\n   > A possible solution to this problem is to populate the result set each time the benchmark is invoked. However, the collected time will include the time for querying the data, and we are only interested in the time of the adapter alone.\r\n   \r\n   Good catch!  I just wondered why the perf result i tested before is so strange.\r\n   For the solution, I think we could reset the pointer to the beginning like:\r\n   >resultSet = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY).executeQuery(QUERY);\r\n   \r\n   and just call resultSet.beforeFirst() in test method.\r\n   You may want to have a try?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T08:32:39.556+0000",
                    "updated": "2019-09-27T08:32:39.556+0000",
                    "started": "2019-09-27T08:32:39.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319399",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535879858\n \n \n   > > > JDBC meta data has a field that indicates if a column can contain null. We can make use of this information when transforming jdbc data to arrow vectors.\r\n   > > > In particular, if the column cannot have null, there is no need to call the JDBC API for each value to check if the last value is null.\r\n   > > > This will improve the performance of transforming JDBC data to arrow vectors.\r\n   > > \r\n   > > \r\n   > > @emkornfield\r\n   > > There is another reason that I created a new benchmark for performance evaluation. There are some problems with the existing benchmark (testJdbcToArrow).\r\n   > > In addition to some resource leaks with the allocator, statement, result set, the existing benchmark actually only run once during JMH evaluation. This is because once the result set goes to the end, it has no change of going back in the beginning. So subsequent calls to the benchmark method will return immediately. In a JMH evaluation, a benchmark is expected to run many times to get the colletion of statistics.\r\n   > > A possible solution to this problem is to populate the result set each time the benchmark is invoked. However, the collected time will include the time for querying the data, and we are only interested in the time of the adapter alone.\r\n   > \r\n   > Good catch! I just wondered why the perf result i tested before is so strange.\r\n   > For the solution, I think we could reset the pointer to the beginning like:\r\n   > \r\n   > > resultSet = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY).executeQuery(QUERY);\r\n   > \r\n   > and just call resultSet.beforeFirst() in test method.\r\n   > You may want to have a try?\r\n   \r\n   @tianchen92 Thanks for the suggestion.\r\n   So far, I have not find a way to make it working. Will take a closer look later.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T10:10:58.668+0000",
                    "updated": "2019-09-27T10:10:58.668+0000",
                    "started": "2019-09-27T10:10:58.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319468",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535921462\n \n \n   It seems JDBC interface provides an API (beforeFirst) to reset the ResultSet. \r\n   However, not all implementations support it, because the data volume of a ResultSet can be large.\r\n   For our particular implementation (h2), it throws an exception: \r\n   \r\n   org.h2.jdbc.JdbcSQLException: The result set is not scrollable and can not be reset.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T12:38:07.939+0000",
                    "updated": "2019-09-27T12:38:07.939+0000",
                    "started": "2019-09-27T12:38:07.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319517",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535924884\n \n \n   > It seems JDBC interface provides an API (beforeFirst) to reset the ResultSet.\r\n   > However, not all implementations support it, because the data volume of a ResultSet can be large.\r\n   > For our particular implementation (h2), it throws an exception:\r\n   > \r\n   > org.h2.jdbc.JdbcSQLException: The result set is not scrollable and can not be reset.\r\n   \r\n   Hmm, I believe I have tested locally and it worked, do you have created Statement by passing special flags this way:\r\n   >resultSet = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY).executeQuery(QUERY);\r\n   \r\n   If it really not work, I would like to pull your branch and take a look tomorrow :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T12:48:39.131+0000",
                    "updated": "2019-09-27T12:48:39.131+0000",
                    "started": "2019-09-27T12:48:39.131+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319522",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/319523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-535925566\n \n \n   > > It seems JDBC interface provides an API (beforeFirst) to reset the ResultSet.\r\n   > > However, not all implementations support it, because the data volume of a ResultSet can be large.\r\n   > > For our particular implementation (h2), it throws an exception:\r\n   > > org.h2.jdbc.JdbcSQLException: The result set is not scrollable and can not be reset.\r\n   > \r\n   > Hmm, I believe I have tested locally and it worked, do you have created Statement by passing special flags this way:\r\n   > \r\n   > > resultSet = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY).executeQuery(QUERY);\r\n   > \r\n   > If it really not work, I would like to pull your branch and take a look tomorrow :)\r\n   \r\n   I did not set the flag accordingly, will try it later.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T12:50:49.757+0000",
                    "updated": "2019-09-27T12:50:49.757+0000",
                    "started": "2019-09-27T12:50:49.756+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319523",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/320138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-536264794\n \n \n   I have fixed the problem with the benchmark by setting the proper levels and scopes of the benchmark parameters. Please take a look.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T07:53:49.997+0000",
                    "updated": "2019-09-29T07:53:49.997+0000",
                    "started": "2019-09-29T07:53:49.997+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320138",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/320156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-536269942\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=h1) Report\n   > Merging [#5508](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/46a14db8ae4b77da3f29065304badbeb84cbddf6?src=pr&el=desc) will **increase** coverage by `1.17%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5508/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5508      +/-   ##\n   ==========================================\n   + Coverage    88.7%   89.87%   +1.17%     \n   ==========================================\n     Files         964      596     -368     \n     Lines      128215    82991   -45224     \n     Branches     1501        0    -1501     \n   ==========================================\n   - Hits       113731    74590   -39141     \n   + Misses      14119     8401    -5718     \n   + Partials      365        0     -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0% <0%> (-94.83%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter\\_util.cc](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlcl91dGlsLmNj) | `15.74% <0%> (-64.97%)` | :arrow_down: |\n   | [cpp/src/arrow/util/cpu\\_info.h](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NwdV9pbmZvLmg=) | `0% <0%> (-50%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/options.h](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3Yvb3B0aW9ucy5o) | `66.66% <0%> (-33.34%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxh3.h](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoMy5o) | `16.75% <0%> (-29.85%)` | :arrow_down: |\n   | [cpp/src/parquet/column\\_scanner.cc](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9zY2FubmVyLmNj) | `55% <0%> (-25%)` | :arrow_down: |\n   | [cpp/src/arrow/extension\\_type.cc](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9leHRlbnNpb25fdHlwZS5jYw==) | `75.4% <0%> (-24.6%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `53.21% <0%> (-20.19%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `52.6% <0%> (-19.8%)` | :arrow_down: |\n   | ... and [438 more](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=footer). Last update [46a14db...5bb66e0](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T08:36:03.320+0000",
                    "updated": "2019-09-29T08:36:03.320+0000",
                    "started": "2019-09-29T08:36:03.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320156",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/320255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-536329784\n \n \n   https://issues.apache.org/jira/browse/ARROW-6707\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T18:46:11.898+0000",
                    "updated": "2019-09-29T18:46:11.898+0000",
                    "started": "2019-09-29T18:46:11.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320255",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/322985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-538148053\n \n \n   This seems ready for review. @emkornfield?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T22:07:55.669+0000",
                    "updated": "2019-10-03T22:07:55.669+0000",
                    "started": "2019-10-03T22:07:55.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322985",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/323737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-538563214\n \n \n   Thank you for fixing the benchmark.  I'm still not clear on the tradeoffs here:\r\n   \r\n   1.  The performance tests only seem to test the case for not-null directly?  What overhead does it incur for not-null columns?  \r\n   2.  If the overhead of the set methods is the major driver of performance, then is this likely to have a real-world impact?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-04T21:18:29.714+0000",
                    "updated": "2019-10-04T21:18:29.714+0000",
                    "started": "2019-10-04T21:18:29.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323737",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/324004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-536269942\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=h1) Report\n   > Merging [#5508](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/af097e67ac1f06aa8c9ed3f5d60d21816e820fc0?src=pr&el=desc) will **increase** coverage by `1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5508/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5508      +/-   ##\n   ==========================================\n   + Coverage   88.79%    89.8%      +1%     \n   ==========================================\n     Files         983      732     -251     \n     Lines      132170   112106   -20064     \n     Branches     1501        0    -1501     \n   ==========================================\n   - Hits       117362   100677   -16685     \n   + Misses      14443    11429    -3014     \n   + Partials      365        0     -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/filesystem/s3\\_internal.h](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3MzX2ludGVybmFsLmg=) | `90.74% <0%> (-3.71%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [r/R/filesystem.R](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-ci9SL2ZpbGVzeXN0ZW0uUg==) | | |\n   | [r/R/list.R](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-ci9SL2xpc3QuUg==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [r/src/array\\_to\\_vector.cpp](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-ci9zcmMvYXJyYXlfdG9fdmVjdG9yLmNwcA==) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | [js/src/builder/index.ts](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-anMvc3JjL2J1aWxkZXIvaW5kZXgudHM=) | | |\n   | [r/src/arrow\\_types.h](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dfdHlwZXMuaA==) | | |\n   | ... and [242 more](https://codecov.io/gh/apache/arrow/pull/5508/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=footer). Last update [af097e6...f691e90](https://codecov.io/gh/apache/arrow/pull/5508?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-06T02:35:58.838+0000",
                    "updated": "2019-10-06T02:35:58.838+0000",
                    "started": "2019-10-06T02:35:58.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324004",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/324859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-539339139\n \n \n   > Thank you for fixing the benchmark. I'm still not clear on the tradeoffs here:\r\n   > \r\n   > 1. The performance tests only seem to test the case for not-null directly?  What overhead does it incur for not-null columns?\r\n   \r\n   Good point. I reran the benchmarks to evaluate the overhead of the nullable flag. The results were unstable, so I ran each experiment 3 times and calculated the average.\r\n   \r\n   The results are conter-intuitive: when the flag is absent, the average time is 80.871 us. However, when the flag is added, the average time is 79.310 us. \r\n   \r\n   It seems the results were cause by noise or the specific implementation of h2 jdbc driver. However, it may indicate that the flag does not incurr much performance overhead.\r\n   \r\n   > 2. If the overhead of the set methods is the major driver of performance, then is this likely to have a real-world impact?\r\n   \r\n   I think the impact depends on the specific jdbc implementation. For h2, the implementation is light-weight, so the impact is small. For other heavy-weight implementationd, the impact can be notable. Given that it is extremely efficient to evaluate a boolean (in the magnitude of nano-seconds), I think at least we have nothing to lose, regardless of the jdbc implementation. \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T05:41:09.587+0000",
                    "updated": "2019-10-08T05:41:09.587+0000",
                    "started": "2019-10-08T05:41:09.587+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324859",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/326279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-540555350\n \n \n   For the previous implementation/commits, it seems JIT fails to remove the branch statement, even if the nullable flag is declared as final.\r\n   Therefore, in the current implementation/commit, I have revised the code to provide separate sub-classes for the nullable and non-nullable scenarios. This leads to a performance improvement of 20+%:\r\n   \r\n   Before:\r\n   JdbcAdapterBenchmarks.consumeBenchmark  avgt    5    76.391 \u00b1   0.062  us/op\r\n   \r\n   After:\r\n   JdbcAdapterBenchmarks.consumeBenchmark  avgt    5    58.126 \u00b1   0.022  us/op\r\n   \r\n   However, this is at the expense of much duplicated code. \r\n   Please see if it looks good. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-10T12:42:39.845+0000",
                    "updated": "2019-10-10T12:42:39.845+0000",
                    "started": "2019-10-10T12:42:39.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "326279",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/328345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-542051340\n \n \n   > However, this is at the expense of much duplicated code.\r\n   > Please see if it looks good.\r\n   I think you can eliminate a lot of duplicate code by moving most of the code in a base class, then having each Nullable and NonNullable subclasses override a single method of wasNull(ResultSet rs).  NonNullable would always return false false and nullable would actually check the result set.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-15T06:02:09.122+0000",
                    "updated": "2019-10-15T06:02:09.122+0000",
                    "started": "2019-10-15T06:02:09.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "328345",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/328482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-542168791\n \n \n   > > However, this is at the expense of much duplicated code.\r\n   > > Please see if it looks good.\r\n   > > I think you can eliminate a lot of duplicate code by moving most of the code in a base class, then having each Nullable and NonNullable subclasses override a single method of wasNull(ResultSet rs).  NonNullable would always return false false and nullable would actually check the result set.\r\n   \r\n   @emkornfield Thanks for the suggestion. \r\n   If I understand your point correctly, this will require a if statement in the consume methods, which is expensive. The 20+% performance improvement mainly comes from removing the if statement. JIT cannot remove it.\r\n   \r\n   I may try other methods to reduce duplicate code. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-15T11:35:24.470+0000",
                    "updated": "2019-10-15T11:35:24.470+0000",
                    "started": "2019-10-15T11:35:24.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "328482",
                    "issueId": "13259034"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/worklog/328944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5508: ARROW-6707: [Java] Improve the performance of JDBC adapters by using nullable information\nURL: https://github.com/apache/arrow/pull/5508#issuecomment-542525803\n \n \n   If I understand the assembly correctly this [gist](https://gist.github.com/emkornfield/856447e3f6a2ac9789481635122f16f7) seems to indicate inlining can occur.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-16T05:38:17.355+0000",
                    "updated": "2019-10-16T05:38:17.355+0000",
                    "started": "2019-10-16T05:38:17.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "328944",
                    "issueId": "13259034"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 33000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2a35fdf0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d449cf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14894f89[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@34b3e6e6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41c64c17[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@67e7491b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@394cb769[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@12e3e270[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6136b2cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3cc48063[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@606f8f6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6d921172[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 14 05:50:53 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-14T05:50:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6707/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-09-26T12:19:37.000+0000",
        "updated": "2019-11-14T06:27:45.000+0000",
        "timeoriginalestimate": null,
        "description": "JDBC meta data has a field that indicates if a column can contain null. We can make use of this information when transforming jdbc data to arrow vectors.\r\n\r\nIn particular, if the column cannot have null, there is no need to call the JDBC API for each value to check if the last value is null. \r\n\r\nThis will improve the performance of transforming JDBC data to arrow vectors. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Improve the performance of JDBC adapters by using nullable information",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259034/comment/16973943",
                    "id": "16973943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5508\n[https://github.com/apache/arrow/pull/5508]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-11-14T05:50:53.684+0000",
                    "updated": "2019-11-14T05:50:53.684+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z071nk:",
        "customfield_12314139": null
    }
}