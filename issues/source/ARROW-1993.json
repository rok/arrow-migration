{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13130678",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678",
    "key": "ARROW-1993",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "beginner",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1993/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/94524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-383852131\n \n \n   cc @fjetter and @crepererum: This might be interesting for you. This is a first iteration of extracting Arrow schemas from Pandas DataFrames without doing the full conversion. It still does the conversion on `object` columns but I would add a follow-up PR that exposes some of the type guessing functions from C++ here so that we can call them instead of the full conversion.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-24T08:41:31.933+0000",
                    "updated": "2018-04-24T08:41:31.933+0000",
                    "started": "2018-04-24T08:41:31.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "94524",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/111289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-396743081\n \n \n   @keechongtan could you rebase this? I can try to take a closer look soon\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-12T21:38:18.862+0000",
                    "updated": "2018-06-12T21:38:18.862+0000",
                    "started": "2018-06-12T21:38:18.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111289",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/112340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "keechongtan commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-397635285\n \n \n   @wesm rebased. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T14:17:16.043+0000",
                    "updated": "2018-06-15T14:17:16.043+0000",
                    "started": "2018-06-15T14:17:16.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112340",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/117406",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-401378409\n \n \n   Hi @keechongtan, thanks for posting the PR! I haven't taken a detailed look at your code yet, but there seem to be some problems (perhaps due to rebasing?):\r\n   - the `flake8` step fails on Travis-CI\r\n   - the `_ndarray_to_array` and `from_pandas` functions seem duplicated\r\n   - Cython compilation fails (both on AppVeyor and Travis-CI)\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-29T14:51:50.928+0000",
                    "updated": "2018-06-29T14:51:50.928+0000",
                    "started": "2018-06-29T14:51:50.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "117406",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/167374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-439887063\n \n \n   @pitrou @wesm I made this PR up to date. \r\n   \r\n   I intend to refactor the pandas_compat module afterwards, because it's pretty hard to follow what happens there.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T13:09:08.266+0000",
                    "updated": "2018-11-19T13:09:08.266+0000",
                    "started": "2018-11-19T13:09:08.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167374",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/167375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs edited a comment on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-439887063\n \n \n   @pitrou @wesm I made this PR up to date. \r\n   \r\n   I intend to refactor the pandas_compat module afterwards, because it's pretty hard to follow what happens there. Luckily its coverage is good https://codecov.io/gh/apache/arrow/src/master/python/pyarrow/pandas_compat.py\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T13:09:49.398+0000",
                    "updated": "2018-11-19T13:09:49.398+0000",
                    "started": "2018-11-19T13:09:49.397+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167375",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/167443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-439955294\n \n \n   I will have a look\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T16:30:46.515+0000",
                    "updated": "2018-11-19T16:30:46.515+0000",
                    "started": "2018-11-19T16:30:46.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167443",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-441445637\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=h1) Report\n   > Merging [#1929](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/72817313a65ca9c29a9bcf0ced000bda6cc9f4e3?src=pr&el=desc) will **increase** coverage by `1.04%`.\n   > The diff coverage is `88.09%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/1929/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #1929      +/-   ##\n   ==========================================\n   + Coverage   86.99%   88.03%   +1.04%     \n   ==========================================\n     Files         494      425      -69     \n     Lines       70410    64845    -5565     \n   ==========================================\n   - Hits        61253    57089    -4164     \n   + Misses       9061     7756    -1305     \n   + Partials       96        0      -96\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_types.py](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90eXBlcy5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `97.98% <100%> (+0.1%)` | :arrow_up: |\n   | [python/pyarrow/array.pxi](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvYXJyYXkucHhp) | `69.01% <57.14%> (-0.11%)` | :arrow_down: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `60.09% <77.77%> (+0.25%)` | :arrow_up: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | ... and [65 more](https://codecov.io/gh/apache/arrow/pull/1929/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=footer). Last update [7281731...3544e42](https://codecov.io/gh/apache/arrow/pull/1929?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T14:44:41.706+0000",
                    "updated": "2018-11-25T14:44:41.706+0000",
                    "started": "2018-11-25T14:44:41.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169203",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169239",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#discussion_r236092324\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -365,6 +364,44 @@ def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n         name = _index_level_name(column, i, column_names)\n         index_column_names.append(name)\n \n+    names = column_names + index_column_names\n+\n+    return (names, column_names, index_columns, index_column_names,\n+            columns_to_convert, convert_types)\n+\n+\n+def dataframe_to_types(df, preserve_index, columns=None):\n+    names, column_names, index_columns, index_column_names, \\\n+        columns_to_convert, _ = _get_columns_to_convert(\n+            df, None, preserve_index, columns\n+        )\n+\n+    types = []\n+    # If pandas knows type, skip conversion\n+    for c in columns_to_convert:\n+        values = c.values\n+        if isinstance(c.values, pd.Categorical):\n+            type_ = pa.array(c, from_pandas=True).type\n+        else:\n+            values, type_ = get_datetimetz_type(values, c.dtype, None)\n+            type_ = pa.lib._ndarray_to_arrow_type(values, type_)\n+            if type_ is None:\n+                type_ = pa.array(c, from_pandas=True).type\n+        types.append(type_)\n \n Review comment:\n   Well, this is certainly not cheap to compute in all cases. I think it's fine to focus on getting the API and behavior correct, then focusing later on performance\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:10:14.036+0000",
                    "updated": "2018-11-25T22:10:14.036+0000",
                    "started": "2018-11-25T22:10:14.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169239",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#discussion_r236092382\n \n \n\n ##########\n File path: python/pyarrow/types.pxi\n ##########\n @@ -591,6 +591,45 @@ cdef class Schema:\n         return self.sp_schema.get().Equals(deref(_other.schema),\n                                            check_metadata)\n \n+    @classmethod\n+    def from_pandas(cls, df, bint preserve_index=True):\n+        \"\"\"\n+        Returns implied schema from dataframe\n+\n+        Parameters\n+        ----------\n+        df : pandas.DataFrame\n+        preserve_index : bool, optional\n+            Whether to store the index as an additional column in the resulting\n+            ``Table``.\n+\n+        Returns\n+        -------\n+        pyarrow.Schema\n+\n+        Examples\n+        --------\n+\n+        >>> import pandas as pd\n+        >>> import pyarrow as pa\n+        >>> df = pd.DataFrame({\n+            ...     'int': [1, 2],\n+            ...     'str': ['a', 'b']\n+            ... })\n+        >>> pa.Schema.from_pandas(df)\n+        int: int64\n+        str: string\n+        __index_level_0__: int64\n \n Review comment:\n   Do you want to add an example of this to the Sphinx documentation?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:10:14.037+0000",
                    "updated": "2018-11-25T22:10:14.037+0000",
                    "started": "2018-11-25T22:10:14.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169240",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169241",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#discussion_r236092364\n \n \n\n ##########\n File path: python/pyarrow/types.pxi\n ##########\n @@ -591,6 +591,45 @@ cdef class Schema:\n         return self.sp_schema.get().Equals(deref(_other.schema),\n                                            check_metadata)\n \n+    @classmethod\n+    def from_pandas(cls, df, bint preserve_index=True):\n+        \"\"\"\n+        Returns implied schema from dataframe\n+\n+        Parameters\n+        ----------\n+        df : pandas.DataFrame\n+        preserve_index : bool, optional\n+            Whether to store the index as an additional column in the resulting\n \n Review comment:\n   Maybe add \"(or columns, for MultiIndex)\"\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:10:14.299+0000",
                    "updated": "2018-11-25T22:10:14.299+0000",
                    "started": "2018-11-25T22:10:14.297+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169241",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#discussion_r236161055\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -365,6 +364,44 @@ def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n         name = _index_level_name(column, i, column_names)\n         index_column_names.append(name)\n \n+    names = column_names + index_column_names\n+\n+    return (names, column_names, index_columns, index_column_names,\n+            columns_to_convert, convert_types)\n+\n+\n+def dataframe_to_types(df, preserve_index, columns=None):\n+    names, column_names, index_columns, index_column_names, \\\n+        columns_to_convert, _ = _get_columns_to_convert(\n+            df, None, preserve_index, columns\n+        )\n+\n+    types = []\n+    # If pandas knows type, skip conversion\n+    for c in columns_to_convert:\n+        values = c.values\n+        if isinstance(c.values, pd.Categorical):\n+            type_ = pa.array(c, from_pandas=True).type\n+        else:\n+            values, type_ = get_datetimetz_type(values, c.dtype, None)\n+            type_ = pa.lib._ndarray_to_arrow_type(values, type_)\n+            if type_ is None:\n+                type_ = pa.array(c, from_pandas=True).type\n+        types.append(type_)\n \n Review comment:\n   Yeah, my intention is to finalize this PR and improve it later.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T08:43:46.078+0000",
                    "updated": "2018-11-26T08:43:46.078+0000",
                    "started": "2018-11-26T08:43:46.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169296",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#discussion_r236164731\n \n \n\n ##########\n File path: python/pyarrow/types.pxi\n ##########\n @@ -591,6 +591,45 @@ cdef class Schema:\n         return self.sp_schema.get().Equals(deref(_other.schema),\n                                            check_metadata)\n \n+    @classmethod\n+    def from_pandas(cls, df, bint preserve_index=True):\n+        \"\"\"\n+        Returns implied schema from dataframe\n+\n+        Parameters\n+        ----------\n+        df : pandas.DataFrame\n+        preserve_index : bool, optional\n+            Whether to store the index as an additional column in the resulting\n+            ``Table``.\n+\n+        Returns\n+        -------\n+        pyarrow.Schema\n+\n+        Examples\n+        --------\n+\n+        >>> import pandas as pd\n+        >>> import pyarrow as pa\n+        >>> df = pd.DataFrame({\n+            ...     'int': [1, 2],\n+            ...     'str': ['a', 'b']\n+            ... })\n+        >>> pa.Schema.from_pandas(df)\n+        int: int64\n+        str: string\n+        __index_level_0__: int64\n \n Review comment:\n   pandas.rst lacks of examples, so just mentioned it :) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T08:55:22.997+0000",
                    "updated": "2018-11-26T08:55:22.997+0000",
                    "started": "2018-11-26T08:55:22.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169299",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929#issuecomment-441657271\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T14:29:01.310+0000",
                    "updated": "2018-11-26T14:29:01.310+0000",
                    "started": "2018-11-26T14:29:01.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169343",
                    "issueId": "13130678"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/worklog/169344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/doc/source/pandas.rst b/python/doc/source/pandas.rst\nindex be11b5be02..6ade17185a 100644\n--- a/python/doc/source/pandas.rst\n+++ b/python/doc/source/pandas.rst\n@@ -52,6 +52,8 @@ Conversion from a Table to a DataFrame is done by calling\n     # Convert back to pandas\n     df_new = table.to_pandas()\n \n+    # Infer Arrow schema from pandas\n+    schema = pa.Schema.from_pandas(df)\n \n Series\n ------\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex c3a17a1a46..b86872f7ea 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -49,12 +49,13 @@ cdef _is_array_like(obj):\n         return isinstance(obj, np.ndarray)\n \n \n-cdef _ndarray_to_array(object values, object mask, DataType type,\n-                       c_bool from_pandas, c_bool safe, CMemoryPool* pool):\n-    cdef:\n-        shared_ptr[CChunkedArray] chunked_out\n-        shared_ptr[CDataType] c_type\n-        CCastOptions cast_options = CCastOptions(safe)\n+def _ndarray_to_arrow_type(object values, DataType type):\n+    return pyarrow_wrap_data_type(_ndarray_to_type(values, type))\n+\n+\n+cdef shared_ptr[CDataType] _ndarray_to_type(object values,\n+                                            DataType type) except *:\n+    cdef shared_ptr[CDataType] c_type\n \n     dtype = values.dtype\n \n@@ -65,6 +66,16 @@ cdef _ndarray_to_array(object values, object mask, DataType type,\n     if type is not None:\n         c_type = type.sp_type\n \n+    return c_type\n+\n+\n+cdef _ndarray_to_array(object values, object mask, DataType type,\n+                       c_bool from_pandas, c_bool safe, CMemoryPool* pool):\n+    cdef:\n+        shared_ptr[CChunkedArray] chunked_out\n+        shared_ptr[CDataType] c_type = _ndarray_to_type(values, type)\n+        CCastOptions cast_options = CCastOptions(safe)\n+\n     with nogil:\n         check_status(NdarrayToArrow(pool, values, mask, from_pandas,\n                                     c_type, cast_options, &chunked_out))\ndiff --git a/python/pyarrow/pandas_compat.py b/python/pyarrow/pandas_compat.py\nindex 9344e46eec..ec0e490291 100644\n--- a/python/pyarrow/pandas_compat.py\n+++ b/python/pyarrow/pandas_compat.py\n@@ -316,8 +316,7 @@ def _index_level_name(index, i, column_names):\n         return '__index_level_{:d}__'.format(i)\n \n \n-def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n-                        safe=True):\n+def _get_columns_to_convert(df, schema, preserve_index, columns):\n     if schema is not None and columns is not None:\n         raise ValueError('Schema and columns arguments are mutually '\n                          'exclusive, pass only one of them')\n@@ -365,6 +364,44 @@ def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n         name = _index_level_name(column, i, column_names)\n         index_column_names.append(name)\n \n+    names = column_names + index_column_names\n+\n+    return (names, column_names, index_columns, index_column_names,\n+            columns_to_convert, convert_types)\n+\n+\n+def dataframe_to_types(df, preserve_index, columns=None):\n+    names, column_names, index_columns, index_column_names, \\\n+        columns_to_convert, _ = _get_columns_to_convert(\n+            df, None, preserve_index, columns\n+        )\n+\n+    types = []\n+    # If pandas knows type, skip conversion\n+    for c in columns_to_convert:\n+        values = c.values\n+        if isinstance(values, pd.Categorical):\n+            type_ = pa.array(c, from_pandas=True).type\n+        else:\n+            values, type_ = get_datetimetz_type(values, c.dtype, None)\n+            type_ = pa.lib._ndarray_to_arrow_type(values, type_)\n+            if type_ is None:\n+                type_ = pa.array(c, from_pandas=True).type\n+        types.append(type_)\n+\n+    metadata = construct_metadata(df, column_names, index_columns,\n+                                  index_column_names, preserve_index, types)\n+\n+    return names, types, metadata\n+\n+\n+def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n+                        safe=True):\n+    names, column_names, index_columns, index_column_names, \\\n+        columns_to_convert, convert_types = _get_columns_to_convert(\n+            df, schema, preserve_index, columns\n+        )\n+\n     # NOTE(wesm): If nthreads=None, then we use a heuristic to decide whether\n     # using a thread pool is worth it. Currently the heuristic is whether the\n     # nrows > 100 * ncols.\n@@ -402,7 +439,7 @@ def convert_column(col, ty):\n         df, column_names, index_columns, index_column_names, preserve_index,\n         types\n     )\n-    names = column_names + index_column_names\n+\n     return names, arrays, metadata\n \n \ndiff --git a/python/pyarrow/tests/test_types.py b/python/pyarrow/tests/test_types.py\nindex b574713fd0..b15cb57efd 100644\n--- a/python/pyarrow/tests/test_types.py\n+++ b/python/pyarrow/tests/test_types.py\n@@ -17,10 +17,11 @@\n \n from collections import OrderedDict\n \n-import numpy as np\n import pickle\n import pytest\n \n+import pandas as pd\n+import numpy as np\n import pyarrow as pa\n import pyarrow.types as types\n \n@@ -478,7 +479,7 @@ def test_field_add_remove_metadata():\n \n def test_empty_table():\n     schema = pa.schema([\n-        pa.field(\"oneField\", pa.int64())\n+        pa.field('oneField', pa.int64())\n     ])\n     table = schema.empty_table()\n     assert isinstance(table, pa.Table)\n@@ -505,3 +506,20 @@ def test_is_boolean_value():\n     assert pa.types.is_boolean_value(False)\n     assert pa.types.is_boolean_value(np.bool_(True))\n     assert pa.types.is_boolean_value(np.bool_(False))\n+\n+\n+@pytest.mark.parametrize('data', [\n+    list(range(10)),\n+    pd.Categorical(list(range(10))),\n+    ['foo', 'bar', None, 'baz', 'qux'],\n+    np.array([\n+        '2007-07-13T01:23:34.123456789',\n+        '2006-01-13T12:34:56.432539784',\n+        '2010-08-13T05:46:57.437699912'\n+    ], dtype='datetime64[ns]')\n+])\n+def test_schema_from_pandas(data):\n+    df = pd.DataFrame({'a': data})\n+    schema = pa.Schema.from_pandas(df)\n+    expected = pa.Table.from_pandas(df).schema\n+    assert schema == expected\ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex 399f15eff9..726bf0caae 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -591,6 +591,45 @@ cdef class Schema:\n         return self.sp_schema.get().Equals(deref(_other.schema),\n                                            check_metadata)\n \n+    @classmethod\n+    def from_pandas(cls, df, bint preserve_index=True):\n+        \"\"\"\n+        Returns implied schema from dataframe\n+\n+        Parameters\n+        ----------\n+        df : pandas.DataFrame\n+        preserve_index : bool, default True\n+            Whether to store the index as an additional column (or columns, for\n+            MultiIndex) in the resulting `Table`.\n+\n+        Returns\n+        -------\n+        pyarrow.Schema\n+\n+        Examples\n+        --------\n+\n+        >>> import pandas as pd\n+        >>> import pyarrow as pa\n+        >>> df = pd.DataFrame({\n+            ...     'int': [1, 2],\n+            ...     'str': ['a', 'b']\n+            ... })\n+        >>> pa.Schema.from_pandas(df)\n+        int: int64\n+        str: string\n+        __index_level_0__: int64\n+        \"\"\"\n+        names, types, metadata = pdcompat.dataframe_to_types(\n+            df,\n+            preserve_index=preserve_index\n+        )\n+        fields = []\n+        for name, type_ in zip(names, types):\n+            fields.append(field(name, type_))\n+        return schema(fields, metadata)\n+\n     def field_by_name(self, name):\n         \"\"\"\n         Access a field by its name rather than the column index.\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T14:29:38.819+0000",
                    "updated": "2018-11-26T14:29:38.819+0000",
                    "started": "2018-11-26T14:29:38.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169344",
                    "issueId": "13130678"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@12b68f60[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51075428[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c293538[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@77649481[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3731312[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2a9c4d6b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fc92df5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2c5a7e11[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37aa130b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7f15f780[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4985db12[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@36d08ec5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 26 14:29:25 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-26T14:29:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1993/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-01-12T23:03:44.000+0000",
        "updated": "2018-11-26T14:29:38.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently the only option is to use {{Table/Array.from_pandas}} which does significant unnecessary work and allocates memory. If only the schema is of interest, then we could do less work and not allocate memory.\r\n\r\nWe should provide the user a function {{pyarrow.Schema.from_pandas}} which takes a DataFrame as an input and returns the respective Arrow schema. The functionality for determing the schema is already available in the Python code, it is at moment just very tightly bound to the conversion infrastructure.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add function for determining implied Arrow schema from pandas.DataFrame",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/comment/16447190",
                    "id": "16447190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "keechongtan opened a new pull request #1929: ARROW-1993: [Python] Add function for determining implied Arrow schema from pandas.DataFrame\nURL: https://github.com/apache/arrow/pull/1929\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-22T10:14:47.295+0000",
                    "updated": "2018-04-22T10:14:47.295+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/comment/16623410",
                    "id": "16623410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~xhochy] the PR seems incomplete and abandoned, should We delay it to 0.12 or reimplement it?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-09-21T10:56:57.612+0000",
                    "updated": "2018-09-21T10:56:57.612+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/comment/16623790",
                    "id": "16623790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moving to 0.12",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-09-21T15:44:13.273+0000",
                    "updated": "2018-09-21T15:44:13.273+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/comment/16624698",
                    "id": "16624698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "We need to delay to 0.12 / 0.13. This needs a lot more work to avoid costly operations.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-09-22T14:49:16.000+0000",
                    "updated": "2018-09-22T14:49:16.000+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130678/comment/16699019",
                    "id": "16699019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1929\n[https://github.com/apache/arrow/pull/1929]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-26T14:29:25.051+0000",
                    "updated": "2018-11-26T14:29:25.051+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ovof:",
        "customfield_12314139": null
    }
}