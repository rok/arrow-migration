{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13118406",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13118406",
    "key": "ARROW-1811",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1811/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@64a79bf8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@538bb445[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64496759[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6aeece09[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24cfe55f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@52cbe85a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d173ef5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@619539d8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3aabdda8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@372f6b9f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@738b1b19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3b98b749[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 15 12:24:06 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-15T12:24:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1811/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-11-14T23:41:10.000+0000",
        "updated": "2017-11-15T12:24:06.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] Rename all Decimal based APIs to Decimal128",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13118406/comment/16253357",
                    "id": "16253357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1321: ARROW-1811: [C++/Python] Rename all Decimal based APIs to Decimal128\nURL: https://github.com/apache/arrow/pull/1321\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex 651fa26ba..f2dd75335 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -320,7 +320,7 @@ Decimal128Array::Decimal128Array(const std::shared_ptr<ArrayData>& data)\n }\n \n std::string Decimal128Array::FormatValue(int64_t i) const {\n-  const auto& type_ = static_cast<const DecimalType&>(*type());\n+  const auto& type_ = static_cast<const Decimal128Type&>(*type());\n   const Decimal128 value(GetValue(i));\n   return value.ToString(type_.scale());\n }\ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex 3337e4b15..28756a6ab 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -562,7 +562,7 @@ class ARROW_EXPORT FixedSizeBinaryArray : public PrimitiveArray {\n // Decimal128Array\n class ARROW_EXPORT Decimal128Array : public FixedSizeBinaryArray {\n  public:\n-  using TypeClass = DecimalType;\n+  using TypeClass = Decimal128Type;\n \n   using FixedSizeBinaryArray::FixedSizeBinaryArray;\n \ndiff --git a/cpp/src/arrow/builder.cc b/cpp/src/arrow/builder.cc\nindex c910170dd..d2d3dbdf7 100644\n--- a/cpp/src/arrow/builder.cc\n+++ b/cpp/src/arrow/builder.cc\n@@ -1147,17 +1147,18 @@ template class DictionaryBuilder<BinaryType>;\n template class DictionaryBuilder<StringType>;\n \n // ----------------------------------------------------------------------\n-// DecimalBuilder\n+// Decimal128Builder\n \n-DecimalBuilder::DecimalBuilder(const std::shared_ptr<DataType>& type, MemoryPool* pool)\n+Decimal128Builder::Decimal128Builder(const std::shared_ptr<DataType>& type,\n+                                     MemoryPool* pool)\n     : FixedSizeBinaryBuilder(type, pool) {}\n \n-Status DecimalBuilder::Append(const Decimal128& value) {\n+Status Decimal128Builder::Append(const Decimal128& value) {\n   RETURN_NOT_OK(FixedSizeBinaryBuilder::Reserve(1));\n   return FixedSizeBinaryBuilder::Append(value.ToBytes());\n }\n \n-Status DecimalBuilder::FinishInternal(std::shared_ptr<ArrayData>* out) {\n+Status Decimal128Builder::FinishInternal(std::shared_ptr<ArrayData>* out) {\n   std::shared_ptr<Buffer> data;\n   RETURN_NOT_OK(byte_builder_.Finish(&data));\n \ndiff --git a/cpp/src/arrow/builder.h b/cpp/src/arrow/builder.h\nindex c580eeb3b..bc25d0d21 100644\n--- a/cpp/src/arrow/builder.h\n+++ b/cpp/src/arrow/builder.h\n@@ -753,10 +753,10 @@ class ARROW_EXPORT FixedSizeBinaryBuilder : public ArrayBuilder {\n   BufferBuilder byte_builder_;\n };\n \n-class ARROW_EXPORT DecimalBuilder : public FixedSizeBinaryBuilder {\n+class ARROW_EXPORT Decimal128Builder : public FixedSizeBinaryBuilder {\n  public:\n-  explicit DecimalBuilder(const std::shared_ptr<DataType>& type,\n-                          MemoryPool* pool ARROW_MEMORY_POOL_DEFAULT);\n+  explicit Decimal128Builder(const std::shared_ptr<DataType>& type,\n+                             MemoryPool* pool ARROW_MEMORY_POOL_DEFAULT);\n \n   using FixedSizeBinaryBuilder::Append;\n \n@@ -765,6 +765,8 @@ class ARROW_EXPORT DecimalBuilder : public FixedSizeBinaryBuilder {\n   Status FinishInternal(std::shared_ptr<ArrayData>* out) override;\n };\n \n+using DecimalBuilder = Decimal128Builder;\n+\n // ----------------------------------------------------------------------\n // Struct\n \ndiff --git a/cpp/src/arrow/compare.cc b/cpp/src/arrow/compare.cc\nindex 253c2e1fe..72ef122e3 100644\n--- a/cpp/src/arrow/compare.cc\n+++ b/cpp/src/arrow/compare.cc\n@@ -615,8 +615,8 @@ class TypeEqualsVisitor {\n     return Status::OK();\n   }\n \n-  Status Visit(const DecimalType& left) {\n-    const auto& right = static_cast<const DecimalType&>(right_);\n+  Status Visit(const Decimal128Type& left) {\n+    const auto& right = static_cast<const Decimal128Type&>(right_);\n     result_ = left.precision() == right.precision() && left.scale() == right.scale();\n     return Status::OK();\n   }\ndiff --git a/cpp/src/arrow/ipc/json-internal.cc b/cpp/src/arrow/ipc/json-internal.cc\nindex 976f9660a..bdf1ef52b 100644\n--- a/cpp/src/arrow/ipc/json-internal.cc\n+++ b/cpp/src/arrow/ipc/json-internal.cc\n@@ -253,7 +253,7 @@ class SchemaWriter {\n     writer_->Int(type.byte_width());\n   }\n \n-  void WriteTypeMetadata(const DecimalType& type) {\n+  void WriteTypeMetadata(const Decimal128Type& type) {\n     writer_->Key(\"precision\");\n     writer_->Int(type.precision());\n     writer_->Key(\"scale\");\n@@ -347,7 +347,7 @@ class SchemaWriter {\n     return WritePrimitive(\"fixedsizebinary\", type);\n   }\n \n-  Status Visit(const DecimalType& type) { return WritePrimitive(\"decimal\", type); }\n+  Status Visit(const Decimal128Type& type) { return WritePrimitive(\"decimal\", type); }\n   Status Visit(const TimestampType& type) { return WritePrimitive(\"timestamp\", type); }\n   Status Visit(const IntervalType& type) { return WritePrimitive(\"interval\", type); }\n \n@@ -1063,7 +1063,7 @@ class ArrayReader {\n \n   template <typename T>\n   typename std::enable_if<std::is_base_of<FixedSizeBinaryType, T>::value &&\n-                              !std::is_base_of<DecimalType, T>::value,\n+                              !std::is_base_of<Decimal128Type, T>::value,\n                           Status>::type\n   Visit(const T& type) {\n     typename TypeTraits<T>::BuilderType builder(type_, pool_);\n@@ -1105,7 +1105,7 @@ class ArrayReader {\n   }\n \n   template <typename T>\n-  typename std::enable_if<std::is_base_of<DecimalType, T>::value, Status>::type Visit(\n+  typename std::enable_if<std::is_base_of<Decimal128Type, T>::value, Status>::type Visit(\n       const T& type) {\n     typename TypeTraits<T>::BuilderType builder(type_, pool_);\n \ndiff --git a/cpp/src/arrow/ipc/metadata-internal.cc b/cpp/src/arrow/ipc/metadata-internal.cc\nindex 63ef8a549..87b4708bf 100644\n--- a/cpp/src/arrow/ipc/metadata-internal.cc\n+++ b/cpp/src/arrow/ipc/metadata-internal.cc\n@@ -458,7 +458,7 @@ static Status TypeToFlatbuffer(FBB& fbb, const DataType& type,\n       *offset = flatbuf::CreateTimestamp(fbb, fb_unit, fb_timezone).Union();\n     } break;\n     case Type::DECIMAL: {\n-      const auto& dec_type = static_cast<const DecimalType&>(*value_type);\n+      const auto& dec_type = static_cast<const Decimal128Type&>(*value_type);\n       *out_type = flatbuf::Type_Decimal;\n       *offset =\n           flatbuf::CreateDecimal(fbb, dec_type.precision(), dec_type.scale()).Union();\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex f966b2987..2b0f96439 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -634,7 +634,7 @@ static Status ConvertDecimals(PandasOptions options, const ChunkedArray& data,\n \n   for (int c = 0; c < data.num_chunks(); c++) {\n     auto* arr(static_cast<arrow::Decimal128Array*>(data.chunk(c).get()));\n-    auto type(std::dynamic_pointer_cast<arrow::DecimalType>(arr->type()));\n+    auto type(std::dynamic_pointer_cast<arrow::Decimal128Type>(arr->type()));\n     const int scale = type->scale();\n \n     for (int64_t i = 0; i < arr->length(); ++i) {\n@@ -1600,7 +1600,7 @@ class ArrowDeserializer {\n     return VisitObjects(ConvertFixedSizeBinary);\n   }\n \n-  Status Visit(const DecimalType& type) { return VisitObjects(ConvertDecimals); }\n+  Status Visit(const Decimal128Type& type) { return VisitObjects(ConvertDecimals); }\n \n   Status Visit(const Time32Type& type) { return VisitObjects(ConvertTimes<Time32Type>); }\n \ndiff --git a/cpp/src/arrow/python/builtin_convert.cc b/cpp/src/arrow/python/builtin_convert.cc\nindex 0e775a0fb..fa0098bdf 100644\n--- a/cpp/src/arrow/python/builtin_convert.cc\n+++ b/cpp/src/arrow/python/builtin_convert.cc\n@@ -700,7 +700,7 @@ class ListConverter : public TypedConverterVisitor<ListBuilder, ListConverter> {\n };\n \n class DecimalConverter\n-    : public TypedConverterVisitor<arrow::DecimalBuilder, DecimalConverter> {\n+    : public TypedConverterVisitor<arrow::Decimal128Builder, DecimalConverter> {\n  public:\n   inline Status AppendItem(const OwnedRef& item) {\n     /// TODO(phillipc): Check for nan?\ndiff --git a/cpp/src/arrow/python/numpy_to_arrow.cc b/cpp/src/arrow/python/numpy_to_arrow.cc\nindex c5aff2e4f..a6c28af9b 100644\n--- a/cpp/src/arrow/python/numpy_to_arrow.cc\n+++ b/cpp/src/arrow/python/numpy_to_arrow.cc\n@@ -305,7 +305,7 @@ class NumPyConverter {\n     return TypeNotImplemented(type.ToString());\n   }\n \n-  Status Visit(const DecimalType& type) { return TypeNotImplemented(type.ToString()); }\n+  Status Visit(const Decimal128Type& type) { return TypeNotImplemented(type.ToString()); }\n \n   Status Visit(const DictionaryType& type) { return TypeNotImplemented(type.ToString()); }\n \n@@ -669,9 +669,9 @@ Status NumPyConverter::ConvertDecimals() {\n \n   RETURN_NOT_OK(internal::InferDecimalPrecisionAndScale(object, &precision, &scale));\n \n-  type_ = std::make_shared<DecimalType>(precision, scale);\n+  type_ = std::make_shared<Decimal128Type>(precision, scale);\n \n-  DecimalBuilder builder(type_, pool_);\n+  Decimal128Builder builder(type_, pool_);\n   RETURN_NOT_OK(builder.Resize(length_));\n \n   for (int64_t i = 0; i < length_; ++i) {\ndiff --git a/cpp/src/arrow/type.cc b/cpp/src/arrow/type.cc\nindex 0d1985fb2..ae1711832 100644\n--- a/cpp/src/arrow/type.cc\n+++ b/cpp/src/arrow/type.cc\n@@ -373,7 +373,7 @@ ACCEPT_VISITOR(FixedSizeBinaryType);\n ACCEPT_VISITOR(StringType);\n ACCEPT_VISITOR(ListType);\n ACCEPT_VISITOR(StructType);\n-ACCEPT_VISITOR(DecimalType);\n+ACCEPT_VISITOR(Decimal128Type);\n ACCEPT_VISITOR(UnionType);\n ACCEPT_VISITOR(Date32Type);\n ACCEPT_VISITOR(Date64Type);\n@@ -471,7 +471,7 @@ std::shared_ptr<Field> field(const std::string& name,\n }\n \n std::shared_ptr<DataType> decimal(int32_t precision, int32_t scale) {\n-  return std::make_shared<DecimalType>(precision, scale);\n+  return std::make_shared<Decimal128Type>(precision, scale);\n }\n \n static const BufferDescr kValidityBuffer(BufferType::VALIDITY, 1);\n@@ -511,7 +511,7 @@ std::vector<BufferDescr> UnionType::GetBufferLayout() const {\n   }\n }\n \n-std::string DecimalType::ToString() const {\n+std::string Decimal128Type::ToString() const {\n   std::stringstream s;\n   s << \"decimal(\" << precision_ << \", \" << scale_ << \")\";\n   return s.str();\ndiff --git a/cpp/src/arrow/type.h b/cpp/src/arrow/type.h\nindex 9e11a0344..d86e7ef57 100644\n--- a/cpp/src/arrow/type.h\n+++ b/cpp/src/arrow/type.h\n@@ -498,11 +498,11 @@ class ARROW_EXPORT StructType : public NestedType {\n   std::vector<BufferDescr> GetBufferLayout() const override;\n };\n \n-class ARROW_EXPORT DecimalType : public FixedSizeBinaryType {\n+class ARROW_EXPORT Decimal128Type : public FixedSizeBinaryType {\n  public:\n   static constexpr Type::type type_id = Type::DECIMAL;\n \n-  explicit DecimalType(int32_t precision, int32_t scale)\n+  explicit Decimal128Type(int32_t precision, int32_t scale)\n       : FixedSizeBinaryType(16, Type::DECIMAL), precision_(precision), scale_(scale) {}\n \n   Status Accept(TypeVisitor* visitor) const override;\n@@ -517,6 +517,8 @@ class ARROW_EXPORT DecimalType : public FixedSizeBinaryType {\n   int32_t scale_;\n };\n \n+using DecimalType = Decimal128Type;\n+\n struct UnionMode {\n   enum type { SPARSE, DENSE };\n };\ndiff --git a/cpp/src/arrow/type_fwd.h b/cpp/src/arrow/type_fwd.h\nindex 343487055..b8b3c5aa5 100644\n--- a/cpp/src/arrow/type_fwd.h\n+++ b/cpp/src/arrow/type_fwd.h\n@@ -68,9 +68,9 @@ class StructType;\n class StructArray;\n class StructBuilder;\n \n-class DecimalType;\n+class Decimal128Type;\n class Decimal128Array;\n-class DecimalBuilder;\n+class Decimal128Builder;\n \n class UnionType;\n class UnionArray;\ndiff --git a/cpp/src/arrow/type_traits.h b/cpp/src/arrow/type_traits.h\nindex bc600372e..6707f3759 100644\n--- a/cpp/src/arrow/type_traits.h\n+++ b/cpp/src/arrow/type_traits.h\n@@ -230,9 +230,9 @@ struct TypeTraits<DoubleType> {\n };\n \n template <>\n-struct TypeTraits<DecimalType> {\n+struct TypeTraits<Decimal128Type> {\n   using ArrayType = Decimal128Array;\n-  using BuilderType = DecimalBuilder;\n+  using BuilderType = Decimal128Builder;\n   constexpr static bool is_parameter_free = false;\n };\n \ndiff --git a/cpp/src/arrow/visitor.h b/cpp/src/arrow/visitor.h\nindex 34679eb95..030ffc857 100644\n--- a/cpp/src/arrow/visitor.h\n+++ b/cpp/src/arrow/visitor.h\n@@ -83,7 +83,7 @@ class ARROW_EXPORT TypeVisitor {\n   virtual Status Visit(const Time64Type& type);\n   virtual Status Visit(const TimestampType& type);\n   virtual Status Visit(const IntervalType& type);\n-  virtual Status Visit(const DecimalType& type);\n+  virtual Status Visit(const Decimal128Type& type);\n   virtual Status Visit(const ListType& type);\n   virtual Status Visit(const StructType& type);\n   virtual Status Visit(const UnionType& type);\ndiff --git a/cpp/src/arrow/visitor_inline.h b/cpp/src/arrow/visitor_inline.h\nindex 5ecabd2a4..72c82a3bb 100644\n--- a/cpp/src/arrow/visitor_inline.h\n+++ b/cpp/src/arrow/visitor_inline.h\n@@ -55,7 +55,7 @@ inline Status VisitTypeInline(const DataType& type, VISITOR* visitor) {\n     TYPE_VISIT_INLINE(TimestampType);\n     TYPE_VISIT_INLINE(Time32Type);\n     TYPE_VISIT_INLINE(Time64Type);\n-    TYPE_VISIT_INLINE(DecimalType);\n+    TYPE_VISIT_INLINE(Decimal128Type);\n     TYPE_VISIT_INLINE(ListType);\n     TYPE_VISIT_INLINE(StructType);\n     TYPE_VISIT_INLINE(UnionType);\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-15T12:24:03.870+0000",
                    "updated": "2017-11-15T12:24:03.870+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13118406/comment/16253358",
                    "id": "16253358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1321\n[https://github.com/apache/arrow/pull/1321]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2017-11-15T12:24:06.255+0000",
                    "updated": "2017-11-15T12:24:06.255+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mscn:",
        "customfield_12314139": null
    }
}