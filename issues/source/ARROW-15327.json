{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13422582",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582",
    "key": "ARROW-15327",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15327/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/709398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1013547080\n\n\n   https://issues.apache.org/jira/browse/ARROW-15327\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T23:50:01.523+0000",
                    "updated": "2022-01-14T23:50:01.523+0000",
                    "started": "2022-01-14T23:50:01.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709398",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/709405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1013550048\n\n\n   _possible_ additions that are C++ only, but people might be interested in:\r\n   \r\n   PARQUET-2109: [C++] Check if Parquet page has too few values\r\n   ARROW-15265: [C++] Fix hang in dataset writer with kDeleteMatchingPartitions and #partitions >= 8\r\n   ARROW-12820: [C++] Support zone offset in ISO8601, strptime parser\r\n   ARROW-13130: [C++] Add decimal support to arithmetic kernels\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-14T23:59:11.950+0000",
                    "updated": "2022-01-14T23:59:11.950+0000",
                    "started": "2022-01-14T23:59:11.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709405",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1014879199\n\n\n   Not sure of the exact phrasing but please can we add something about now being able to install on the Raspberry Pi? #11506\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-17T20:54:27.106+0000",
                    "updated": "2022-01-17T20:54:27.106+0000",
                    "started": "2022-01-17T20:54:27.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710144",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic edited a comment on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1014879199\n\n\n   Not sure of the exact phrasing but please can we add something about now being able to install on the Raspberry Pi? [ARROW-14416: [R] Fix package installation on the Raspberry Pi](https://issues.apache.org/jira/browse/ARROW-14416)  #11506\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-17T20:55:19.771+0000",
                    "updated": "2022-01-17T20:55:19.771+0000",
                    "started": "2022-01-17T20:55:19.771+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710145",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1015678953\n\n\n   Aaah, I thought that was in 6.0.1 already, but I'm happy to add something.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T18:09:10.217+0000",
                    "updated": "2022-01-18T18:09:10.217+0000",
                    "started": "2022-01-18T18:09:10.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710704",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1015680972\n\n\n   @paleolimbot @dragosmg any suggestions / additions / rewordings?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T18:11:49.264+0000",
                    "updated": "2022-01-18T18:11:49.264+0000",
                    "started": "2022-01-18T18:11:49.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710707",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787137053\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n\nReview comment:\n       Group this with the one about decimal types\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n\nReview comment:\n       I'm not sure the details after the `:` are important to include in news\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n\nReview comment:\n       I'm not sure \"a bug with altrep\" conveys the right meaning, and also I think it is \"ALTREP\"\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n\nReview comment:\n       what's a BOM?\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n\nReview comment:\n       Is there something magical about 600MB?\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n\nReview comment:\n       This should say why we made the change (faster source build)\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n\nReview comment:\n       I'd put this as \"under the hood\", not worth a \"breaking change\" callout IMO\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n\nReview comment:\n       Group this with the other package building/installation bullets, and highlight why this matters (for some people this is probably the most important feature of the release)\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n\nReview comment:\n       Is this the most exciting feature in the release?\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n\nReview comment:\n       Not just possible, included in binary packages\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n\nReview comment:\n       Group this with the other lubridate bullet\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n+* Resolved a segfault when creating S3 file systems.\n+\n+## Under-the-hood changes\n+* Chunked arrays are now supported using altrep.\n+* The pointers used to pass data between R and Python have been improved to be more reliable. Backwards compatibility with older versions of pyarrow has been maintained. \n+* The method of registering new bindings for use in dplyr queries has changed (see the new vignette about writing bindings for more information about how that works).\n+* We no longer vendor `cpp11` and are using cpp11 as a standard (linked to) dependency.\n\nReview comment:\n       I don't think this is worth mentioning\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n+* Resolved a segfault when creating S3 file systems.\n+\n+## Under-the-hood changes\n+* Chunked arrays are now supported using altrep.\n\nReview comment:\n       Why is this \"under the hood\" and not an enhancement?\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n\nReview comment:\n       ```suggestion\r\n   * `open_dataset()` accepts the `partitioning` argument when reading Hive-style partitioned files, even though it is not required. \r\n   ```\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n+* Resolved a segfault when creating S3 file systems.\n+\n+## Under-the-hood changes\n+* Chunked arrays are now supported using altrep.\n+* The pointers used to pass data between R and Python have been improved to be more reliable. Backwards compatibility with older versions of pyarrow has been maintained. \n\nReview comment:\n       bug fix?\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n\nReview comment:\n       I see a bunch of enhancements/fixes around CSVs, maybe pull those out into their own section?\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n\nReview comment:\n       why does this matter?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T21:01:14.736+0000",
                    "updated": "2022-01-18T21:01:14.736+0000",
                    "started": "2022-01-18T21:01:14.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710878",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787230511\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n\nReview comment:\n       Honestly, yes, I think so, a lot of the others are more polish / specific to the query engine. Happy to move another one up to the top if there's a better one. This is quite useful for people dealing with schemas.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:26:23.503+0000",
                    "updated": "2022-01-18T23:26:23.503+0000",
                    "started": "2022-01-18T23:26:23.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710968",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787231365\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n\nReview comment:\n       \u00af\\_(\u30c4)_/\u00af It would break if you're on 3.3, but I'll move it / get rid of breaking changes\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:28:18.959+0000",
                    "updated": "2022-01-18T23:28:18.959+0000",
                    "started": "2022-01-18T23:28:18.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710970",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787232166\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n\nReview comment:\n       @thisisnic ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:30:21.835+0000",
                    "updated": "2022-01-18T23:30:21.835+0000",
                    "started": "2022-01-18T23:30:21.835+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710971",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787232480\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n\nReview comment:\n       Byte order marks, I've added that to the text\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:31:04.684+0000",
                    "updated": "2022-01-18T23:31:04.684+0000",
                    "started": "2022-01-18T23:31:04.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710972",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787232890\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n\nReview comment:\n       I've clarified\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:32:00.338+0000",
                    "updated": "2022-01-18T23:32:00.338+0000",
                    "started": "2022-01-18T23:32:00.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710974",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787233102\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n+* Resolved a segfault when creating S3 file systems.\n+\n+## Under-the-hood changes\n+* Chunked arrays are now supported using altrep.\n\nReview comment:\n       I've moved this up to new features\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:32:23.021+0000",
                    "updated": "2022-01-18T23:32:23.021+0000",
                    "started": "2022-01-18T23:32:23.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710975",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787233352\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n+* `open_dataset()` now faithfully ignores `BOM`s (like we already did with reading single files).\n+* Fixed a bug with altrep that could change the underlying data when it was reordered.\n+* Resolved a segfault when creating S3 file systems.\n+\n+## Under-the-hood changes\n+* Chunked arrays are now supported using altrep.\n+* The pointers used to pass data between R and Python have been improved to be more reliable. Backwards compatibility with older versions of pyarrow has been maintained. \n\nReview comment:\n       Not really \u2014 it could have been a bug, but we hadn't seen it in reality. I'm happy to move it if you prefer tho\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:32:55.790+0000",
                    "updated": "2022-01-18T23:32:55.790+0000",
                    "started": "2022-01-18T23:32:55.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710976",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#discussion_r787240415\n\n\n\n##########\nFile path: r/NEWS.md\n##########\n@@ -19,15 +19,54 @@\n \n # arrow 6.0.1.9000\n \n-* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n-* updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n+## New features\n+* Code to generate schemas (and individual data type specficiations) are now accessible with the `$code()` on a `schema` or `type`. This allows you to easily get the code needed to create a schema from an object that already has one.\n+* Arrow `Duration` type is now mapped to base R `difftime`.\n+* Updated `write_csv_arrow()` to follow the signature of `readr::write_csv()`. The following arguments are supported:\n   * `file` identical to `sink`\n   * `col_names` identical to `include_header`\n   * other arguments are currently unsupported, but the function errors with a meaningful message.\n-* Added `decimal128()` (~~identical to `decimal()`~~) as the name is more explicit and updated docs to encourage its use. \n+* `lubridate::week()` is now supported in dplyr queries.\n+* Added `decimal256()`. Updated `decimal()`, which now calls `decimal256()` or `decimal128()` based on the value of the `precision` argument.\n+* When adding columns in a dplyr pipeline, one can now use `tibble` and `data.frame` to create columns of tibbles or data.frames respectively (e.g. `... %>% mutate(df_col = tibble(a, b)) %>% ...`).\n+* More of `lubridate`'s `is.*` functions are natively supported in Arrow.\n+* Dictionaries (base R's factors) are now supported inside of `coalesce()`.\n+* The package now compiles and installs on Raspberry Pi OS.\n+\n+## Breaking changes\n+* R 3.3 is no longer supported (`glue`, which we depend on transitively has dropped support for 3.3 so we did as well).\n+\n+## Quality of life enhancements \n+* Many of the vignettes have been reorganized, restructured and expanded to improve their usefulness and clarity.\n * Source builds now by default use `pkg-config` to search for system dependencies (such as `libz`) and link to them \n-if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`. \n+if present. To retain the previous behaviour of downloading and building all dependencies, set `ARROW_DEPENDENCY_SOURCE=BUNDLED`.\n+* `open_dataset()` now accepts (though ignores) partitioning column names with hive-style partitioned data. \n+* `write_parquet()` now uses a reasonable guess at `chunk_size` instead of always writing a single chunk.\n+* S3 file systems can now be created with `proxy_options` for helping specify a proxy.\n+* There is an improved error message when reading CSVs and there is a conflict between a header in the file and schema/column names are provided as arguments.\n+* Delimited files (including CSVs) with encodings other than UTF can now be read (using the `encoding` argument when reading).\n+* Integer division in Arrow now more closely matches R's behavior.\n+* Snappy and lz4 compression libraries are now built (and enabled) by default. \n+* The `label` argument is now supported in the `lubridate::month` binding.\n+* Conditionals insides of `group_by` aggregations are now supported.\n * Opening datasets now use async scanner by default which resolves a deadlock issues related to reading in large multi-CSV datasets\n+* brotli compression is now possible on Windows builds.\n+* Building Arrow on Windows can now find a locally built libarrow library.\n+\n+## Bug fixes\n+* The experimental `map_batches()` is working once more.\n+* `write_parquet()` no longer drops attributes for grouped data.frames.\n+* `head()` no longer hangs on CSV datasets > 600MB.\n\nReview comment:\n       I've also changed this to just be \"large\" \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:49:17.028+0000",
                    "updated": "2022-01-18T23:49:17.028+0000",
                    "started": "2022-01-18T23:49:17.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710984",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/710985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1015937151\n\n\n   Ok, I've accepted or pushed changes here \u2014 feel free to push changes to the order or other bits\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T23:50:09.724+0000",
                    "updated": "2022-01-18T23:50:09.724+0000",
                    "started": "2022-01-18T23:50:09.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710985",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/711051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1016012965\n\n\n   I pushed a bunch of changes, PTAL\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T02:15:12.198+0000",
                    "updated": "2022-01-19T02:15:12.198+0000",
                    "started": "2022-01-19T02:15:12.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711051",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/711208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs closed pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T09:31:41.362+0000",
                    "updated": "2022-01-19T09:31:41.362+0000",
                    "started": "2022-01-19T09:31:41.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711208",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/711561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1016767904\n\n\n   Benchmark runs are scheduled for baseline = 6e463233f0ac354a38097df1c3f671f511ed764e and contender = 39adf19f31a529eaec35704685532feee1d8c7a4. 39adf19f31a529eaec35704685532feee1d8c7a4 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a6f58e09bc34469db2a5b69809c3e838...64f3d0db494140c2a5ae6a8cca285abd/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0ba7ba73c9934ab0a5dcf1e41e7cc772...0065dcf5208945389ffedc3bea3bfb7f/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b8e13a115faf4b4687756688d3320916...a0344798d5ac4fb09f2c57ff8aa78888/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T18:52:54.819+0000",
                    "updated": "2022-01-19T18:52:54.819+0000",
                    "started": "2022-01-19T18:52:54.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711561",
                    "issueId": "13422582"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/worklog/711590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12159:\nURL: https://github.com/apache/arrow/pull/12159#issuecomment-1016767904\n\n\n   Benchmark runs are scheduled for baseline = 6e463233f0ac354a38097df1c3f671f511ed764e and contender = 39adf19f31a529eaec35704685532feee1d8c7a4. 39adf19f31a529eaec35704685532feee1d8c7a4 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a6f58e09bc34469db2a5b69809c3e838...64f3d0db494140c2a5ae6a8cca285abd/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0ba7ba73c9934ab0a5dcf1e41e7cc772...0065dcf5208945389ffedc3bea3bfb7f/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b8e13a115faf4b4687756688d3320916...a0344798d5ac4fb09f2c57ff8aa78888/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T19:11:32.014+0000",
                    "updated": "2022-01-19T19:11:32.014+0000",
                    "started": "2022-01-19T19:11:32.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711590",
                    "issueId": "13422582"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6df04996[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@749e58fa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b10acf5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7d4f72e5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4912e574[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@42020c2f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c8b779e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3a55e2b0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@643289cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@36038216[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51d324cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@44860c27[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 19 09:31:33 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-19T09:31:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15327/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-01-13T17:13:01.000+0000",
        "updated": "2022-01-20T06:31:45.000+0000",
        "timeoriginalestimate": null,
        "description": "Curate, add news in preparation for the release",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Update news for 7.0.0",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13422582/comment/17478480",
                    "id": "17478480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 12159\n[https://github.com/apache/arrow/pull/12159]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-01-19T09:31:33.771+0000",
                    "updated": "2022-01-19T09:31:33.771+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ykko:",
        "customfield_12314139": null
    }
}