{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13290879",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879",
    "key": "ARROW-8060",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12582969",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12582969",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13286025",
                    "key": "ARROW-7878",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286025",
                    "fields": {
                        "summary": "[C++] Implement LogicalPlan and LogicalPlanBuilder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8060/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408844",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702\n \n \n   The Scalar are not properly exposed yet and the C++ implementation will change soon so while the serialization will work, we need to refactor this code.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T15:18:10.939+0000",
                    "updated": "2020-03-24T15:18:10.939+0000",
                    "started": "2020-03-24T15:18:10.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408844",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408845",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397235992\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1361,6 +1369,38 @@ cdef class ScalarExpression(Expression):\n         Expression.init(self, sp)\n         self.scalar = <CScalarExpression*> sp.get()\n \n+    @property\n+    def value(self):\n+        cdef:\n+            shared_ptr[CScalar] scalar = self.scalar.value()\n+            DataType typ = pyarrow_wrap_data_type(scalar.get().type)\n+            c_string val\n+\n+        if is_null(typ):\n+            return None\n+\n+        val = scalar.get().ToString()\n \n Review comment:\n   I'm not proud of this, but this will work until we properly expose the C++ Scalar <=> Python value conversions.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T15:19:58.655+0000",
                    "updated": "2020-03-24T15:19:58.655+0000",
                    "started": "2020-03-24T15:19:58.655+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408845",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408846",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397235992\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1361,6 +1369,38 @@ cdef class ScalarExpression(Expression):\n         Expression.init(self, sp)\n         self.scalar = <CScalarExpression*> sp.get()\n \n+    @property\n+    def value(self):\n+        cdef:\n+            shared_ptr[CScalar] scalar = self.scalar.value()\n+            DataType typ = pyarrow_wrap_data_type(scalar.get().type)\n+            c_string val\n+\n+        if is_null(typ):\n+            return None\n+\n+        val = scalar.get().ToString()\n \n Review comment:\n   I'm not proud of this, but will work until we properly expose the C++ Scalar <=> Python value conversions.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T15:20:06.645+0000",
                    "updated": "2020-03-24T15:20:06.645+0000",
                    "started": "2020-03-24T15:20:06.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408846",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#issuecomment-603308708\n \n \n   https://issues.apache.org/jira/browse/ARROW-8060\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T15:31:52.288+0000",
                    "updated": "2020-03-24T15:31:52.288+0000",
                    "started": "2020-03-24T15:31:52.288+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408847",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397261416\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n+        # safe to assume that CastExpression::to_ variant holds a DataType\n+        # instance because the construction from python only allows that\n \n Review comment:\n   On the C++ side this is not guaranteed? (and if not, should we?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:23.685+0000",
                    "updated": "2020-03-24T16:01:23.685+0000",
                    "started": "2020-03-24T16:01:23.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408876",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397255241\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/filter.h\n ##########\n @@ -377,6 +377,8 @@ class ARROW_DS_EXPORT CastExpression final\n \n   const compute::CastOptions& options() const { return options_; }\n \n+  std::shared_ptr<DataType> to_type() const;\n \n Review comment:\n   Can you add a doc comment for this? (it's not directly clear to me what it would do, you can easily inteprete it as \"convert to a type\" instead of the \"to\" type)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:23.689+0000",
                    "updated": "2020-03-24T16:01:23.689+0000",
                    "started": "2020-03-24T16:01:23.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408877",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397265403\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1457,30 +1545,27 @@ cdef class NotExpression(UnaryExpression):\n         expr = CMakeNotExpression(operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return NotExpression, (self.operand,)\n+\n \n cdef class AndExpression(BinaryExpression):\n \n-    def __init__(self, Expression left not None, Expression right not None,\n-                 *additional_operands):\n-        cdef:\n-            Expression operand\n-            vector[shared_ptr[CExpression]] exprs\n-        exprs.push_back(left.unwrap())\n-        exprs.push_back(right.unwrap())\n-        for operand in additional_operands:\n-            exprs.push_back(operand.unwrap())\n-        self.init(CMakeAndExpression(exprs))\n+    def __init__(self, Expression left not None, Expression right not None):\n+        cdef shared_ptr[CAndExpression] expr\n+        expr.reset(new CAndExpression(left.unwrap(), right.unwrap()))\n+        self.init(<shared_ptr[CExpression]> expr)\n \n Review comment:\n   +1 on simplifying this for now (in the end, you get the same expression when doing this manually in multiple steps)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:23.806+0000",
                    "updated": "2020-03-24T16:01:23.806+0000",
                    "started": "2020-03-24T16:01:23.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408878",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397259794\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1361,6 +1369,38 @@ cdef class ScalarExpression(Expression):\n         Expression.init(self, sp)\n         self.scalar = <CScalarExpression*> sp.get()\n \n+    @property\n+    def value(self):\n+        cdef:\n+            shared_ptr[CScalar] scalar = self.scalar.value()\n+            DataType typ = pyarrow_wrap_data_type(scalar.get().type)\n+            c_string val\n+\n+        if is_null(typ):\n+            return None\n+\n+        val = scalar.get().ToString()\n \n Review comment:\n   We already have `ScalarValue` which wraps C++ Scalars (and `pyarrow_wrap_scalar` to get those), but seems we only have that for primitive numerical types (so not for string or bool) ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:23.809+0000",
                    "updated": "2020-03-24T16:01:23.809+0000",
                    "started": "2020-03-24T16:01:23.809+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408879",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397262570\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n \n Review comment:\n   Can you add docstrings to the `to` and `safe` properties? (or leave them private for now, as `_to` and `_safe`)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:24.306+0000",
                    "updated": "2020-03-24T16:01:24.306+0000",
                    "started": "2020-03-24T16:01:24.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408880",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397267324\n \n \n\n ##########\n File path: python/pyarrow/includes/libarrow_dataset.pxd\n ##########\n @@ -49,13 +49,13 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n \n     cdef cppclass CExpression \"arrow::dataset::Expression\":\n         CExpression(CExpressionType type)\n-        c_bool Equals(const CExpression & other) const\n-        c_bool Equals(const shared_ptr[CExpression] & other) const\n+        c_bool Equals(const CExpression& other) const\n+        c_bool Equals(const shared_ptr[CExpression]& other) const\n \n Review comment:\n   @bkietz changed that the other way around in https://github.com/apache/arrow/commit/efbc0479e30a9cf9769888c9d71c120ebfb29b74. I don't care much, but we will need to agree on which style we prefer, as otherwise we keep changing this back and forth :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:24.394+0000",
                    "updated": "2020-03-24T16:01:24.394+0000",
                    "started": "2020-03-24T16:01:24.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408881",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397261416\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n+        # safe to assume that CastExpression::to_ variant holds a DataType\n+        # instance because the construction from python only allows that\n \n Review comment:\n   On the C++ side this is not guaranteed? (and if not, should we? for a JIRA issue)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:45.451+0000",
                    "updated": "2020-03-24T16:01:45.451+0000",
                    "started": "2020-03-24T16:01:45.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408882",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408883",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397261416\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n+        # safe to assume that CastExpression::to_ variant holds a DataType\n+        # instance because the construction from python only allows that\n \n Review comment:\n   On the C++ side this is not guaranteed? (and if not, should we? for a potential JIRA issue)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:01:56.088+0000",
                    "updated": "2020-03-24T16:01:56.088+0000",
                    "started": "2020-03-24T16:01:56.087+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408883",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397296070\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n \n Review comment:\n   Documented, but these will certainly change in the next release.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:35:47.525+0000",
                    "updated": "2020-03-24T16:35:47.525+0000",
                    "started": "2020-03-24T16:35:47.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408892",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397297880\n \n \n\n ##########\n File path: python/pyarrow/includes/libarrow_dataset.pxd\n ##########\n @@ -49,13 +49,13 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n \n     cdef cppclass CExpression \"arrow::dataset::Expression\":\n         CExpression(CExpressionType type)\n-        c_bool Equals(const CExpression & other) const\n-        c_bool Equals(const shared_ptr[CExpression] & other) const\n+        c_bool Equals(const CExpression& other) const\n+        c_bool Equals(const shared_ptr[CExpression]& other) const\n \n Review comment:\n   We often just copy these from the header.h files where the convention prefers the spaceless style.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:38:10.434+0000",
                    "updated": "2020-03-24T16:38:10.434+0000",
                    "started": "2020-03-24T16:38:10.434+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408894",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397298351\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1361,6 +1369,38 @@ cdef class ScalarExpression(Expression):\n         Expression.init(self, sp)\n         self.scalar = <CScalarExpression*> sp.get()\n \n+    @property\n+    def value(self):\n+        cdef:\n+            shared_ptr[CScalar] scalar = self.scalar.value()\n+            DataType typ = pyarrow_wrap_data_type(scalar.get().type)\n+            c_string val\n+\n+        if is_null(typ):\n+            return None\n+\n+        val = scalar.get().ToString()\n \n Review comment:\n   Removed in favor of the ScalarValue wrappers.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:38:47.768+0000",
                    "updated": "2020-03-24T16:38:47.768+0000",
                    "started": "2020-03-24T16:38:47.767+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408895",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397298351\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1361,6 +1369,38 @@ cdef class ScalarExpression(Expression):\n         Expression.init(self, sp)\n         self.scalar = <CScalarExpression*> sp.get()\n \n+    @property\n+    def value(self):\n+        cdef:\n+            shared_ptr[CScalar] scalar = self.scalar.value()\n+            DataType typ = pyarrow_wrap_data_type(scalar.get().type)\n+            c_string val\n+\n+        if is_null(typ):\n+            return None\n+\n+        val = scalar.get().ToString()\n \n Review comment:\n   Removed in favor of the existing ScalarValue wrappers.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:39:00.171+0000",
                    "updated": "2020-03-24T16:39:00.171+0000",
                    "started": "2020-03-24T16:39:00.171+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408896",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397272295\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n+        # safe to assume that CastExpression::to_ variant holds a DataType\n+        # instance because the construction from python only allows that\n \n Review comment:\n   that's not correct; InsertImplicitCasts produces CastLike expressions. You'll need to expose CastExpression::like_expr as well\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:39:52.955+0000",
                    "updated": "2020-03-24T16:39:52.955+0000",
                    "started": "2020-03-24T16:39:52.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408897",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397285557\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1421,34 +1471,72 @@ cdef class IsValidExpression(UnaryExpression):\n         expr = make_shared[CIsValidExpression](operand.unwrap())\n         self.init(<shared_ptr[CExpression]> expr)\n \n+    def __reduce__(self):\n+        return IsValidExpression, (self.operand,)\n+\n \n cdef class CastExpression(UnaryExpression):\n \n+    cdef CCastExpression *cast\n+\n     def __init__(self, Expression operand not None, DataType to not None,\n                  bint safe=True):\n-        # TODO(kszucs): safe is consistently used across pyarrow, but on long\n-        #               term we should expose the CastOptions object\n         cdef:\n             CastOptions options\n             shared_ptr[CExpression] expr\n         options = CastOptions.safe() if safe else CastOptions.unsafe()\n-        expr.reset(new CCastExpression(\n-            operand.unwrap(),\n-            pyarrow_unwrap_data_type(to),\n-            options.unwrap()\n-        ))\n+        expr.reset(\n+            new CCastExpression(\n+                operand.unwrap(),\n+                pyarrow_unwrap_data_type(to),\n+                options.unwrap()\n+            )\n+        )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.cast = <CCastExpression*> sp.get()\n+\n+    @property\n+    def to(self):\n+        # safe to assume that CastExpression::to_ variant holds a DataType\n+        # instance because the construction from python only allows that\n+        return pyarrow_wrap_data_type(self.cast.to_type())\n+\n+    @property\n+    def safe(self):\n+        cdef CCastOptions options = self.cast.options()\n+        # infer safeness from any of the allow_* properties of the cast option\n+        return not options.allow_int_overflow\n+\n+    def __reduce__(self):\n+        return CastExpression, (self.operand, self.to, self.safe)\n+\n \n cdef class InExpression(UnaryExpression):\n \n+    cdef:\n+        CInExpression* inexpr\n+\n     def __init__(self, Expression operand not None, Array haystack not None):\n         cdef shared_ptr[CExpression] expr\n         expr.reset(\n             new CInExpression(operand.unwrap(), pyarrow_unwrap_array(haystack))\n         )\n         self.init(expr)\n \n+    cdef void init(self, const shared_ptr[CExpression]& sp):\n+        UnaryExpression.init(self, sp)\n+        self.inexpr = <CInExpression*> sp.get()\n+\n+    @property\n+    def values(self):\n \n Review comment:\n   please rename this to set or set_ or something. The identifier `values` is already too overloaded in our codebase\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:39:52.958+0000",
                    "updated": "2020-03-24T16:39:52.958+0000",
                    "started": "2020-03-24T16:39:52.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408898",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397281815\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -1361,6 +1369,38 @@ cdef class ScalarExpression(Expression):\n         Expression.init(self, sp)\n         self.scalar = <CScalarExpression*> sp.get()\n \n+    @property\n+    def value(self):\n+        cdef:\n+            shared_ptr[CScalar] scalar = self.scalar.value()\n+            DataType typ = pyarrow_wrap_data_type(scalar.get().type)\n+            c_string val\n+\n+        if is_null(typ):\n+            return None\n+\n+        val = scalar.get().ToString()\n \n Review comment:\n   if you're going to use the string repr here then please pickle it explicitly alongside the scalar's type, then use Scalar::Parse to unpickle\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:39:52.989+0000",
                    "updated": "2020-03-24T16:39:52.989+0000",
                    "started": "2020-03-24T16:39:52.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408899",
                    "issueId": "13290879"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/worklog/408900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6702: ARROW-8060: [Python] Make dataset Expression objects serializable\nURL: https://github.com/apache/arrow/pull/6702#discussion_r397297677\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/filter.h\n ##########\n @@ -377,6 +377,8 @@ class ARROW_DS_EXPORT CastExpression final\n \n   const compute::CastOptions& options() const { return options_; }\n \n+  std::shared_ptr<DataType> to_type() const;\n \n Review comment:\n   ```suggestion\r\n     /// Return the target type of this CastTo expression, or nullptr if this is a CastLike expression\r\n     const std::shared_ptr<DataType>& to_type() const {\r\n       if (arrow::util::holds_alternative<std::shared_ptr<DataType>>(to_)) {\r\n         return arrow::util::get<std::shared_ptr<DataType>>(to_);\r\n       }\r\n       static std::shared_ptr<DataType> null;\r\n       return null;\r\n     }\r\n   \r\n     /// Return the target expression of this CastLike expression, or nullptr if this is a CastTo expression\r\n     const std::shared_ptr<Expression>& like_expr() const {\r\n       if (arrow::util::holds_alternative<std::shared_ptr<Expression>>(to_)) {\r\n         return arrow::util::get<std::shared_ptr<Expression>>(to_);\r\n       }\r\n       static std::shared_ptr<Expression> null;\r\n       return null;\r\n     }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T16:39:53.111+0000",
                    "updated": "2020-03-24T16:39:53.111+0000",
                    "started": "2020-03-24T16:39:53.110+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408900",
                    "issueId": "13290879"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4be702cd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@269dd687[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38473d17[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7026fd76[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60df7fa8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@682a714[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72c8d56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@40a60d88[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b9f180b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4836ae6b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b13dc06[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5ba95ea1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 25 18:04:07 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-25T18:04:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8060/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-03-10T17:48:24.000+0000",
        "updated": "2020-03-25T18:04:11.000+0000",
        "timeoriginalestimate": null,
        "description": "It would be good to be able to pickle pyarrow.dataset.Expression objects (eg for use in dask.distributed)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Make dataset Expression objects serializable",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/comment/17056221",
                    "id": "17056221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "this should probably wait for ARROW-7878 (and follow-ups) which includes the replacement for this class",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-10T18:18:55.626+0000",
                    "updated": "2020-03-10T18:18:55.626+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/comment/17063490",
                    "id": "17063490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~fsaintjacques] I think we determined that this should not be blocked by LogicalPlan, right?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-03-20T16:18:07.362+0000",
                    "updated": "2020-03-20T16:18:07.362+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290879/comment/17066940",
                    "id": "17066940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 6702\n[https://github.com/apache/arrow/pull/6702]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-03-25T18:04:07.487+0000",
                    "updated": "2020-03-25T18:04:07.487+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cdyg:",
        "customfield_12314139": null
    }
}