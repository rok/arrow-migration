{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13302001",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001",
    "key": "ARROW-8641",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348202",
                "id": "12348202",
                "name": "0.17.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-05-18"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8641/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/worklog/431808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7122:\nURL: https://github.com/apache/arrow/pull/7122#discussion_r421631022\n\n\n\n##########\nFile path: python/pyarrow/feather.py\n##########\n@@ -234,11 +234,24 @@ def read_table(source, columns=None, memory_map=True):\n \n     column_types = [type(column) for column in columns]\n     if all(map(lambda t: t == int, column_types)):\n-        return reader.read_indices(columns)\n+        table = reader.read_indices(columns)\n     elif all(map(lambda t: t == str, column_types)):\n-        return reader.read_names(columns)\n-\n-    column_type_names = [t.__name__ for t in column_types]\n-    raise TypeError(\"Columns must be indices or names. \"\n-                    \"Got columns {} of types {}\"\n-                    .format(columns, column_type_names))\n+        table = reader.read_names(columns)\n+    else:\n+        column_type_names = [t.__name__ for t in column_types]\n+        raise TypeError(\"Columns must be indices or names. \"\n+                        \"Got columns {} of types {}\"\n+                        .format(columns, column_type_names))\n+\n+    # Feather v1 already respects the column selection\n+    if reader.version < 3:\n+        return table\n+    # Feather v2 reads with sorted / deduplicated selection\n+    elif sorted(set(columns)) == columns:\n+        return table\n+    else:\n+        # follow exact order / selection of names\n+        new_fields = [table.schema.field(c) for c in columns]\n+        new_schema = schema(new_fields, metadata=table.schema.metadata)\n+        new_columns = [table.column(c) for c in columns]\n+        return Table.from_arrays(new_columns, schema=new_schema)\n\nReview comment:\n       This seems useful enough to have a helper method (doesn't need to be in this PR)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-07T16:23:02.759+0000",
                    "updated": "2020-05-07T16:23:02.759+0000",
                    "started": "2020-05-07T16:23:02.759+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "431808",
                    "issueId": "13302001"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/worklog/431809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7122:\nURL: https://github.com/apache/arrow/pull/7122#issuecomment-625357627\n\n\n   Appveyor build https://ci.appveyor.com/project/jorisvandenbossche/arrow/builds/32718881\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-07T16:23:26.870+0000",
                    "updated": "2020-05-07T16:23:26.870+0000",
                    "started": "2020-05-07T16:23:26.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "431809",
                    "issueId": "13302001"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/worklog/431822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7122:\nURL: https://github.com/apache/arrow/pull/7122#discussion_r421670699\n\n\n\n##########\nFile path: python/pyarrow/feather.py\n##########\n@@ -234,11 +234,24 @@ def read_table(source, columns=None, memory_map=True):\n \n     column_types = [type(column) for column in columns]\n     if all(map(lambda t: t == int, column_types)):\n-        return reader.read_indices(columns)\n+        table = reader.read_indices(columns)\n     elif all(map(lambda t: t == str, column_types)):\n-        return reader.read_names(columns)\n-\n-    column_type_names = [t.__name__ for t in column_types]\n-    raise TypeError(\"Columns must be indices or names. \"\n-                    \"Got columns {} of types {}\"\n-                    .format(columns, column_type_names))\n+        table = reader.read_names(columns)\n+    else:\n+        column_type_names = [t.__name__ for t in column_types]\n+        raise TypeError(\"Columns must be indices or names. \"\n+                        \"Got columns {} of types {}\"\n+                        .format(columns, column_type_names))\n+\n+    # Feather v1 already respects the column selection\n+    if reader.version < 3:\n+        return table\n+    # Feather v2 reads with sorted / deduplicated selection\n+    elif sorted(set(columns)) == columns:\n+        return table\n+    else:\n+        # follow exact order / selection of names\n+        new_fields = [table.schema.field(c) for c in columns]\n+        new_schema = schema(new_fields, metadata=table.schema.metadata)\n+        new_columns = [table.column(c) for c in columns]\n+        return Table.from_arrays(new_columns, schema=new_schema)\n\nReview comment:\n       Yes, I opened https://issues.apache.org/jira/browse/ARROW-8314 for something like this a while ago (I suppose it can basically be the above code moved into a helper function or method)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-07T17:26:36.218+0000",
                    "updated": "2020-05-07T17:26:36.218+0000",
                    "started": "2020-05-07T17:26:36.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "431822",
                    "issueId": "13302001"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1d6561b7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1fd94c08[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18b8f449[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4dd4425a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@750d369b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6970d1d9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36b56a02[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@591c381c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45b9644a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2a288b3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37501100[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@f34032e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue May 12 09:05:29 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-07T16:24:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8641/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-04-30T06:36:45.000+0000",
        "updated": "2020-05-12T09:05:29.000+0000",
        "timeoriginalestimate": null,
        "description": "A quite annoying regression (original report from https://github.com/pandas-dev/pandas/issues/33878), is that when specifying {{columns}} to read, this now fails if the order of the columns is not exactly the same as in the file:\r\n\r\n{code:python}\r\nIn [27]: table = pa.table([[1, 2, 3], [4, 5, 6], [7, 8, 9]], names=['a', 'b', 'c'])    \r\n\r\nIn [29]: from pyarrow import feather \r\n\r\nIn [30]: feather.write_feather(table, \"test.feather\")   \r\n\r\n# this works fine\r\nIn [32]: feather.read_table(\"test.feather\", columns=['a', 'b'])                                                                                                                                                    \r\nOut[32]: \r\npyarrow.Table\r\na: int64\r\nb: int64\r\n\r\nIn [33]: feather.read_table(\"test.feather\", columns=['b', 'a'])                                                                                                                                                    \r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-33-e01caeabb389> in <module>\r\n----> 1 feather.read_table(\"test.feather\", columns=['b', 'a'])\r\n\r\n~/scipy/repos/arrow/python/pyarrow/feather.py in read_table(source, columns, memory_map)\r\n    237         return reader.read_indices(columns)\r\n    238     elif all(map(lambda t: t == str, column_types)):\r\n--> 239         return reader.read_names(columns)\r\n    240 \r\n    241     column_type_names = [t.__name__ for t in column_types]\r\n\r\n~/scipy/repos/arrow/python/pyarrow/feather.pxi in pyarrow.lib.FeatherReader.read_names()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Schema at index 0 was different: \r\nb: int64\r\na: int64\r\nvs\r\na: int64\r\nb: int64\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Regression in feather: no longer supports permutation in column selection",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17096566",
                    "id": "17096566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Too bad this was not tested",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-04-30T14:07:46.760+0000",
                    "updated": "2020-04-30T14:07:46.760+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17100599",
                    "id": "17100599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~wesm] I was taking a look at this, and so in RecordBatchReader, the {{included_indices}} are converted into a {{inclusion_mask}}, and such a mask of course doesn't preserve the ordering of the included indices. \r\n\r\nDo you have a preference of which level to solve this? Do we want {{RecordBatchFileReader.ReadRecordBatch}} to actually honor the order of the {{included_indices}} (and so eg reorder the fields of the batch before returning it, to match the {{out_schema}}). \r\nOr do we want to ignore the order on that level of the IPC reader (and then the feather code could still decide to reorder if it wants to respect the order of the specified columns by the user)?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-06T08:54:56.038+0000",
                    "updated": "2020-05-06T08:54:56.038+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17100760",
                    "id": "17100760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Probably easiest to handle this on the Python side. Can we add to 0.17.1?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-06T12:34:29.249+0000",
                    "updated": "2020-05-06T12:34:29.249+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17100772",
                    "id": "17100772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "> Can we add to 0.17.1?\r\n\r\nThat would be nice, I think, yes\r\n\r\n> Probably easiest to handle this on the Python side\r\n\r\nWe still need to update something in the C++ code (as it is there that the schema mismatch happens, in {{Table::FromRecordBatches(schema, batches)}}, the schema and batches have the schema in a different order). But so I suppose then you would sort the indices (or ignore their order in another way when creating the out_schema) in the IPC reader, and reorder the columns on the Python side?\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-06T12:53:23.423+0000",
                    "updated": "2020-05-06T12:53:23.423+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17100848",
                    "id": "17100848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, indeed sounds like we need to sort the \"included_fields\" member of the options\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/ipc/options.h#L84",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-06T14:29:26.138+0000",
                    "updated": "2020-05-06T14:29:26.138+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17101498",
                    "id": "17101498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Pull request: https://github.com/apache/arrow/pull/7122\r\n\r\n(JIRA was down when it opened, so didn't get linked here)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-07T10:07:07.038+0000",
                    "updated": "2020-05-07T10:07:07.038+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17101521",
                    "id": "17101521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=gire",
                        "name": "gire",
                        "key": "gire",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
                        },
                        "displayName": "German I. Ramirez-Espinoza",
                        "active": true,
                        "timeZone": "Asia/Singapore"
                    },
                    "body": "A way to solve this issue is to relax the requirement that the schemas are exactly equal in here:\r\n\r\n[https://github.com/apache/arrow/blob/master/cpp/src/arrow/table.cc#L497]\r\n\r\nand instead require the schema to be a subset of the batches' schema. Checking for a subset includes the case of equality. This approach would also avoid column reordering.\r\n\r\n\u00a0\r\n\r\nI drafted this idea here:\r\n\r\n[https://github.com/gramirezespinoza/arrow/blob/ARROW-8641/cpp/src/arrow/type.cc#L1055]\r\n\r\nand confirmed it solves this issue. The {{Table::FromRecordBatches}} would look like:\r\n\r\n[https://github.com/gramirezespinoza/arrow/blob/ARROW-8641/cpp/src/arrow/table.cc#L489]\r\n\r\n\u00a0\r\n\r\nIf you find this approach viable, I'd be happy to create a PR.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=gire",
                        "name": "gire",
                        "key": "gire",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
                        },
                        "displayName": "German I. Ramirez-Espinoza",
                        "active": true,
                        "timeZone": "Asia/Singapore"
                    },
                    "created": "2020-05-07T10:26:14.388+0000",
                    "updated": "2020-05-07T10:26:14.388+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17101593",
                    "id": "17101593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~gire] thanks for also looking at it!\r\n\r\nEasier view on your changes: https://github.com/apache/arrow/compare/master...gramirezespinoza:ARROW-8641\r\n\r\nNow, I think there is one problem in your current code though: inside {{Table::FromRecordBatches}}, the order of the columns and the order of the fields in the schema is still different, so {{Table::Make(std::move(schema), std::move(columns), num_rows);}} is creating a \"wrong\" table (columns in the order as in the file, but the columns names switched order).  \r\n\r\nIn addition, it also doesn't handle duplicated column names, I think.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-07T11:59:54.044+0000",
                    "updated": "2020-05-07T11:59:54.044+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17101852",
                    "id": "17101852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7122\n[https://github.com/apache/arrow/pull/7122]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-07T16:24:48.513+0000",
                    "updated": "2020-05-07T16:24:48.513+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17103770",
                    "id": "17103770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=gire",
                        "name": "gire",
                        "key": "gire",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
                        },
                        "displayName": "German I. Ramirez-Espinoza",
                        "active": true,
                        "timeZone": "Asia/Singapore"
                    },
                    "body": "[~jorisvandenbossche]: thanks for your comments. Although the bug is solved, I finished the implementation of my idea just as a learning exercise and to explore arrow's internals a bit more.\r\n\r\nAfter writing tests for the corrected implementation of my idea I noticed two drawbacks about it:\r\n # {{feather.read_parquet}} on pyarrow still couldn't handle duplicated columns\r\n # it brakes the test {{test_table_from_batches_and_schema}} which looks like an important test of basic functionality. The reason is that this code:\r\n{code:python}\r\nincompatible_schema = pa.schema([pa.field('a', pa.int64())])\r\nwith pytest.raises(pa.ArrowInvalid):\r\n    pa.Table.from_batches([batch], incompatible_schema)\r\n{code}\r\nno longer raises an exception.\r\n\r\nNaturally, I no longer think mine is such a good idea. I read your resolution and realized that I also didn't take into account the fact that arrow supports multiple feather versions.\r\n\r\nAnyway, I think it was a fun experience for me (albeit a bit embarrassing at the beginning because of the shabby implementation of my idea).\r\n\r\nCheers",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=gire",
                        "name": "gire",
                        "key": "gire",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
                        },
                        "displayName": "German I. Ramirez-Espinoza",
                        "active": true,
                        "timeZone": "Asia/Singapore"
                    },
                    "created": "2020-05-10T12:17:18.524+0000",
                    "updated": "2020-05-10T12:17:18.524+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302001/comment/17105250",
                    "id": "17105250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "No embarrassment needed! Happy it was a useful experience, and looking into your patch was actually also a good way for me to better understand what is actually going on / the constraints that were needed ;)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-12T09:05:29.687+0000",
                    "updated": "2020-05-12T09:05:29.687+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|z0e8so:",
        "customfield_12314139": null
    }
}