{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13195640",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640",
    "key": "ARROW-3684",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3684/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/worklog/169019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet opened a new pull request #3019: ARROW-3684: [Go] Add chunking ability to CSV reader\nURL: https://github.com/apache/arrow/pull/3019\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T10:50:38.970+0000",
                    "updated": "2018-11-23T10:50:38.970+0000",
                    "started": "2018-11-23T10:50:38.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169019",
                    "issueId": "13195640"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/worklog/169020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on issue #3019: ARROW-3684: [Go] Add chunking ability to CSV reader\nURL: https://github.com/apache/arrow/pull/3019#issuecomment-441209692\n \n \n   @alexandreyc @stuartcarnie PTAL.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T10:51:07.475+0000",
                    "updated": "2018-11-23T10:51:07.475+0000",
                    "started": "2018-11-23T10:51:07.474+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169020",
                    "issueId": "13195640"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/worklog/169023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3019: ARROW-3684: [Go] Add chunking ability to CSV reader\nURL: https://github.com/apache/arrow/pull/3019#issuecomment-441210151\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=h1) Report\n   > Merging [#3019](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/1995e8858f7cd365f6df7512823f8062d96386b0?src=pr&el=desc) will **decrease** coverage by `19.8%`.\n   > The diff coverage is `96.07%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3019/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #3019       +/-   ##\n   ===========================================\n   - Coverage   86.95%   67.14%   -19.81%     \n   ===========================================\n     Files         494       56      -438     \n     Lines       70196     3659    -66537     \n   ===========================================\n   - Hits        61041     2457    -58584     \n   + Misses       9059     1106     -7953     \n     Partials       96       96\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/csv/csv.go](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Z28vYXJyb3cvY3N2L2Nzdi5nbw==) | `81.42% <96.07%> (+5.35%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | [cpp/src/gandiva/function\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5Lmg=) | | |\n   | [cpp/src/arrow/ipc/metadata-internal.h](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWV0YWRhdGEtaW50ZXJuYWwuaA==) | | |\n   | [cpp/src/arrow/python/io.cc](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaW8uY2M=) | | |\n   | [python/pyarrow/hdfs.py](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaGRmcy5weQ==) | | |\n   | ... and [429 more](https://codecov.io/gh/apache/arrow/pull/3019/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=footer). Last update [1995e88...64e8851](https://codecov.io/gh/apache/arrow/pull/3019?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T10:53:17.376+0000",
                    "updated": "2018-11-23T10:53:17.376+0000",
                    "started": "2018-11-23T10:53:17.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169023",
                    "issueId": "13195640"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/worklog/171378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3019: ARROW-3684: [Go] Add chunking ability to CSV reader\nURL: https://github.com/apache/arrow/pull/3019#issuecomment-443521420\n \n \n   Could someone take a look?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-02T16:39:46.458+0000",
                    "updated": "2018-12-02T16:39:46.458+0000",
                    "started": "2018-12-02T16:39:46.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171378",
                    "issueId": "13195640"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/worklog/171392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on issue #3019: ARROW-3684: [Go] Add chunking ability to CSV reader\nURL: https://github.com/apache/arrow/pull/3019#issuecomment-443524745\n \n \n   LGTM\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-02T17:27:24.735+0000",
                    "updated": "2018-12-02T17:27:24.735+0000",
                    "started": "2018-12-02T17:27:24.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171392",
                    "issueId": "13195640"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/worklog/171394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3019: ARROW-3684: [Go] Add chunking ability to CSV reader\nURL: https://github.com/apache/arrow/pull/3019\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/go/arrow/csv/csv.go b/go/arrow/csv/csv.go\nindex 36f3abd623..79f228009f 100644\n--- a/go/arrow/csv/csv.go\n+++ b/go/arrow/csv/csv.go\n@@ -17,8 +17,6 @@\n // Package csv reads CSV files and presents the extracted data as records.\n package csv\n \n-// TODO: implement a row chunker to accumulate N rows into the current record.\n-\n import (\n \t\"encoding/csv\"\n \t\"errors\"\n@@ -61,6 +59,19 @@ func WithAllocator(mem memory.Allocator) Option {\n \t}\n }\n \n+// WithChunk specifies the chunk size used while parsing CSV files.\n+//\n+// If n is zero or 1, no chunking will take place and the reader will create\n+// one record per row.\n+// If n is greater than 1, chunks of n rows will be read.\n+// If n is negative, the reader will load the whole CSV file into memory and\n+// create one big record with all the rows.\n+func WithChunk(n int) Option {\n+\treturn func(r *Reader) {\n+\t\tr.chunk = n\n+\t}\n+}\n+\n // Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n type Reader struct {\n \tr      *csv.Reader\n@@ -71,6 +82,10 @@ type Reader struct {\n \tcur  array.Record\n \terr  error\n \n+\tchunk int\n+\tdone  bool\n+\tnext  func() bool\n+\n \tmem memory.Allocator\n }\n \n@@ -82,7 +97,7 @@ type Reader struct {\n func NewReader(r io.Reader, schema *arrow.Schema, opts ...Option) *Reader {\n \tvalidate(schema)\n \n-\trr := &Reader{r: csv.NewReader(r), schema: schema, refs: 1}\n+\trr := &Reader{r: csv.NewReader(r), schema: schema, refs: 1, chunk: 1}\n \tfor _, opt := range opts {\n \t\topt(rr)\n \t}\n@@ -93,6 +108,14 @@ func NewReader(r io.Reader, schema *arrow.Schema, opts ...Option) *Reader {\n \n \trr.bld = array.NewRecordBuilder(rr.mem, rr.schema)\n \n+\tswitch {\n+\tcase rr.chunk < 0:\n+\t\trr.next = rr.nextall\n+\tcase rr.chunk > 1:\n+\t\trr.next = rr.nextn\n+\tdefault:\n+\t\trr.next = rr.next1\n+\t}\n \treturn rr\n }\n \n@@ -117,13 +140,20 @@ func (r *Reader) Next() bool {\n \t\tr.cur = nil\n \t}\n \n-\tif r.err != nil {\n+\tif r.err != nil || r.done {\n \t\treturn false\n \t}\n \n+\treturn r.next()\n+}\n+\n+// next1 reads one row from the CSV file and creates a single Record\n+// from that row.\n+func (r *Reader) next1() bool {\n \tvar recs []string\n \trecs, r.err = r.r.Read()\n \tif r.err != nil {\n+\t\tr.done = true\n \t\tif r.err == io.EOF {\n \t\t\tr.err = nil\n \t\t}\n@@ -132,8 +162,65 @@ func (r *Reader) Next() bool {\n \n \tr.validate(recs)\n \tr.read(recs)\n+\tr.cur = r.bld.NewRecord()\n \n-\treturn r.err == nil\n+\treturn true\n+}\n+\n+// nextall reads the whole CSV file into memory and creates one single\n+// Record from all the CSV rows.\n+func (r *Reader) nextall() bool {\n+\tdefer func() {\n+\t\tr.done = true\n+\t}()\n+\n+\tvar (\n+\t\trecs [][]string\n+\t)\n+\n+\trecs, r.err = r.r.ReadAll()\n+\tif r.err != nil {\n+\t\treturn false\n+\t}\n+\n+\tfor _, rec := range recs {\n+\t\tr.validate(rec)\n+\t\tr.read(rec)\n+\t}\n+\tr.cur = r.bld.NewRecord()\n+\n+\treturn true\n+}\n+\n+// nextn reads n rows from the CSV file, where n is the chunk size, and creates\n+// a Record from these rows.\n+func (r *Reader) nextn() bool {\n+\tvar (\n+\t\trecs []string\n+\t\tn    = 0\n+\t)\n+\n+\tfor i := 0; i < r.chunk && !r.done; i++ {\n+\t\trecs, r.err = r.r.Read()\n+\t\tif r.err != nil {\n+\t\t\tr.done = true\n+\t\t\tbreak\n+\t\t}\n+\n+\t\tr.validate(recs)\n+\t\tr.read(recs)\n+\t\tn++\n+\t}\n+\n+\tif r.err != nil {\n+\t\tr.done = true\n+\t\tif r.err == io.EOF {\n+\t\t\tr.err = nil\n+\t\t}\n+\t}\n+\n+\tr.cur = r.bld.NewRecord()\n+\treturn n > 0\n }\n \n func (r *Reader) validate(recs []string) {\n@@ -193,7 +280,6 @@ func (r *Reader) read(recs []string) {\n \t\t\tr.bld.Field(i).(*array.StringBuilder).Append(str)\n \t\t}\n \t}\n-\tr.cur = r.bld.NewRecord()\n }\n \n func (r *Reader) readI8(str string) int8 {\ndiff --git a/go/arrow/csv/csv_test.go b/go/arrow/csv/csv_test.go\nindex 534e8eabd3..f53cf17d56 100644\n--- a/go/arrow/csv/csv_test.go\n+++ b/go/arrow/csv/csv_test.go\n@@ -89,6 +89,52 @@ func Example() {\n \t// rec[2][\"str\"]: [\"str-9\"]\n }\n \n+func Example_withChunk() {\n+\tf, err := os.Open(\"testdata/simple.csv\")\n+\tif err != nil {\n+\t\tlog.Fatal(err)\n+\t}\n+\tdefer f.Close()\n+\n+\tschema := arrow.NewSchema(\n+\t\t[]arrow.Field{\n+\t\t\tarrow.Field{Name: \"i64\", Type: arrow.PrimitiveTypes.Int64},\n+\t\t\tarrow.Field{Name: \"f64\", Type: arrow.PrimitiveTypes.Float64},\n+\t\t\tarrow.Field{Name: \"str\", Type: arrow.BinaryTypes.String},\n+\t\t},\n+\t\tnil,\n+\t)\n+\tr := csv.NewReader(\n+\t\tf, schema,\n+\t\tcsv.WithComment('#'), csv.WithComma(';'),\n+\t\tcsv.WithChunk(3),\n+\t)\n+\tdefer r.Release()\n+\n+\tn := 0\n+\tfor r.Next() {\n+\t\trec := r.Record()\n+\t\tfor i, col := range rec.Columns() {\n+\t\t\tfmt.Printf(\"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n+\t\t}\n+\t\tn++\n+\t}\n+\n+\t// Output:\n+\t// rec[0][\"i64\"]: [0 1 2]\n+\t// rec[1][\"f64\"]: [0 1 2]\n+\t// rec[2][\"str\"]: [\"str-0\" \"str-1\" \"str-2\"]\n+\t// rec[0][\"i64\"]: [3 4 5]\n+\t// rec[1][\"f64\"]: [3 4 5]\n+\t// rec[2][\"str\"]: [\"str-3\" \"str-4\" \"str-5\"]\n+\t// rec[0][\"i64\"]: [6 7 8]\n+\t// rec[1][\"f64\"]: [6 7 8]\n+\t// rec[2][\"str\"]: [\"str-6\" \"str-7\" \"str-8\"]\n+\t// rec[0][\"i64\"]: [9]\n+\t// rec[1][\"f64\"]: [9]\n+\t// rec[2][\"str\"]: [\"str-9\"]\n+}\n+\n func TestCSVReader(t *testing.T) {\n \tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n \tdefer mem.AssertSize(t, 0)\n@@ -190,3 +236,252 @@ rec[11][\"str\"]: [\"str-2\"]\n \t\tr.Release()\n \t}\n }\n+\n+func TestCSVReaderWithChunk(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\traw, err := ioutil.ReadFile(\"testdata/simple.csv\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tschema := arrow.NewSchema(\n+\t\t[]arrow.Field{\n+\t\t\tarrow.Field{Name: \"i64\", Type: arrow.PrimitiveTypes.Int64},\n+\t\t\tarrow.Field{Name: \"f64\", Type: arrow.PrimitiveTypes.Float64},\n+\t\t\tarrow.Field{Name: \"str\", Type: arrow.BinaryTypes.String},\n+\t\t},\n+\t\tnil,\n+\t)\n+\n+\tfor _, tc := range []struct {\n+\t\tname    string\n+\t\topts    []csv.Option\n+\t\trecords int\n+\t\twant    string\n+\t}{\n+\t\t{\n+\t\t\tname:    \"chunk=default\",\n+\t\t\topts:    []csv.Option{csv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';')},\n+\t\t\trecords: 10,\n+\t\t\twant: `rec[0][\"i64\"]: [0]\n+rec[1][\"f64\"]: [0]\n+rec[2][\"str\"]: [\"str-0\"]\n+rec[0][\"i64\"]: [1]\n+rec[1][\"f64\"]: [1]\n+rec[2][\"str\"]: [\"str-1\"]\n+rec[0][\"i64\"]: [2]\n+rec[1][\"f64\"]: [2]\n+rec[2][\"str\"]: [\"str-2\"]\n+rec[0][\"i64\"]: [3]\n+rec[1][\"f64\"]: [3]\n+rec[2][\"str\"]: [\"str-3\"]\n+rec[0][\"i64\"]: [4]\n+rec[1][\"f64\"]: [4]\n+rec[2][\"str\"]: [\"str-4\"]\n+rec[0][\"i64\"]: [5]\n+rec[1][\"f64\"]: [5]\n+rec[2][\"str\"]: [\"str-5\"]\n+rec[0][\"i64\"]: [6]\n+rec[1][\"f64\"]: [6]\n+rec[2][\"str\"]: [\"str-6\"]\n+rec[0][\"i64\"]: [7]\n+rec[1][\"f64\"]: [7]\n+rec[2][\"str\"]: [\"str-7\"]\n+rec[0][\"i64\"]: [8]\n+rec[1][\"f64\"]: [8]\n+rec[2][\"str\"]: [\"str-8\"]\n+rec[0][\"i64\"]: [9]\n+rec[1][\"f64\"]: [9]\n+rec[2][\"str\"]: [\"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=0\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(0),\n+\t\t\t},\n+\t\t\trecords: 10,\n+\t\t\twant: `rec[0][\"i64\"]: [0]\n+rec[1][\"f64\"]: [0]\n+rec[2][\"str\"]: [\"str-0\"]\n+rec[0][\"i64\"]: [1]\n+rec[1][\"f64\"]: [1]\n+rec[2][\"str\"]: [\"str-1\"]\n+rec[0][\"i64\"]: [2]\n+rec[1][\"f64\"]: [2]\n+rec[2][\"str\"]: [\"str-2\"]\n+rec[0][\"i64\"]: [3]\n+rec[1][\"f64\"]: [3]\n+rec[2][\"str\"]: [\"str-3\"]\n+rec[0][\"i64\"]: [4]\n+rec[1][\"f64\"]: [4]\n+rec[2][\"str\"]: [\"str-4\"]\n+rec[0][\"i64\"]: [5]\n+rec[1][\"f64\"]: [5]\n+rec[2][\"str\"]: [\"str-5\"]\n+rec[0][\"i64\"]: [6]\n+rec[1][\"f64\"]: [6]\n+rec[2][\"str\"]: [\"str-6\"]\n+rec[0][\"i64\"]: [7]\n+rec[1][\"f64\"]: [7]\n+rec[2][\"str\"]: [\"str-7\"]\n+rec[0][\"i64\"]: [8]\n+rec[1][\"f64\"]: [8]\n+rec[2][\"str\"]: [\"str-8\"]\n+rec[0][\"i64\"]: [9]\n+rec[1][\"f64\"]: [9]\n+rec[2][\"str\"]: [\"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=1\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(1),\n+\t\t\t},\n+\t\t\trecords: 10,\n+\t\t\twant: `rec[0][\"i64\"]: [0]\n+rec[1][\"f64\"]: [0]\n+rec[2][\"str\"]: [\"str-0\"]\n+rec[0][\"i64\"]: [1]\n+rec[1][\"f64\"]: [1]\n+rec[2][\"str\"]: [\"str-1\"]\n+rec[0][\"i64\"]: [2]\n+rec[1][\"f64\"]: [2]\n+rec[2][\"str\"]: [\"str-2\"]\n+rec[0][\"i64\"]: [3]\n+rec[1][\"f64\"]: [3]\n+rec[2][\"str\"]: [\"str-3\"]\n+rec[0][\"i64\"]: [4]\n+rec[1][\"f64\"]: [4]\n+rec[2][\"str\"]: [\"str-4\"]\n+rec[0][\"i64\"]: [5]\n+rec[1][\"f64\"]: [5]\n+rec[2][\"str\"]: [\"str-5\"]\n+rec[0][\"i64\"]: [6]\n+rec[1][\"f64\"]: [6]\n+rec[2][\"str\"]: [\"str-6\"]\n+rec[0][\"i64\"]: [7]\n+rec[1][\"f64\"]: [7]\n+rec[2][\"str\"]: [\"str-7\"]\n+rec[0][\"i64\"]: [8]\n+rec[1][\"f64\"]: [8]\n+rec[2][\"str\"]: [\"str-8\"]\n+rec[0][\"i64\"]: [9]\n+rec[1][\"f64\"]: [9]\n+rec[2][\"str\"]: [\"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=3\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(3),\n+\t\t\t},\n+\t\t\trecords: 4,\n+\t\t\twant: `rec[0][\"i64\"]: [0 1 2]\n+rec[1][\"f64\"]: [0 1 2]\n+rec[2][\"str\"]: [\"str-0\" \"str-1\" \"str-2\"]\n+rec[0][\"i64\"]: [3 4 5]\n+rec[1][\"f64\"]: [3 4 5]\n+rec[2][\"str\"]: [\"str-3\" \"str-4\" \"str-5\"]\n+rec[0][\"i64\"]: [6 7 8]\n+rec[1][\"f64\"]: [6 7 8]\n+rec[2][\"str\"]: [\"str-6\" \"str-7\" \"str-8\"]\n+rec[0][\"i64\"]: [9]\n+rec[1][\"f64\"]: [9]\n+rec[2][\"str\"]: [\"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=6\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(6),\n+\t\t\t},\n+\t\t\trecords: 2,\n+\t\t\twant: `rec[0][\"i64\"]: [0 1 2 3 4 5]\n+rec[1][\"f64\"]: [0 1 2 3 4 5]\n+rec[2][\"str\"]: [\"str-0\" \"str-1\" \"str-2\" \"str-3\" \"str-4\" \"str-5\"]\n+rec[0][\"i64\"]: [6 7 8 9]\n+rec[1][\"f64\"]: [6 7 8 9]\n+rec[2][\"str\"]: [\"str-6\" \"str-7\" \"str-8\" \"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=10\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(10),\n+\t\t\t},\n+\t\t\trecords: 1,\n+\t\t\twant: `rec[0][\"i64\"]: [0 1 2 3 4 5 6 7 8 9]\n+rec[1][\"f64\"]: [0 1 2 3 4 5 6 7 8 9]\n+rec[2][\"str\"]: [\"str-0\" \"str-1\" \"str-2\" \"str-3\" \"str-4\" \"str-5\" \"str-6\" \"str-7\" \"str-8\" \"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=11\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(11),\n+\t\t\t},\n+\t\t\trecords: 1,\n+\t\t\twant: `rec[0][\"i64\"]: [0 1 2 3 4 5 6 7 8 9]\n+rec[1][\"f64\"]: [0 1 2 3 4 5 6 7 8 9]\n+rec[2][\"str\"]: [\"str-0\" \"str-1\" \"str-2\" \"str-3\" \"str-4\" \"str-5\" \"str-6\" \"str-7\" \"str-8\" \"str-9\"]\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"chunk=-1\",\n+\t\t\topts: []csv.Option{\n+\t\t\t\tcsv.WithAllocator(mem), csv.WithComment('#'), csv.WithComma(';'),\n+\t\t\t\tcsv.WithChunk(-1),\n+\t\t\t},\n+\t\t\trecords: 1,\n+\t\t\twant: `rec[0][\"i64\"]: [0 1 2 3 4 5 6 7 8 9]\n+rec[1][\"f64\"]: [0 1 2 3 4 5 6 7 8 9]\n+rec[2][\"str\"]: [\"str-0\" \"str-1\" \"str-2\" \"str-3\" \"str-4\" \"str-5\" \"str-6\" \"str-7\" \"str-8\" \"str-9\"]\n+`,\n+\t\t},\n+\t} {\n+\t\tt.Run(tc.name, func(t *testing.T) {\n+\t\t\tr := csv.NewReader(bytes.NewReader(raw), schema, tc.opts...)\n+\n+\t\t\tdefer r.Release()\n+\n+\t\t\tr.Retain()\n+\t\t\tr.Release()\n+\n+\t\t\tif got, want := r.Schema(), schema; !got.Equal(want) {\n+\t\t\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n+\t\t\t}\n+\n+\t\t\tout := new(bytes.Buffer)\n+\n+\t\t\tn := 0\n+\t\t\tfor r.Next() {\n+\t\t\t\trec := r.Record()\n+\t\t\t\tfor i, col := range rec.Columns() {\n+\t\t\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n+\t\t\t\t}\n+\t\t\t\tn++\n+\t\t\t}\n+\n+\t\t\tif got, want := n, tc.records; got != want {\n+\t\t\t\tt.Fatalf(\"invalid number of records: got=%d, want=%d\", got, want)\n+\t\t\t}\n+\n+\t\t\tif got, want := out.String(), tc.want; got != want {\n+\t\t\t\tt.Fatalf(\"invalid output:\\ngot:\\n%s\\nwant:\\n%s\\n\", got, want)\n+\t\t\t}\n+\n+\t\t\tif r.Err() != nil {\n+\t\t\t\tt.Fatalf(\"unexpected error: %v\", r.Err())\n+\t\t\t}\n+\t\t})\n+\t}\n+}\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-02T17:36:08.948+0000",
                    "updated": "2018-12-02T17:36:08.948+0000",
                    "started": "2018-12-02T17:36:08.948+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171394",
                    "issueId": "13195640"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3461b26c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bfb0afd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@646fa2b4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7750e026[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a82defa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2392d5ed[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3af1b929[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4ad02f81[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e94d2f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@33e1dda2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ee0206[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f09993d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Dec 02 17:36:00 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-02T17:36:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3684/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-01T11:28:47.000+0000",
        "updated": "2018-12-02T17:36:16.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] add chunk size option to CSV reader",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195640/comment/16706424",
                    "id": "16706424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3019\n[https://github.com/apache/arrow/pull/3019]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-02T17:36:00.418+0000",
                    "updated": "2018-12-02T17:36:00.418+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s000sw:",
        "customfield_12314139": null
    }
}