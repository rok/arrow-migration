{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13237354",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354",
    "key": "ARROW-5501",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12584726",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12584726",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13278233",
                    "key": "ARROW-7520",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13278233",
                    "fields": {
                        "summary": "[R] Writing many batches causes a crash",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
                            "name": "Trivial",
                            "id": "5"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5501/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/412703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771\n \n \n   This patch tries to rationalize the functions that read/write IPC format data.\r\n   \r\n   Status quo: \r\n   \r\n   * Set of reader functions, named `read_<format>`, that take a file or InputStream of a file and return either an R `data.frame` (default) or a `Table` if the argument `as_data_frame = FALSE`. `read_parquet`, `read_feather`, `read_csv_arrow` (to disambiguate from `readr::read_csv`), `read_json_arrow`\r\n   * Writer functions that take a `data.frame`, `RecordBatch`, or `Table` and write to a file/OutputStream: `write_parquet` and `write_feather` (but not csv or json).\r\n   * `read_table`, which takes a `RecordBatch{File,Stream}Reader`, a string file path to an IPC file, or a `raw` R buffer containing an IPC stream, and collects all of its batches into a `Table`\r\n   * `read_arrow`, which wraps `read_table` to return a `data.frame`\r\n   * `read_record_batch`, which takes a stream, buffer, or Message and a Schema and returns a RecordBatch\r\n   * `write_arrow`, which takes a `data.frame`, `RecordBatch`, or `Table` and writes it to a `RecordBatch{File,Stream}Writer`, a string file path, or a `raw` R object. If given `RecordBatchStreamWriter`, it writes the IPC stream format to it; if given a `raw` object, it returns *a different `raw` object* containing IPC stream format data; or if given `RecordBatchStreamWriter` or a file path, it writes the IPC file format.\r\n   \r\n   Among the issues:\r\n   \r\n   * `read_table` and `read_record_batch` are inconsistent with the others because the function name describes what they return, while the other function names describe the input they take (e.g. `read_parquet`)\r\n   * `read/write_arrow` are ambiguous wrt `read/write_feather` in what they do because Feather is the Arrow file format\r\n   * `write_arrow` sometimes writes IPC stream format (even to a file) and sometimes IPC file format. So you can't assume that if it writes something to a file that the IPC file reader can just read it.\r\n   \r\n   Changes proposed in this patch:\r\n   \r\n   * Anything that reads/writes IPC files goes through `read/write_feather`\r\n   * Add `read/write_stream` for reading/writing the IPC stream format\r\n   * `read/write_arrow` are convenience functions that try to dispatch on the input as to whether they should call the `_feather` or `_stream` versions\r\n   * `read_table` is deprecated\r\n   \r\n   Open questions:\r\n   \r\n   * What should `read_feather` do if it encounters a file containing IPC stream, not IPC file format? Seems like it should be able to read it into a Table, no?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T00:22:07.322+0000",
                    "updated": "2020-03-31T00:22:07.322+0000",
                    "started": "2020-03-31T00:22:07.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412703",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/412710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#issuecomment-606324679\n \n \n   https://issues.apache.org/jira/browse/ARROW-5501\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T00:31:37.940+0000",
                    "updated": "2020-03-31T00:31:37.940+0000",
                    "started": "2020-03-31T00:31:37.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412710",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401251777\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -17,8 +17,8 @@\n \n #' Write data in the Feather format\n #'\n-#' @param x `data.frame`, `RecordBatch`, or `Table`\n-#' @param sink A file path or an `OutputStream`\n+#' @param x `data.frame`, [RecordBatch], or [Table]\n+#' @param sink A string file path, [OutputStream], or [RecordBatchWriter]\n \n Review comment:\n   This doesn't seem right to me. RecordBatchWriter a generic interface and cannot be guaranteed to produce something that can be read by `read_feather`. For example, it may write an IPC stream. Flight also has implementations of RecordBatchWriter and those do something completely different\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.463+0000",
                    "updated": "2020-03-31T22:38:23.463+0000",
                    "started": "2020-03-31T22:38:23.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413580",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401253094\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -123,19 +129,24 @@ write_feather <- function(x,\n #' df <- read_feather(tf, col_select = starts_with(\"Sepal\"))\n #' }\n read_feather <- function(file, col_select = NULL, as_data_frame = TRUE, ...) {\n-  if (is.character(file)) {\n-    file <- make_readable_file(file)\n-    on.exit(file$close())\n-  }\n-  reader <- FeatherReader$create(file, ...)\n+  if (inherits(file, \"RecordBatchFileReader\")) {\n \n Review comment:\n   While you *can* do this, I don't have an intuition why it's useful\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.723+0000",
                    "updated": "2020-03-31T22:38:23.723+0000",
                    "started": "2020-03-31T22:38:23.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413581",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401254323\n \n \n\n ##########\n File path: r/R/ipc.R\n ##########\n @@ -0,0 +1,122 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Write Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `write_arrow()`\n+#' is a convenience wrapper around `write_stream()` and [write_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x an Arrow [Table] or [RecordBatch], or a `data.frame`\n+#' @param sink string file path, buffer, or Arrow C++ class to write to. If\n+#' `write_arrow()` receives a `RecordBatchStreamWriter` or an empty R `raw` vector,\n+#' it will dispatch to `write_stream()`; otherwise, it calls `write_feather()`\n+#' to write a file.\n+#' @param ... extra parameters passed to `write_feather()`.\n+#'\n+#' @return `write_stream()` returns the stream: either the\n+#' `RecordBatchStreamWriter` passed to `sink`, connection still open, or if\n+#' `sink` is a `raw` vector, a new `raw` vector containing the bytes that were\n+#' written using a `RecordBatchStreamWriter`. `write_feather()` returns `x`,\n+#' invisibly.\n+#' @seealso [RecordBatchWriter]\n+#' @export\n+write_arrow <- function(x, sink, ...) {\n+  if (inherits(sink, c(\"RecordBatchStreamWriter\", \"raw\"))) {\n+    write_stream(x, sink, ...)\n+  } else {\n+    write_feather(x, sink, ...)\n+  }\n+}\n+\n+#' @rdname write_arrow\n+#' @export\n+write_stream <- function(x, sink, ...) {\n+  if (inherits(sink, \"raw\")) {\n+    if (is.data.frame(x)) {\n+      x <- Table$create(x)\n+    }\n+\n+    n <- count_bytes_to_serialize(x)\n+    # now that we know the size, stream in a buffer backed by an R raw vector\n+    bytes <- raw(n)\n+    buffer_writer <- FixedSizeBufferWriter$create(buffer(bytes))\n+    sink <- RecordBatchStreamWriter$create(buffer_writer, x$schema)\n+    on.exit(sink$close())\n+    sink$write(x)\n+    # Note that this returns a new R raw vector, not the one passed as `sink`\n+    # Nor is it returning an Arrow C++ object\n+    bytes\n+  } else {\n+    assert_is(sink, \"RecordBatchStreamWriter\")\n+    sink$write(x)\n+  }\n+}\n+\n+count_bytes_to_serialize <- function(x) {\n \n Review comment:\n   This could also be made a method on RecordBatch and Table\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.727+0000",
                    "updated": "2020-03-31T22:38:23.727+0000",
                    "started": "2020-03-31T22:38:23.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413582",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401253850\n \n \n\n ##########\n File path: r/R/ipc.R\n ##########\n @@ -0,0 +1,122 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Write Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `write_arrow()`\n+#' is a convenience wrapper around `write_stream()` and [write_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x an Arrow [Table] or [RecordBatch], or a `data.frame`\n+#' @param sink string file path, buffer, or Arrow C++ class to write to. If\n+#' `write_arrow()` receives a `RecordBatchStreamWriter` or an empty R `raw` vector,\n+#' it will dispatch to `write_stream()`; otherwise, it calls `write_feather()`\n+#' to write a file.\n+#' @param ... extra parameters passed to `write_feather()`.\n+#'\n+#' @return `write_stream()` returns the stream: either the\n+#' `RecordBatchStreamWriter` passed to `sink`, connection still open, or if\n+#' `sink` is a `raw` vector, a new `raw` vector containing the bytes that were\n+#' written using a `RecordBatchStreamWriter`. `write_feather()` returns `x`,\n+#' invisibly.\n+#' @seealso [RecordBatchWriter]\n+#' @export\n+write_arrow <- function(x, sink, ...) {\n+  if (inherits(sink, c(\"RecordBatchStreamWriter\", \"raw\"))) {\n+    write_stream(x, sink, ...)\n+  } else {\n+    write_feather(x, sink, ...)\n+  }\n+}\n+\n+#' @rdname write_arrow\n+#' @export\n+write_stream <- function(x, sink, ...) {\n \n Review comment:\n   let's call this `write_ipc_stream` to be as unambiguous as possible?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.817+0000",
                    "updated": "2020-03-31T22:38:23.817+0000",
                    "started": "2020-03-31T22:38:23.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413583",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401254688\n \n \n\n ##########\n File path: r/R/ipc.R\n ##########\n @@ -0,0 +1,122 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Write Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `write_arrow()`\n+#' is a convenience wrapper around `write_stream()` and [write_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x an Arrow [Table] or [RecordBatch], or a `data.frame`\n+#' @param sink string file path, buffer, or Arrow C++ class to write to. If\n+#' `write_arrow()` receives a `RecordBatchStreamWriter` or an empty R `raw` vector,\n+#' it will dispatch to `write_stream()`; otherwise, it calls `write_feather()`\n+#' to write a file.\n+#' @param ... extra parameters passed to `write_feather()`.\n+#'\n+#' @return `write_stream()` returns the stream: either the\n+#' `RecordBatchStreamWriter` passed to `sink`, connection still open, or if\n+#' `sink` is a `raw` vector, a new `raw` vector containing the bytes that were\n+#' written using a `RecordBatchStreamWriter`. `write_feather()` returns `x`,\n+#' invisibly.\n+#' @seealso [RecordBatchWriter]\n+#' @export\n+write_arrow <- function(x, sink, ...) {\n+  if (inherits(sink, c(\"RecordBatchStreamWriter\", \"raw\"))) {\n+    write_stream(x, sink, ...)\n+  } else {\n+    write_feather(x, sink, ...)\n+  }\n+}\n+\n+#' @rdname write_arrow\n+#' @export\n+write_stream <- function(x, sink, ...) {\n+  if (inherits(sink, \"raw\")) {\n+    if (is.data.frame(x)) {\n+      x <- Table$create(x)\n+    }\n+\n+    n <- count_bytes_to_serialize(x)\n+    # now that we know the size, stream in a buffer backed by an R raw vector\n+    bytes <- raw(n)\n+    buffer_writer <- FixedSizeBufferWriter$create(buffer(bytes))\n+    sink <- RecordBatchStreamWriter$create(buffer_writer, x$schema)\n+    on.exit(sink$close())\n+    sink$write(x)\n+    # Note that this returns a new R raw vector, not the one passed as `sink`\n+    # Nor is it returning an Arrow C++ object\n+    bytes\n+  } else {\n+    assert_is(sink, \"RecordBatchStreamWriter\")\n+    sink$write(x)\n+  }\n+}\n+\n+count_bytes_to_serialize <- function(x) {\n+  mock_stream <- MockOutputStream$create()\n+  writer <- RecordBatchStreamWriter$create(mock_stream, x$schema)\n+  writer$write(x)\n+  writer$close()\n+  mock_stream$GetExtentBytesWritten()\n+}\n+\n+#' Read Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `read_arrow()`\n+#' is a convenience wrapper around `read_stream()` and [read_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x string file path, buffer, or Arrow C++ class to read from. If\n+#' `read_arrow()` receives a `RecordBatchStreamReader` or a R `raw` vector,\n+#' it will dispatch to `read_stream()`; otherwise, it calls `read_feather()`\n+#' to write a file.\n+#' @param as_data_frame Should the function return a `data.frame` (default) or\n+#' an Arrow [Table]?\n+#' @param ... extra parameters passed to `read_feather()`.\n+#'\n+#' @return A `data.frame` if `as_data_frame` is `TRUE` (the default), or an\n+#' Arrow [Table] otherwise\n+#' @seealso [RecordBatchReader]\n+#' @export\n+read_arrow <- function(x, ...) {\n+  if (inherits(x, c(\"RecordBatchStreamReader\", \"raw\"))) {\n+    read_stream(x, ...)\n+  } else {\n+    read_feather(x, ...)\n+  }\n+}\n+\n+#' @rdname read_arrow\n+#' @export\n+read_stream <- function(x, as_data_frame = TRUE, ...) {\n \n Review comment:\n   `read_ipc_stream`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.820+0000",
                    "updated": "2020-03-31T22:38:23.820+0000",
                    "started": "2020-03-31T22:38:23.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413584",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401253679\n \n \n\n ##########\n File path: r/R/ipc.R\n ##########\n @@ -0,0 +1,122 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Write Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `write_arrow()`\n+#' is a convenience wrapper around `write_stream()` and [write_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x an Arrow [Table] or [RecordBatch], or a `data.frame`\n+#' @param sink string file path, buffer, or Arrow C++ class to write to. If\n+#' `write_arrow()` receives a `RecordBatchStreamWriter` or an empty R `raw` vector,\n+#' it will dispatch to `write_stream()`; otherwise, it calls `write_feather()`\n+#' to write a file.\n+#' @param ... extra parameters passed to `write_feather()`.\n+#'\n+#' @return `write_stream()` returns the stream: either the\n+#' `RecordBatchStreamWriter` passed to `sink`, connection still open, or if\n+#' `sink` is a `raw` vector, a new `raw` vector containing the bytes that were\n+#' written using a `RecordBatchStreamWriter`. `write_feather()` returns `x`,\n+#' invisibly.\n+#' @seealso [RecordBatchWriter]\n+#' @export\n+write_arrow <- function(x, sink, ...) {\n+  if (inherits(sink, c(\"RecordBatchStreamWriter\", \"raw\"))) {\n+    write_stream(x, sink, ...)\n+  } else {\n+    write_feather(x, sink, ...)\n \n Review comment:\n   Feather anywhere in this module seems out of place. Is a `write_arrow` function even needed (except possibly in deprecated form)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.828+0000",
                    "updated": "2020-03-31T22:38:23.828+0000",
                    "started": "2020-03-31T22:38:23.827+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413585",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401254553\n \n \n\n ##########\n File path: r/R/ipc.R\n ##########\n @@ -0,0 +1,122 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Write Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `write_arrow()`\n+#' is a convenience wrapper around `write_stream()` and [write_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x an Arrow [Table] or [RecordBatch], or a `data.frame`\n+#' @param sink string file path, buffer, or Arrow C++ class to write to. If\n+#' `write_arrow()` receives a `RecordBatchStreamWriter` or an empty R `raw` vector,\n+#' it will dispatch to `write_stream()`; otherwise, it calls `write_feather()`\n+#' to write a file.\n+#' @param ... extra parameters passed to `write_feather()`.\n+#'\n+#' @return `write_stream()` returns the stream: either the\n+#' `RecordBatchStreamWriter` passed to `sink`, connection still open, or if\n+#' `sink` is a `raw` vector, a new `raw` vector containing the bytes that were\n+#' written using a `RecordBatchStreamWriter`. `write_feather()` returns `x`,\n+#' invisibly.\n+#' @seealso [RecordBatchWriter]\n+#' @export\n+write_arrow <- function(x, sink, ...) {\n+  if (inherits(sink, c(\"RecordBatchStreamWriter\", \"raw\"))) {\n+    write_stream(x, sink, ...)\n+  } else {\n+    write_feather(x, sink, ...)\n+  }\n+}\n+\n+#' @rdname write_arrow\n+#' @export\n+write_stream <- function(x, sink, ...) {\n+  if (inherits(sink, \"raw\")) {\n+    if (is.data.frame(x)) {\n+      x <- Table$create(x)\n+    }\n+\n+    n <- count_bytes_to_serialize(x)\n+    # now that we know the size, stream in a buffer backed by an R raw vector\n+    bytes <- raw(n)\n+    buffer_writer <- FixedSizeBufferWriter$create(buffer(bytes))\n+    sink <- RecordBatchStreamWriter$create(buffer_writer, x$schema)\n+    on.exit(sink$close())\n+    sink$write(x)\n+    # Note that this returns a new R raw vector, not the one passed as `sink`\n+    # Nor is it returning an Arrow C++ object\n+    bytes\n+  } else {\n+    assert_is(sink, \"RecordBatchStreamWriter\")\n+    sink$write(x)\n+  }\n+}\n+\n+count_bytes_to_serialize <- function(x) {\n+  mock_stream <- MockOutputStream$create()\n+  writer <- RecordBatchStreamWriter$create(mock_stream, x$schema)\n+  writer$write(x)\n+  writer$close()\n+  mock_stream$GetExtentBytesWritten()\n+}\n+\n+#' Read Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `read_arrow()`\n+#' is a convenience wrapper around `read_stream()` and [read_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x string file path, buffer, or Arrow C++ class to read from. If\n+#' `read_arrow()` receives a `RecordBatchStreamReader` or a R `raw` vector,\n+#' it will dispatch to `read_stream()`; otherwise, it calls `read_feather()`\n+#' to write a file.\n+#' @param as_data_frame Should the function return a `data.frame` (default) or\n+#' an Arrow [Table]?\n+#' @param ... extra parameters passed to `read_feather()`.\n+#'\n+#' @return A `data.frame` if `as_data_frame` is `TRUE` (the default), or an\n+#' Arrow [Table] otherwise\n+#' @seealso [RecordBatchReader]\n+#' @export\n+read_arrow <- function(x, ...) {\n \n Review comment:\n   Similar to above I'd be in favor of nixing/deprecating this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.843+0000",
                    "updated": "2020-03-31T22:38:23.843+0000",
                    "started": "2020-03-31T22:38:23.842+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413586",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401255118\n \n \n\n ##########\n File path: r/R/record-batch.R\n ##########\n @@ -147,21 +147,41 @@ RecordBatch <- R6Class(\"RecordBatch\", inherit = ArrowObject,\n   )\n )\n \n-RecordBatch$create <- function(..., schema = NULL){\n+RecordBatch$create <- function(..., schema = NULL) {\n   arrays <- list2(...)\n+  if (length(arrays) == 1 && inherits(arrays[[1]], c(\"raw\", \"Buffer\", \"InputStream\", \"Message\"))) {\n+    return(RecordBatch$from_stream(arrays[[1]], schema))\n+  }\n+  # Else, list of arrays\n   # making sure there are always names\n   if (is.null(names(arrays))) {\n     names(arrays) <- rep_len(\"\", length(arrays))\n   }\n   stopifnot(length(arrays) > 0)\n+  # TODO: should this also assert that they're all Arrays?\n   shared_ptr(RecordBatch, RecordBatch__from_arrays(schema, arrays))\n }\n \n+RecordBatch$from_stream <- function(obj, schema) {\n \n Review comment:\n   This could well cause confusion. `RecordBatch$from_ipc_message` would be the most unambiguous name\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T22:38:23.881+0000",
                    "updated": "2020-03-31T22:38:23.881+0000",
                    "started": "2020-03-31T22:38:23.880+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413587",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#issuecomment-606934782\n \n \n   Thanks for the pedantry, @wesm. I was asking for it :)\r\n   \r\n   In sum, I agree about `s/stream/ipc_stream/g`, and some of the things you said don't make sense were mainly to keep existing tests passing. I'll look to deprecate the stranger ones. Re `read_arrow` and `write_arrow`, the latter is used by sparklyr, so I'd rather deprecate it after 0.17 (and after I submit a PR to sparklyr to stop using it). \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T23:16:47.398+0000",
                    "updated": "2020-03-31T23:16:47.398+0000",
                    "started": "2020-03-31T23:16:47.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413609",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#issuecomment-606935721\n \n \n   I see. Yeah on read_arrow/write_arrow I would say to make them a \"soft\" deprecation (basically put in the docstring \"please don't use this, use this other thing instead\") and then hard deprecate (with a warning message or something) in the next release. Agree with not scaring sparklyr users\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T23:19:21.601+0000",
                    "updated": "2020-03-31T23:19:21.601+0000",
                    "started": "2020-03-31T23:19:21.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413612",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401271053\n \n \n\n ##########\n File path: r/R/ipc.R\n ##########\n @@ -0,0 +1,122 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Write Arrow formatted data\n+#'\n+#' Apache Arrow defines two formats for [serializing data for interprocess\n+#' communication (IPC)](https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc):\n+#' a \"stream\" format and a \"file\" format, known as Feather. `write_arrow()`\n+#' is a convenience wrapper around `write_stream()` and [write_feather()], which\n+#' write those formats, respectively.\n+#'\n+#' @param x an Arrow [Table] or [RecordBatch], or a `data.frame`\n+#' @param sink string file path, buffer, or Arrow C++ class to write to. If\n+#' `write_arrow()` receives a `RecordBatchStreamWriter` or an empty R `raw` vector,\n+#' it will dispatch to `write_stream()`; otherwise, it calls `write_feather()`\n+#' to write a file.\n+#' @param ... extra parameters passed to `write_feather()`.\n+#'\n+#' @return `write_stream()` returns the stream: either the\n+#' `RecordBatchStreamWriter` passed to `sink`, connection still open, or if\n+#' `sink` is a `raw` vector, a new `raw` vector containing the bytes that were\n+#' written using a `RecordBatchStreamWriter`. `write_feather()` returns `x`,\n+#' invisibly.\n+#' @seealso [RecordBatchWriter]\n+#' @export\n+write_arrow <- function(x, sink, ...) {\n+  if (inherits(sink, c(\"RecordBatchStreamWriter\", \"raw\"))) {\n+    write_stream(x, sink, ...)\n+  } else {\n+    write_feather(x, sink, ...)\n+  }\n+}\n+\n+#' @rdname write_arrow\n+#' @export\n+write_stream <- function(x, sink, ...) {\n+  if (inherits(sink, \"raw\")) {\n+    if (is.data.frame(x)) {\n+      x <- Table$create(x)\n+    }\n+\n+    n <- count_bytes_to_serialize(x)\n+    # now that we know the size, stream in a buffer backed by an R raw vector\n+    bytes <- raw(n)\n+    buffer_writer <- FixedSizeBufferWriter$create(buffer(bytes))\n+    sink <- RecordBatchStreamWriter$create(buffer_writer, x$schema)\n+    on.exit(sink$close())\n+    sink$write(x)\n+    # Note that this returns a new R raw vector, not the one passed as `sink`\n+    # Nor is it returning an Arrow C++ object\n+    bytes\n+  } else {\n+    assert_is(sink, \"RecordBatchStreamWriter\")\n+    sink$write(x)\n+  }\n+}\n+\n+count_bytes_to_serialize <- function(x) {\n \n Review comment:\n   The whole write-ipc-stream-to-raw-vector function (this and the above) should be rethought, IMO. `sparklyr` uses this in its interface with Spark: it deals in `raw` R vectors containing the IPC stream format data. It seems like there must be a better way to accomplish this. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T23:22:56.325+0000",
                    "updated": "2020-03-31T23:22:56.325+0000",
                    "started": "2020-03-31T23:22:56.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413615",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401271719\n \n \n\n ##########\n File path: r/R/record-batch.R\n ##########\n @@ -147,21 +147,41 @@ RecordBatch <- R6Class(\"RecordBatch\", inherit = ArrowObject,\n   )\n )\n \n-RecordBatch$create <- function(..., schema = NULL){\n+RecordBatch$create <- function(..., schema = NULL) {\n   arrays <- list2(...)\n+  if (length(arrays) == 1 && inherits(arrays[[1]], c(\"raw\", \"Buffer\", \"InputStream\", \"Message\"))) {\n+    return(RecordBatch$from_stream(arrays[[1]], schema))\n+  }\n+  # Else, list of arrays\n   # making sure there are always names\n   if (is.null(names(arrays))) {\n     names(arrays) <- rep_len(\"\", length(arrays))\n   }\n   stopifnot(length(arrays) > 0)\n+  # TODO: should this also assert that they're all Arrays?\n   shared_ptr(RecordBatch, RecordBatch__from_arrays(schema, arrays))\n }\n \n+RecordBatch$from_stream <- function(obj, schema) {\n \n Review comment:\n   I don't understand how Message relates to IPC stream, but IIUC these are all about reading a record batch from and IPC stream format?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T23:24:57.869+0000",
                    "updated": "2020-03-31T23:24:57.869+0000",
                    "started": "2020-03-31T23:24:57.869+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413618",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401298227\n \n \n\n ##########\n File path: r/R/record-batch.R\n ##########\n @@ -147,21 +147,41 @@ RecordBatch <- R6Class(\"RecordBatch\", inherit = ArrowObject,\n   )\n )\n \n-RecordBatch$create <- function(..., schema = NULL){\n+RecordBatch$create <- function(..., schema = NULL) {\n   arrays <- list2(...)\n+  if (length(arrays) == 1 && inherits(arrays[[1]], c(\"raw\", \"Buffer\", \"InputStream\", \"Message\"))) {\n+    return(RecordBatch$from_stream(arrays[[1]], schema))\n+  }\n+  # Else, list of arrays\n   # making sure there are always names\n   if (is.null(names(arrays))) {\n     names(arrays) <- rep_len(\"\", length(arrays))\n   }\n   stopifnot(length(arrays) > 0)\n+  # TODO: should this also assert that they're all Arrays?\n   shared_ptr(RecordBatch, RecordBatch__from_arrays(schema, arrays))\n }\n \n+RecordBatch$from_stream <- function(obj, schema) {\n \n Review comment:\n   This function loads a RecordBatch from an encapsulated IPC message. So it's loading a single message component of a stream, assuming you already have the schema. Note that it won't work if there are dictionaries (you need to pass a populated) dictionary memo\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T00:58:24.730+0000",
                    "updated": "2020-04-01T00:58:24.730+0000",
                    "started": "2020-04-01T00:58:24.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413650",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401298227\n \n \n\n ##########\n File path: r/R/record-batch.R\n ##########\n @@ -147,21 +147,41 @@ RecordBatch <- R6Class(\"RecordBatch\", inherit = ArrowObject,\n   )\n )\n \n-RecordBatch$create <- function(..., schema = NULL){\n+RecordBatch$create <- function(..., schema = NULL) {\n   arrays <- list2(...)\n+  if (length(arrays) == 1 && inherits(arrays[[1]], c(\"raw\", \"Buffer\", \"InputStream\", \"Message\"))) {\n+    return(RecordBatch$from_stream(arrays[[1]], schema))\n+  }\n+  # Else, list of arrays\n   # making sure there are always names\n   if (is.null(names(arrays))) {\n     names(arrays) <- rep_len(\"\", length(arrays))\n   }\n   stopifnot(length(arrays) > 0)\n+  # TODO: should this also assert that they're all Arrays?\n   shared_ptr(RecordBatch, RecordBatch__from_arrays(schema, arrays))\n }\n \n+RecordBatch$from_stream <- function(obj, schema) {\n \n Review comment:\n   This function loads a RecordBatch from an encapsulated IPC message. So it's loading a single message component of a stream, assuming you already have the schema. Note that it won't work if there are dictionaries (you need to pass a populated dictionary memo). It might be worth not even having this function yet since there's work to do to make it functionally complete\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T00:58:49.426+0000",
                    "updated": "2020-04-01T00:58:49.426+0000",
                    "started": "2020-04-01T00:58:49.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413651",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/413652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#discussion_r401298978\n \n \n\n ##########\n File path: r/R/record-batch.R\n ##########\n @@ -147,21 +147,41 @@ RecordBatch <- R6Class(\"RecordBatch\", inherit = ArrowObject,\n   )\n )\n \n-RecordBatch$create <- function(..., schema = NULL){\n+RecordBatch$create <- function(..., schema = NULL) {\n   arrays <- list2(...)\n+  if (length(arrays) == 1 && inherits(arrays[[1]], c(\"raw\", \"Buffer\", \"InputStream\", \"Message\"))) {\n+    return(RecordBatch$from_stream(arrays[[1]], schema))\n+  }\n+  # Else, list of arrays\n   # making sure there are always names\n   if (is.null(names(arrays))) {\n     names(arrays) <- rep_len(\"\", length(arrays))\n   }\n   stopifnot(length(arrays) > 0)\n+  # TODO: should this also assert that they're all Arrays?\n   shared_ptr(RecordBatch, RecordBatch__from_arrays(schema, arrays))\n }\n \n+RecordBatch$from_stream <- function(obj, schema) {\n \n Review comment:\n   Have a look at https://www.slideshare.net/wesm/apache-arrow-workshop-at-vldb-2019-boss-session-169065658\r\n   \r\n   Slides 35 onward. Basically what is here is a function that loads just the \"RecordBatch\" message given a schema plus dictionaries that have already been loaded previously\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T01:00:51.527+0000",
                    "updated": "2020-04-01T01:00:51.527+0000",
                    "started": "2020-04-01T01:00:51.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413652",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/415037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#issuecomment-608085516\n \n \n   @wesm I did some further cleanup and, wearing my own pedantic hat, am much more satisfied. PTAL at your convenience; summary updated to reflect the latest. I'll merge now/soon/GitHub willing but I can address any doubts in https://issues.apache.org/jira/browse/ARROW-8300.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-02T21:05:46.398+0000",
                    "updated": "2020-04-02T21:05:46.398+0000",
                    "started": "2020-04-02T21:05:46.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415037",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/415066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-02T21:42:30.661+0000",
                    "updated": "2020-04-02T21:42:30.661+0000",
                    "started": "2020-04-02T21:42:30.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415066",
                    "issueId": "13237354"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/worklog/415111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6771: ARROW-5501: [R] Reorganize read/write file/stream functions\nURL: https://github.com/apache/arrow/pull/6771#issuecomment-608133760\n \n \n   Thanks for wrapping this up. On the Feather side\r\n   \r\n   > Since Arrow IPC has two formats, file (aka Feather) and stream, read/write_ipc_stream() are added as siblings to read/write_feather().\r\n   \r\n   Let's add read/write_ipc_file also? I'm wary of the \"version\" option in \"write_feather\" and the Feather version inference capability in \"read_feather\". It's potentially confusing and we may choose to add options to write_ipc_file/read_ipc_file that are more developer centric, having to do particular with the IPC format, that are not relevant or appropriate for the Feather APIs.\r\n   \r\n   IMHO it's best for \"Feather format\" to remain an abstracted higher-level concept with its use of the \"IPC file format\" as an implementation detail, and segregated from the other things. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-02T22:56:18.336+0000",
                    "updated": "2020-04-02T22:56:18.336+0000",
                    "started": "2020-04-02T22:56:18.336+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415111",
                    "issueId": "13237354"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2189eb58[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@689a35a2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58172cd4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@61192551[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@697da3f4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@9a4d57b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68b42917[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@40afbafd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4449d31f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b69c9e0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@225cb90b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f1997ef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 02 21:42:31 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-02T21:42:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5501/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-06-03T22:37:00.000+0000",
        "updated": "2020-04-02T23:13:28.000+0000",
        "timeoriginalestimate": null,
        "description": "read_feather and write_feather exist, and there is also write_arrow. But no read_arrow.\r\n\r\nSome questions (which go beyond just R): There's talk of a \"feather 2.0\", i.e. \"just\" serializing the IPC format (which IIUC is what write_arrow does). Are we going to continue to call the file format \"Feather\", and possibly\u00a0continue supporting the \"feather 1.0\" format as a subset/special case? Or will \"feather\" mean this limited format and \"arrow\" be the name of the full-featured file?\r\n\r\nIn terms of this issue, should write_arrow be folded into write_feather and there be an argument for indicating which version to write? Or should the distinction be maintained, and we need to add a read_arrow() function?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Reorganize read/write file/stream functions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/comment/16855181",
                    "id": "16855181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Can you open a JIRA issue about FeatherV2 (or maybe this is the issue)? I would like to retain the file format name as a \"simple memory-mappable Arrow-based file format\" and handle backwards compatibility for old files for some period of time",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-04T00:50:36.815+0000",
                    "updated": "2019-06-04T00:50:48.926+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/comment/16856132",
                    "id": "16856132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Created here:\u00a0https://issues.apache.org/jira/browse/ARROW-5510",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-06-04T21:27:38.053+0000",
                    "updated": "2019-06-04T21:27:38.053+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237354/comment/17074103",
                    "id": "17074103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6771\n[https://github.com/apache/arrow/pull/6771]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-04-02T21:42:31.029+0000",
                    "updated": "2020-04-02T21:42:31.029+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z03dm8:",
        "customfield_12314139": null
    }
}