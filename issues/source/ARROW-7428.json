{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13275201",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201",
    "key": "ARROW-7428",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7428/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/380553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340\n \n \n   This is to solve [ARROW-7428](https://issues.apache.org/jira/browse/ARROW-7428).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-02T16:41:54.347+0000",
                    "updated": "2020-02-02T16:41:54.347+0000",
                    "started": "2020-02-02T16:41:54.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380553",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/380555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#issuecomment-581153467\n \n \n   https://issues.apache.org/jira/browse/ARROW-7428\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-02T16:46:30.526+0000",
                    "updated": "2020-02-02T16:46:30.526+0000",
                    "started": "2020-02-02T16:46:30.526+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380555",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/395687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#issuecomment-593160734\n \n \n   @pitrou @mrkn - I'm tying to serialize [vectors of Buffers](https://github.com/apache/arrow/pull/6340/files#diff-c07b6024c7170d1dcf02b239f3bfb8b6R160) but I'm getting [wrong buffer offsets and lengths](https://github.com/apache/arrow/pull/6340/checks?check_run_id=478364955#step:5:1803) on deserializing. Any idea why this is? I'm a bit stuck.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-01T23:07:13.380+0000",
                    "updated": "2020-03-01T23:07:13.380+0000",
                    "started": "2020-03-01T23:07:13.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395687",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/397122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r387352774\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.cc\n ##########\n @@ -961,6 +961,58 @@ Status MakeSparseMatrixIndexCSX(FBB& fbb, const SparseIndexType& sparse_index,\n   return Status::OK();\n }\n \n+Status MakeSparseTensorIndexCSF(FBB& fbb, const SparseCSFIndex& sparse_index,\n+                                const std::vector<BufferMetadata>& buffers,\n+                                flatbuf::SparseTensorIndex* fb_sparse_index_type,\n+                                Offset* fb_sparse_index, size_t* num_buffers) {\n+  *fb_sparse_index_type = flatbuf::SparseTensorIndex::SparseTensorIndexCSF;\n+  int ndim = sparse_index.axis_order().size();\n+\n+  // We assume that the value type of indptr tensor is an integer.\n+  const auto& indptr_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indptr()[0]->type());\n+  auto indptr_type_offset = flatbuf::CreateInt(fbb, indptr_value_type.bit_width(),\n+                                               indptr_value_type.is_signed());\n+\n+  // We assume that the value type of indices tensor is an integer.\n+  const auto& indices_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indices()[0]->type());\n+  auto indices_type_offset = flatbuf::CreateInt(fbb, indices_value_type.bit_width(),\n+                                                indices_value_type.is_signed());\n+\n+  std::vector<const flatbuf::Buffer*> indptr;\n+  std::vector<const flatbuf::Buffer*> indices;\n+\n+  for (int i = 0; i < ndim - 1; ++i) {\n+    const BufferMetadata& buffer = buffers[i];\n+    flatbuf::Buffer tmp_buffer(buffer.offset, buffer.length);\n+    indptr.emplace_back(&tmp_buffer);\n \n Review comment:\n   Changed. The objects now stay in memory after the for loops have completed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-03T23:17:00.308+0000",
                    "updated": "2020-03-03T23:17:00.308+0000",
                    "started": "2020-03-03T23:17:00.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397122",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/397123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r387353898\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -954,6 +955,36 @@ Result<std::shared_ptr<SparseIndex>> ReadSparseCSXIndex(\n   }\n }\n \n+Result<std::shared_ptr<SparseIndex>> ReadSparseCSFIndex(\n+    const flatbuf::SparseTensor* sparse_tensor, const std::vector<int64_t>& shape,\n+    io::RandomAccessFile* file) {\n+  auto* sparse_index = sparse_tensor->sparseIndex_as_SparseTensorIndexCSF();\n+  const auto ndim = static_cast<int64_t>(shape.size());\n+  auto* indptr_buffers = sparse_index->indptrBuffers();\n+  auto* indices_buffers = sparse_index->indicesBuffers();\n+  std::vector<std::shared_ptr<Buffer>> indptr_data(ndim - 1);\n+  std::vector<std::shared_ptr<Buffer>> indices_data(ndim);\n+\n+  std::shared_ptr<DataType> indptr_type, indices_type;\n+  std::vector<int64_t> indices_size, axis_order;\n+\n+  RETURN_NOT_OK(internal::GetSparseCSFIndexMetadata(\n+      sparse_index, &indices_size, &axis_order, &indptr_type, &indices_type));\n+\n+  for (int64_t i = 0; i < ndim - 1; ++i) {\n+    ARROW_ASSIGN_OR_RAISE(indptr_data[i], file->ReadAt(indptr_buffers->Get(i)->offset(),\n+                                                       indptr_buffers->Get(i)->length()));\n+  }\n+  for (int64_t i = ndim - 1; i < 2 * ndim - 1; ++i) {\n \n Review comment:\n   Changed.\r\n   It seems the offset and length values here are either not correctly read from metadata or something goes wrong at write-time. Either way I'm getting:\r\n   ```\r\n   '_error_or_value26.status()' failed with IOError: Read out of bounds (offset = 94719482752432, size = 1688849860263936) in file of size 264\r\n   \r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-03T23:20:46.725+0000",
                    "updated": "2020-03-03T23:20:46.725+0000",
                    "started": "2020-03-03T23:20:46.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "397123",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/405665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r394556083\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -810,6 +815,25 @@ class SparseTensorSerializer {\n     return Status::OK();\n   }\n \n+  Status VisitSparseCSFIndex(const SparseCSFIndex& sparse_index) {\n+    std::shared_ptr<Buffer> indptrs, indices;\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers, indices_buffers;\n+\n+    for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\n+      indptr_buffers.emplace_back(indptr->data());\n+    }\n+    for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\n+      indices_buffers.emplace_back(indices->data());\n+    }\n+\n+    RETURN_NOT_OK(ConcatenateBuffers(indptr_buffers, default_memory_pool(), &indptrs));\n \n Review comment:\n   @mrkn @pitrou do you know of a better approach to do this given the [schema](https://github.com/apache/arrow/blob/7e325a24c25575f83095afe84413beda4e05a64a/format/SparseTensor.fbs#L160)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-18T18:28:29.262+0000",
                    "updated": "2020-03-18T18:28:29.262+0000",
                    "started": "2020-03-18T18:28:29.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "405665",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/406141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r394999173\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -810,6 +815,25 @@ class SparseTensorSerializer {\n     return Status::OK();\n   }\n \n+  Status VisitSparseCSFIndex(const SparseCSFIndex& sparse_index) {\n+    std::shared_ptr<Buffer> indptrs, indices;\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers, indices_buffers;\n+\n+    for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\n+      indptr_buffers.emplace_back(indptr->data());\n+    }\n+    for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\n+      indices_buffers.emplace_back(indices->data());\n+    }\n+\n+    RETURN_NOT_OK(ConcatenateBuffers(indptr_buffers, default_memory_pool(), &indptrs));\n \n Review comment:\n   I'm not sure I understand. `SparseTensorIndexCSF.indptrBuffers` and `SparseTensorIndexCSF.indicesBuffers` are supposed to be arrays of buffers. Why do you need to concatenate them?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T12:46:59.103+0000",
                    "updated": "2020-03-19T12:46:59.103+0000",
                    "started": "2020-03-19T12:46:59.103+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406141",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/406148",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r395002943\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -810,6 +815,25 @@ class SparseTensorSerializer {\n     return Status::OK();\n   }\n \n+  Status VisitSparseCSFIndex(const SparseCSFIndex& sparse_index) {\n+    std::shared_ptr<Buffer> indptrs, indices;\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers, indices_buffers;\n+\n+    for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\n+      indptr_buffers.emplace_back(indptr->data());\n+    }\n+    for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\n+      indices_buffers.emplace_back(indices->data());\n+    }\n+\n+    RETURN_NOT_OK(ConcatenateBuffers(indptr_buffers, default_memory_pool(), &indptrs));\n \n Review comment:\n   My understanding is that [`Assemble`](https://github.com/apache/arrow/blob/7e325a24c25575f83095afe84413beda4e05a64a/cpp/src/arrow/ipc/writer.cc#L774) expects a vector of buffers to serialize.\r\n   Alternatively we could do:\r\n   ```\r\n       for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\r\n         out_->body_buffers.emplace_back(indptr->data());\r\n       }\r\n       for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\r\n         out_->body_buffers.emplace_back(indices->data());\r\n       }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T12:54:02.921+0000",
                    "updated": "2020-03-19T12:54:02.921+0000",
                    "started": "2020-03-19T12:54:02.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406148",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/406153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r395009217\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -810,6 +815,25 @@ class SparseTensorSerializer {\n     return Status::OK();\n   }\n \n+  Status VisitSparseCSFIndex(const SparseCSFIndex& sparse_index) {\n+    std::shared_ptr<Buffer> indptrs, indices;\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers, indices_buffers;\n+\n+    for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\n+      indptr_buffers.emplace_back(indptr->data());\n+    }\n+    for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\n+      indices_buffers.emplace_back(indices->data());\n+    }\n+\n+    RETURN_NOT_OK(ConcatenateBuffers(indptr_buffers, default_memory_pool(), &indptrs));\n \n Review comment:\n   That would look better, but you also have to fill the `SparseTensorIndexCSF` fields appropriately.\r\n   \r\n   By the way, I think you should tackle Python serialization in a separate PR and focus on IPC here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T13:05:02.320+0000",
                    "updated": "2020-03-19T13:05:02.320+0000",
                    "started": "2020-03-19T13:05:02.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406153",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/406161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r395020939\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -810,6 +815,25 @@ class SparseTensorSerializer {\n     return Status::OK();\n   }\n \n+  Status VisitSparseCSFIndex(const SparseCSFIndex& sparse_index) {\n+    std::shared_ptr<Buffer> indptrs, indices;\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers, indices_buffers;\n+\n+    for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\n+      indptr_buffers.emplace_back(indptr->data());\n+    }\n+    for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\n+      indices_buffers.emplace_back(indices->data());\n+    }\n+\n+    RETURN_NOT_OK(ConcatenateBuffers(indptr_buffers, default_memory_pool(), &indptrs));\n \n Review comment:\n   > By the way, I think you should tackle Python serialization in a separate PR and focus on IPC here.\r\n   \r\n   Will do.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T13:24:05.845+0000",
                    "updated": "2020-03-19T13:24:05.845+0000",
                    "started": "2020-03-19T13:24:05.844+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406161",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/406255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r395020939\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -810,6 +815,25 @@ class SparseTensorSerializer {\n     return Status::OK();\n   }\n \n+  Status VisitSparseCSFIndex(const SparseCSFIndex& sparse_index) {\n+    std::shared_ptr<Buffer> indptrs, indices;\n+    std::vector<std::shared_ptr<Buffer>> indptr_buffers, indices_buffers;\n+\n+    for (const std::shared_ptr<arrow::Tensor> indptr : sparse_index.indptr()) {\n+      indptr_buffers.emplace_back(indptr->data());\n+    }\n+    for (const std::shared_ptr<arrow::Tensor> indices : sparse_index.indices()) {\n+      indices_buffers.emplace_back(indices->data());\n+    }\n+\n+    RETURN_NOT_OK(ConcatenateBuffers(indptr_buffers, default_memory_pool(), &indptrs));\n \n Review comment:\n   > By the way, I think you should tackle Python serialization in a separate PR and focus on IPC here.\r\n   \r\n   Done. #6667\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T14:30:13.057+0000",
                    "updated": "2020-03-19T14:30:13.057+0000",
                    "started": "2020-03-19T14:30:13.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406255",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/407001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#issuecomment-601649410\n \n \n   I think this is ready for review.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-20T11:19:15.039+0000",
                    "updated": "2020-03-20T11:19:15.039+0000",
                    "started": "2020-03-20T11:19:15.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407001",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/412388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#issuecomment-606066544\n \n \n   Ping.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-30T15:23:30.960+0000",
                    "updated": "2020-03-30T15:23:30.960+0000",
                    "started": "2020-03-30T15:23:30.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412388",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/412723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r400554661\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.cc\n ##########\n @@ -957,6 +957,67 @@ Status MakeSparseMatrixIndexCSX(FBB& fbb, const SparseIndexType& sparse_index,\n   return Status::OK();\n }\n \n+Status MakeSparseTensorIndexCSF(FBB& fbb, const SparseCSFIndex& sparse_index,\n+                                const std::vector<BufferMetadata>& buffers,\n+                                flatbuf::SparseTensorIndex* fb_sparse_index_type,\n+                                Offset* fb_sparse_index, size_t* num_buffers) {\n+  *fb_sparse_index_type = flatbuf::SparseTensorIndex::SparseTensorIndexCSF;\n+  const int ndim = static_cast<int>(sparse_index.axis_order().size());\n+\n+  // We assume that the value type of indptr tensor is an integer.\n+  const auto& indptr_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indptr()[0]->type());\n+  auto indptr_type_offset = flatbuf::CreateInt(fbb, indptr_value_type.bit_width(),\n+                                               indptr_value_type.is_signed());\n+\n+  // We assume that the value type of indices tensor is an integer.\n+  const auto& indices_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indices()[0]->type());\n+  auto indices_type_offset = flatbuf::CreateInt(fbb, indices_value_type.bit_width(),\n+                                                indices_value_type.is_signed());\n+\n+  const int64_t indptr_elem_size = indptr_value_type.bit_width() / 8;\n+  const int64_t indices_elem_size = indices_value_type.bit_width() / 8;\n+\n+  int64_t indptr_offset = 0;\n+  int64_t indices_offset = 0;\n+  std::vector<flatbuf::Buffer> indptr, indices;\n+\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indptr()) {\n+    const int64_t size = tensor->data()->size() / indptr_elem_size;\n+    const int64_t padding = BitUtil::RoundUpToMultipleOf8(size * indptr_elem_size) - size;\n+\n+    indptr.push_back({indptr_offset, size});\n+    indptr_offset += size + padding;\n+  }\n+  indices_offset = indptr_offset;\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indices()) {\n+    const int64_t size = tensor->data()->size() / indices_elem_size;\n+    const int64_t padding =\n+        BitUtil::RoundUpToMultipleOf8(size * indices_elem_size) - size;\n+\n+    indices.push_back({indices_offset, size});\n+    indices_offset += size + padding;\n+  }\n \n Review comment:\n   I'm curious if at some point you would want to make the alignment configurable between 8 and 64 bytes\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T00:59:37.295+0000",
                    "updated": "2020-03-31T00:59:37.295+0000",
                    "started": "2020-03-31T00:59:37.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412723",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/412724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r400556530\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/read_write_test.cc\n ##########\n @@ -1289,6 +1289,66 @@ class TestSparseTensorRoundTrip : public ::testing::Test, public IpcTestFixture\n     ASSERT_TRUE(result->Equals(sparse_tensor));\n   }\n \n+  void CheckSparseCSFTensorRoundTrip(const SparseCSFTensor& sparse_tensor) {\n+    const auto& type = checked_cast<const FixedWidthType&>(*sparse_tensor.type());\n+    const int elem_size = type.bit_width() / 8;\n+    const int index_elem_size = sizeof(typename IndexValueType::c_type);\n+\n+    int32_t metadata_length;\n+    int64_t body_length;\n+\n+    ASSERT_OK(mmap_->Seek(0));\n+\n+    ASSERT_OK(\n+        WriteSparseTensor(sparse_tensor, mmap_.get(), &metadata_length, &body_length));\n+\n+    const auto& sparse_index =\n+        checked_cast<const SparseCSFIndex&>(*sparse_tensor.sparse_index());\n+\n+    const int64_t ndim = sparse_index.axis_order().size();\n+    int64_t indptr_length = 0;\n+    int64_t indices_length = 0;\n+\n+    for (int64_t i = 0; i < ndim - 1; ++i) {\n+      indptr_length += BitUtil::RoundUpToMultipleOf8(index_elem_size *\n+                                                     sparse_index.indptr()[i]->size());\n+    }\n+    for (int64_t i = 0; i < ndim; ++i) {\n+      indices_length += BitUtil::RoundUpToMultipleOf8(index_elem_size *\n+                                                      sparse_index.indices()[i]->size());\n+    }\n+    const int64_t data_length =\n+        BitUtil::RoundUpToMultipleOf8(elem_size * sparse_tensor.non_zero_length());\n+    const int64_t expected_body_length = indptr_length + indices_length + data_length;\n+    ASSERT_EQ(expected_body_length, body_length);\n \n Review comment:\n   Is there value in rehashing this computation versus comparing the written object with the read one, e.g. `sparse_tensor->Equals(*result)`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T00:59:37.389+0000",
                    "updated": "2020-03-31T00:59:37.389+0000",
                    "started": "2020-03-31T00:59:37.388+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412724",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/412765",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r400592272\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.cc\n ##########\n @@ -957,6 +957,67 @@ Status MakeSparseMatrixIndexCSX(FBB& fbb, const SparseIndexType& sparse_index,\n   return Status::OK();\n }\n \n+Status MakeSparseTensorIndexCSF(FBB& fbb, const SparseCSFIndex& sparse_index,\n+                                const std::vector<BufferMetadata>& buffers,\n+                                flatbuf::SparseTensorIndex* fb_sparse_index_type,\n+                                Offset* fb_sparse_index, size_t* num_buffers) {\n+  *fb_sparse_index_type = flatbuf::SparseTensorIndex::SparseTensorIndexCSF;\n+  const int ndim = static_cast<int>(sparse_index.axis_order().size());\n+\n+  // We assume that the value type of indptr tensor is an integer.\n+  const auto& indptr_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indptr()[0]->type());\n+  auto indptr_type_offset = flatbuf::CreateInt(fbb, indptr_value_type.bit_width(),\n+                                               indptr_value_type.is_signed());\n+\n+  // We assume that the value type of indices tensor is an integer.\n+  const auto& indices_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indices()[0]->type());\n+  auto indices_type_offset = flatbuf::CreateInt(fbb, indices_value_type.bit_width(),\n+                                                indices_value_type.is_signed());\n+\n+  const int64_t indptr_elem_size = indptr_value_type.bit_width() / 8;\n+  const int64_t indices_elem_size = indices_value_type.bit_width() / 8;\n+\n+  int64_t indptr_offset = 0;\n+  int64_t indices_offset = 0;\n+  std::vector<flatbuf::Buffer> indptr, indices;\n+\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indptr()) {\n+    const int64_t size = tensor->data()->size() / indptr_elem_size;\n+    const int64_t padding = BitUtil::RoundUpToMultipleOf8(size * indptr_elem_size) - size;\n+\n+    indptr.push_back({indptr_offset, size});\n+    indptr_offset += size + padding;\n+  }\n+  indices_offset = indptr_offset;\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indices()) {\n+    const int64_t size = tensor->data()->size() / indices_elem_size;\n+    const int64_t padding =\n+        BitUtil::RoundUpToMultipleOf8(size * indices_elem_size) - size;\n+\n+    indices.push_back({indices_offset, size});\n+    indices_offset += size + padding;\n+  }\n+\n+  auto fb_indices = fbb.CreateVectorOfStructs(indices);\n+  auto fb_indptr = fbb.CreateVectorOfStructs(indptr);\n+\n+  std::vector<int> axis_order;\n+  for (int i = 0; i < ndim; ++i) {\n+    axis_order.emplace_back(static_cast<const int>(sparse_index.axis_order()[i]));\n \n Review comment:\n   Why you cast the value to `const int` instead of just `int`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T01:50:14.835+0000",
                    "updated": "2020-03-31T01:50:14.835+0000",
                    "started": "2020-03-31T01:50:14.835+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412765",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/413312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r401035724\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/read_write_test.cc\n ##########\n @@ -1289,6 +1289,66 @@ class TestSparseTensorRoundTrip : public ::testing::Test, public IpcTestFixture\n     ASSERT_TRUE(result->Equals(sparse_tensor));\n   }\n \n+  void CheckSparseCSFTensorRoundTrip(const SparseCSFTensor& sparse_tensor) {\n+    const auto& type = checked_cast<const FixedWidthType&>(*sparse_tensor.type());\n+    const int elem_size = type.bit_width() / 8;\n+    const int index_elem_size = sizeof(typename IndexValueType::c_type);\n+\n+    int32_t metadata_length;\n+    int64_t body_length;\n+\n+    ASSERT_OK(mmap_->Seek(0));\n+\n+    ASSERT_OK(\n+        WriteSparseTensor(sparse_tensor, mmap_.get(), &metadata_length, &body_length));\n+\n+    const auto& sparse_index =\n+        checked_cast<const SparseCSFIndex&>(*sparse_tensor.sparse_index());\n+\n+    const int64_t ndim = sparse_index.axis_order().size();\n+    int64_t indptr_length = 0;\n+    int64_t indices_length = 0;\n+\n+    for (int64_t i = 0; i < ndim - 1; ++i) {\n+      indptr_length += BitUtil::RoundUpToMultipleOf8(index_elem_size *\n+                                                     sparse_index.indptr()[i]->size());\n+    }\n+    for (int64_t i = 0; i < ndim; ++i) {\n+      indices_length += BitUtil::RoundUpToMultipleOf8(index_elem_size *\n+                                                      sparse_index.indices()[i]->size());\n+    }\n+    const int64_t data_length =\n+        BitUtil::RoundUpToMultipleOf8(elem_size * sparse_tensor.non_zero_length());\n+    const int64_t expected_body_length = indptr_length + indices_length + data_length;\n+    ASSERT_EQ(expected_body_length, body_length);\n \n Review comment:\n   Not really. I kept it to stay consistent with `CheckSparseCOOTensorRoundTrip` and `CheckSparseCSXMatrixRoundTrip`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T16:07:52.748+0000",
                    "updated": "2020-03-31T16:07:52.748+0000",
                    "started": "2020-03-31T16:07:52.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413312",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/413315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r401040954\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.cc\n ##########\n @@ -957,6 +957,67 @@ Status MakeSparseMatrixIndexCSX(FBB& fbb, const SparseIndexType& sparse_index,\n   return Status::OK();\n }\n \n+Status MakeSparseTensorIndexCSF(FBB& fbb, const SparseCSFIndex& sparse_index,\n+                                const std::vector<BufferMetadata>& buffers,\n+                                flatbuf::SparseTensorIndex* fb_sparse_index_type,\n+                                Offset* fb_sparse_index, size_t* num_buffers) {\n+  *fb_sparse_index_type = flatbuf::SparseTensorIndex::SparseTensorIndexCSF;\n+  const int ndim = static_cast<int>(sparse_index.axis_order().size());\n+\n+  // We assume that the value type of indptr tensor is an integer.\n+  const auto& indptr_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indptr()[0]->type());\n+  auto indptr_type_offset = flatbuf::CreateInt(fbb, indptr_value_type.bit_width(),\n+                                               indptr_value_type.is_signed());\n+\n+  // We assume that the value type of indices tensor is an integer.\n+  const auto& indices_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indices()[0]->type());\n+  auto indices_type_offset = flatbuf::CreateInt(fbb, indices_value_type.bit_width(),\n+                                                indices_value_type.is_signed());\n+\n+  const int64_t indptr_elem_size = indptr_value_type.bit_width() / 8;\n+  const int64_t indices_elem_size = indices_value_type.bit_width() / 8;\n+\n+  int64_t indptr_offset = 0;\n+  int64_t indices_offset = 0;\n+  std::vector<flatbuf::Buffer> indptr, indices;\n+\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indptr()) {\n+    const int64_t size = tensor->data()->size() / indptr_elem_size;\n+    const int64_t padding = BitUtil::RoundUpToMultipleOf8(size * indptr_elem_size) - size;\n+\n+    indptr.push_back({indptr_offset, size});\n+    indptr_offset += size + padding;\n+  }\n+  indices_offset = indptr_offset;\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indices()) {\n+    const int64_t size = tensor->data()->size() / indices_elem_size;\n+    const int64_t padding =\n+        BitUtil::RoundUpToMultipleOf8(size * indices_elem_size) - size;\n+\n+    indices.push_back({indices_offset, size});\n+    indices_offset += size + padding;\n+  }\n \n Review comment:\n   Switching to `kArrowIpcAlignment` for padding. Is that what you had in mind?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T16:15:31.922+0000",
                    "updated": "2020-03-31T16:15:31.922+0000",
                    "started": "2020-03-31T16:15:31.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413315",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/413317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#discussion_r401044433\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.cc\n ##########\n @@ -957,6 +957,67 @@ Status MakeSparseMatrixIndexCSX(FBB& fbb, const SparseIndexType& sparse_index,\n   return Status::OK();\n }\n \n+Status MakeSparseTensorIndexCSF(FBB& fbb, const SparseCSFIndex& sparse_index,\n+                                const std::vector<BufferMetadata>& buffers,\n+                                flatbuf::SparseTensorIndex* fb_sparse_index_type,\n+                                Offset* fb_sparse_index, size_t* num_buffers) {\n+  *fb_sparse_index_type = flatbuf::SparseTensorIndex::SparseTensorIndexCSF;\n+  const int ndim = static_cast<int>(sparse_index.axis_order().size());\n+\n+  // We assume that the value type of indptr tensor is an integer.\n+  const auto& indptr_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indptr()[0]->type());\n+  auto indptr_type_offset = flatbuf::CreateInt(fbb, indptr_value_type.bit_width(),\n+                                               indptr_value_type.is_signed());\n+\n+  // We assume that the value type of indices tensor is an integer.\n+  const auto& indices_value_type =\n+      checked_cast<const IntegerType&>(*sparse_index.indices()[0]->type());\n+  auto indices_type_offset = flatbuf::CreateInt(fbb, indices_value_type.bit_width(),\n+                                                indices_value_type.is_signed());\n+\n+  const int64_t indptr_elem_size = indptr_value_type.bit_width() / 8;\n+  const int64_t indices_elem_size = indices_value_type.bit_width() / 8;\n+\n+  int64_t indptr_offset = 0;\n+  int64_t indices_offset = 0;\n+  std::vector<flatbuf::Buffer> indptr, indices;\n+\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indptr()) {\n+    const int64_t size = tensor->data()->size() / indptr_elem_size;\n+    const int64_t padding = BitUtil::RoundUpToMultipleOf8(size * indptr_elem_size) - size;\n+\n+    indptr.push_back({indptr_offset, size});\n+    indptr_offset += size + padding;\n+  }\n+  indices_offset = indptr_offset;\n+  for (const std::shared_ptr<arrow::Tensor> tensor : sparse_index.indices()) {\n+    const int64_t size = tensor->data()->size() / indices_elem_size;\n+    const int64_t padding =\n+        BitUtil::RoundUpToMultipleOf8(size * indices_elem_size) - size;\n+\n+    indices.push_back({indices_offset, size});\n+    indices_offset += size + padding;\n+  }\n+\n+  auto fb_indices = fbb.CreateVectorOfStructs(indices);\n+  auto fb_indptr = fbb.CreateVectorOfStructs(indptr);\n+\n+  std::vector<int> axis_order;\n+  for (int i = 0; i < ndim; ++i) {\n+    axis_order.emplace_back(static_cast<const int>(sparse_index.axis_order()[i]));\n \n Review comment:\n   Changed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T16:20:33.748+0000",
                    "updated": "2020-03-31T16:20:33.748+0000",
                    "started": "2020-03-31T16:20:33.748+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413317",
                    "issueId": "13275201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/worklog/413318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #6340: ARROW-7428: [Format][C++] Add serialization for CSF sparse tensors\nURL: https://github.com/apache/arrow/pull/6340#issuecomment-606731266\n \n \n   Thanks for the review @wesm and @mrkn. I've pushed another commit.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T16:21:56.336+0000",
                    "updated": "2020-03-31T16:21:56.336+0000",
                    "started": "2020-03-31T16:21:56.336+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413318",
                    "issueId": "13275201"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e63a8d6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37fcf59b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50ff0623[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7f718a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58778630[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4238d9a9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a5e11d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@11d6ce33[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75f48c3f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7105e6b9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b4fb1c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4c4f5dcf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 01 00:55:37 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-01T00:55:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7428/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-12-18T09:13:14.000+0000",
        "updated": "2020-04-01T10:12:46.000+0000",
        "timeoriginalestimate": null,
        "description": "Once ARROW-4225 and ARROW-4226  are completed we should add serialization support.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format][C++] Add serialization for CSF sparse tensors",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275201/comment/17072274",
                    "id": "17072274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6340\n[https://github.com/apache/arrow/pull/6340]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-04-01T00:55:37.366+0000",
                    "updated": "2020-04-01T00:55:37.366+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z09sk0:",
        "customfield_12314139": null
    }
}