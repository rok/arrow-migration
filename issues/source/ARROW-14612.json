{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13410297",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297",
    "key": "ARROW-14612",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "good-second-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12637131",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637131",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13437663",
                    "key": "ARROW-16113",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437663",
                    "fields": {
                        "summary": "[Python] Partitioning.dictionaries in case of a subset of fields are dictionary encoded",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
                            "id": "6",
                            "description": "A new unit, integration or system test.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
                            "name": "Test",
                            "subtask": false
                        }
                    }
                }
            },
            {
                "id": "12637458",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637458",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13404129",
                    "key": "ARROW-14176",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404129",
                    "fields": {
                        "summary": "[Python] Filename-based partitioning scheme",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12632850",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12632850",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13420906",
                    "key": "ARROW-15260",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906",
                    "fields": {
                        "summary": "[R] open_dataset - add file_name as column",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12637371",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637371",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13436849",
                    "key": "ARROW-16080",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13436849",
                    "fields": {
                        "summary": "[R][Documentation] Document filename-based partitioning and filename-as-variable functionality",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12632851",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12632851",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13421315",
                    "key": "ARROW-15281",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13421315",
                    "fields": {
                        "summary": "[C++] Implement ability to retrieve fragment filename",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sanjibansg",
            "name": "sanjibansg",
            "key": "JIRAUSER282926",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Sanjiban Sengupta",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "aggregateprogress": {
            "progress": 48600,
            "total": 48600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 48600,
            "total": 48600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14612/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 81,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/734592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg opened a new pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530\n\n\n   This PR adds support for Filename-based partitioning. With this change, dataset partitions will be formed by the filenames separated by `_`\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-01T14:00:48.713+0000",
                    "updated": "2022-03-01T14:00:48.713+0000",
                    "started": "2022-03-01T14:00:48.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "734592",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/734593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#issuecomment-1055470522\n\n\n   https://issues.apache.org/jira/browse/ARROW-14612\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-01T14:01:01.639+0000",
                    "updated": "2022-03-01T14:01:01.639+0000",
                    "started": "2022-03-01T14:01:01.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "734593",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/737726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821004375\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -249,6 +249,16 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n         write_options_(write_options),\n         writer_state_(writer_state) {}\n \n+  DatasetWriterDirectoryQueue(std::string directory, std::string prefix,\n\nReview comment:\n       This should replace the existing constructor.  This class is only used internally (e.g. it isn't exposed via dataset_writer.h) and so it only ever gets constructed in exactly one place so we only need to support one type of constructor.\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -342,11 +357,12 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n   Make(util::AsyncTaskGroup* task_group,\n        const FileSystemDatasetWriteOptions& write_options,\n        DatasetWriterState* writer_state, std::shared_ptr<Schema> schema,\n-       std::string dir) {\n+       std::string directory, std::string prefix) {\n     auto dir_queue = util::MakeUniqueAsync<DatasetWriterDirectoryQueue>(\n-        std::move(dir), std::move(schema), write_options, writer_state);\n+        std::move(directory), std::move(prefix), std::move(schema), write_options,\n+        writer_state);\n     RETURN_NOT_OK(task_group->AddTask(dir_queue->on_closed()));\n-    dir_queue->PrepareDirectory();\n+    dir_queue->PrepareDirectory(prefix);\n\nReview comment:\n       By this point you have already called `std::move` on `prefix` so that variable is no longer valid.  You get away with it when the prefix is small because C++'s small string optimization means that a move on a small string is a no-op.  However, with a large string, this could lead to errors.\r\n   \r\n   Also, since we've already stored it in `prefix_` we can just use `prefix_` directly and `PrepareDirectory` doesn't need to take any arguments.\n\n##########\nFile path: cpp/src/arrow/dataset/partition_test.cc\n##########\n@@ -61,12 +61,12 @@ class TestPartitioning : public ::testing::Test {\n     // formatted partition expressions are bound to the schema of the dataset being\n\nReview comment:\n       This method should be updated to:\r\n   \r\n   ```\r\n   void AssertFormat(compute::Expression expr, const std::string& expected_directory, const std::string& expected_prefix  = \"\")\r\n   ```\r\n   \r\n   Then it should check both `first` and `second`.  Finally, we should have at least one test case for filename partitioning that uses `AssertFormat`.\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -561,6 +624,73 @@ class DirectoryPartitioningFactory : public KeyValuePartitioningFactory {\n   std::vector<std::string> field_names_;\n };\n \n+class FilenamePartitioningFactory : public KeyValuePartitioningFactory {\n+ public:\n+  FilenamePartitioningFactory(std::vector<std::string> field_names,\n+                              PartitioningFactoryOptions options)\n+      : KeyValuePartitioningFactory(options), field_names_(std::move(field_names)) {\n+    Reset();\n+    util::InitializeUTF8();\n+  }\n+\n+  std::string type_name() const override { return \"filename\"; }\n+\n+  Result<std::shared_ptr<Schema>> Inspect(\n+      const std::vector<std::string>& paths) override {\n+    for (auto path : paths) {\n\nReview comment:\n       ```suggestion\r\n       for (const auto& path : paths) {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -326,9 +336,14 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n \n   uint64_t rows_written() const { return rows_written_; }\n \n-  void PrepareDirectory() {\n-    init_future_ = DeferNotOk(write_options_.filesystem->io_context().executor()->Submit(\n-        [this]() { return write_options_.filesystem->CreateDir(directory_); }));\n+  void PrepareDirectory(std::string& prefix) {\n+    if (prefix.empty()) {\n\nReview comment:\n       ```suggestion\r\n       if (!directory_.empty()) {\r\n   ```\r\n   At the moment, `!directory_.empty() == prefix.empty()` so this works but in the future I think it would be very possible for some custom partitioning to manipulate both the prefix and the directory (e.g. maybe the user wants to partition directories by year but files by month).\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -55,6 +60,11 @@ Status ValidateAbstractPathParts(const std::vector<std::string>& parts);\n ARROW_EXPORT\n std::string ConcatAbstractPath(const std::string& base, const std::string& stem);\n \n+// Append a non-empty stem to an abstract path with a filename prefix.\n+ARROW_EXPORT\n+std::string ConcatAbstractPath(const std::string& base, const std::string& prefix,\n\nReview comment:\n       I think this method is a little too single purpose.  This file is in the `filesystem` module and is meant to contain general purpose utilities that are common for anyone working with files.  There is no concept of \"partitions\" or \"prefixes\" in the domain of this module.  Perhaps you could instead create a more general version:\r\n   \r\n   ```\r\n   std::string ConcatAbstractPaths(const std::vector<std::string>& parts);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -38,6 +39,10 @@ constexpr char kSep = '/';\n ARROW_EXPORT\n std::vector<std::string> SplitAbstractPath(const std::string& s);\n \n+// Split a filename into its individual partitions.\n+ARROW_EXPORT\n+std::vector<std::string> SplitFilename(const std::string& s);\n\nReview comment:\n       Similar to some of the comments I made below, this method should either move to `partitioning.h` or be made more generic.  Users that are using `path_util.h` aren't going to be aware of the fact that we are splitting on `_` and even if we document it better they might be confused why such a method would exist since its purpose is very unique to partitioning.\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.cc\n##########\n@@ -33,6 +33,7 @@ namespace internal {\n std::vector<std::string> SplitAbstractPath(const std::string& path) {\n   std::vector<std::string> parts;\n   auto v = util::string_view(path);\n+\n\nReview comment:\n       ```suggestion\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -468,13 +485,15 @@ class DatasetWriter::DatasetWriterImpl : public util::AsyncDestroyable {\n   }\n \n   Future<> DoWriteRecordBatch(std::shared_ptr<RecordBatch> batch,\n-                              const std::string& directory) {\n+                              const std::string& directory, const std::string& prefix) {\n     ARROW_ASSIGN_OR_RAISE(\n         auto dir_queue_itr,\n         ::arrow::internal::GetOrInsertGenerated(\n-            &directory_queues_, directory, [this, &batch](const std::string& dir) {\n-              return DatasetWriterDirectoryQueue::Make(\n-                  &task_group_, write_options_, &writer_state_, batch->schema(), dir);\n+            &directory_queues_, directory + prefix,\n+            [this, &batch, &directory, &prefix](const std::string& dir) {\n\nReview comment:\n       ```suggestion\r\n               [this, &batch, &directory, &prefix](const std::string& key) {\r\n   ```\r\n   A small change that may help future readers understand why we need to capture `directory` instead of using `dir`.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1592,6 +1593,145 @@ cdef class HivePartitioning(Partitioning):\n             res.append(pyarrow_wrap_array(arr))\n         return res\n \n+cdef class FilenamePartitioning(Partitioning):\n\nReview comment:\n       We should add some python tests which cover this logic.  Hopefully we can adapt some of the existing partitioning tests pretty easily.\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -113,6 +123,27 @@ std::string JoinAbstractPath(const StringRange& range) {\n   return JoinAbstractPath(range.begin(), range.end());\n }\n \n+// Join the components of filename partitions\n+template <class StringIt>\n+std::string JoinFilenamePartitions(StringIt it, StringIt end) {\n\nReview comment:\n       Same concern here.  This class is meant to be more generic so we can't refer to things like \"partitions\" and `_` which are concepts that only make sense within the domain of `partitioning.h`.\r\n   \r\n   Perhaps move this method inside of `partitioning.cc`?  Or you could make a generic `JoinPaths(const StringRange& range, const std::string& sep)` but I wouldn't expect it to put `sep` at the end of the path.\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer_test.cc\n##########\n@@ -206,6 +206,14 @@ TEST_F(DatasetWriterTestFixture, Basic) {\n   AssertCreatedData({{\"testdir/chunk-0.arrow\", 0, 100}});\n }\n \n+TEST_F(DatasetWriterTestFixture, BasicFilePrefix) {\n\nReview comment:\n       Can you add a test that uses both a directory and a prefix?  We don't have any partitioning schemes (yet) that can generate this sort of thing but it should be perfectly valid as far as this class is concerned.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-07T19:25:51.579+0000",
                    "updated": "2022-03-07T19:25:51.579+0000",
                    "started": "2022-03-07T19:25:51.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737726",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#issuecomment-1062040407\n\n\n   > @westonpace asked me to review this as I opened the ticket originally based on a user-request. My main criteria for \"does this do what the original user had in mind\" is \"can we **read** from a directory of files in which sections of the filenames are variables we want to analyse in our data\" - and it looks like this both does that and enables us to write these files as well, which is really cool!\r\n   > \r\n   > One thing I do want to check though - if I have a load of files called, e.g. `foo_bar_whatever_month_year.csv`, is there a way I can just have `month` and `year` as variables without the `foo`, `bar`, and `whatever` or would I have to read them in as variables and then just drop those columns later?\r\n   \r\n   Yes, we would have to read them in as variables and then drop those columns later. Currently, with this PR, the entire filename(discarding the last part for eg. `part-0.parquet` or `chunk-0.parquet`) is expected to have the partitioning values separated by `_`. In the future, we may need to add the functionality to allow custom name separator then just only using the underscore.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:46:53.643+0000",
                    "updated": "2022-03-08T17:46:53.643+0000",
                    "started": "2022-03-08T17:46:53.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738232",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821917951\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -249,6 +249,16 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n         write_options_(write_options),\n         writer_state_(writer_state) {}\n \n+  DatasetWriterDirectoryQueue(std::string directory, std::string prefix,\n\nReview comment:\n       Made the change. Removed the additional constructor.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:47:53.567+0000",
                    "updated": "2022-03-08T17:47:53.567+0000",
                    "started": "2022-03-08T17:47:53.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738234",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821919339\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -326,9 +336,14 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n \n   uint64_t rows_written() const { return rows_written_; }\n \n-  void PrepareDirectory() {\n-    init_future_ = DeferNotOk(write_options_.filesystem->io_context().executor()->Submit(\n-        [this]() { return write_options_.filesystem->CreateDir(directory_); }));\n+  void PrepareDirectory(std::string& prefix) {\n+    if (prefix.empty()) {\n\nReview comment:\n       Made the change. Yes, we may need to have custom partitioning having both prefix and directory in the future.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:49:27.014+0000",
                    "updated": "2022-03-08T17:49:27.014+0000",
                    "started": "2022-03-08T17:49:27.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738235",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821919737\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -468,13 +485,15 @@ class DatasetWriter::DatasetWriterImpl : public util::AsyncDestroyable {\n   }\n \n   Future<> DoWriteRecordBatch(std::shared_ptr<RecordBatch> batch,\n-                              const std::string& directory) {\n+                              const std::string& directory, const std::string& prefix) {\n     ARROW_ASSIGN_OR_RAISE(\n         auto dir_queue_itr,\n         ::arrow::internal::GetOrInsertGenerated(\n-            &directory_queues_, directory, [this, &batch](const std::string& dir) {\n-              return DatasetWriterDirectoryQueue::Make(\n-                  &task_group_, write_options_, &writer_state_, batch->schema(), dir);\n+            &directory_queues_, directory + prefix,\n+            [this, &batch, &directory, &prefix](const std::string& dir) {\n\nReview comment:\n       Made the change.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:49:50.473+0000",
                    "updated": "2022-03-08T17:49:50.473+0000",
                    "started": "2022-03-08T17:49:50.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738236",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821919985\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.cc\n##########\n@@ -33,6 +33,7 @@ namespace internal {\n std::vector<std::string> SplitAbstractPath(const std::string& path) {\n   std::vector<std::string> parts;\n   auto v = util::string_view(path);\n+\n\nReview comment:\n       Made the change.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:50:02.954+0000",
                    "updated": "2022-03-08T17:50:02.954+0000",
                    "started": "2022-03-08T17:50:02.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738237",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821921095\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -342,11 +357,12 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n   Make(util::AsyncTaskGroup* task_group,\n        const FileSystemDatasetWriteOptions& write_options,\n        DatasetWriterState* writer_state, std::shared_ptr<Schema> schema,\n-       std::string dir) {\n+       std::string directory, std::string prefix) {\n     auto dir_queue = util::MakeUniqueAsync<DatasetWriterDirectoryQueue>(\n-        std::move(dir), std::move(schema), write_options, writer_state);\n+        std::move(directory), std::move(prefix), std::move(schema), write_options,\n+        writer_state);\n     RETURN_NOT_OK(task_group->AddTask(dir_queue->on_closed()));\n-    dir_queue->PrepareDirectory();\n+    dir_queue->PrepareDirectory(prefix);\n\nReview comment:\n       Made the change.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:51:26.034+0000",
                    "updated": "2022-03-08T17:51:26.034+0000",
                    "started": "2022-03-08T17:51:26.034+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738238",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738239",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821921308\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer_test.cc\n##########\n@@ -206,6 +206,14 @@ TEST_F(DatasetWriterTestFixture, Basic) {\n   AssertCreatedData({{\"testdir/chunk-0.arrow\", 0, 100}});\n }\n \n+TEST_F(DatasetWriterTestFixture, BasicFilePrefix) {\n\nReview comment:\n       Added the test.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:51:38.640+0000",
                    "updated": "2022-03-08T17:51:38.640+0000",
                    "started": "2022-03-08T17:51:38.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738239",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821921733\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -55,6 +60,11 @@ Status ValidateAbstractPathParts(const std::vector<std::string>& parts);\n ARROW_EXPORT\n std::string ConcatAbstractPath(const std::string& base, const std::string& stem);\n \n+// Append a non-empty stem to an abstract path with a filename prefix.\n+ARROW_EXPORT\n+std::string ConcatAbstractPath(const std::string& base, const std::string& prefix,\n\nReview comment:\n       Made a generic ConcatAbstractPaths()\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:52:14.428+0000",
                    "updated": "2022-03-08T17:52:14.428+0000",
                    "started": "2022-03-08T17:52:14.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738240",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738241",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821922420\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -113,6 +123,27 @@ std::string JoinAbstractPath(const StringRange& range) {\n   return JoinAbstractPath(range.begin(), range.end());\n }\n \n+// Join the components of filename partitions\n+template <class StringIt>\n+std::string JoinFilenamePartitions(StringIt it, StringIt end) {\n\nReview comment:\n       Used a generic Join function and concatenated the separator in the end of the path for FilenamePartitioning in partition.cc\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:53:08.883+0000",
                    "updated": "2022-03-08T17:53:08.883+0000",
                    "started": "2022-03-08T17:53:08.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738241",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821922420\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -113,6 +123,27 @@ std::string JoinAbstractPath(const StringRange& range) {\n   return JoinAbstractPath(range.begin(), range.end());\n }\n \n+// Join the components of filename partitions\n+template <class StringIt>\n+std::string JoinFilenamePartitions(StringIt it, StringIt end) {\n\nReview comment:\n       Used a generic Join function and concatenated the separator in the end of the path for `FilenamePartitioning` in `partition.cc`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:53:22.111+0000",
                    "updated": "2022-03-08T17:53:22.111+0000",
                    "started": "2022-03-08T17:53:22.111+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738242",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r821923116\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -38,6 +39,10 @@ constexpr char kSep = '/';\n ARROW_EXPORT\n std::vector<std::string> SplitAbstractPath(const std::string& s);\n \n+// Split a filename into its individual partitions.\n+ARROW_EXPORT\n+std::vector<std::string> SplitFilename(const std::string& s);\n\nReview comment:\n       Made a generic `SplitAbstractPath()`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T17:53:45.438+0000",
                    "updated": "2022-03-08T17:53:45.438+0000",
                    "started": "2022-03-08T17:53:45.438+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738243",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r822306113\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1592,6 +1593,145 @@ cdef class HivePartitioning(Partitioning):\n             res.append(pyarrow_wrap_array(arr))\n         return res\n \n+cdef class FilenamePartitioning(Partitioning):\n\nReview comment:\n       Added test in Python for FilenamePartitioning\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T05:47:31.153+0000",
                    "updated": "2022-03-09T05:47:31.153+0000",
                    "started": "2022-03-09T05:47:31.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738556",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r822306230\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -561,6 +624,73 @@ class DirectoryPartitioningFactory : public KeyValuePartitioningFactory {\n   std::vector<std::string> field_names_;\n };\n \n+class FilenamePartitioningFactory : public KeyValuePartitioningFactory {\n+ public:\n+  FilenamePartitioningFactory(std::vector<std::string> field_names,\n+                              PartitioningFactoryOptions options)\n+      : KeyValuePartitioningFactory(options), field_names_(std::move(field_names)) {\n+    Reset();\n+    util::InitializeUTF8();\n+  }\n+\n+  std::string type_name() const override { return \"filename\"; }\n+\n+  Result<std::shared_ptr<Schema>> Inspect(\n+      const std::vector<std::string>& paths) override {\n+    for (auto path : paths) {\n\nReview comment:\n       Made the change.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T05:47:55.635+0000",
                    "updated": "2022-03-09T05:47:55.635+0000",
                    "started": "2022-03-09T05:47:55.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738557",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/738558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r822306683\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition_test.cc\n##########\n@@ -61,12 +61,12 @@ class TestPartitioning : public ::testing::Test {\n     // formatted partition expressions are bound to the schema of the dataset being\n\nReview comment:\n       Added test for FilenamePartitioningFormat.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T05:48:58.564+0000",
                    "updated": "2022-03-09T05:48:58.564+0000",
                    "started": "2022-03-09T05:48:58.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738558",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/739022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg edited a comment on pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#issuecomment-1062040407\n\n\n   > @westonpace asked me to review this as I opened the ticket originally based on a user-request. My main criteria for \"does this do what the original user had in mind\" is \"can we **read** from a directory of files in which sections of the filenames are variables we want to analyse in our data\" - and it looks like this both does that and enables us to write these files as well, which is really cool!\r\n   > \r\n   > One thing I do want to check though - if I have a load of files called, e.g. `foo_bar_whatever_month_year.csv`, is there a way I can just have `month` and `year` as variables without the `foo`, `bar`, and `whatever` or would I have to read them in as variables and then just drop those columns later?\r\n   \r\n   Yes, we would have to read them in as variables and then drop those columns later. Currently, with this PR, the entire filename(excluding the last part for eg. `part-0.parquet` or `chunk-0.parquet`) is expected to have the partitioning values separated by `_`. In the future, we may need to add the functionality to allow custom name separator then just only using the underscore.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T18:41:59.295+0000",
                    "updated": "2022-03-09T18:41:59.295+0000",
                    "started": "2022-03-09T18:41:59.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "739022",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/743667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r829848259\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -30,13 +30,16 @@ namespace fs {\n namespace internal {\n \n constexpr char kSep = '/';\n+constexpr char kFilenameSep = '_';\n \n // Computations on abstract paths (not local paths with system-dependent behaviour).\n // Abstract paths are typically used in URIs.\n \n // Split an abstract path into its individual components.\n ARROW_EXPORT\n-std::vector<std::string> SplitAbstractPath(const std::string& s);\n+std::vector<std::string> SplitAbstractPath(util::string_view path, const char& sep);\n+ARROW_EXPORT\n+std::vector<std::string> SplitAbstractPath(const std::string& path);\n\nReview comment:\n       Do we need two methods or could we get away with:\r\n   \r\n   ```\r\n   ARROW_EXPORT\r\n   std::vector<std::string> SplitAbstractPath(util::string_view path, char sep = kSep)\r\n   ```\r\n   \r\n   Also, you don't need to pass primitives by const reference (it is generally harmless and happens sometimes with templates but if we know the type is a primitive then it's clearer do away with it).\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -361,7 +411,32 @@ Result<std::string> DirectoryPartitioning::FormatValues(\n     break;\n   }\n \n-  return fs::internal::JoinAbstractPath(std::move(segments));\n+  return std::make_pair(fs::internal::JoinAbstractPath(std::move(segments)), \"\");\n+}\n+\n+Result<std::pair<std::string, std::string>> FilenamePartitioning::FormatValues(\n+    const ScalarVector& values) const {\n+  std::vector<std::string> segments(static_cast<size_t>(schema_->num_fields()));\n+\n+  for (int i = 0; i < schema_->num_fields(); ++i) {\n+    if (values[i] != nullptr && values[i]->is_valid) {\n+      segments[i] = values[i]->ToString();\n+      continue;\n+    }\n+\n+    if (auto illegal_index = NextValid(values, i)) {\n+      // XXX maybe we should just ignore keys provided after the first absent one?\n+      return Status::Invalid(\"No partition key for \", schema_->field(i)->name(),\n+                             \" but a key was provided subsequently for \",\n+                             schema_->field(*illegal_index)->name(), \".\");\n+    }\n+\n+    // if all subsequent keys are absent we'll just print the available keys\n+    break;\n\nReview comment:\n       Are there tests in place for this case?  In other words, do we have a test where the schema is something like `schema({field(\"a\", int32()), field(\"b\", int32())}` and we only pass in one field (or no fields)?\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -95,22 +98,22 @@ std::vector<std::string> MinimalCreateDirSet(std::vector<std::string> dirs);\n \n // Join the components of an abstract path.\n template <class StringIt>\n-std::string JoinAbstractPath(StringIt it, StringIt end) {\n+std::string JoinAbstractPath(StringIt it, StringIt end, const char& sep = kSep) {\n   std::string path;\n   for (; it != end; ++it) {\n     if (it->empty()) continue;\n \n     if (!path.empty()) {\n-      path += kSep;\n+      path += sep;\n     }\n     path += *it;\n   }\n   return path;\n }\n \n template <class StringRange>\n-std::string JoinAbstractPath(const StringRange& range) {\n-  return JoinAbstractPath(range.begin(), range.end());\n+std::string JoinAbstractPath(const StringRange& range, const char& sep = kSep) {\n\nReview comment:\n       ```suggestion\r\n   std::string JoinAbstractPath(const StringRange& range, char sep = kSep) {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.cc\n##########\n@@ -30,28 +30,23 @@ namespace internal {\n \n // XXX How does this encode Windows UNC paths?\n \n-std::vector<std::string> SplitAbstractPath(const std::string& path) {\n+std::vector<std::string> SplitAbstractPath(util::string_view path, const char& sep) {\n   std::vector<std::string> parts;\n-  auto v = util::string_view(path);\n-  // Strip trailing slash\n-  if (v.length() > 0 && v.back() == kSep) {\n-    v = v.substr(0, v.length() - 1);\n-  }\n\nReview comment:\n       We would still need to strip the trailing slash.  If you need to keep the trailing slash to make the partitioning code work then I would stick with two methods but have the second method (that doesn't strip the trailing separator) be in partition.cc.\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -30,13 +30,16 @@ namespace fs {\n namespace internal {\n \n constexpr char kSep = '/';\n+constexpr char kFilenameSep = '_';\n\nReview comment:\n       We should move this constant into partition.h and rename it to something like `kFilenamePartitionSep`.  When I see `kFilenameSep` I think of `/` or `.`\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -95,22 +98,22 @@ std::vector<std::string> MinimalCreateDirSet(std::vector<std::string> dirs);\n \n // Join the components of an abstract path.\n template <class StringIt>\n-std::string JoinAbstractPath(StringIt it, StringIt end) {\n+std::string JoinAbstractPath(StringIt it, StringIt end, const char& sep = kSep) {\n\nReview comment:\n       ```suggestion\r\n   std::string JoinAbstractPath(StringIt it, StringIt end, char sep = kSep) {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-18T10:04:20.745+0000",
                    "updated": "2022-03-18T10:04:20.745+0000",
                    "started": "2022-03-18T10:04:20.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "743667",
                    "issueId": "13410297"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/worklog/743891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12530:\nURL: https://github.com/apache/arrow/pull/12530#discussion_r829848259\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -30,13 +30,16 @@ namespace fs {\n namespace internal {\n \n constexpr char kSep = '/';\n+constexpr char kFilenameSep = '_';\n \n // Computations on abstract paths (not local paths with system-dependent behaviour).\n // Abstract paths are typically used in URIs.\n \n // Split an abstract path into its individual components.\n ARROW_EXPORT\n-std::vector<std::string> SplitAbstractPath(const std::string& s);\n+std::vector<std::string> SplitAbstractPath(util::string_view path, const char& sep);\n+ARROW_EXPORT\n+std::vector<std::string> SplitAbstractPath(const std::string& path);\n\nReview comment:\n       Do we need two methods or could we get away with:\r\n   \r\n   ```\r\n   ARROW_EXPORT\r\n   std::vector<std::string> SplitAbstractPath(util::string_view path, char sep = kSep)\r\n   ```\r\n   \r\n   Also, you don't need to pass primitives by const reference (it is generally harmless and happens sometimes with templates but if we know the type is a primitive then it's clearer do away with it).\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -361,7 +411,32 @@ Result<std::string> DirectoryPartitioning::FormatValues(\n     break;\n   }\n \n-  return fs::internal::JoinAbstractPath(std::move(segments));\n+  return std::make_pair(fs::internal::JoinAbstractPath(std::move(segments)), \"\");\n+}\n+\n+Result<std::pair<std::string, std::string>> FilenamePartitioning::FormatValues(\n+    const ScalarVector& values) const {\n+  std::vector<std::string> segments(static_cast<size_t>(schema_->num_fields()));\n+\n+  for (int i = 0; i < schema_->num_fields(); ++i) {\n+    if (values[i] != nullptr && values[i]->is_valid) {\n+      segments[i] = values[i]->ToString();\n+      continue;\n+    }\n+\n+    if (auto illegal_index = NextValid(values, i)) {\n+      // XXX maybe we should just ignore keys provided after the first absent one?\n+      return Status::Invalid(\"No partition key for \", schema_->field(i)->name(),\n+                             \" but a key was provided subsequently for \",\n+                             schema_->field(*illegal_index)->name(), \".\");\n+    }\n+\n+    // if all subsequent keys are absent we'll just print the available keys\n+    break;\n\nReview comment:\n       Are there tests in place for this case?  In other words, do we have a test where the schema is something like `schema({field(\"a\", int32()), field(\"b\", int32())}` and we only pass in one field (or no fields)?\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -95,22 +98,22 @@ std::vector<std::string> MinimalCreateDirSet(std::vector<std::string> dirs);\n \n // Join the components of an abstract path.\n template <class StringIt>\n-std::string JoinAbstractPath(StringIt it, StringIt end) {\n+std::string JoinAbstractPath(StringIt it, StringIt end, const char& sep = kSep) {\n   std::string path;\n   for (; it != end; ++it) {\n     if (it->empty()) continue;\n \n     if (!path.empty()) {\n-      path += kSep;\n+      path += sep;\n     }\n     path += *it;\n   }\n   return path;\n }\n \n template <class StringRange>\n-std::string JoinAbstractPath(const StringRange& range) {\n-  return JoinAbstractPath(range.begin(), range.end());\n+std::string JoinAbstractPath(const StringRange& range, const char& sep = kSep) {\n\nReview comment:\n       ```suggestion\r\n   std::string JoinAbstractPath(const StringRange& range, char sep = kSep) {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.cc\n##########\n@@ -30,28 +30,23 @@ namespace internal {\n \n // XXX How does this encode Windows UNC paths?\n \n-std::vector<std::string> SplitAbstractPath(const std::string& path) {\n+std::vector<std::string> SplitAbstractPath(util::string_view path, const char& sep) {\n   std::vector<std::string> parts;\n-  auto v = util::string_view(path);\n-  // Strip trailing slash\n-  if (v.length() > 0 && v.back() == kSep) {\n-    v = v.substr(0, v.length() - 1);\n-  }\n\nReview comment:\n       We would still need to strip the trailing slash.  If you need to keep the trailing slash to make the partitioning code work then I would stick with two methods but have the second method (that doesn't strip the trailing separator) be in partition.cc.\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -30,13 +30,16 @@ namespace fs {\n namespace internal {\n \n constexpr char kSep = '/';\n+constexpr char kFilenameSep = '_';\n\nReview comment:\n       We should move this constant into partition.h and rename it to something like `kFilenamePartitionSep`.  When I see `kFilenameSep` I think of `/` or `.`\n\n##########\nFile path: cpp/src/arrow/filesystem/path_util.h\n##########\n@@ -95,22 +98,22 @@ std::vector<std::string> MinimalCreateDirSet(std::vector<std::string> dirs);\n \n // Join the components of an abstract path.\n template <class StringIt>\n-std::string JoinAbstractPath(StringIt it, StringIt end) {\n+std::string JoinAbstractPath(StringIt it, StringIt end, const char& sep = kSep) {\n\nReview comment:\n       ```suggestion\r\n   std::string JoinAbstractPath(StringIt it, StringIt end, char sep = kSep) {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-18T14:45:45.341+0000",
                    "updated": "2022-03-18T14:45:45.341+0000",
                    "started": "2022-03-18T14:45:45.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "743891",
                    "issueId": "13410297"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 48600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1814e09e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ef1aec9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22d5bb28[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1161de5d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34c32dd9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7cb1f1a8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@733209ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6cbeb2e0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@413ee74b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@32f17275[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51ef68a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@48dff9c8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 48600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 30 13:09:42 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-30T13:09:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14612/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2021-11-05T16:42:19.000+0000",
        "updated": "2022-04-08T12:37:40.000+0000",
        "timeoriginalestimate": null,
        "description": "Directory-based partitioning is a feature of Arrow, but could we support filename-based partitioning?\r\n\r\ne.g. I have a series of CSV files here all called something like\u00a0{{foo_month_year.csv}} and it'd be nice to be able to read them in and then the month/year bits of the filenames then appear as fields I can filter on etc.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "13.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 48600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Support for filename-based partitioning",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/comment/17448227",
                    "id": "17448227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~lidavidm] [~westonpace]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-23T19:12:03.824+0000",
                    "updated": "2021-11-23T19:12:03.824+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/comment/17448251",
                    "id": "17448251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The current APIs trim the filenames before they're handed to partitioning, but assuming we can change that, we add or update the partitioning schemes to allow for this as well without too much trouble, I think. (If the filenames weren't trimmed, then it could already be done - at least in C++ - via a FunctionPartitioning.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-11-23T20:23:48.534+0000",
                    "updated": "2021-11-23T20:23:48.534+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/comment/17487305",
                    "id": "17487305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Supporting adding filename as a column may be a decent substitute for this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-02-04T20:57:37.553+0000",
                    "updated": "2022-02-04T20:57:37.553+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297/comment/17514691",
                    "id": "17514691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12530\n[https://github.com/apache/arrow/pull/12530]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-03-30T13:09:42.640+0000",
                    "updated": "2022-03-30T13:09:42.640+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0whhk:",
        "customfield_12314139": null
    }
}