{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13448803",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448803",
    "key": "ARROW-16776",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12641350",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12641350",
                "type": {
                    "id": "12310361",
                    "name": "Blocked",
                    "inward": "Blocked",
                    "outward": "Blocked",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310361"
                },
                "inwardIssue": {
                    "id": "13448810",
                    "key": "ARROW-16777",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448810",
                    "fields": {
                        "summary": "[R] printing data in Table/RecordBatch print method",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jthomasmock",
            "name": "jthomasmock",
            "key": "JIRAUSER290612",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER290612&avatarId=50584",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER290612&avatarId=50584",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER290612&avatarId=50584",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER290612&avatarId=50584"
            },
            "displayName": "Thomas Mock",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jthomasmock",
            "name": "jthomasmock",
            "key": "JIRAUSER290612",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER290612&avatarId=50584",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER290612&avatarId=50584",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER290612&avatarId=50584",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER290612&avatarId=50584"
            },
            "displayName": "Thomas Mock",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16776/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2c1f3eb0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23219d1a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6556cb0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4ab043f0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4732f28c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3bef329d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6832984e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2055e97b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70a3d96f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@329a763c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e1668c9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@41874e41[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 12 19:48:21 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-12T19:48:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16776/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-06-07T13:37:22.000+0000",
        "updated": "2022-07-12T19:48:21.000+0000",
        "timeoriginalestimate": null,
        "description": "When working with Arrow datasets/tables, I often find myself wanting to interactively print or \"see\" the results of a query or the first few rows of the data without having to fully collect into memory. \r\n\r\nI can perform exploratory data analysis on large out-of-memory datasets via Arrow + dplyr but in order to print the returned values I have to collect() into memory or send to_duckdb().\r\n * compute() - returns number of rows/columns, but no data\r\n * collect() - returns data fully into memory, can be combined with head()\r\n * to_duckdb() - keeps data out of memory, always returns top 10 rows and all columns, optionally increase/decrease number of printed rows\r\n\r\nWhile to_duckdb() gives me the ability to do true EDA, it seems counterintuitive to need to send the arrow table over to a duckdb database just to see the glimpse()/head() equivalent.\r\n\r\nMy feature request is that there is a dplyr::glimpse() method that will lazily print the first few values of table/dataset. The expected output would be something like the below.\r\n\r\n``` r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\nmtcars %>% arrow::write_parquet(\"mtcars.parquet\")\r\ncar_ds <- arrow::open_dataset(\"mtcars.parquet\")\r\n\r\ncar_ds %>% \r\n  glimpse()\r\n\r\nRows: ??\r\nColumns: 11\r\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, \u2026\r\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, \u2026\r\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 36\u2026\r\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 2\u2026\r\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, \u2026\r\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.\u2026\r\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17\u2026\r\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, \u2026\r\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, \u2026\r\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, \u2026\r\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, \u2026\r\n```\r\n\r\nCurrently glimpse() will return a list output where the majority of the output\u00a0is erroneous to the actual data/values.\r\n\r\n``` r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\nmtcars %>% arrow::write_parquet(\"mtcars.parquet\")\r\ncar_ds <- arrow::open_dataset(\"mtcars.parquet\")\r\n\r\ncar_ds %>%\u00a0\r\n\u00a0 glimpse()\r\n#> Classes 'FileSystemDataset', 'Dataset', 'ArrowObject', 'R6' <FileSystemDataset>\r\n#> \u00a0 Inherits from: <Dataset>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 .class_title: function ()\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 files: active binding\r\n#> \u00a0 \u00a0 filesystem: active binding\r\n#> \u00a0 \u00a0 format: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 metadata: active binding\r\n#> \u00a0 \u00a0 NewScan: function ()\u00a0\r\n#> \u00a0 \u00a0 num_cols: active binding\r\n#> \u00a0 \u00a0 num_rows: active binding\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: active binding\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: active binding\r\n\r\ncar_ds %>%\r\n\u00a0 filter(cyl == 6) %>%\r\n\u00a0 glimpse()\r\n#> List of 7\r\n#> \u00a0$ mpg :Classes 'FileSystemDataset', 'Dataset', 'ArrowObject', 'R6' <FileSystemDataset>\r\n#> \u00a0 Inherits from: <Dataset>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 .class_title: function ()\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 files: active binding\r\n#> \u00a0 \u00a0 filesystem: active binding\r\n#> \u00a0 \u00a0 format: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 metadata: active binding\r\n#> \u00a0 \u00a0 NewScan: function ()\u00a0\r\n#> \u00a0 \u00a0 num_cols: active binding\r\n#> \u00a0 \u00a0 num_rows: active binding\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: active binding\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: active binding\u00a0\r\n#> \u00a0$ cyl :List of 11\r\n#> \u00a0 ..$ mpg :Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ cyl :Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ disp:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ hp \u00a0:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ drat:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ wt \u00a0:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ qsec:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ vs \u00a0:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ am \u00a0:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ gear:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0 ..$ carb:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0$ disp:Classes 'Expression', 'ArrowObject', 'R6' <Expression>\r\n#> \u00a0 Inherits from: <ArrowObject>\r\n#> \u00a0 Public:\r\n#> \u00a0 \u00a0 .:xp:.: externalptr\r\n#> \u00a0 \u00a0 cast: function (to_type, safe = TRUE, ...)\u00a0\r\n#> \u00a0 \u00a0 clone: function (deep = FALSE)\u00a0\r\n#> \u00a0 \u00a0 Equals: function (other, ...)\u00a0\r\n#> \u00a0 \u00a0 field_name: active binding\r\n#> \u00a0 \u00a0 initialize: function (xp)\u00a0\r\n#> \u00a0 \u00a0 invalidate: function ()\u00a0\r\n#> \u00a0 \u00a0 pointer: function ()\u00a0\r\n#> \u00a0 \u00a0 print: function (...)\u00a0\r\n#> \u00a0 \u00a0 schema: Schema, ArrowObject, R6\r\n#> \u00a0 \u00a0 set_pointer: function (xp)\u00a0\r\n#> \u00a0 \u00a0 ToString: function ()\u00a0\r\n#> \u00a0 \u00a0 type: function (schema = self$schema)\u00a0\r\n#> \u00a0 \u00a0 type_id: function (schema = self$schema) \u00a0\r\n#> \u00a0$ hp \u00a0: chr(0)\u00a0\r\n#> \u00a0$ drat: NULL\r\n#> \u00a0$ wt \u00a0: list()\r\n#> \u00a0$ qsec: logi(0)\u00a0\r\n#> \u00a0- attr(*, \"class\")= chr \"arrow_dplyr_query\"\r\n```\r\n\r\n<sup>Created on 2022-06-07 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] dplyr::glimpse method for arrow table and datasets",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z130q8:",
        "customfield_12314139": null
    }
}