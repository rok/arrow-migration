{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13449546",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546",
    "key": "ARROW-16807",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12642772",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12642772",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13468413",
                    "key": "ARROW-16904",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468413",
                    "fields": {
                        "summary": "[C++] min/max not deterministic if Parquet files have multiple row groups",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
                            "name": "Blocker",
                            "id": "1"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
            "name": "octalene",
            "key": "octalene",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
            },
            "displayName": "Aldrin Montana",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alistaire",
            "name": "alistaire",
            "key": "alistaire",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Edward Visel",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alistaire",
            "name": "alistaire",
            "key": "alistaire",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Edward Visel",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16807/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin opened a new pull request, #13583:\nURL: https://github.com/apache/arrow/pull/13583\n\n   This addresses a bug where the `count_distinct` function simply added counts when merging state. The correct logic would be to return the number of distinct elements after both states have been merged.\r\n   \r\n   State for count_distinct is backed by a MemoTable, which is then backed by a HashTable. To properly merge state, this PR adds 2 functions to each MemoTable: `MaybeInsert` and `MergeTable`. The MaybeInsert function handles simplified logic for inserting an element into the MemoTable. The MergeTable function handles iteration over elements in the MemoTable _to be merged_.\r\n   \r\n   This PR also adds an R test and a C++ test. The R test mirrors what was provided in ARROW-16807. The C++ test, `AllChunkedArrayTypesWithNulls`, mirrors another C++ test, `AllArrayTypesWithNulls`, but uses chunked arrays for test data.\n\n\n",
                    "created": "2022-07-12T16:38:24.976+0000",
                    "updated": "2022-07-12T16:38:24.976+0000",
                    "started": "2022-07-12T16:38:24.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790092",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#issuecomment-1182096940\n\n   https://issues.apache.org/jira/browse/ARROW-16807\n\n\n",
                    "created": "2022-07-12T17:42:22.013+0000",
                    "updated": "2022-07-12T17:42:22.013+0000",
                    "started": "2022-07-12T17:42:22.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790106",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#issuecomment-1182562069\n\n   I just realized that this introduces (or maybe just exposes) a bug when calling this function on scalar inputs. If the input is a scalar, `non_nulls` is incremented without changing state. To address this \"correctly,\" the code path for scalar inputs should also update the state by using `GetOrInsert` as is done for the code path for vector inputs.\r\n   \r\n   I am working on figuring this out, given that the compiler has type conversion issues when attempting to just call `GetOrInsert` with a scalar reference.\n\n\n",
                    "created": "2022-07-12T22:39:32.320+0000",
                    "updated": "2022-07-12T22:39:32.320+0000",
                    "started": "2022-07-12T22:39:32.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790208",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r919682027\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   Looks `GetOrInsert` can do the job?\n\n\n\n",
                    "created": "2022-07-13T06:09:12.348+0000",
                    "updated": "2022-07-13T06:09:12.348+0000",
                    "started": "2022-07-13T06:09:12.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790275",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r920274126\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   ah, yeah I think it can. It just seemed like it might be nice to have a slightly simpler code path. but I can drop this and use GetOrInsert if we prefer\n\n\n\n",
                    "created": "2022-07-13T16:21:55.250+0000",
                    "updated": "2022-07-13T16:21:55.250+0000",
                    "started": "2022-07-13T16:21:55.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790494",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r920552152\n\n\n##########\nr/tests/testthat/test-dplyr-summarize.R:\n##########\n@@ -218,6 +218,15 @@ test_that(\"Group by any/all\", {\n   )\n })\n \n+test_that(\"n_distinct() with many batches\", {\n+\ttf <- tempfile()\n\nReview Comment:\n   Use spaces instead of tabs\n\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   Or at least implement this new API with `GetOrInsert` \u2014 the `Status GetOrInsert(const Scalar& value, int32_t* out_memo_index)` version should generate the same code more or less as this (with the exception of the unused index)\n\n\n\n",
                    "created": "2022-07-13T22:10:55.129+0000",
                    "updated": "2022-07-13T22:10:55.129+0000",
                    "started": "2022-07-13T22:10:55.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790610",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r920595812\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   I guess wrapping `GetOrInsert` would at least mean someone else doesn't have to make a dummy return value. I was also thinking there might be some benefits to not calling empty closures on each value. I'm not sure that's the case, but curious on your thoughts @wesm  @cyb70289 \n\n\n\n",
                    "created": "2022-07-13T23:43:06.786+0000",
                    "updated": "2022-07-13T23:43:06.786+0000",
                    "started": "2022-07-13T23:43:06.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790633",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#issuecomment-1183789572\n\n   @wesm @westonpace previous pair of commits makes this work for scalar inputs. I tried putting some of the conditional logic (\"if type is decimal\") in `CountDistinctImpl` but it ended up being difficult to satisfy the compiler.\r\n   \r\n   the current change to UnboxScalar tries to essentially use `is_decimal`, but then I realized that there isn't an easy way to call the appriopriate view function unless I know which decimal type I have. Additionally, the UnboxScalar implementations for Decimal types gets the value, which I think would be difficult to downcast/change back to string_view.\r\n   \r\n   all in all, this was the only approach I could get to work and it seemed semi reasonable. Feedback would be much appreciated though.\n\n\n",
                    "created": "2022-07-13T23:48:00.512+0000",
                    "updated": "2022-07-13T23:48:00.512+0000",
                    "started": "2022-07-13T23:48:00.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790634",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r920638291\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   Wrapping with a new API looks more clear.\r\n   I'm not worried about the empty closures and dummy return value. Probably compiler will optimize them to nothing if it decides to inline `GetOrInsert` as it's small.\r\n   A quick example, there's no unnecessary function calls or value assignments\r\n   https://godbolt.org/z/TjjTxzz8j\n\n\n\n",
                    "created": "2022-07-14T01:22:41.059+0000",
                    "updated": "2022-07-14T01:22:41.059+0000",
                    "started": "2022-07-14T01:22:41.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790650",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r920640160\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -824,6 +898,13 @@ class BinaryMemoTable : public MemoTable {\n     };\n     return hash_table_.Lookup(h, cmp_func);\n   }\n+\n+ public:\n+  void MergeTable(BinaryMemoTable& other_table) {\n+    other_table.VisitValues(0, [=](const util::string_view& other_value) {\n\nReview Comment:\n   Capture all by value looks not good, and I think only `this` is to be captured.\n\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -824,6 +898,13 @@ class BinaryMemoTable : public MemoTable {\n     };\n     return hash_table_.Lookup(h, cmp_func);\n   }\n+\n+ public:\n+  void MergeTable(BinaryMemoTable& other_table) {\n+    other_table.VisitValues(0, [=](const util::string_view& other_value) {\n\nReview Comment:\n   Capture all by value looks not good, and I think only `this` is to be captured here.\n\n\n\n",
                    "created": "2022-07-14T01:26:26.865+0000",
                    "updated": "2022-07-14T01:26:26.865+0000",
                    "started": "2022-07-14T01:26:26.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790651",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r920641408\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -824,6 +898,13 @@ class BinaryMemoTable : public MemoTable {\n     };\n     return hash_table_.Lookup(h, cmp_func);\n   }\n+\n+ public:\n+  void MergeTable(BinaryMemoTable& other_table) {\n+    other_table.VisitValues(0, [=](const util::string_view& other_value) {\n+      ARROW_WARN_NOT_OK(this->MaybeInsert(other_value), \"Merging BinaryMemoTable\");\n\nReview Comment:\n   We should probably return an error to the caller, not log a warning.\n\n\n\n",
                    "created": "2022-07-14T01:29:52.011+0000",
                    "updated": "2022-07-14T01:29:52.011+0000",
                    "started": "2022-07-14T01:29:52.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790654",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r921123551\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   Indeed, the empty closures will be easily optimized away by the compiler as dead / side-effect-free code\n\n\n\n",
                    "created": "2022-07-14T12:56:23.269+0000",
                    "updated": "2022-07-14T12:56:23.269+0000",
                    "started": "2022-07-14T12:56:23.269+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790916",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/790954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#issuecomment-1184460378\n\n   @drin I pushed a simpler solution for the UnboxScalar change and removed MaybeInsert. We should probably open a follow up Jira to improve error handling in hash table merges but I don't think it's necessary to do that in this PR\n\n\n",
                    "created": "2022-07-14T13:37:57.646+0000",
                    "updated": "2022-07-14T13:37:57.646+0000",
                    "started": "2022-07-14T13:37:57.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790954",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r921306573\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -428,6 +428,22 @@ class ScalarMemoTable : public MemoTable {\n         value, [](int32_t i) {}, [](int32_t i) {}, out_memo_index);\n   }\n \n+  Status MaybeInsert(const Scalar& value) {\n\nReview Comment:\n   thanks! I will make the change, and I appreciate the insight (and reference)\n\n\n\n",
                    "created": "2022-07-14T15:46:58.076+0000",
                    "updated": "2022-07-14T15:46:58.076+0000",
                    "started": "2022-07-14T15:46:58.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791022",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r921327211\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -824,6 +898,13 @@ class BinaryMemoTable : public MemoTable {\n     };\n     return hash_table_.Lookup(h, cmp_func);\n   }\n+\n+ public:\n+  void MergeTable(BinaryMemoTable& other_table) {\n+    other_table.VisitValues(0, [=](const util::string_view& other_value) {\n+      ARROW_WARN_NOT_OK(this->MaybeInsert(other_value), \"Merging BinaryMemoTable\");\n\nReview Comment:\n   made a JIRA to follow this up in the near-ish future: https://issues.apache.org/jira/browse/ARROW-17074\n\n\n\n",
                    "created": "2022-07-14T16:06:55.113+0000",
                    "updated": "2022-07-14T16:06:55.113+0000",
                    "started": "2022-07-14T16:06:55.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791026",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#issuecomment-1184627976\n\n   I made a JIRA to track error handling improvements for hash table merge:\r\n   \r\n       https://issues.apache.org/jira/browse/ARROW-17074\r\n   \r\n   I specifically made the priority minor, but feel free to change it (I don't know the protocol for priority assignment)\n\n\n",
                    "created": "2022-07-14T16:08:16.004+0000",
                    "updated": "2022-07-14T16:08:16.004+0000",
                    "started": "2022-07-14T16:08:16.004+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791027",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r921330965\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -824,6 +898,13 @@ class BinaryMemoTable : public MemoTable {\n     };\n     return hash_table_.Lookup(h, cmp_func);\n   }\n+\n+ public:\n+  void MergeTable(BinaryMemoTable& other_table) {\n+    other_table.VisitValues(0, [=](const util::string_view& other_value) {\n\nReview Comment:\n   changed by Wes\n\n\n\n",
                    "created": "2022-07-14T16:11:00.514+0000",
                    "updated": "2022-07-14T16:11:00.514+0000",
                    "started": "2022-07-14T16:11:00.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791028",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r921727349\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -485,6 +485,20 @@ class ScalarMemoTable : public MemoTable {\n   hash_t ComputeHash(const Scalar& value) const {\n     return ScalarHelper<Scalar, 0>::ComputeHash(value);\n   }\n+\n+ public:\n+  // defined here so that `HashTableType` is visible\n+  // Merge entries from `other_table` into `this->hash_table_`.\n+  Status MergeTable(ScalarMemoTable& other_table) {\n\nReview Comment:\n   `const ScalarMemoTable&`\n\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -568,6 +582,15 @@ class SmallScalarMemoTable : public MemoTable {\n   // (which is also 1 + the largest memo index)\n   int32_t size() const override { return static_cast<int32_t>(index_to_value_.size()); }\n \n+  // Merge entries from `other_table` into `this`.\n+  Status MergeTable(SmallScalarMemoTable& other_table) {\n\nReview Comment:\n   ditto\n\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -485,6 +485,20 @@ class ScalarMemoTable : public MemoTable {\n   hash_t ComputeHash(const Scalar& value) const {\n     return ScalarHelper<Scalar, 0>::ComputeHash(value);\n   }\n+\n+ public:\n+  // defined here so that `HashTableType` is visible\n+  // Merge entries from `other_table` into `this->hash_table_`.\n+  Status MergeTable(ScalarMemoTable& other_table) {\n+    HashTableType& other_hashtable = other_table.hash_table_;\n\nReview Comment:\n   `const HashTableType&`\n\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -485,6 +485,20 @@ class ScalarMemoTable : public MemoTable {\n   hash_t ComputeHash(const Scalar& value) const {\n     return ScalarHelper<Scalar, 0>::ComputeHash(value);\n   }\n+\n+ public:\n+  // defined here so that `HashTableType` is visible\n+  // Merge entries from `other_table` into `this->hash_table_`.\n+  Status MergeTable(ScalarMemoTable& other_table) {\n+    HashTableType& other_hashtable = other_table.hash_table_;\n+\n+    other_hashtable.VisitEntries([this](const HashTableEntry* other_entry) {\n+      int32_t unused;\n+      DCHECK_OK(this->GetOrInsert(other_entry->payload.value, &unused));\n+    });\n+    // TODO: implement proper (and perhaps more performant) error handling\n\nReview Comment:\n   I saw an issue created (ARROW-17074). We can write the jira number here directly.\n\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -824,6 +847,15 @@ class BinaryMemoTable : public MemoTable {\n     };\n     return hash_table_.Lookup(h, cmp_func);\n   }\n+\n+ public:\n+  Status MergeTable(BinaryMemoTable& other_table) {\n\nReview Comment:\n   ditto\n\n\n\n",
                    "created": "2022-07-15T01:32:35.917+0000",
                    "updated": "2022-07-15T01:32:35.917+0000",
                    "started": "2022-07-15T01:32:35.916+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791212",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#discussion_r922342414\n\n\n##########\ncpp/src/arrow/util/hashing.h:\n##########\n@@ -485,6 +485,20 @@ class ScalarMemoTable : public MemoTable {\n   hash_t ComputeHash(const Scalar& value) const {\n     return ScalarHelper<Scalar, 0>::ComputeHash(value);\n   }\n+\n+ public:\n+  // defined here so that `HashTableType` is visible\n+  // Merge entries from `other_table` into `this->hash_table_`.\n+  Status MergeTable(ScalarMemoTable& other_table) {\n+    HashTableType& other_hashtable = other_table.hash_table_;\n+\n+    other_hashtable.VisitEntries([this](const HashTableEntry* other_entry) {\n+      int32_t unused;\n+      DCHECK_OK(this->GetOrInsert(other_entry->payload.value, &unused));\n+    });\n+    // TODO: implement proper (and perhaps more performant) error handling\n\nReview Comment:\n   oh yeah, good idea\n\n\n\n",
                    "created": "2022-07-15T16:49:59.307+0000",
                    "updated": "2022-07-15T16:49:59.307+0000",
                    "started": "2022-07-15T16:49:59.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791513",
                    "issueId": "13449546"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/worklog/791514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on PR #13583:\nURL: https://github.com/apache/arrow/pull/13583#issuecomment-1185722405\n\n   thanks for the reviews @cyb70289 !\n\n\n",
                    "created": "2022-07-15T16:50:24.317+0000",
                    "updated": "2022-07-15T16:50:24.317+0000",
                    "started": "2022-07-15T16:50:24.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791514",
                    "issueId": "13449546"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@35cb84c4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@590c4824[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2cfa131f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@170c33cc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78a65e70[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4ff97b66[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3367fb6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@45032c9e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f9caf90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b3ad74e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70af9d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5b315274[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jul 16 21:45:53 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-16T21:45:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16807/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-06-10T17:00:44.000+0000",
        "updated": "2022-10-03T15:32:53.000+0000",
        "timeoriginalestimate": null,
        "description": "When reading from parquet files with multiple row groups, {{count_distinct}} (wrapped by {{n_distinct}} in R) returns inaccurate and inconsistent results:\r\n{code:r}\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\npath <- tempfile(fileext = '.parquet')\r\narrow::write_parquet(dplyr::starwars, path, chunk_size = 20L)\r\n\r\nds <- arrow::open_dataset(path)\r\n\r\nds %>% count(sex) %>% collect()\r\n#> # A tibble: 5 \u00d7 2\r\n#> \u00a0 sex \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0n\r\n#> \u00a0 <chr> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<int>\r\n#> 1 male \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060\r\n#> 2 none \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 6\r\n#> 3 female \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a016\r\n#> 4 hermaphroditic \u00a0 \u00a0 1\r\n#> 5 <NA> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4\r\n\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a019\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a017\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a017\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a016\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a016\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a017\r\nds %>% summarise(n = n_distinct(sex)) %>% collect()\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a017\r\n\r\n# correct\r\nds %>% collect() %>% summarise(n = n_distinct(sex))\r\n#> # A tibble: 1 \u00d7 1\r\n#> \u00a0 \u00a0 \u00a0 n\r\n#> \u00a0 <int>\r\n#> 1 \u00a0 \u00a0 5\r\n{code}\r\n\r\nIf the file is stored as a single row group, results are correct. When grouped, results are correct.\r\n\r\nI can reproduce this in Python as well using the same file and {{pyarrow.compute.count_distinct}}:\r\n\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\npa.__version__\r\n#> 8.0.0\r\n\r\nstarwars = pq.read_table('/var/folders/0j/zz6p_mjx2_b727p6xdpm5chc0000gn/T//Rtmp2wnWl5/file1744f6cc6cea8.parquet')\r\n\r\npa.compute.count_distinct(starwars.column('sex')).as_py()\r\n#> 15\r\npa.compute.unique(starwars.column('sex'))\r\n#> [\r\n#>   \"male\",\r\n#>   \"none\",\r\n#>   \"female\",\r\n#>   \"hermaphroditic\",\r\n#>    null\r\n#> ]\r\n{code}\r\n\r\nThis seems likely to be the same problem in this StackOverflow question: https://stackoverflow.com/questions/72561901/how-do-i-compute-the-number-of-unique-values-in-a-pyarrow-array which is working from orc files.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] count_distinct aggregates incorrectly across row groups",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "> arrow::arrow_info()\r\nArrow package version: 8.0.0.9000\r\n\r\nCapabilities:\r\n               \r\ndataset    TRUE\r\nsubstrait FALSE\r\nparquet    TRUE\r\njson       TRUE\r\ns3         TRUE\r\nutf8proc   TRUE\r\nre2        TRUE\r\nsnappy     TRUE\r\ngzip       TRUE\r\nbrotli     TRUE\r\nzstd       TRUE\r\nlz4        TRUE\r\nlz4_frame  TRUE\r\nlzo       FALSE\r\nbz2        TRUE\r\njemalloc   TRUE\r\nmimalloc  FALSE\r\n\r\nMemory:\r\n                   \r\nAllocator  jemalloc\r\nCurrent    37.25 Kb\r\nMax       925.42 Kb\r\n\r\nRuntime:\r\n                        \r\nSIMD Level          none\r\nDetected SIMD Level none\r\n\r\nBuild:\r\n                                                             \r\nC++ Library Version                            9.0.0-SNAPSHOT\r\nC++ Compiler                                       AppleClang\r\nC++ Compiler Version                          13.1.6.13160021\r\nGit ID               d9d78946607f36e25e9d812a5cc956bd00ab2bc9",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/comment/17558955",
                    "id": "17558955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Looks current {{count_distinct}} doesn't handle chunked array. It simply accumulates the distinct counts of each chunk.\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/aggregate_basic.cc#L159\r\nIt's wrong if there are duplicated values among chunks.\r\nE.g., for two chunks \"1,2,3\", \"1,2,3\", current count_distinct kernel outpus 3+3=6.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-27T02:37:37.548+0000",
                    "updated": "2022-06-27T02:37:37.548+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/comment/17559938",
                    "id": "17559938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~westonpace] found a bug ([47dd2ec|https://github.com/westonpace/arrow/commit/47dd2ec483a00ec313add8ddf1dc1993ad932ed0]). I will pick this up tomorrow and will try to add some extra unit tests and check for other bugs in the area.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-06-28T19:47:56.336+0000",
                    "updated": "2022-06-28T19:47:56.336+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/comment/17561101",
                    "id": "17561101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "clarification: the above commit (47dd2ec) is actually for ARROW-16904.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-06-30T15:56:04.229+0000",
                    "updated": "2022-06-30T15:56:04.229+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13449546/comment/17567547",
                    "id": "17567547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13583\n[https://github.com/apache/arrow/pull/13583]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-16T21:45:53.974+0000",
                    "updated": "2022-07-16T21:45:53.974+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z1359s:",
        "customfield_12314139": null
    }
}